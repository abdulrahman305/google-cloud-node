// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(dataPolicy, grantees) {
  // [START bigquerydatapolicy_v2beta1_generated_DataPolicyService_AddGrantees_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Resource name of this data policy, in the format of
   *  `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
   */
  // const dataPolicy = 'abc123'
  /**
   *  Required. IAM principal that should be granted Fine Grained Access to the
   *  underlying data goverened by the data policy. The target data policy is
   *  determined by the `data_policy` field.
   *  Uses the IAM V2 principal
   *  syntax (https://cloud.google.com/iam/docs/principal-identifiers#v2).
   *  Supported principal types:
   *  * User
   *  * Group
   *  * Service account
   */
  // const grantees = ['abc','def']

  // Imports the Datapolicies library
  const {DataPolicyServiceClient} = require('@google-cloud/datapolicies').v2beta1;

  // Instantiates a client
  const datapoliciesClient = new DataPolicyServiceClient();

  async function callAddGrantees() {
    // Construct request
    const request = {
      dataPolicy,
      grantees,
    };

    // Run request
    const response = await datapoliciesClient.addGrantees(request);
    console.log(response);
  }

  callAddGrantees();
  // [END bigquerydatapolicy_v2beta1_generated_DataPolicyService_AddGrantees_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
