// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback, GaxCall, LocationsClient, LocationProtos} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
import {loggingUtils as logging, decodeAnyProtosInArray} from 'google-gax';

/**
 * Client JSON configuration object, loaded from
 * `src/v1/security_center_management_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './security_center_management_client_config.json';
const version = require('../../../package.json').version;

/**
 *  Service describing handlers for resources
 * @class
 * @memberof v1
 */
export class SecurityCenterManagementClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  private _universeDomain: string;
  private _servicePath: string;
  private _log = logging.log('securitycentermanagement');

  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  locationsClient: LocationsClient;
  pathTemplates: {[name: string]: gax.PathTemplate};
  securityCenterManagementStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of SecurityCenterManagementClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://cloud.google.com/docs/authentication/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new SecurityCenterManagementClient({fallback: true}, gax);
   *     ```
   */
  constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof SecurityCenterManagementClient;
    if (opts?.universe_domain && opts?.universeDomain && opts?.universe_domain !== opts?.universeDomain) {
      throw new Error('Please set either universe_domain or universeDomain, but not both.');
    }
    const universeDomainEnvVar = (typeof process === 'object' && typeof process.env === 'object') ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;
    this._universeDomain = opts?.universeDomain ?? opts?.universe_domain ?? universeDomainEnvVar ?? 'googleapis.com';
    this._servicePath = 'securitycentermanagement.' + this._universeDomain;
    const servicePath = opts?.servicePath || opts?.apiEndpoint || this._servicePath;
    this._providedCustomServicePath = !!(opts?.servicePath || opts?.apiEndpoint);
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== this._servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = this._servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === this._servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }
    this.locationsClient = new this._gaxModule.LocationsClient(
      this._gaxGrpc,
      opts
    );
  

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process === 'object' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      folderLocationEffectiveEventThreatDetectionCustomModulesPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/locations/{location}/effectiveEventThreatDetectionCustomModules/{effective_event_threat_detection_custom_module}'
      ),
      folderLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/locations/{location}/effectiveSecurityHealthAnalyticsCustomModules/{effective_security_health_analytics_custom_module}'
      ),
      folderLocationEventThreatDetectionCustomModulesPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/locations/{location}/eventThreatDetectionCustomModules/{event_threat_detection_custom_module}'
      ),
      folderLocationSecurityCenterServicesPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/locations/{location}/securityCenterServices/{service}'
      ),
      folderLocationSecurityHealthAnalyticsCustomModulesPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/locations/{location}/securityHealthAnalyticsCustomModules/{security_health_analytics_custom_module}'
      ),
      folderSourceFindingsPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/sources/{source}/findings/{finding}'
      ),
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
      organizationPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}'
      ),
      organizationLocationPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/locations/{location}'
      ),
      organizationLocationEffectiveEventThreatDetectionCustomModulesPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/locations/{location}/effectiveEventThreatDetectionCustomModules/{effective_event_threat_detection_custom_module}'
      ),
      organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/locations/{location}/effectiveSecurityHealthAnalyticsCustomModules/{effective_security_health_analytics_custom_module}'
      ),
      organizationLocationEventThreatDetectionCustomModulesPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/locations/{location}/eventThreatDetectionCustomModules/{event_threat_detection_custom_module}'
      ),
      organizationLocationSecurityCenterServicesPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/locations/{location}/securityCenterServices/{service}'
      ),
      organizationLocationSecurityHealthAnalyticsCustomModulesPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/locations/{location}/securityHealthAnalyticsCustomModules/{security_health_analytics_custom_module}'
      ),
      organizationSourceFindingsPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/sources/{source}/findings/{finding}'
      ),
      projectPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}'
      ),
      projectLocationEffectiveEventThreatDetectionCustomModulesPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/effectiveEventThreatDetectionCustomModules/{effective_event_threat_detection_custom_module}'
      ),
      projectLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/effectiveSecurityHealthAnalyticsCustomModules/{effective_security_health_analytics_custom_module}'
      ),
      projectLocationEventThreatDetectionCustomModulesPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/eventThreatDetectionCustomModules/{event_threat_detection_custom_module}'
      ),
      projectLocationSecurityCenterServicesPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/securityCenterServices/{service}'
      ),
      projectLocationSecurityHealthAnalyticsCustomModulesPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/securityHealthAnalyticsCustomModules/{security_health_analytics_custom_module}'
      ),
      projectSourceFindingsPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/sources/{source}/findings/{finding}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listEffectiveSecurityHealthAnalyticsCustomModules:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'effectiveSecurityHealthAnalyticsCustomModules'),
      listSecurityHealthAnalyticsCustomModules:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'securityHealthAnalyticsCustomModules'),
      listDescendantSecurityHealthAnalyticsCustomModules:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'securityHealthAnalyticsCustomModules'),
      listEffectiveEventThreatDetectionCustomModules:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'effectiveEventThreatDetectionCustomModules'),
      listEventThreatDetectionCustomModules:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'eventThreatDetectionCustomModules'),
      listDescendantEventThreatDetectionCustomModules:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'eventThreatDetectionCustomModules'),
      listSecurityCenterServices:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'securityCenterServices')
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.cloud.securitycentermanagement.v1.SecurityCenterManagement', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.securityCenterManagementStub) {
      return this.securityCenterManagementStub;
    }

    // Put together the "service stub" for
    // google.cloud.securitycentermanagement.v1.SecurityCenterManagement.
    this.securityCenterManagementStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.cloud.securitycentermanagement.v1.SecurityCenterManagement') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.securitycentermanagement.v1.SecurityCenterManagement,
        this._opts, this._providedCustomServicePath) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const securityCenterManagementStubMethods =
        ['listEffectiveSecurityHealthAnalyticsCustomModules', 'getEffectiveSecurityHealthAnalyticsCustomModule', 'listSecurityHealthAnalyticsCustomModules', 'listDescendantSecurityHealthAnalyticsCustomModules', 'getSecurityHealthAnalyticsCustomModule', 'createSecurityHealthAnalyticsCustomModule', 'updateSecurityHealthAnalyticsCustomModule', 'deleteSecurityHealthAnalyticsCustomModule', 'simulateSecurityHealthAnalyticsCustomModule', 'listEffectiveEventThreatDetectionCustomModules', 'getEffectiveEventThreatDetectionCustomModule', 'listEventThreatDetectionCustomModules', 'listDescendantEventThreatDetectionCustomModules', 'getEventThreatDetectionCustomModule', 'createEventThreatDetectionCustomModule', 'updateEventThreatDetectionCustomModule', 'deleteEventThreatDetectionCustomModule', 'validateEventThreatDetectionCustomModule', 'getSecurityCenterService', 'listSecurityCenterServices', 'updateSecurityCenterService'];
    for (const methodName of securityCenterManagementStubMethods) {
      const callPromise = this.securityCenterManagementStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const descriptor =
        this.descriptors.page[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.securityCenterManagementStub;
  }

  /**
   * The DNS address for this API service.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    if (typeof process === 'object' && typeof process.emitWarning === 'function') {
      process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');
    }
    return 'securitycentermanagement.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    if (typeof process === 'object' && typeof process.emitWarning === 'function') {
      process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');
    }
    return 'securitycentermanagement.googleapis.com';
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  get apiEndpoint() {
    return this._servicePath;
  }

  get universeDomain() {
    return this._universeDomain;
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-platform'
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
/**
 * Gets details of a single
 * {@link protos.google.cloud.securitycentermanagement.v1.EffectiveSecurityHealthAnalyticsCustomModule|EffectiveSecurityHealthAnalyticsCustomModule}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The full resource name of the custom module, specified in one of
 *   the following formats:
 *
 *   * `organizations/organization/{location}/effectiveSecurityHealthAnalyticsCustomModules/{custom_module}`
 *   * `folders/folder/{location}/effectiveSecurityHealthAnalyticsCustomModules/{custom_module}`
 *   * `projects/project/{location}/effectiveSecurityHealthAnalyticsCustomModules/{custom_module}`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.securitycentermanagement.v1.EffectiveSecurityHealthAnalyticsCustomModule|EffectiveSecurityHealthAnalyticsCustomModule}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.get_effective_security_health_analytics_custom_module.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_GetEffectiveSecurityHealthAnalyticsCustomModule_async
 */
  getEffectiveSecurityHealthAnalyticsCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IGetEffectiveSecurityHealthAnalyticsCustomModuleRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetEffectiveSecurityHealthAnalyticsCustomModuleRequest|undefined, {}|undefined
      ]>;
  getEffectiveSecurityHealthAnalyticsCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IGetEffectiveSecurityHealthAnalyticsCustomModuleRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetEffectiveSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  getEffectiveSecurityHealthAnalyticsCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IGetEffectiveSecurityHealthAnalyticsCustomModuleRequest,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetEffectiveSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  getEffectiveSecurityHealthAnalyticsCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IGetEffectiveSecurityHealthAnalyticsCustomModuleRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetEffectiveSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetEffectiveSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetEffectiveSecurityHealthAnalyticsCustomModuleRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('getEffectiveSecurityHealthAnalyticsCustomModule request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetEffectiveSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('getEffectiveSecurityHealthAnalyticsCustomModule response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.getEffectiveSecurityHealthAnalyticsCustomModule(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetEffectiveSecurityHealthAnalyticsCustomModuleRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('getEffectiveSecurityHealthAnalyticsCustomModule response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Retrieves a
 * {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. Name of the resource, in the format
 *   `projects/{project}/locations/{location}/securityHealthAnalyticsCustomModules/{custom_module}`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.get_security_health_analytics_custom_module.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_GetSecurityHealthAnalyticsCustomModule_async
 */
  getSecurityHealthAnalyticsCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IGetSecurityHealthAnalyticsCustomModuleRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetSecurityHealthAnalyticsCustomModuleRequest|undefined, {}|undefined
      ]>;
  getSecurityHealthAnalyticsCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IGetSecurityHealthAnalyticsCustomModuleRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  getSecurityHealthAnalyticsCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IGetSecurityHealthAnalyticsCustomModuleRequest,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  getSecurityHealthAnalyticsCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IGetSecurityHealthAnalyticsCustomModuleRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetSecurityHealthAnalyticsCustomModuleRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('getSecurityHealthAnalyticsCustomModule request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('getSecurityHealthAnalyticsCustomModule response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.getSecurityHealthAnalyticsCustomModule(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetSecurityHealthAnalyticsCustomModuleRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('getSecurityHealthAnalyticsCustomModule response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Creates a resident
 * {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}
 * at the scope of the given organization, folder, or project, and also
 * creates inherited `SecurityHealthAnalyticsCustomModule` resources for all
 * folders and projects that are descendants of the given parent. These
 * modules are enabled by default.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of the parent organization, folder, or project of the
 *   module, in one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule} request.securityHealthAnalyticsCustomModule
 *   Required. The resource being created.
 * @param {boolean} [request.validateOnly]
 *   Optional. When set to `true`, the request will be validated (including IAM
 *   checks), but no module will be created. An `OK` response indicates that the
 *   request is valid, while an error response indicates that the request is
 *   invalid.
 *
 *   If the request is valid, a subsequent request to create the module could
 *   still fail for one of the following reasons:
 *
 *   *  The state of your cloud resources changed; for example, you lost a
 *      required IAM permission
 *   *  An error occurred during creation of the module
 *
 *   Defaults to `false`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.create_security_health_analytics_custom_module.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_CreateSecurityHealthAnalyticsCustomModule_async
 */
  createSecurityHealthAnalyticsCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.ICreateSecurityHealthAnalyticsCustomModuleRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.ICreateSecurityHealthAnalyticsCustomModuleRequest|undefined, {}|undefined
      ]>;
  createSecurityHealthAnalyticsCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.ICreateSecurityHealthAnalyticsCustomModuleRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.ICreateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  createSecurityHealthAnalyticsCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.ICreateSecurityHealthAnalyticsCustomModuleRequest,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.ICreateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  createSecurityHealthAnalyticsCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.ICreateSecurityHealthAnalyticsCustomModuleRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.ICreateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.ICreateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.ICreateSecurityHealthAnalyticsCustomModuleRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('createSecurityHealthAnalyticsCustomModule request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.ICreateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('createSecurityHealthAnalyticsCustomModule response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.createSecurityHealthAnalyticsCustomModule(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.ICreateSecurityHealthAnalyticsCustomModuleRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('createSecurityHealthAnalyticsCustomModule response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Updates the
 * {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}
 * under the given name based on the given update mask. Updating the
 * enablement state is supported on both resident and inherited modules
 * (though resident modules cannot have an enablement state of "inherited").
 * Updating the display name and custom configuration of a module is supported
 * on resident modules only.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.protobuf.FieldMask} request.updateMask
 *   Required. The fields to update. The following values are valid:
 *
 *   * `custom_config`
 *   * `enablement_state`
 *
 *   If you omit this field or set it to the wildcard value `*`, then all
 *   eligible fields are updated.
 * @param {google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule} request.securityHealthAnalyticsCustomModule
 *   Required. The resource being updated.
 * @param {boolean} [request.validateOnly]
 *   Optional. When set to `true`, the request will be validated (including IAM
 *   checks), but no module will be updated. An `OK` response indicates that the
 *   request is valid, while an error response indicates that the request is
 *   invalid.
 *
 *   If the request is valid, a subsequent request to update the module could
 *   still fail for one of the following reasons:
 *
 *   *  The state of your cloud resources changed; for example, you lost a
 *      required IAM permission
 *   *  An error occurred during creation of the module
 *
 *   Defaults to `false`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.update_security_health_analytics_custom_module.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_UpdateSecurityHealthAnalyticsCustomModule_async
 */
  updateSecurityHealthAnalyticsCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityHealthAnalyticsCustomModuleRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityHealthAnalyticsCustomModuleRequest|undefined, {}|undefined
      ]>;
  updateSecurityHealthAnalyticsCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityHealthAnalyticsCustomModuleRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  updateSecurityHealthAnalyticsCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityHealthAnalyticsCustomModuleRequest,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  updateSecurityHealthAnalyticsCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityHealthAnalyticsCustomModuleRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityHealthAnalyticsCustomModuleRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'security_health_analytics_custom_module.name': request.securityHealthAnalyticsCustomModule!.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('updateSecurityHealthAnalyticsCustomModule request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('updateSecurityHealthAnalyticsCustomModule response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.updateSecurityHealthAnalyticsCustomModule(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityHealthAnalyticsCustomModuleRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('updateSecurityHealthAnalyticsCustomModule response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Deletes the specified
 * {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}
 * and all of its descendants in the resource hierarchy. This method is only
 * supported for resident custom modules.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the SHA custom module, in one of the
 *   following formats:
 *
 *     * `organizations/{organization}/locations/{location}/securityHealthAnalyticsCustomModules/{custom_module}`
 *     * `folders/{folder}/locations/{location}/securityHealthAnalyticsCustomModules/{custom_module}`
 *     * `projects/{project}/locations/{location}/securityHealthAnalyticsCustomModules/{custom_module}`
 * @param {boolean} [request.validateOnly]
 *   Optional. When set to `true`, the request will be validated (including IAM
 *   checks), but no module will be deleted. An `OK` response indicates that the
 *   request is valid, while an error response indicates that the request is
 *   invalid.
 *
 *   If the request is valid, a subsequent request to delete the module could
 *   still fail for one of the following reasons:
 *
 *   *  The state of your cloud resources changed; for example, you lost a
 *      required IAM permission
 *   *  An error occurred during deletion of the module
 *
 *   Defaults to `false`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.delete_security_health_analytics_custom_module.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_DeleteSecurityHealthAnalyticsCustomModule_async
 */
  deleteSecurityHealthAnalyticsCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IDeleteSecurityHealthAnalyticsCustomModuleRequest,
      options?: CallOptions):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.securitycentermanagement.v1.IDeleteSecurityHealthAnalyticsCustomModuleRequest|undefined, {}|undefined
      ]>;
  deleteSecurityHealthAnalyticsCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IDeleteSecurityHealthAnalyticsCustomModuleRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycentermanagement.v1.IDeleteSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  deleteSecurityHealthAnalyticsCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IDeleteSecurityHealthAnalyticsCustomModuleRequest,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycentermanagement.v1.IDeleteSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  deleteSecurityHealthAnalyticsCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IDeleteSecurityHealthAnalyticsCustomModuleRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycentermanagement.v1.IDeleteSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycentermanagement.v1.IDeleteSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.securitycentermanagement.v1.IDeleteSecurityHealthAnalyticsCustomModuleRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('deleteSecurityHealthAnalyticsCustomModule request %j', request);
    const wrappedCallback: Callback<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.securitycentermanagement.v1.IDeleteSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('deleteSecurityHealthAnalyticsCustomModule response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.deleteSecurityHealthAnalyticsCustomModule(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.protobuf.IEmpty,
        protos.google.cloud.securitycentermanagement.v1.IDeleteSecurityHealthAnalyticsCustomModuleRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('deleteSecurityHealthAnalyticsCustomModule response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Simulates the result of using a
 * {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}
 * to check a resource.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The relative resource name of the organization, project, or
 *   folder. For more information about relative resource names, see [AIP-122:
 *   Resource names](https://google.aip.dev/122). Example:
 *   `organizations/{organization_id}`.
 * @param {google.cloud.securitycentermanagement.v1.CustomConfig} request.customConfig
 *   Required. The custom configuration that you need to test.
 * @param {google.cloud.securitycentermanagement.v1.SimulateSecurityHealthAnalyticsCustomModuleRequest.SimulatedResource} request.resource
 *   Required. Resource data to simulate custom module against.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.securitycentermanagement.v1.SimulateSecurityHealthAnalyticsCustomModuleResponse|SimulateSecurityHealthAnalyticsCustomModuleResponse}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.simulate_security_health_analytics_custom_module.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_SimulateSecurityHealthAnalyticsCustomModule_async
 */
  simulateSecurityHealthAnalyticsCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleResponse,
        protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleRequest|undefined, {}|undefined
      ]>;
  simulateSecurityHealthAnalyticsCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleResponse,
          protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  simulateSecurityHealthAnalyticsCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleRequest,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleResponse,
          protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  simulateSecurityHealthAnalyticsCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleResponse,
          protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleResponse,
          protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleResponse,
        protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('simulateSecurityHealthAnalyticsCustomModule request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleResponse,
        protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('simulateSecurityHealthAnalyticsCustomModule response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.simulateSecurityHealthAnalyticsCustomModule(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleResponse,
        protos.google.cloud.securitycentermanagement.v1.ISimulateSecurityHealthAnalyticsCustomModuleRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('simulateSecurityHealthAnalyticsCustomModule response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Gets the effective Event Threat Detection custom module at the given level.
 *
 * The difference between an
 * {@link protos.google.cloud.securitycentermanagement.v1.EffectiveEventThreatDetectionCustomModule|EffectiveEventThreatDetectionCustomModule}
 * and an
 * {@link protos.google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule|EventThreatDetectionCustomModule}
 * is that the fields for an `EffectiveEventThreatDetectionCustomModule` are
 * computed from ancestors if needed. For example, the enablement state for an
 * `EventThreatDetectionCustomModule` can be `ENABLED`, `DISABLED`, or
 * `INHERITED`. In contrast, the enablement state for an
 * `EffectiveEventThreatDetectionCustomModule` is always computed as `ENABLED`
 * or `DISABLED`.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the Event Threat Detection custom module, in
 *   one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}/effectiveEventThreatDetectionCustomModules/{custom_module}`
 *   * `folders/{folder}/locations/{location}/effectiveEventThreatDetectionCustomModules/{custom_module}`
 *   * `projects/{project}/locations/{location}/effectiveEventThreatDetectionCustomModules/{custom_module}`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.securitycentermanagement.v1.EffectiveEventThreatDetectionCustomModule|EffectiveEventThreatDetectionCustomModule}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.get_effective_event_threat_detection_custom_module.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_GetEffectiveEventThreatDetectionCustomModule_async
 */
  getEffectiveEventThreatDetectionCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IGetEffectiveEventThreatDetectionCustomModuleRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetEffectiveEventThreatDetectionCustomModuleRequest|undefined, {}|undefined
      ]>;
  getEffectiveEventThreatDetectionCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IGetEffectiveEventThreatDetectionCustomModuleRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetEffectiveEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  getEffectiveEventThreatDetectionCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IGetEffectiveEventThreatDetectionCustomModuleRequest,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetEffectiveEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  getEffectiveEventThreatDetectionCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IGetEffectiveEventThreatDetectionCustomModuleRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetEffectiveEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetEffectiveEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetEffectiveEventThreatDetectionCustomModuleRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('getEffectiveEventThreatDetectionCustomModule request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetEffectiveEventThreatDetectionCustomModuleRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('getEffectiveEventThreatDetectionCustomModule response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.getEffectiveEventThreatDetectionCustomModule(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetEffectiveEventThreatDetectionCustomModuleRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('getEffectiveEventThreatDetectionCustomModule response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Gets an Event Threat Detection custom module.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the Event Threat Detection custom module, in
 *   one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}/eventThreatDetectionCustomModules/{custom_module}`
 *   * `folders/{folder}/locations/{location}/eventThreatDetectionCustomModules/{custom_module}`
 *   * `projects/{project}/locations/{location}/eventThreatDetectionCustomModules/{custom_module}`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule|EventThreatDetectionCustomModule}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.get_event_threat_detection_custom_module.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_GetEventThreatDetectionCustomModule_async
 */
  getEventThreatDetectionCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IGetEventThreatDetectionCustomModuleRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetEventThreatDetectionCustomModuleRequest|undefined, {}|undefined
      ]>;
  getEventThreatDetectionCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IGetEventThreatDetectionCustomModuleRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  getEventThreatDetectionCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IGetEventThreatDetectionCustomModuleRequest,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  getEventThreatDetectionCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IGetEventThreatDetectionCustomModuleRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IGetEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetEventThreatDetectionCustomModuleRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('getEventThreatDetectionCustomModule request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetEventThreatDetectionCustomModuleRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('getEventThreatDetectionCustomModule response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.getEventThreatDetectionCustomModule(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IGetEventThreatDetectionCustomModuleRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('getEventThreatDetectionCustomModule response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Creates a resident Event Threat Detection custom module at the scope of the
 * given organization, folder, or project, and creates inherited custom
 * modules for all descendants of the given parent. These modules are enabled
 * by default.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent for the module, in one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule} request.eventThreatDetectionCustomModule
 *   Required. The module to create. The
 *   {@link protos.google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule.name|EventThreatDetectionCustomModule.name}
 *   field is ignored; Security Command Center generates the name.
 * @param {boolean} [request.validateOnly]
 *   Optional. When set to `true`, the request will be validated (including IAM
 *   checks), but no module will be created. An `OK` response indicates that the
 *   request is valid, while an error response indicates that the request is
 *   invalid.
 *
 *   If the request is valid, a subsequent request to create the module could
 *   still fail for one of the following reasons:
 *
 *   *  The state of your cloud resources changed; for example, you lost a
 *      required IAM permission
 *   *  An error occurred during creation of the module
 *
 *   Defaults to `false`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule|EventThreatDetectionCustomModule}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.create_event_threat_detection_custom_module.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_CreateEventThreatDetectionCustomModule_async
 */
  createEventThreatDetectionCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.ICreateEventThreatDetectionCustomModuleRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.ICreateEventThreatDetectionCustomModuleRequest|undefined, {}|undefined
      ]>;
  createEventThreatDetectionCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.ICreateEventThreatDetectionCustomModuleRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.ICreateEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  createEventThreatDetectionCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.ICreateEventThreatDetectionCustomModuleRequest,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.ICreateEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  createEventThreatDetectionCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.ICreateEventThreatDetectionCustomModuleRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.ICreateEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.ICreateEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.ICreateEventThreatDetectionCustomModuleRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('createEventThreatDetectionCustomModule request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.ICreateEventThreatDetectionCustomModuleRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('createEventThreatDetectionCustomModule response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.createEventThreatDetectionCustomModule(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.ICreateEventThreatDetectionCustomModuleRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('createEventThreatDetectionCustomModule response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Updates the Event Threat Detection custom module with the given name based
 * on the given update mask. Updating the enablement state is supported for
 * both resident and inherited modules (though resident modules cannot have an
 * enablement state of "inherited"). Updating the display name or
 * configuration of a module is supported for resident modules only. The type
 * of a module cannot be changed.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.protobuf.FieldMask} request.updateMask
 *   Required. The fields to update. If omitted, then all fields are updated.
 * @param {google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule} request.eventThreatDetectionCustomModule
 *   Required. The module being updated.
 * @param {boolean} [request.validateOnly]
 *   Optional. When set to `true`, the request will be validated (including IAM
 *   checks), but no module will be updated. An `OK` response indicates that the
 *   request is valid, while an error response indicates that the request is
 *   invalid.
 *
 *   If the request is valid, a subsequent request to update the module could
 *   still fail for one of the following reasons:
 *
 *   *  The state of your cloud resources changed; for example, you lost a
 *      required IAM permission
 *   *  An error occurred during creation of the module
 *
 *   Defaults to `false`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule|EventThreatDetectionCustomModule}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.update_event_threat_detection_custom_module.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_UpdateEventThreatDetectionCustomModule_async
 */
  updateEventThreatDetectionCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IUpdateEventThreatDetectionCustomModuleRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IUpdateEventThreatDetectionCustomModuleRequest|undefined, {}|undefined
      ]>;
  updateEventThreatDetectionCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IUpdateEventThreatDetectionCustomModuleRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IUpdateEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  updateEventThreatDetectionCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IUpdateEventThreatDetectionCustomModuleRequest,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IUpdateEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  updateEventThreatDetectionCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IUpdateEventThreatDetectionCustomModuleRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IUpdateEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
          protos.google.cloud.securitycentermanagement.v1.IUpdateEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IUpdateEventThreatDetectionCustomModuleRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'event_threat_detection_custom_module.name': request.eventThreatDetectionCustomModule!.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('updateEventThreatDetectionCustomModule request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IUpdateEventThreatDetectionCustomModuleRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('updateEventThreatDetectionCustomModule response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.updateEventThreatDetectionCustomModule(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule,
        protos.google.cloud.securitycentermanagement.v1.IUpdateEventThreatDetectionCustomModuleRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('updateEventThreatDetectionCustomModule response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Deletes the specified Event Threat Detection custom module and all of its
 * descendants in the resource hierarchy. This method is only supported for
 * resident custom modules.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the Event Threat Detection custom module, in
 *   one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}/eventThreatDetectionCustomModules/{custom_module}`
 *   * `folders/{folder}/locations/{location}/eventThreatDetectionCustomModules/{custom_module}`
 *   * `projects/{project}/locations/{location}/eventThreatDetectionCustomModules/{custom_module}`
 * @param {boolean} [request.validateOnly]
 *   Optional. When set to `true`, the request will be validated (including IAM
 *   checks), but no module will be deleted. An `OK` response indicates that the
 *   request is valid, while an error response indicates that the request is
 *   invalid.
 *
 *   If the request is valid, a subsequent request to delete the module could
 *   still fail for one of the following reasons:
 *
 *   *  The state of your cloud resources changed; for example, you lost a
 *      required IAM permission
 *   *  An error occurred during creation of the module
 *
 *   Defaults to `false`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.delete_event_threat_detection_custom_module.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_DeleteEventThreatDetectionCustomModule_async
 */
  deleteEventThreatDetectionCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IDeleteEventThreatDetectionCustomModuleRequest,
      options?: CallOptions):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.securitycentermanagement.v1.IDeleteEventThreatDetectionCustomModuleRequest|undefined, {}|undefined
      ]>;
  deleteEventThreatDetectionCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IDeleteEventThreatDetectionCustomModuleRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycentermanagement.v1.IDeleteEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  deleteEventThreatDetectionCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IDeleteEventThreatDetectionCustomModuleRequest,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycentermanagement.v1.IDeleteEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  deleteEventThreatDetectionCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IDeleteEventThreatDetectionCustomModuleRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycentermanagement.v1.IDeleteEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycentermanagement.v1.IDeleteEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.securitycentermanagement.v1.IDeleteEventThreatDetectionCustomModuleRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('deleteEventThreatDetectionCustomModule request %j', request);
    const wrappedCallback: Callback<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.securitycentermanagement.v1.IDeleteEventThreatDetectionCustomModuleRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('deleteEventThreatDetectionCustomModule response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.deleteEventThreatDetectionCustomModule(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.protobuf.IEmpty,
        protos.google.cloud.securitycentermanagement.v1.IDeleteEventThreatDetectionCustomModuleRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('deleteEventThreatDetectionCustomModule response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Validates the given Event Threat Detection custom module.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Resource name of the parent to validate the custom modules under,
 *   in one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 * @param {string} request.rawText
 *   Required. The raw text of the module's contents. Used to generate error
 *   messages.
 * @param {string} request.type
 *   Required. The type of the module. For example, `CONFIGURABLE_BAD_IP`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.securitycentermanagement.v1.ValidateEventThreatDetectionCustomModuleResponse|ValidateEventThreatDetectionCustomModuleResponse}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.validate_event_threat_detection_custom_module.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_ValidateEventThreatDetectionCustomModule_async
 */
  validateEventThreatDetectionCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleResponse,
        protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleRequest|undefined, {}|undefined
      ]>;
  validateEventThreatDetectionCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleResponse,
          protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  validateEventThreatDetectionCustomModule(
      request: protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleRequest,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleResponse,
          protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>): void;
  validateEventThreatDetectionCustomModule(
      request?: protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleResponse,
          protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleResponse,
          protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleResponse,
        protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('validateEventThreatDetectionCustomModule request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleResponse,
        protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('validateEventThreatDetectionCustomModule response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.validateEventThreatDetectionCustomModule(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleResponse,
        protos.google.cloud.securitycentermanagement.v1.IValidateEventThreatDetectionCustomModuleRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('validateEventThreatDetectionCustomModule response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Gets service settings for the specified Security Command Center service.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The Security Command Center service to retrieve, in one of the
 *   following formats:
 *
 *   * organizations/{organization}/locations/{location}/securityCenterServices/{service}
 *   * folders/{folder}/locations/{location}/securityCenterServices/{service}
 *   * projects/{project}/locations/{location}/securityCenterServices/{service}
 *
 *   The following values are valid for `{service}`:
 *
 *   * `container-threat-detection`
 *   * `event-threat-detection`
 *   * `security-health-analytics`
 *   * `vm-threat-detection`
 *   * `web-security-scanner`
 * @param {boolean} request.showEligibleModulesOnly
 *   Set to `true` to show only modules that are in scope. By default, all
 *   modules are shown.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.securitycentermanagement.v1.SecurityCenterService|SecurityCenterService}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.get_security_center_service.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_GetSecurityCenterService_async
 */
  getSecurityCenterService(
      request?: protos.google.cloud.securitycentermanagement.v1.IGetSecurityCenterServiceRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
        protos.google.cloud.securitycentermanagement.v1.IGetSecurityCenterServiceRequest|undefined, {}|undefined
      ]>;
  getSecurityCenterService(
      request: protos.google.cloud.securitycentermanagement.v1.IGetSecurityCenterServiceRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
          protos.google.cloud.securitycentermanagement.v1.IGetSecurityCenterServiceRequest|null|undefined,
          {}|null|undefined>): void;
  getSecurityCenterService(
      request: protos.google.cloud.securitycentermanagement.v1.IGetSecurityCenterServiceRequest,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
          protos.google.cloud.securitycentermanagement.v1.IGetSecurityCenterServiceRequest|null|undefined,
          {}|null|undefined>): void;
  getSecurityCenterService(
      request?: protos.google.cloud.securitycentermanagement.v1.IGetSecurityCenterServiceRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
          protos.google.cloud.securitycentermanagement.v1.IGetSecurityCenterServiceRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
          protos.google.cloud.securitycentermanagement.v1.IGetSecurityCenterServiceRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
        protos.google.cloud.securitycentermanagement.v1.IGetSecurityCenterServiceRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('getSecurityCenterService request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
        protos.google.cloud.securitycentermanagement.v1.IGetSecurityCenterServiceRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('getSecurityCenterService response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.getSecurityCenterService(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
        protos.google.cloud.securitycentermanagement.v1.IGetSecurityCenterServiceRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('getSecurityCenterService response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Updates a Security Command Center service using the given update mask.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.securitycentermanagement.v1.SecurityCenterService} request.securityCenterService
 *   Required. The updated service.
 * @param {google.protobuf.FieldMask} request.updateMask
 *   Required. The fields to update. Accepts the following values:
 *
 *   * `intended_enablement_state`
 *   * `modules`
 *
 *   If omitted, then all eligible fields are updated.
 * @param {boolean} [request.validateOnly]
 *   Optional. When set to `true`, the request will be validated (including IAM
 *   checks), but no service will be updated. An `OK` response indicates that
 *   the request is valid, while an error response indicates that the request is
 *   invalid.
 *
 *   If the request is valid, a subsequent request to update the service could
 *   still fail for one of the following reasons:
 *
 *   *  The state of your cloud resources changed; for example, you lost a
 *      required IAM permission
 *   *  An error occurred during update of the service
 *
 *   Defaults to `false`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.securitycentermanagement.v1.SecurityCenterService|SecurityCenterService}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.update_security_center_service.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_UpdateSecurityCenterService_async
 */
  updateSecurityCenterService(
      request?: protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityCenterServiceRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
        protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityCenterServiceRequest|undefined, {}|undefined
      ]>;
  updateSecurityCenterService(
      request: protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityCenterServiceRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
          protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityCenterServiceRequest|null|undefined,
          {}|null|undefined>): void;
  updateSecurityCenterService(
      request: protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityCenterServiceRequest,
      callback: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
          protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityCenterServiceRequest|null|undefined,
          {}|null|undefined>): void;
  updateSecurityCenterService(
      request?: protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityCenterServiceRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
          protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityCenterServiceRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
          protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityCenterServiceRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
        protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityCenterServiceRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'security_center_service.name': request.securityCenterService!.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('updateSecurityCenterService request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
        protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityCenterServiceRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('updateSecurityCenterService response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.updateSecurityCenterService(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService,
        protos.google.cloud.securitycentermanagement.v1.IUpdateSecurityCenterServiceRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('updateSecurityCenterService response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }

 /**
 * Returns a list of all
 * {@link protos.google.cloud.securitycentermanagement.v1.EffectiveSecurityHealthAnalyticsCustomModule|EffectiveSecurityHealthAnalyticsCustomModule}
 * resources for the given parent. This includes resident modules defined at
 * the scope of the parent, and inherited modules, inherited from ancestor
 * organizations, folders, and projects (no descendants).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent to list effective custom modules, in one of the
 *   following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of {@link protos.google.cloud.securitycentermanagement.v1.EffectiveSecurityHealthAnalyticsCustomModule|EffectiveSecurityHealthAnalyticsCustomModule}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listEffectiveSecurityHealthAnalyticsCustomModulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listEffectiveSecurityHealthAnalyticsCustomModules(
      request?: protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesResponse
      ]>;
  listEffectiveSecurityHealthAnalyticsCustomModules(
      request: protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule>): void;
  listEffectiveSecurityHealthAnalyticsCustomModules(
      request: protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule>): void;
  listEffectiveSecurityHealthAnalyticsCustomModules(
      request?: protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule>,
      callback?: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: PaginationCallback<
      protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest,
      protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
      protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule>|undefined = callback
      ? (error, values, nextPageRequest, rawResponse) => {
          this._log.info('listEffectiveSecurityHealthAnalyticsCustomModules values %j', values);
          callback!(error, values, nextPageRequest, rawResponse); // We verified callback above.
        }
      : undefined;
    this._log.info('listEffectiveSecurityHealthAnalyticsCustomModules request %j', request);
    return this.innerApiCalls
      .listEffectiveSecurityHealthAnalyticsCustomModules(request, options, wrappedCallback)
      ?.then(([response, input, output]: [
        protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesResponse
      ]) => {
        this._log.info('listEffectiveSecurityHealthAnalyticsCustomModules values %j', response);
        return [response, input, output];
      });
  }

/**
 * Equivalent to `listEffectiveSecurityHealthAnalyticsCustomModules`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent to list effective custom modules, in one of the
 *   following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing {@link protos.google.cloud.securitycentermanagement.v1.EffectiveSecurityHealthAnalyticsCustomModule|EffectiveSecurityHealthAnalyticsCustomModule} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listEffectiveSecurityHealthAnalyticsCustomModulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listEffectiveSecurityHealthAnalyticsCustomModulesStream(
      request?: protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listEffectiveSecurityHealthAnalyticsCustomModules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listEffectiveSecurityHealthAnalyticsCustomModules stream %j', request);
    return this.descriptors.page.listEffectiveSecurityHealthAnalyticsCustomModules.createStream(
      this.innerApiCalls.listEffectiveSecurityHealthAnalyticsCustomModules as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listEffectiveSecurityHealthAnalyticsCustomModules`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent to list effective custom modules, in one of the
 *   following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
 *   When you iterate the returned iterable, each element will be an object representing
 *   {@link protos.google.cloud.securitycentermanagement.v1.EffectiveSecurityHealthAnalyticsCustomModule|EffectiveSecurityHealthAnalyticsCustomModule}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.list_effective_security_health_analytics_custom_modules.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_ListEffectiveSecurityHealthAnalyticsCustomModules_async
 */
  listEffectiveSecurityHealthAnalyticsCustomModulesAsync(
      request?: protos.google.cloud.securitycentermanagement.v1.IListEffectiveSecurityHealthAnalyticsCustomModulesRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listEffectiveSecurityHealthAnalyticsCustomModules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listEffectiveSecurityHealthAnalyticsCustomModules iterate %j', request);
    return this.descriptors.page.listEffectiveSecurityHealthAnalyticsCustomModules.asyncIterate(
      this.innerApiCalls['listEffectiveSecurityHealthAnalyticsCustomModules'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycentermanagement.v1.IEffectiveSecurityHealthAnalyticsCustomModule>;
  }
 /**
 * Returns a list of all
 * {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}
 * resources for the given parent. This includes resident modules defined at
 * the scope of the parent, and inherited modules, inherited from ancestor
 * organizations, folders, and projects (no descendants).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of the parent organization, folder, or project in which to
 *   list custom modules, in one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listSecurityHealthAnalyticsCustomModulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listSecurityHealthAnalyticsCustomModules(
      request?: protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesResponse
      ]>;
  listSecurityHealthAnalyticsCustomModules(
      request: protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>): void;
  listSecurityHealthAnalyticsCustomModules(
      request: protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>): void;
  listSecurityHealthAnalyticsCustomModules(
      request?: protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>,
      callback?: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: PaginationCallback<
      protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest,
      protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
      protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>|undefined = callback
      ? (error, values, nextPageRequest, rawResponse) => {
          this._log.info('listSecurityHealthAnalyticsCustomModules values %j', values);
          callback!(error, values, nextPageRequest, rawResponse); // We verified callback above.
        }
      : undefined;
    this._log.info('listSecurityHealthAnalyticsCustomModules request %j', request);
    return this.innerApiCalls
      .listSecurityHealthAnalyticsCustomModules(request, options, wrappedCallback)
      ?.then(([response, input, output]: [
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesResponse
      ]) => {
        this._log.info('listSecurityHealthAnalyticsCustomModules values %j', response);
        return [response, input, output];
      });
  }

/**
 * Equivalent to `listSecurityHealthAnalyticsCustomModules`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of the parent organization, folder, or project in which to
 *   list custom modules, in one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listSecurityHealthAnalyticsCustomModulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listSecurityHealthAnalyticsCustomModulesStream(
      request?: protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listSecurityHealthAnalyticsCustomModules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listSecurityHealthAnalyticsCustomModules stream %j', request);
    return this.descriptors.page.listSecurityHealthAnalyticsCustomModules.createStream(
      this.innerApiCalls.listSecurityHealthAnalyticsCustomModules as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listSecurityHealthAnalyticsCustomModules`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of the parent organization, folder, or project in which to
 *   list custom modules, in one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
 *   When you iterate the returned iterable, each element will be an object representing
 *   {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.list_security_health_analytics_custom_modules.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_ListSecurityHealthAnalyticsCustomModules_async
 */
  listSecurityHealthAnalyticsCustomModulesAsync(
      request?: protos.google.cloud.securitycentermanagement.v1.IListSecurityHealthAnalyticsCustomModulesRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listSecurityHealthAnalyticsCustomModules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listSecurityHealthAnalyticsCustomModules iterate %j', request);
    return this.descriptors.page.listSecurityHealthAnalyticsCustomModules.asyncIterate(
      this.innerApiCalls['listSecurityHealthAnalyticsCustomModules'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>;
  }
 /**
 * Returns a list of all resident
 * {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}
 * resources under the given organization, folder, or project and all of its
 * descendants.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of the parent organization, folder, or project in which to
 *   list custom modules, in one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listDescendantSecurityHealthAnalyticsCustomModulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listDescendantSecurityHealthAnalyticsCustomModules(
      request?: protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesResponse
      ]>;
  listDescendantSecurityHealthAnalyticsCustomModules(
      request: protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>): void;
  listDescendantSecurityHealthAnalyticsCustomModules(
      request: protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>): void;
  listDescendantSecurityHealthAnalyticsCustomModules(
      request?: protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>,
      callback?: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: PaginationCallback<
      protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest,
      protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesResponse|null|undefined,
      protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>|undefined = callback
      ? (error, values, nextPageRequest, rawResponse) => {
          this._log.info('listDescendantSecurityHealthAnalyticsCustomModules values %j', values);
          callback!(error, values, nextPageRequest, rawResponse); // We verified callback above.
        }
      : undefined;
    this._log.info('listDescendantSecurityHealthAnalyticsCustomModules request %j', request);
    return this.innerApiCalls
      .listDescendantSecurityHealthAnalyticsCustomModules(request, options, wrappedCallback)
      ?.then(([response, input, output]: [
        protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesResponse
      ]) => {
        this._log.info('listDescendantSecurityHealthAnalyticsCustomModules values %j', response);
        return [response, input, output];
      });
  }

/**
 * Equivalent to `listDescendantSecurityHealthAnalyticsCustomModules`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of the parent organization, folder, or project in which to
 *   list custom modules, in one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listDescendantSecurityHealthAnalyticsCustomModulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listDescendantSecurityHealthAnalyticsCustomModulesStream(
      request?: protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listDescendantSecurityHealthAnalyticsCustomModules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listDescendantSecurityHealthAnalyticsCustomModules stream %j', request);
    return this.descriptors.page.listDescendantSecurityHealthAnalyticsCustomModules.createStream(
      this.innerApiCalls.listDescendantSecurityHealthAnalyticsCustomModules as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listDescendantSecurityHealthAnalyticsCustomModules`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of the parent organization, folder, or project in which to
 *   list custom modules, in one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
 *   When you iterate the returned iterable, each element will be an object representing
 *   {@link protos.google.cloud.securitycentermanagement.v1.SecurityHealthAnalyticsCustomModule|SecurityHealthAnalyticsCustomModule}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.list_descendant_security_health_analytics_custom_modules.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_ListDescendantSecurityHealthAnalyticsCustomModules_async
 */
  listDescendantSecurityHealthAnalyticsCustomModulesAsync(
      request?: protos.google.cloud.securitycentermanagement.v1.IListDescendantSecurityHealthAnalyticsCustomModulesRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listDescendantSecurityHealthAnalyticsCustomModules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listDescendantSecurityHealthAnalyticsCustomModules iterate %j', request);
    return this.descriptors.page.listDescendantSecurityHealthAnalyticsCustomModules.asyncIterate(
      this.innerApiCalls['listDescendantSecurityHealthAnalyticsCustomModules'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycentermanagement.v1.ISecurityHealthAnalyticsCustomModule>;
  }
 /**
 * Lists all effective Event Threat Detection custom modules for the
 * given parent. This includes resident modules defined at the scope of the
 * parent along with modules inherited from its ancestors.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent to list effective custom modules, in one of the
 *   following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of {@link protos.google.cloud.securitycentermanagement.v1.EffectiveEventThreatDetectionCustomModule|EffectiveEventThreatDetectionCustomModule}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listEffectiveEventThreatDetectionCustomModulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listEffectiveEventThreatDetectionCustomModules(
      request?: protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesResponse
      ]>;
  listEffectiveEventThreatDetectionCustomModules(
      request: protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule>): void;
  listEffectiveEventThreatDetectionCustomModules(
      request: protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule>): void;
  listEffectiveEventThreatDetectionCustomModules(
      request?: protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule>,
      callback?: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: PaginationCallback<
      protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest,
      protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesResponse|null|undefined,
      protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule>|undefined = callback
      ? (error, values, nextPageRequest, rawResponse) => {
          this._log.info('listEffectiveEventThreatDetectionCustomModules values %j', values);
          callback!(error, values, nextPageRequest, rawResponse); // We verified callback above.
        }
      : undefined;
    this._log.info('listEffectiveEventThreatDetectionCustomModules request %j', request);
    return this.innerApiCalls
      .listEffectiveEventThreatDetectionCustomModules(request, options, wrappedCallback)
      ?.then(([response, input, output]: [
        protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesResponse
      ]) => {
        this._log.info('listEffectiveEventThreatDetectionCustomModules values %j', response);
        return [response, input, output];
      });
  }

/**
 * Equivalent to `listEffectiveEventThreatDetectionCustomModules`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent to list effective custom modules, in one of the
 *   following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing {@link protos.google.cloud.securitycentermanagement.v1.EffectiveEventThreatDetectionCustomModule|EffectiveEventThreatDetectionCustomModule} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listEffectiveEventThreatDetectionCustomModulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listEffectiveEventThreatDetectionCustomModulesStream(
      request?: protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listEffectiveEventThreatDetectionCustomModules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listEffectiveEventThreatDetectionCustomModules stream %j', request);
    return this.descriptors.page.listEffectiveEventThreatDetectionCustomModules.createStream(
      this.innerApiCalls.listEffectiveEventThreatDetectionCustomModules as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listEffectiveEventThreatDetectionCustomModules`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent to list effective custom modules, in one of the
 *   following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
 *   When you iterate the returned iterable, each element will be an object representing
 *   {@link protos.google.cloud.securitycentermanagement.v1.EffectiveEventThreatDetectionCustomModule|EffectiveEventThreatDetectionCustomModule}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.list_effective_event_threat_detection_custom_modules.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_ListEffectiveEventThreatDetectionCustomModules_async
 */
  listEffectiveEventThreatDetectionCustomModulesAsync(
      request?: protos.google.cloud.securitycentermanagement.v1.IListEffectiveEventThreatDetectionCustomModulesRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listEffectiveEventThreatDetectionCustomModules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listEffectiveEventThreatDetectionCustomModules iterate %j', request);
    return this.descriptors.page.listEffectiveEventThreatDetectionCustomModules.asyncIterate(
      this.innerApiCalls['listEffectiveEventThreatDetectionCustomModules'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycentermanagement.v1.IEffectiveEventThreatDetectionCustomModule>;
  }
 /**
 * Lists all Event Threat Detection custom modules for the given organization,
 * folder, or project. This includes resident modules defined at the scope of
 * the parent along with modules inherited from ancestors.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent to list custom modules, in one of the following
 *   formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of modules to return. The service may return
 *   fewer than this value. If unspecified, at most 10 modules will be returned.
 *   The maximum value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of {@link protos.google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule|EventThreatDetectionCustomModule}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listEventThreatDetectionCustomModulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listEventThreatDetectionCustomModules(
      request?: protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesResponse
      ]>;
  listEventThreatDetectionCustomModules(
      request: protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>): void;
  listEventThreatDetectionCustomModules(
      request: protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>): void;
  listEventThreatDetectionCustomModules(
      request?: protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>,
      callback?: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: PaginationCallback<
      protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest,
      protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesResponse|null|undefined,
      protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>|undefined = callback
      ? (error, values, nextPageRequest, rawResponse) => {
          this._log.info('listEventThreatDetectionCustomModules values %j', values);
          callback!(error, values, nextPageRequest, rawResponse); // We verified callback above.
        }
      : undefined;
    this._log.info('listEventThreatDetectionCustomModules request %j', request);
    return this.innerApiCalls
      .listEventThreatDetectionCustomModules(request, options, wrappedCallback)
      ?.then(([response, input, output]: [
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesResponse
      ]) => {
        this._log.info('listEventThreatDetectionCustomModules values %j', response);
        return [response, input, output];
      });
  }

/**
 * Equivalent to `listEventThreatDetectionCustomModules`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent to list custom modules, in one of the following
 *   formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of modules to return. The service may return
 *   fewer than this value. If unspecified, at most 10 modules will be returned.
 *   The maximum value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing {@link protos.google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule|EventThreatDetectionCustomModule} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listEventThreatDetectionCustomModulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listEventThreatDetectionCustomModulesStream(
      request?: protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listEventThreatDetectionCustomModules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listEventThreatDetectionCustomModules stream %j', request);
    return this.descriptors.page.listEventThreatDetectionCustomModules.createStream(
      this.innerApiCalls.listEventThreatDetectionCustomModules as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listEventThreatDetectionCustomModules`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent to list custom modules, in one of the following
 *   formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of modules to return. The service may return
 *   fewer than this value. If unspecified, at most 10 modules will be returned.
 *   The maximum value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
 *   When you iterate the returned iterable, each element will be an object representing
 *   {@link protos.google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule|EventThreatDetectionCustomModule}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.list_event_threat_detection_custom_modules.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_ListEventThreatDetectionCustomModules_async
 */
  listEventThreatDetectionCustomModulesAsync(
      request?: protos.google.cloud.securitycentermanagement.v1.IListEventThreatDetectionCustomModulesRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listEventThreatDetectionCustomModules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listEventThreatDetectionCustomModules iterate %j', request);
    return this.descriptors.page.listEventThreatDetectionCustomModules.asyncIterate(
      this.innerApiCalls['listEventThreatDetectionCustomModules'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>;
  }
 /**
 * Lists all resident Event Threat Detection custom modules for the given
 * organization, folder, or project and its descendants.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent to list custom modules, in one of the following
 *   formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of modules to return. The service may return
 *   fewer than this value. If unspecified, at most 10 configs will be returned.
 *   The maximum value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of {@link protos.google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule|EventThreatDetectionCustomModule}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listDescendantEventThreatDetectionCustomModulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listDescendantEventThreatDetectionCustomModules(
      request?: protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesResponse
      ]>;
  listDescendantEventThreatDetectionCustomModules(
      request: protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>): void;
  listDescendantEventThreatDetectionCustomModules(
      request: protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>): void;
  listDescendantEventThreatDetectionCustomModules(
      request?: protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>,
      callback?: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: PaginationCallback<
      protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest,
      protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesResponse|null|undefined,
      protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>|undefined = callback
      ? (error, values, nextPageRequest, rawResponse) => {
          this._log.info('listDescendantEventThreatDetectionCustomModules values %j', values);
          callback!(error, values, nextPageRequest, rawResponse); // We verified callback above.
        }
      : undefined;
    this._log.info('listDescendantEventThreatDetectionCustomModules request %j', request);
    return this.innerApiCalls
      .listDescendantEventThreatDetectionCustomModules(request, options, wrappedCallback)
      ?.then(([response, input, output]: [
        protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule[],
        protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesResponse
      ]) => {
        this._log.info('listDescendantEventThreatDetectionCustomModules values %j', response);
        return [response, input, output];
      });
  }

/**
 * Equivalent to `listDescendantEventThreatDetectionCustomModules`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent to list custom modules, in one of the following
 *   formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of modules to return. The service may return
 *   fewer than this value. If unspecified, at most 10 configs will be returned.
 *   The maximum value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing {@link protos.google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule|EventThreatDetectionCustomModule} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listDescendantEventThreatDetectionCustomModulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listDescendantEventThreatDetectionCustomModulesStream(
      request?: protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listDescendantEventThreatDetectionCustomModules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listDescendantEventThreatDetectionCustomModules stream %j', request);
    return this.descriptors.page.listDescendantEventThreatDetectionCustomModules.createStream(
      this.innerApiCalls.listDescendantEventThreatDetectionCustomModules as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listDescendantEventThreatDetectionCustomModules`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. Name of parent to list custom modules, in one of the following
 *   formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of modules to return. The service may return
 *   fewer than this value. If unspecified, at most 10 configs will be returned.
 *   The maximum value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
 *   When you iterate the returned iterable, each element will be an object representing
 *   {@link protos.google.cloud.securitycentermanagement.v1.EventThreatDetectionCustomModule|EventThreatDetectionCustomModule}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.list_descendant_event_threat_detection_custom_modules.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_ListDescendantEventThreatDetectionCustomModules_async
 */
  listDescendantEventThreatDetectionCustomModulesAsync(
      request?: protos.google.cloud.securitycentermanagement.v1.IListDescendantEventThreatDetectionCustomModulesRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listDescendantEventThreatDetectionCustomModules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listDescendantEventThreatDetectionCustomModules iterate %j', request);
    return this.descriptors.page.listDescendantEventThreatDetectionCustomModules.asyncIterate(
      this.innerApiCalls['listDescendantEventThreatDetectionCustomModules'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycentermanagement.v1.IEventThreatDetectionCustomModule>;
  }
 /**
 * Returns a list of all Security Command Center services for the given
 * parent.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The name of the parent to list Security Command Center services,
 *   in one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {boolean} request.showEligibleModulesOnly
 *   Flag that, when set, is used to filter the module settings that are shown.
 *   The default setting is that all modules are shown.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of {@link protos.google.cloud.securitycentermanagement.v1.SecurityCenterService|SecurityCenterService}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listSecurityCenterServicesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listSecurityCenterServices(
      request?: protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService[],
        protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesResponse
      ]>;
  listSecurityCenterServices(
      request: protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService>): void;
  listSecurityCenterServices(
      request: protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest,
      callback: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService>): void;
  listSecurityCenterServices(
      request?: protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService>,
      callback?: PaginationCallback<
          protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest,
          protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesResponse|null|undefined,
          protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService>):
      Promise<[
        protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService[],
        protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: PaginationCallback<
      protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest,
      protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesResponse|null|undefined,
      protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService>|undefined = callback
      ? (error, values, nextPageRequest, rawResponse) => {
          this._log.info('listSecurityCenterServices values %j', values);
          callback!(error, values, nextPageRequest, rawResponse); // We verified callback above.
        }
      : undefined;
    this._log.info('listSecurityCenterServices request %j', request);
    return this.innerApiCalls
      .listSecurityCenterServices(request, options, wrappedCallback)
      ?.then(([response, input, output]: [
        protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService[],
        protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest|null,
        protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesResponse
      ]) => {
        this._log.info('listSecurityCenterServices values %j', response);
        return [response, input, output];
      });
  }

/**
 * Equivalent to `listSecurityCenterServices`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The name of the parent to list Security Command Center services,
 *   in one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {boolean} request.showEligibleModulesOnly
 *   Flag that, when set, is used to filter the module settings that are shown.
 *   The default setting is that all modules are shown.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing {@link protos.google.cloud.securitycentermanagement.v1.SecurityCenterService|SecurityCenterService} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listSecurityCenterServicesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listSecurityCenterServicesStream(
      request?: protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listSecurityCenterServices'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listSecurityCenterServices stream %j', request);
    return this.descriptors.page.listSecurityCenterServices.createStream(
      this.innerApiCalls.listSecurityCenterServices as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listSecurityCenterServices`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The name of the parent to list Security Command Center services,
 *   in one of the following formats:
 *
 *   * `organizations/{organization}/locations/{location}`
 *   * `folders/{folder}/locations/{location}`
 *   * `projects/{project}/locations/{location}`
 * @param {number} [request.pageSize]
 *   Optional. The maximum number of results to return in a single response.
 *   Default is 10, minimum is 1, maximum is 1000.
 * @param {string} [request.pageToken]
 *   Optional. A pagination token returned from a previous request. Provide this
 *   token to retrieve the next page of results.
 *
 *   When paginating, the rest of the request must match the request that
 *   generated the page token.
 * @param {boolean} request.showEligibleModulesOnly
 *   Flag that, when set, is used to filter the module settings that are shown.
 *   The default setting is that all modules are shown.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
 *   When you iterate the returned iterable, each element will be an object representing
 *   {@link protos.google.cloud.securitycentermanagement.v1.SecurityCenterService|SecurityCenterService}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/security_center_management.list_security_center_services.js</caption>
 * region_tag:securitycentermanagement_v1_generated_SecurityCenterManagement_ListSecurityCenterServices_async
 */
  listSecurityCenterServicesAsync(
      request?: protos.google.cloud.securitycentermanagement.v1.IListSecurityCenterServicesRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listSecurityCenterServices'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listSecurityCenterServices iterate %j', request);
    return this.descriptors.page.listSecurityCenterServices.asyncIterate(
      this.innerApiCalls['listSecurityCenterServices'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycentermanagement.v1.ISecurityCenterService>;
  }
/**
   * Gets information about a location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Resource name for the location.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example
   * ```
   * const [response] = await client.getLocation(request);
   * ```
   */
  getLocation(
    request: LocationProtos.google.cloud.location.IGetLocationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          LocationProtos.google.cloud.location.ILocation,
          | LocationProtos.google.cloud.location.IGetLocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LocationProtos.google.cloud.location.ILocation,
      | LocationProtos.google.cloud.location.IGetLocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.getLocation(request, options, callback);
  }

/**
   * Lists information about the supported locations for this service. Returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   The resource that owns the locations collection, if applicable.
   * @param {string} request.filter
   *   The standard list filter.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example
   * ```
   * const iterable = client.listLocationsAsync(request);
   * for await (const response of iterable) {
   *   // process response
   * }
   * ```
   */
  listLocationsAsync(
    request: LocationProtos.google.cloud.location.IListLocationsRequest,
    options?: CallOptions
  ): AsyncIterable<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.listLocationsAsync(request, options);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified folderLocationEffectiveEventThreatDetectionCustomModules resource name string.
   *
   * @param {string} folder
   * @param {string} location
   * @param {string} effective_event_threat_detection_custom_module
   * @returns {string} Resource name string.
   */
  folderLocationEffectiveEventThreatDetectionCustomModulesPath(folder:string,location:string,effectiveEventThreatDetectionCustomModule:string) {
    return this.pathTemplates.folderLocationEffectiveEventThreatDetectionCustomModulesPathTemplate.render({
      folder: folder,
      location: location,
      effective_event_threat_detection_custom_module: effectiveEventThreatDetectionCustomModule,
    });
  }

  /**
   * Parse the folder from FolderLocationEffectiveEventThreatDetectionCustomModules resource.
   *
   * @param {string} folderLocationEffectiveEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing folder_location_effectiveEventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderLocationEffectiveEventThreatDetectionCustomModulesName(folderLocationEffectiveEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.folderLocationEffectiveEventThreatDetectionCustomModulesPathTemplate.match(folderLocationEffectiveEventThreatDetectionCustomModulesName).folder;
  }

  /**
   * Parse the location from FolderLocationEffectiveEventThreatDetectionCustomModules resource.
   *
   * @param {string} folderLocationEffectiveEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing folder_location_effectiveEventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFolderLocationEffectiveEventThreatDetectionCustomModulesName(folderLocationEffectiveEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.folderLocationEffectiveEventThreatDetectionCustomModulesPathTemplate.match(folderLocationEffectiveEventThreatDetectionCustomModulesName).location;
  }

  /**
   * Parse the effective_event_threat_detection_custom_module from FolderLocationEffectiveEventThreatDetectionCustomModules resource.
   *
   * @param {string} folderLocationEffectiveEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing folder_location_effectiveEventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the effective_event_threat_detection_custom_module.
   */
  matchEffectiveEventThreatDetectionCustomModuleFromFolderLocationEffectiveEventThreatDetectionCustomModulesName(folderLocationEffectiveEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.folderLocationEffectiveEventThreatDetectionCustomModulesPathTemplate.match(folderLocationEffectiveEventThreatDetectionCustomModulesName).effective_event_threat_detection_custom_module;
  }

  /**
   * Return a fully-qualified folderLocationEffectiveSecurityHealthAnalyticsCustomModules resource name string.
   *
   * @param {string} folder
   * @param {string} location
   * @param {string} effective_security_health_analytics_custom_module
   * @returns {string} Resource name string.
   */
  folderLocationEffectiveSecurityHealthAnalyticsCustomModulesPath(folder:string,location:string,effectiveSecurityHealthAnalyticsCustomModule:string) {
    return this.pathTemplates.folderLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate.render({
      folder: folder,
      location: location,
      effective_security_health_analytics_custom_module: effectiveSecurityHealthAnalyticsCustomModule,
    });
  }

  /**
   * Parse the folder from FolderLocationEffectiveSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} folderLocationEffectiveSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing folder_location_effectiveSecurityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderLocationEffectiveSecurityHealthAnalyticsCustomModulesName(folderLocationEffectiveSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.folderLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate.match(folderLocationEffectiveSecurityHealthAnalyticsCustomModulesName).folder;
  }

  /**
   * Parse the location from FolderLocationEffectiveSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} folderLocationEffectiveSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing folder_location_effectiveSecurityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFolderLocationEffectiveSecurityHealthAnalyticsCustomModulesName(folderLocationEffectiveSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.folderLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate.match(folderLocationEffectiveSecurityHealthAnalyticsCustomModulesName).location;
  }

  /**
   * Parse the effective_security_health_analytics_custom_module from FolderLocationEffectiveSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} folderLocationEffectiveSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing folder_location_effectiveSecurityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the effective_security_health_analytics_custom_module.
   */
  matchEffectiveSecurityHealthAnalyticsCustomModuleFromFolderLocationEffectiveSecurityHealthAnalyticsCustomModulesName(folderLocationEffectiveSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.folderLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate.match(folderLocationEffectiveSecurityHealthAnalyticsCustomModulesName).effective_security_health_analytics_custom_module;
  }

  /**
   * Return a fully-qualified folderLocationEventThreatDetectionCustomModules resource name string.
   *
   * @param {string} folder
   * @param {string} location
   * @param {string} event_threat_detection_custom_module
   * @returns {string} Resource name string.
   */
  folderLocationEventThreatDetectionCustomModulesPath(folder:string,location:string,eventThreatDetectionCustomModule:string) {
    return this.pathTemplates.folderLocationEventThreatDetectionCustomModulesPathTemplate.render({
      folder: folder,
      location: location,
      event_threat_detection_custom_module: eventThreatDetectionCustomModule,
    });
  }

  /**
   * Parse the folder from FolderLocationEventThreatDetectionCustomModules resource.
   *
   * @param {string} folderLocationEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing folder_location_eventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderLocationEventThreatDetectionCustomModulesName(folderLocationEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.folderLocationEventThreatDetectionCustomModulesPathTemplate.match(folderLocationEventThreatDetectionCustomModulesName).folder;
  }

  /**
   * Parse the location from FolderLocationEventThreatDetectionCustomModules resource.
   *
   * @param {string} folderLocationEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing folder_location_eventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFolderLocationEventThreatDetectionCustomModulesName(folderLocationEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.folderLocationEventThreatDetectionCustomModulesPathTemplate.match(folderLocationEventThreatDetectionCustomModulesName).location;
  }

  /**
   * Parse the event_threat_detection_custom_module from FolderLocationEventThreatDetectionCustomModules resource.
   *
   * @param {string} folderLocationEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing folder_location_eventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the event_threat_detection_custom_module.
   */
  matchEventThreatDetectionCustomModuleFromFolderLocationEventThreatDetectionCustomModulesName(folderLocationEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.folderLocationEventThreatDetectionCustomModulesPathTemplate.match(folderLocationEventThreatDetectionCustomModulesName).event_threat_detection_custom_module;
  }

  /**
   * Return a fully-qualified folderLocationSecurityCenterServices resource name string.
   *
   * @param {string} folder
   * @param {string} location
   * @param {string} service
   * @returns {string} Resource name string.
   */
  folderLocationSecurityCenterServicesPath(folder:string,location:string,service:string) {
    return this.pathTemplates.folderLocationSecurityCenterServicesPathTemplate.render({
      folder: folder,
      location: location,
      service: service,
    });
  }

  /**
   * Parse the folder from FolderLocationSecurityCenterServices resource.
   *
   * @param {string} folderLocationSecurityCenterServicesName
   *   A fully-qualified path representing folder_location_securityCenterServices resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderLocationSecurityCenterServicesName(folderLocationSecurityCenterServicesName: string) {
    return this.pathTemplates.folderLocationSecurityCenterServicesPathTemplate.match(folderLocationSecurityCenterServicesName).folder;
  }

  /**
   * Parse the location from FolderLocationSecurityCenterServices resource.
   *
   * @param {string} folderLocationSecurityCenterServicesName
   *   A fully-qualified path representing folder_location_securityCenterServices resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFolderLocationSecurityCenterServicesName(folderLocationSecurityCenterServicesName: string) {
    return this.pathTemplates.folderLocationSecurityCenterServicesPathTemplate.match(folderLocationSecurityCenterServicesName).location;
  }

  /**
   * Parse the service from FolderLocationSecurityCenterServices resource.
   *
   * @param {string} folderLocationSecurityCenterServicesName
   *   A fully-qualified path representing folder_location_securityCenterServices resource.
   * @returns {string} A string representing the service.
   */
  matchServiceFromFolderLocationSecurityCenterServicesName(folderLocationSecurityCenterServicesName: string) {
    return this.pathTemplates.folderLocationSecurityCenterServicesPathTemplate.match(folderLocationSecurityCenterServicesName).service;
  }

  /**
   * Return a fully-qualified folderLocationSecurityHealthAnalyticsCustomModules resource name string.
   *
   * @param {string} folder
   * @param {string} location
   * @param {string} security_health_analytics_custom_module
   * @returns {string} Resource name string.
   */
  folderLocationSecurityHealthAnalyticsCustomModulesPath(folder:string,location:string,securityHealthAnalyticsCustomModule:string) {
    return this.pathTemplates.folderLocationSecurityHealthAnalyticsCustomModulesPathTemplate.render({
      folder: folder,
      location: location,
      security_health_analytics_custom_module: securityHealthAnalyticsCustomModule,
    });
  }

  /**
   * Parse the folder from FolderLocationSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} folderLocationSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing folder_location_securityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderLocationSecurityHealthAnalyticsCustomModulesName(folderLocationSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.folderLocationSecurityHealthAnalyticsCustomModulesPathTemplate.match(folderLocationSecurityHealthAnalyticsCustomModulesName).folder;
  }

  /**
   * Parse the location from FolderLocationSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} folderLocationSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing folder_location_securityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFolderLocationSecurityHealthAnalyticsCustomModulesName(folderLocationSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.folderLocationSecurityHealthAnalyticsCustomModulesPathTemplate.match(folderLocationSecurityHealthAnalyticsCustomModulesName).location;
  }

  /**
   * Parse the security_health_analytics_custom_module from FolderLocationSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} folderLocationSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing folder_location_securityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the security_health_analytics_custom_module.
   */
  matchSecurityHealthAnalyticsCustomModuleFromFolderLocationSecurityHealthAnalyticsCustomModulesName(folderLocationSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.folderLocationSecurityHealthAnalyticsCustomModulesPathTemplate.match(folderLocationSecurityHealthAnalyticsCustomModulesName).security_health_analytics_custom_module;
  }

  /**
   * Return a fully-qualified folderSourceFindings resource name string.
   *
   * @param {string} folder
   * @param {string} source
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  folderSourceFindingsPath(folder:string,source:string,finding:string) {
    return this.pathTemplates.folderSourceFindingsPathTemplate.render({
      folder: folder,
      source: source,
      finding: finding,
    });
  }

  /**
   * Parse the folder from FolderSourceFindings resource.
   *
   * @param {string} folderSourceFindingsName
   *   A fully-qualified path representing folder_source_findings resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderSourceFindingsName(folderSourceFindingsName: string) {
    return this.pathTemplates.folderSourceFindingsPathTemplate.match(folderSourceFindingsName).folder;
  }

  /**
   * Parse the source from FolderSourceFindings resource.
   *
   * @param {string} folderSourceFindingsName
   *   A fully-qualified path representing folder_source_findings resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromFolderSourceFindingsName(folderSourceFindingsName: string) {
    return this.pathTemplates.folderSourceFindingsPathTemplate.match(folderSourceFindingsName).source;
  }

  /**
   * Parse the finding from FolderSourceFindings resource.
   *
   * @param {string} folderSourceFindingsName
   *   A fully-qualified path representing folder_source_findings resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromFolderSourceFindingsName(folderSourceFindingsName: string) {
    return this.pathTemplates.folderSourceFindingsPathTemplate.match(folderSourceFindingsName).finding;
  }

  /**
   * Return a fully-qualified location resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  locationPath(project:string,location:string) {
    return this.pathTemplates.locationPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).project;
  }

  /**
   * Parse the location from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).location;
  }

  /**
   * Return a fully-qualified organization resource name string.
   *
   * @param {string} organization
   * @returns {string} Resource name string.
   */
  organizationPath(organization:string) {
    return this.pathTemplates.organizationPathTemplate.render({
      organization: organization,
    });
  }

  /**
   * Parse the organization from Organization resource.
   *
   * @param {string} organizationName
   *   A fully-qualified path representing Organization resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationName(organizationName: string) {
    return this.pathTemplates.organizationPathTemplate.match(organizationName).organization;
  }

  /**
   * Return a fully-qualified organizationLocation resource name string.
   *
   * @param {string} organization
   * @param {string} location
   * @returns {string} Resource name string.
   */
  organizationLocationPath(organization:string,location:string) {
    return this.pathTemplates.organizationLocationPathTemplate.render({
      organization: organization,
      location: location,
    });
  }

  /**
   * Parse the organization from OrganizationLocation resource.
   *
   * @param {string} organizationLocationName
   *   A fully-qualified path representing OrganizationLocation resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationLocationName(organizationLocationName: string) {
    return this.pathTemplates.organizationLocationPathTemplate.match(organizationLocationName).organization;
  }

  /**
   * Parse the location from OrganizationLocation resource.
   *
   * @param {string} organizationLocationName
   *   A fully-qualified path representing OrganizationLocation resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationLocationName(organizationLocationName: string) {
    return this.pathTemplates.organizationLocationPathTemplate.match(organizationLocationName).location;
  }

  /**
   * Return a fully-qualified organizationLocationEffectiveEventThreatDetectionCustomModules resource name string.
   *
   * @param {string} organization
   * @param {string} location
   * @param {string} effective_event_threat_detection_custom_module
   * @returns {string} Resource name string.
   */
  organizationLocationEffectiveEventThreatDetectionCustomModulesPath(organization:string,location:string,effectiveEventThreatDetectionCustomModule:string) {
    return this.pathTemplates.organizationLocationEffectiveEventThreatDetectionCustomModulesPathTemplate.render({
      organization: organization,
      location: location,
      effective_event_threat_detection_custom_module: effectiveEventThreatDetectionCustomModule,
    });
  }

  /**
   * Parse the organization from OrganizationLocationEffectiveEventThreatDetectionCustomModules resource.
   *
   * @param {string} organizationLocationEffectiveEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing organization_location_effectiveEventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationLocationEffectiveEventThreatDetectionCustomModulesName(organizationLocationEffectiveEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.organizationLocationEffectiveEventThreatDetectionCustomModulesPathTemplate.match(organizationLocationEffectiveEventThreatDetectionCustomModulesName).organization;
  }

  /**
   * Parse the location from OrganizationLocationEffectiveEventThreatDetectionCustomModules resource.
   *
   * @param {string} organizationLocationEffectiveEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing organization_location_effectiveEventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationLocationEffectiveEventThreatDetectionCustomModulesName(organizationLocationEffectiveEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.organizationLocationEffectiveEventThreatDetectionCustomModulesPathTemplate.match(organizationLocationEffectiveEventThreatDetectionCustomModulesName).location;
  }

  /**
   * Parse the effective_event_threat_detection_custom_module from OrganizationLocationEffectiveEventThreatDetectionCustomModules resource.
   *
   * @param {string} organizationLocationEffectiveEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing organization_location_effectiveEventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the effective_event_threat_detection_custom_module.
   */
  matchEffectiveEventThreatDetectionCustomModuleFromOrganizationLocationEffectiveEventThreatDetectionCustomModulesName(organizationLocationEffectiveEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.organizationLocationEffectiveEventThreatDetectionCustomModulesPathTemplate.match(organizationLocationEffectiveEventThreatDetectionCustomModulesName).effective_event_threat_detection_custom_module;
  }

  /**
   * Return a fully-qualified organizationLocationEffectiveSecurityHealthAnalyticsCustomModules resource name string.
   *
   * @param {string} organization
   * @param {string} location
   * @param {string} effective_security_health_analytics_custom_module
   * @returns {string} Resource name string.
   */
  organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesPath(organization:string,location:string,effectiveSecurityHealthAnalyticsCustomModule:string) {
    return this.pathTemplates.organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate.render({
      organization: organization,
      location: location,
      effective_security_health_analytics_custom_module: effectiveSecurityHealthAnalyticsCustomModule,
    });
  }

  /**
   * Parse the organization from OrganizationLocationEffectiveSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing organization_location_effectiveSecurityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationLocationEffectiveSecurityHealthAnalyticsCustomModulesName(organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate.match(organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesName).organization;
  }

  /**
   * Parse the location from OrganizationLocationEffectiveSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing organization_location_effectiveSecurityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationLocationEffectiveSecurityHealthAnalyticsCustomModulesName(organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate.match(organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesName).location;
  }

  /**
   * Parse the effective_security_health_analytics_custom_module from OrganizationLocationEffectiveSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing organization_location_effectiveSecurityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the effective_security_health_analytics_custom_module.
   */
  matchEffectiveSecurityHealthAnalyticsCustomModuleFromOrganizationLocationEffectiveSecurityHealthAnalyticsCustomModulesName(organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate.match(organizationLocationEffectiveSecurityHealthAnalyticsCustomModulesName).effective_security_health_analytics_custom_module;
  }

  /**
   * Return a fully-qualified organizationLocationEventThreatDetectionCustomModules resource name string.
   *
   * @param {string} organization
   * @param {string} location
   * @param {string} event_threat_detection_custom_module
   * @returns {string} Resource name string.
   */
  organizationLocationEventThreatDetectionCustomModulesPath(organization:string,location:string,eventThreatDetectionCustomModule:string) {
    return this.pathTemplates.organizationLocationEventThreatDetectionCustomModulesPathTemplate.render({
      organization: organization,
      location: location,
      event_threat_detection_custom_module: eventThreatDetectionCustomModule,
    });
  }

  /**
   * Parse the organization from OrganizationLocationEventThreatDetectionCustomModules resource.
   *
   * @param {string} organizationLocationEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing organization_location_eventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationLocationEventThreatDetectionCustomModulesName(organizationLocationEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.organizationLocationEventThreatDetectionCustomModulesPathTemplate.match(organizationLocationEventThreatDetectionCustomModulesName).organization;
  }

  /**
   * Parse the location from OrganizationLocationEventThreatDetectionCustomModules resource.
   *
   * @param {string} organizationLocationEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing organization_location_eventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationLocationEventThreatDetectionCustomModulesName(organizationLocationEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.organizationLocationEventThreatDetectionCustomModulesPathTemplate.match(organizationLocationEventThreatDetectionCustomModulesName).location;
  }

  /**
   * Parse the event_threat_detection_custom_module from OrganizationLocationEventThreatDetectionCustomModules resource.
   *
   * @param {string} organizationLocationEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing organization_location_eventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the event_threat_detection_custom_module.
   */
  matchEventThreatDetectionCustomModuleFromOrganizationLocationEventThreatDetectionCustomModulesName(organizationLocationEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.organizationLocationEventThreatDetectionCustomModulesPathTemplate.match(organizationLocationEventThreatDetectionCustomModulesName).event_threat_detection_custom_module;
  }

  /**
   * Return a fully-qualified organizationLocationSecurityCenterServices resource name string.
   *
   * @param {string} organization
   * @param {string} location
   * @param {string} service
   * @returns {string} Resource name string.
   */
  organizationLocationSecurityCenterServicesPath(organization:string,location:string,service:string) {
    return this.pathTemplates.organizationLocationSecurityCenterServicesPathTemplate.render({
      organization: organization,
      location: location,
      service: service,
    });
  }

  /**
   * Parse the organization from OrganizationLocationSecurityCenterServices resource.
   *
   * @param {string} organizationLocationSecurityCenterServicesName
   *   A fully-qualified path representing organization_location_securityCenterServices resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationLocationSecurityCenterServicesName(organizationLocationSecurityCenterServicesName: string) {
    return this.pathTemplates.organizationLocationSecurityCenterServicesPathTemplate.match(organizationLocationSecurityCenterServicesName).organization;
  }

  /**
   * Parse the location from OrganizationLocationSecurityCenterServices resource.
   *
   * @param {string} organizationLocationSecurityCenterServicesName
   *   A fully-qualified path representing organization_location_securityCenterServices resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationLocationSecurityCenterServicesName(organizationLocationSecurityCenterServicesName: string) {
    return this.pathTemplates.organizationLocationSecurityCenterServicesPathTemplate.match(organizationLocationSecurityCenterServicesName).location;
  }

  /**
   * Parse the service from OrganizationLocationSecurityCenterServices resource.
   *
   * @param {string} organizationLocationSecurityCenterServicesName
   *   A fully-qualified path representing organization_location_securityCenterServices resource.
   * @returns {string} A string representing the service.
   */
  matchServiceFromOrganizationLocationSecurityCenterServicesName(organizationLocationSecurityCenterServicesName: string) {
    return this.pathTemplates.organizationLocationSecurityCenterServicesPathTemplate.match(organizationLocationSecurityCenterServicesName).service;
  }

  /**
   * Return a fully-qualified organizationLocationSecurityHealthAnalyticsCustomModules resource name string.
   *
   * @param {string} organization
   * @param {string} location
   * @param {string} security_health_analytics_custom_module
   * @returns {string} Resource name string.
   */
  organizationLocationSecurityHealthAnalyticsCustomModulesPath(organization:string,location:string,securityHealthAnalyticsCustomModule:string) {
    return this.pathTemplates.organizationLocationSecurityHealthAnalyticsCustomModulesPathTemplate.render({
      organization: organization,
      location: location,
      security_health_analytics_custom_module: securityHealthAnalyticsCustomModule,
    });
  }

  /**
   * Parse the organization from OrganizationLocationSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} organizationLocationSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing organization_location_securityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationLocationSecurityHealthAnalyticsCustomModulesName(organizationLocationSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.organizationLocationSecurityHealthAnalyticsCustomModulesPathTemplate.match(organizationLocationSecurityHealthAnalyticsCustomModulesName).organization;
  }

  /**
   * Parse the location from OrganizationLocationSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} organizationLocationSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing organization_location_securityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationLocationSecurityHealthAnalyticsCustomModulesName(organizationLocationSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.organizationLocationSecurityHealthAnalyticsCustomModulesPathTemplate.match(organizationLocationSecurityHealthAnalyticsCustomModulesName).location;
  }

  /**
   * Parse the security_health_analytics_custom_module from OrganizationLocationSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} organizationLocationSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing organization_location_securityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the security_health_analytics_custom_module.
   */
  matchSecurityHealthAnalyticsCustomModuleFromOrganizationLocationSecurityHealthAnalyticsCustomModulesName(organizationLocationSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.organizationLocationSecurityHealthAnalyticsCustomModulesPathTemplate.match(organizationLocationSecurityHealthAnalyticsCustomModulesName).security_health_analytics_custom_module;
  }

  /**
   * Return a fully-qualified organizationSourceFindings resource name string.
   *
   * @param {string} organization
   * @param {string} source
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  organizationSourceFindingsPath(organization:string,source:string,finding:string) {
    return this.pathTemplates.organizationSourceFindingsPathTemplate.render({
      organization: organization,
      source: source,
      finding: finding,
    });
  }

  /**
   * Parse the organization from OrganizationSourceFindings resource.
   *
   * @param {string} organizationSourceFindingsName
   *   A fully-qualified path representing organization_source_findings resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationSourceFindingsName(organizationSourceFindingsName: string) {
    return this.pathTemplates.organizationSourceFindingsPathTemplate.match(organizationSourceFindingsName).organization;
  }

  /**
   * Parse the source from OrganizationSourceFindings resource.
   *
   * @param {string} organizationSourceFindingsName
   *   A fully-qualified path representing organization_source_findings resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromOrganizationSourceFindingsName(organizationSourceFindingsName: string) {
    return this.pathTemplates.organizationSourceFindingsPathTemplate.match(organizationSourceFindingsName).source;
  }

  /**
   * Parse the finding from OrganizationSourceFindings resource.
   *
   * @param {string} organizationSourceFindingsName
   *   A fully-qualified path representing organization_source_findings resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromOrganizationSourceFindingsName(organizationSourceFindingsName: string) {
    return this.pathTemplates.organizationSourceFindingsPathTemplate.match(organizationSourceFindingsName).finding;
  }

  /**
   * Return a fully-qualified project resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  projectPath(project:string) {
    return this.pathTemplates.projectPathTemplate.render({
      project: project,
    });
  }

  /**
   * Parse the project from Project resource.
   *
   * @param {string} projectName
   *   A fully-qualified path representing Project resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectName(projectName: string) {
    return this.pathTemplates.projectPathTemplate.match(projectName).project;
  }

  /**
   * Return a fully-qualified projectLocationEffectiveEventThreatDetectionCustomModules resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} effective_event_threat_detection_custom_module
   * @returns {string} Resource name string.
   */
  projectLocationEffectiveEventThreatDetectionCustomModulesPath(project:string,location:string,effectiveEventThreatDetectionCustomModule:string) {
    return this.pathTemplates.projectLocationEffectiveEventThreatDetectionCustomModulesPathTemplate.render({
      project: project,
      location: location,
      effective_event_threat_detection_custom_module: effectiveEventThreatDetectionCustomModule,
    });
  }

  /**
   * Parse the project from ProjectLocationEffectiveEventThreatDetectionCustomModules resource.
   *
   * @param {string} projectLocationEffectiveEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing project_location_effectiveEventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationEffectiveEventThreatDetectionCustomModulesName(projectLocationEffectiveEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.projectLocationEffectiveEventThreatDetectionCustomModulesPathTemplate.match(projectLocationEffectiveEventThreatDetectionCustomModulesName).project;
  }

  /**
   * Parse the location from ProjectLocationEffectiveEventThreatDetectionCustomModules resource.
   *
   * @param {string} projectLocationEffectiveEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing project_location_effectiveEventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationEffectiveEventThreatDetectionCustomModulesName(projectLocationEffectiveEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.projectLocationEffectiveEventThreatDetectionCustomModulesPathTemplate.match(projectLocationEffectiveEventThreatDetectionCustomModulesName).location;
  }

  /**
   * Parse the effective_event_threat_detection_custom_module from ProjectLocationEffectiveEventThreatDetectionCustomModules resource.
   *
   * @param {string} projectLocationEffectiveEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing project_location_effectiveEventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the effective_event_threat_detection_custom_module.
   */
  matchEffectiveEventThreatDetectionCustomModuleFromProjectLocationEffectiveEventThreatDetectionCustomModulesName(projectLocationEffectiveEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.projectLocationEffectiveEventThreatDetectionCustomModulesPathTemplate.match(projectLocationEffectiveEventThreatDetectionCustomModulesName).effective_event_threat_detection_custom_module;
  }

  /**
   * Return a fully-qualified projectLocationEffectiveSecurityHealthAnalyticsCustomModules resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} effective_security_health_analytics_custom_module
   * @returns {string} Resource name string.
   */
  projectLocationEffectiveSecurityHealthAnalyticsCustomModulesPath(project:string,location:string,effectiveSecurityHealthAnalyticsCustomModule:string) {
    return this.pathTemplates.projectLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate.render({
      project: project,
      location: location,
      effective_security_health_analytics_custom_module: effectiveSecurityHealthAnalyticsCustomModule,
    });
  }

  /**
   * Parse the project from ProjectLocationEffectiveSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} projectLocationEffectiveSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing project_location_effectiveSecurityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationEffectiveSecurityHealthAnalyticsCustomModulesName(projectLocationEffectiveSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.projectLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate.match(projectLocationEffectiveSecurityHealthAnalyticsCustomModulesName).project;
  }

  /**
   * Parse the location from ProjectLocationEffectiveSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} projectLocationEffectiveSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing project_location_effectiveSecurityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationEffectiveSecurityHealthAnalyticsCustomModulesName(projectLocationEffectiveSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.projectLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate.match(projectLocationEffectiveSecurityHealthAnalyticsCustomModulesName).location;
  }

  /**
   * Parse the effective_security_health_analytics_custom_module from ProjectLocationEffectiveSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} projectLocationEffectiveSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing project_location_effectiveSecurityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the effective_security_health_analytics_custom_module.
   */
  matchEffectiveSecurityHealthAnalyticsCustomModuleFromProjectLocationEffectiveSecurityHealthAnalyticsCustomModulesName(projectLocationEffectiveSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.projectLocationEffectiveSecurityHealthAnalyticsCustomModulesPathTemplate.match(projectLocationEffectiveSecurityHealthAnalyticsCustomModulesName).effective_security_health_analytics_custom_module;
  }

  /**
   * Return a fully-qualified projectLocationEventThreatDetectionCustomModules resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} event_threat_detection_custom_module
   * @returns {string} Resource name string.
   */
  projectLocationEventThreatDetectionCustomModulesPath(project:string,location:string,eventThreatDetectionCustomModule:string) {
    return this.pathTemplates.projectLocationEventThreatDetectionCustomModulesPathTemplate.render({
      project: project,
      location: location,
      event_threat_detection_custom_module: eventThreatDetectionCustomModule,
    });
  }

  /**
   * Parse the project from ProjectLocationEventThreatDetectionCustomModules resource.
   *
   * @param {string} projectLocationEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing project_location_eventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationEventThreatDetectionCustomModulesName(projectLocationEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.projectLocationEventThreatDetectionCustomModulesPathTemplate.match(projectLocationEventThreatDetectionCustomModulesName).project;
  }

  /**
   * Parse the location from ProjectLocationEventThreatDetectionCustomModules resource.
   *
   * @param {string} projectLocationEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing project_location_eventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationEventThreatDetectionCustomModulesName(projectLocationEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.projectLocationEventThreatDetectionCustomModulesPathTemplate.match(projectLocationEventThreatDetectionCustomModulesName).location;
  }

  /**
   * Parse the event_threat_detection_custom_module from ProjectLocationEventThreatDetectionCustomModules resource.
   *
   * @param {string} projectLocationEventThreatDetectionCustomModulesName
   *   A fully-qualified path representing project_location_eventThreatDetectionCustomModules resource.
   * @returns {string} A string representing the event_threat_detection_custom_module.
   */
  matchEventThreatDetectionCustomModuleFromProjectLocationEventThreatDetectionCustomModulesName(projectLocationEventThreatDetectionCustomModulesName: string) {
    return this.pathTemplates.projectLocationEventThreatDetectionCustomModulesPathTemplate.match(projectLocationEventThreatDetectionCustomModulesName).event_threat_detection_custom_module;
  }

  /**
   * Return a fully-qualified projectLocationSecurityCenterServices resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} service
   * @returns {string} Resource name string.
   */
  projectLocationSecurityCenterServicesPath(project:string,location:string,service:string) {
    return this.pathTemplates.projectLocationSecurityCenterServicesPathTemplate.render({
      project: project,
      location: location,
      service: service,
    });
  }

  /**
   * Parse the project from ProjectLocationSecurityCenterServices resource.
   *
   * @param {string} projectLocationSecurityCenterServicesName
   *   A fully-qualified path representing project_location_securityCenterServices resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationSecurityCenterServicesName(projectLocationSecurityCenterServicesName: string) {
    return this.pathTemplates.projectLocationSecurityCenterServicesPathTemplate.match(projectLocationSecurityCenterServicesName).project;
  }

  /**
   * Parse the location from ProjectLocationSecurityCenterServices resource.
   *
   * @param {string} projectLocationSecurityCenterServicesName
   *   A fully-qualified path representing project_location_securityCenterServices resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationSecurityCenterServicesName(projectLocationSecurityCenterServicesName: string) {
    return this.pathTemplates.projectLocationSecurityCenterServicesPathTemplate.match(projectLocationSecurityCenterServicesName).location;
  }

  /**
   * Parse the service from ProjectLocationSecurityCenterServices resource.
   *
   * @param {string} projectLocationSecurityCenterServicesName
   *   A fully-qualified path representing project_location_securityCenterServices resource.
   * @returns {string} A string representing the service.
   */
  matchServiceFromProjectLocationSecurityCenterServicesName(projectLocationSecurityCenterServicesName: string) {
    return this.pathTemplates.projectLocationSecurityCenterServicesPathTemplate.match(projectLocationSecurityCenterServicesName).service;
  }

  /**
   * Return a fully-qualified projectLocationSecurityHealthAnalyticsCustomModules resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} security_health_analytics_custom_module
   * @returns {string} Resource name string.
   */
  projectLocationSecurityHealthAnalyticsCustomModulesPath(project:string,location:string,securityHealthAnalyticsCustomModule:string) {
    return this.pathTemplates.projectLocationSecurityHealthAnalyticsCustomModulesPathTemplate.render({
      project: project,
      location: location,
      security_health_analytics_custom_module: securityHealthAnalyticsCustomModule,
    });
  }

  /**
   * Parse the project from ProjectLocationSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} projectLocationSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing project_location_securityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationSecurityHealthAnalyticsCustomModulesName(projectLocationSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.projectLocationSecurityHealthAnalyticsCustomModulesPathTemplate.match(projectLocationSecurityHealthAnalyticsCustomModulesName).project;
  }

  /**
   * Parse the location from ProjectLocationSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} projectLocationSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing project_location_securityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationSecurityHealthAnalyticsCustomModulesName(projectLocationSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.projectLocationSecurityHealthAnalyticsCustomModulesPathTemplate.match(projectLocationSecurityHealthAnalyticsCustomModulesName).location;
  }

  /**
   * Parse the security_health_analytics_custom_module from ProjectLocationSecurityHealthAnalyticsCustomModules resource.
   *
   * @param {string} projectLocationSecurityHealthAnalyticsCustomModulesName
   *   A fully-qualified path representing project_location_securityHealthAnalyticsCustomModules resource.
   * @returns {string} A string representing the security_health_analytics_custom_module.
   */
  matchSecurityHealthAnalyticsCustomModuleFromProjectLocationSecurityHealthAnalyticsCustomModulesName(projectLocationSecurityHealthAnalyticsCustomModulesName: string) {
    return this.pathTemplates.projectLocationSecurityHealthAnalyticsCustomModulesPathTemplate.match(projectLocationSecurityHealthAnalyticsCustomModulesName).security_health_analytics_custom_module;
  }

  /**
   * Return a fully-qualified projectSourceFindings resource name string.
   *
   * @param {string} project
   * @param {string} source
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  projectSourceFindingsPath(project:string,source:string,finding:string) {
    return this.pathTemplates.projectSourceFindingsPathTemplate.render({
      project: project,
      source: source,
      finding: finding,
    });
  }

  /**
   * Parse the project from ProjectSourceFindings resource.
   *
   * @param {string} projectSourceFindingsName
   *   A fully-qualified path representing project_source_findings resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectSourceFindingsName(projectSourceFindingsName: string) {
    return this.pathTemplates.projectSourceFindingsPathTemplate.match(projectSourceFindingsName).project;
  }

  /**
   * Parse the source from ProjectSourceFindings resource.
   *
   * @param {string} projectSourceFindingsName
   *   A fully-qualified path representing project_source_findings resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromProjectSourceFindingsName(projectSourceFindingsName: string) {
    return this.pathTemplates.projectSourceFindingsPathTemplate.match(projectSourceFindingsName).source;
  }

  /**
   * Parse the finding from ProjectSourceFindings resource.
   *
   * @param {string} projectSourceFindingsName
   *   A fully-qualified path representing project_source_findings resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromProjectSourceFindingsName(projectSourceFindingsName: string) {
    return this.pathTemplates.projectSourceFindingsPathTemplate.match(projectSourceFindingsName).finding;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.securityCenterManagementStub && !this._terminated) {
      return this.securityCenterManagementStub.then(stub => {
        this._log.info('ending gRPC channel');
        this._terminated = true;
        stub.close();
        this.locationsClient.close().catch(err => {throw err});
      });
    }
    return Promise.resolve();
  }
}