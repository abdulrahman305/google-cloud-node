// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_cloudbuild_protos || ($protobuf.roots._google_cloud_cloudbuild_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.devtools = (function() {
    
            /**
             * Namespace devtools.
             * @memberof google
             * @namespace
             */
            var devtools = {};
    
            devtools.cloudbuild = (function() {
    
                /**
                 * Namespace cloudbuild.
                 * @memberof google.devtools
                 * @namespace
                 */
                var cloudbuild = {};
    
                cloudbuild.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.devtools.cloudbuild
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.CloudBuild = (function() {
    
                        /**
                         * Constructs a new CloudBuild service.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a CloudBuild
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CloudBuild(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CloudBuild.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CloudBuild;
    
                        /**
                         * Creates new CloudBuild service using the specified rpc implementation.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CloudBuild} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CloudBuild.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|createBuild}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef CreateBuildCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateBuild.
                         * @function createBuild
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.ICreateBuildRequest} request CreateBuildRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.CreateBuildCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.createBuild = function createBuild(request, callback) {
                            return this.rpcCall(createBuild, $root.google.devtools.cloudbuild.v1.CreateBuildRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateBuild" });
    
                        /**
                         * Calls CreateBuild.
                         * @function createBuild
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.ICreateBuildRequest} request CreateBuildRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|getBuild}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef GetBuildCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.cloudbuild.v1.Build} [response] Build
                         */
    
                        /**
                         * Calls GetBuild.
                         * @function getBuild
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IGetBuildRequest} request GetBuildRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.GetBuildCallback} callback Node-style callback called with the error, if any, and Build
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.getBuild = function getBuild(request, callback) {
                            return this.rpcCall(getBuild, $root.google.devtools.cloudbuild.v1.GetBuildRequest, $root.google.devtools.cloudbuild.v1.Build, request, callback);
                        }, "name", { value: "GetBuild" });
    
                        /**
                         * Calls GetBuild.
                         * @function getBuild
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IGetBuildRequest} request GetBuildRequest message or plain object
                         * @returns {Promise<google.devtools.cloudbuild.v1.Build>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|listBuilds}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef ListBuildsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.cloudbuild.v1.ListBuildsResponse} [response] ListBuildsResponse
                         */
    
                        /**
                         * Calls ListBuilds.
                         * @function listBuilds
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IListBuildsRequest} request ListBuildsRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.ListBuildsCallback} callback Node-style callback called with the error, if any, and ListBuildsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.listBuilds = function listBuilds(request, callback) {
                            return this.rpcCall(listBuilds, $root.google.devtools.cloudbuild.v1.ListBuildsRequest, $root.google.devtools.cloudbuild.v1.ListBuildsResponse, request, callback);
                        }, "name", { value: "ListBuilds" });
    
                        /**
                         * Calls ListBuilds.
                         * @function listBuilds
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IListBuildsRequest} request ListBuildsRequest message or plain object
                         * @returns {Promise<google.devtools.cloudbuild.v1.ListBuildsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|cancelBuild}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef CancelBuildCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.cloudbuild.v1.Build} [response] Build
                         */
    
                        /**
                         * Calls CancelBuild.
                         * @function cancelBuild
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.ICancelBuildRequest} request CancelBuildRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.CancelBuildCallback} callback Node-style callback called with the error, if any, and Build
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.cancelBuild = function cancelBuild(request, callback) {
                            return this.rpcCall(cancelBuild, $root.google.devtools.cloudbuild.v1.CancelBuildRequest, $root.google.devtools.cloudbuild.v1.Build, request, callback);
                        }, "name", { value: "CancelBuild" });
    
                        /**
                         * Calls CancelBuild.
                         * @function cancelBuild
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.ICancelBuildRequest} request CancelBuildRequest message or plain object
                         * @returns {Promise<google.devtools.cloudbuild.v1.Build>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|retryBuild}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef RetryBuildCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RetryBuild.
                         * @function retryBuild
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IRetryBuildRequest} request RetryBuildRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.RetryBuildCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.retryBuild = function retryBuild(request, callback) {
                            return this.rpcCall(retryBuild, $root.google.devtools.cloudbuild.v1.RetryBuildRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RetryBuild" });
    
                        /**
                         * Calls RetryBuild.
                         * @function retryBuild
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IRetryBuildRequest} request RetryBuildRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|approveBuild}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef ApproveBuildCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ApproveBuild.
                         * @function approveBuild
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IApproveBuildRequest} request ApproveBuildRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.ApproveBuildCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.approveBuild = function approveBuild(request, callback) {
                            return this.rpcCall(approveBuild, $root.google.devtools.cloudbuild.v1.ApproveBuildRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ApproveBuild" });
    
                        /**
                         * Calls ApproveBuild.
                         * @function approveBuild
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IApproveBuildRequest} request ApproveBuildRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|createBuildTrigger}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef CreateBuildTriggerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.cloudbuild.v1.BuildTrigger} [response] BuildTrigger
                         */
    
                        /**
                         * Calls CreateBuildTrigger.
                         * @function createBuildTrigger
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.ICreateBuildTriggerRequest} request CreateBuildTriggerRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.CreateBuildTriggerCallback} callback Node-style callback called with the error, if any, and BuildTrigger
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.createBuildTrigger = function createBuildTrigger(request, callback) {
                            return this.rpcCall(createBuildTrigger, $root.google.devtools.cloudbuild.v1.CreateBuildTriggerRequest, $root.google.devtools.cloudbuild.v1.BuildTrigger, request, callback);
                        }, "name", { value: "CreateBuildTrigger" });
    
                        /**
                         * Calls CreateBuildTrigger.
                         * @function createBuildTrigger
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.ICreateBuildTriggerRequest} request CreateBuildTriggerRequest message or plain object
                         * @returns {Promise<google.devtools.cloudbuild.v1.BuildTrigger>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|getBuildTrigger}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef GetBuildTriggerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.cloudbuild.v1.BuildTrigger} [response] BuildTrigger
                         */
    
                        /**
                         * Calls GetBuildTrigger.
                         * @function getBuildTrigger
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IGetBuildTriggerRequest} request GetBuildTriggerRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.GetBuildTriggerCallback} callback Node-style callback called with the error, if any, and BuildTrigger
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.getBuildTrigger = function getBuildTrigger(request, callback) {
                            return this.rpcCall(getBuildTrigger, $root.google.devtools.cloudbuild.v1.GetBuildTriggerRequest, $root.google.devtools.cloudbuild.v1.BuildTrigger, request, callback);
                        }, "name", { value: "GetBuildTrigger" });
    
                        /**
                         * Calls GetBuildTrigger.
                         * @function getBuildTrigger
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IGetBuildTriggerRequest} request GetBuildTriggerRequest message or plain object
                         * @returns {Promise<google.devtools.cloudbuild.v1.BuildTrigger>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|listBuildTriggers}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef ListBuildTriggersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.cloudbuild.v1.ListBuildTriggersResponse} [response] ListBuildTriggersResponse
                         */
    
                        /**
                         * Calls ListBuildTriggers.
                         * @function listBuildTriggers
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IListBuildTriggersRequest} request ListBuildTriggersRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.ListBuildTriggersCallback} callback Node-style callback called with the error, if any, and ListBuildTriggersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.listBuildTriggers = function listBuildTriggers(request, callback) {
                            return this.rpcCall(listBuildTriggers, $root.google.devtools.cloudbuild.v1.ListBuildTriggersRequest, $root.google.devtools.cloudbuild.v1.ListBuildTriggersResponse, request, callback);
                        }, "name", { value: "ListBuildTriggers" });
    
                        /**
                         * Calls ListBuildTriggers.
                         * @function listBuildTriggers
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IListBuildTriggersRequest} request ListBuildTriggersRequest message or plain object
                         * @returns {Promise<google.devtools.cloudbuild.v1.ListBuildTriggersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|deleteBuildTrigger}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef DeleteBuildTriggerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteBuildTrigger.
                         * @function deleteBuildTrigger
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IDeleteBuildTriggerRequest} request DeleteBuildTriggerRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.DeleteBuildTriggerCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.deleteBuildTrigger = function deleteBuildTrigger(request, callback) {
                            return this.rpcCall(deleteBuildTrigger, $root.google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteBuildTrigger" });
    
                        /**
                         * Calls DeleteBuildTrigger.
                         * @function deleteBuildTrigger
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IDeleteBuildTriggerRequest} request DeleteBuildTriggerRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|updateBuildTrigger}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef UpdateBuildTriggerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.cloudbuild.v1.BuildTrigger} [response] BuildTrigger
                         */
    
                        /**
                         * Calls UpdateBuildTrigger.
                         * @function updateBuildTrigger
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IUpdateBuildTriggerRequest} request UpdateBuildTriggerRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.UpdateBuildTriggerCallback} callback Node-style callback called with the error, if any, and BuildTrigger
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.updateBuildTrigger = function updateBuildTrigger(request, callback) {
                            return this.rpcCall(updateBuildTrigger, $root.google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest, $root.google.devtools.cloudbuild.v1.BuildTrigger, request, callback);
                        }, "name", { value: "UpdateBuildTrigger" });
    
                        /**
                         * Calls UpdateBuildTrigger.
                         * @function updateBuildTrigger
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IUpdateBuildTriggerRequest} request UpdateBuildTriggerRequest message or plain object
                         * @returns {Promise<google.devtools.cloudbuild.v1.BuildTrigger>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|runBuildTrigger}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef RunBuildTriggerCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RunBuildTrigger.
                         * @function runBuildTrigger
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IRunBuildTriggerRequest} request RunBuildTriggerRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.RunBuildTriggerCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.runBuildTrigger = function runBuildTrigger(request, callback) {
                            return this.rpcCall(runBuildTrigger, $root.google.devtools.cloudbuild.v1.RunBuildTriggerRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RunBuildTrigger" });
    
                        /**
                         * Calls RunBuildTrigger.
                         * @function runBuildTrigger
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IRunBuildTriggerRequest} request RunBuildTriggerRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|receiveTriggerWebhook}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef ReceiveTriggerWebhookCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse} [response] ReceiveTriggerWebhookResponse
                         */
    
                        /**
                         * Calls ReceiveTriggerWebhook.
                         * @function receiveTriggerWebhook
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IReceiveTriggerWebhookRequest} request ReceiveTriggerWebhookRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.ReceiveTriggerWebhookCallback} callback Node-style callback called with the error, if any, and ReceiveTriggerWebhookResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.receiveTriggerWebhook = function receiveTriggerWebhook(request, callback) {
                            return this.rpcCall(receiveTriggerWebhook, $root.google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest, $root.google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse, request, callback);
                        }, "name", { value: "ReceiveTriggerWebhook" });
    
                        /**
                         * Calls ReceiveTriggerWebhook.
                         * @function receiveTriggerWebhook
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IReceiveTriggerWebhookRequest} request ReceiveTriggerWebhookRequest message or plain object
                         * @returns {Promise<google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|createWorkerPool}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef CreateWorkerPoolCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateWorkerPool.
                         * @function createWorkerPool
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.ICreateWorkerPoolRequest} request CreateWorkerPoolRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.CreateWorkerPoolCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.createWorkerPool = function createWorkerPool(request, callback) {
                            return this.rpcCall(createWorkerPool, $root.google.devtools.cloudbuild.v1.CreateWorkerPoolRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateWorkerPool" });
    
                        /**
                         * Calls CreateWorkerPool.
                         * @function createWorkerPool
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.ICreateWorkerPoolRequest} request CreateWorkerPoolRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|getWorkerPool}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef GetWorkerPoolCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.cloudbuild.v1.WorkerPool} [response] WorkerPool
                         */
    
                        /**
                         * Calls GetWorkerPool.
                         * @function getWorkerPool
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IGetWorkerPoolRequest} request GetWorkerPoolRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.GetWorkerPoolCallback} callback Node-style callback called with the error, if any, and WorkerPool
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.getWorkerPool = function getWorkerPool(request, callback) {
                            return this.rpcCall(getWorkerPool, $root.google.devtools.cloudbuild.v1.GetWorkerPoolRequest, $root.google.devtools.cloudbuild.v1.WorkerPool, request, callback);
                        }, "name", { value: "GetWorkerPool" });
    
                        /**
                         * Calls GetWorkerPool.
                         * @function getWorkerPool
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IGetWorkerPoolRequest} request GetWorkerPoolRequest message or plain object
                         * @returns {Promise<google.devtools.cloudbuild.v1.WorkerPool>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|deleteWorkerPool}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef DeleteWorkerPoolCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteWorkerPool.
                         * @function deleteWorkerPool
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IDeleteWorkerPoolRequest} request DeleteWorkerPoolRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.DeleteWorkerPoolCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.deleteWorkerPool = function deleteWorkerPool(request, callback) {
                            return this.rpcCall(deleteWorkerPool, $root.google.devtools.cloudbuild.v1.DeleteWorkerPoolRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteWorkerPool" });
    
                        /**
                         * Calls DeleteWorkerPool.
                         * @function deleteWorkerPool
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IDeleteWorkerPoolRequest} request DeleteWorkerPoolRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|updateWorkerPool}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef UpdateWorkerPoolCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateWorkerPool.
                         * @function updateWorkerPool
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IUpdateWorkerPoolRequest} request UpdateWorkerPoolRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.UpdateWorkerPoolCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.updateWorkerPool = function updateWorkerPool(request, callback) {
                            return this.rpcCall(updateWorkerPool, $root.google.devtools.cloudbuild.v1.UpdateWorkerPoolRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateWorkerPool" });
    
                        /**
                         * Calls UpdateWorkerPool.
                         * @function updateWorkerPool
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IUpdateWorkerPoolRequest} request UpdateWorkerPoolRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.cloudbuild.v1.CloudBuild|listWorkerPools}.
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @typedef ListWorkerPoolsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.cloudbuild.v1.ListWorkerPoolsResponse} [response] ListWorkerPoolsResponse
                         */
    
                        /**
                         * Calls ListWorkerPools.
                         * @function listWorkerPools
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IListWorkerPoolsRequest} request ListWorkerPoolsRequest message or plain object
                         * @param {google.devtools.cloudbuild.v1.CloudBuild.ListWorkerPoolsCallback} callback Node-style callback called with the error, if any, and ListWorkerPoolsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudBuild.prototype.listWorkerPools = function listWorkerPools(request, callback) {
                            return this.rpcCall(listWorkerPools, $root.google.devtools.cloudbuild.v1.ListWorkerPoolsRequest, $root.google.devtools.cloudbuild.v1.ListWorkerPoolsResponse, request, callback);
                        }, "name", { value: "ListWorkerPools" });
    
                        /**
                         * Calls ListWorkerPools.
                         * @function listWorkerPools
                         * @memberof google.devtools.cloudbuild.v1.CloudBuild
                         * @instance
                         * @param {google.devtools.cloudbuild.v1.IListWorkerPoolsRequest} request ListWorkerPoolsRequest message or plain object
                         * @returns {Promise<google.devtools.cloudbuild.v1.ListWorkerPoolsResponse>} Promise
                         * @variation 2
                         */
    
                        return CloudBuild;
                    })();
    
                    v1.RetryBuildRequest = (function() {
    
                        /**
                         * Properties of a RetryBuildRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IRetryBuildRequest
                         * @property {string|null} [name] RetryBuildRequest name
                         * @property {string|null} [projectId] RetryBuildRequest projectId
                         * @property {string|null} [id] RetryBuildRequest id
                         */
    
                        /**
                         * Constructs a new RetryBuildRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a RetryBuildRequest.
                         * @implements IRetryBuildRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IRetryBuildRequest=} [properties] Properties to set
                         */
                        function RetryBuildRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetryBuildRequest name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @instance
                         */
                        RetryBuildRequest.prototype.name = "";
    
                        /**
                         * RetryBuildRequest projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @instance
                         */
                        RetryBuildRequest.prototype.projectId = "";
    
                        /**
                         * RetryBuildRequest id.
                         * @member {string} id
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @instance
                         */
                        RetryBuildRequest.prototype.id = "";
    
                        /**
                         * Creates a new RetryBuildRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IRetryBuildRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.RetryBuildRequest} RetryBuildRequest instance
                         */
                        RetryBuildRequest.create = function create(properties) {
                            return new RetryBuildRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RetryBuildRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.RetryBuildRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IRetryBuildRequest} message RetryBuildRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryBuildRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.id);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetryBuildRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.RetryBuildRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IRetryBuildRequest} message RetryBuildRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryBuildRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetryBuildRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.RetryBuildRequest} RetryBuildRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryBuildRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.RetryBuildRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 3: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.id = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetryBuildRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.RetryBuildRequest} RetryBuildRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryBuildRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetryBuildRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetryBuildRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetryBuildRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.RetryBuildRequest} RetryBuildRequest
                         */
                        RetryBuildRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.RetryBuildRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.RetryBuildRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.id != null)
                                message.id = String(object.id);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetryBuildRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.RetryBuildRequest} message RetryBuildRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetryBuildRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.id = "";
                                object.name = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this RetryBuildRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetryBuildRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetryBuildRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.RetryBuildRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetryBuildRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.RetryBuildRequest";
                        };
    
                        return RetryBuildRequest;
                    })();
    
                    v1.RunBuildTriggerRequest = (function() {
    
                        /**
                         * Properties of a RunBuildTriggerRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IRunBuildTriggerRequest
                         * @property {string|null} [name] RunBuildTriggerRequest name
                         * @property {string|null} [projectId] RunBuildTriggerRequest projectId
                         * @property {string|null} [triggerId] RunBuildTriggerRequest triggerId
                         * @property {google.devtools.cloudbuild.v1.IRepoSource|null} [source] RunBuildTriggerRequest source
                         */
    
                        /**
                         * Constructs a new RunBuildTriggerRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a RunBuildTriggerRequest.
                         * @implements IRunBuildTriggerRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IRunBuildTriggerRequest=} [properties] Properties to set
                         */
                        function RunBuildTriggerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunBuildTriggerRequest name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @instance
                         */
                        RunBuildTriggerRequest.prototype.name = "";
    
                        /**
                         * RunBuildTriggerRequest projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @instance
                         */
                        RunBuildTriggerRequest.prototype.projectId = "";
    
                        /**
                         * RunBuildTriggerRequest triggerId.
                         * @member {string} triggerId
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @instance
                         */
                        RunBuildTriggerRequest.prototype.triggerId = "";
    
                        /**
                         * RunBuildTriggerRequest source.
                         * @member {google.devtools.cloudbuild.v1.IRepoSource|null|undefined} source
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @instance
                         */
                        RunBuildTriggerRequest.prototype.source = null;
    
                        /**
                         * Creates a new RunBuildTriggerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IRunBuildTriggerRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.RunBuildTriggerRequest} RunBuildTriggerRequest instance
                         */
                        RunBuildTriggerRequest.create = function create(properties) {
                            return new RunBuildTriggerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunBuildTriggerRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.RunBuildTriggerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IRunBuildTriggerRequest} message RunBuildTriggerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunBuildTriggerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.triggerId != null && Object.hasOwnProperty.call(message, "triggerId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.triggerId);
                            if (message.source != null && Object.hasOwnProperty.call(message, "source"))
                                $root.google.devtools.cloudbuild.v1.RepoSource.encode(message.source, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunBuildTriggerRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.RunBuildTriggerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IRunBuildTriggerRequest} message RunBuildTriggerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunBuildTriggerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunBuildTriggerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.RunBuildTriggerRequest} RunBuildTriggerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunBuildTriggerRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.RunBuildTriggerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 4: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.triggerId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.source = $root.google.devtools.cloudbuild.v1.RepoSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunBuildTriggerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.RunBuildTriggerRequest} RunBuildTriggerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunBuildTriggerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunBuildTriggerRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunBuildTriggerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.triggerId != null && message.hasOwnProperty("triggerId"))
                                if (!$util.isString(message.triggerId))
                                    return "triggerId: string expected";
                            if (message.source != null && message.hasOwnProperty("source")) {
                                var error = $root.google.devtools.cloudbuild.v1.RepoSource.verify(message.source);
                                if (error)
                                    return "source." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RunBuildTriggerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.RunBuildTriggerRequest} RunBuildTriggerRequest
                         */
                        RunBuildTriggerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.RunBuildTriggerRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.RunBuildTriggerRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.triggerId != null)
                                message.triggerId = String(object.triggerId);
                            if (object.source != null) {
                                if (typeof object.source !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.RunBuildTriggerRequest.source: object expected");
                                message.source = $root.google.devtools.cloudbuild.v1.RepoSource.fromObject(object.source);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunBuildTriggerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.RunBuildTriggerRequest} message RunBuildTriggerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunBuildTriggerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.triggerId = "";
                                object.source = null;
                                object.name = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.triggerId != null && message.hasOwnProperty("triggerId"))
                                object.triggerId = message.triggerId;
                            if (message.source != null && message.hasOwnProperty("source"))
                                object.source = $root.google.devtools.cloudbuild.v1.RepoSource.toObject(message.source, options);
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this RunBuildTriggerRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunBuildTriggerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunBuildTriggerRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.RunBuildTriggerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunBuildTriggerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.RunBuildTriggerRequest";
                        };
    
                        return RunBuildTriggerRequest;
                    })();
    
                    v1.StorageSource = (function() {
    
                        /**
                         * Properties of a StorageSource.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IStorageSource
                         * @property {string|null} [bucket] StorageSource bucket
                         * @property {string|null} [object] StorageSource object
                         * @property {number|Long|null} [generation] StorageSource generation
                         * @property {google.devtools.cloudbuild.v1.StorageSource.SourceFetcher|null} [sourceFetcher] StorageSource sourceFetcher
                         */
    
                        /**
                         * Constructs a new StorageSource.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a StorageSource.
                         * @implements IStorageSource
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IStorageSource=} [properties] Properties to set
                         */
                        function StorageSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StorageSource bucket.
                         * @member {string} bucket
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.bucket = "";
    
                        /**
                         * StorageSource object.
                         * @member {string} object
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.object = "";
    
                        /**
                         * StorageSource generation.
                         * @member {number|Long} generation
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.generation = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * StorageSource sourceFetcher.
                         * @member {google.devtools.cloudbuild.v1.StorageSource.SourceFetcher} sourceFetcher
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.sourceFetcher = 0;
    
                        /**
                         * Creates a new StorageSource instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IStorageSource=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.StorageSource} StorageSource instance
                         */
                        StorageSource.create = function create(properties) {
                            return new StorageSource(properties);
                        };
    
                        /**
                         * Encodes the specified StorageSource message. Does not implicitly {@link google.devtools.cloudbuild.v1.StorageSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IStorageSource} message StorageSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StorageSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.bucket != null && Object.hasOwnProperty.call(message, "bucket"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.bucket);
                            if (message.object != null && Object.hasOwnProperty.call(message, "object"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.object);
                            if (message.generation != null && Object.hasOwnProperty.call(message, "generation"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.generation);
                            if (message.sourceFetcher != null && Object.hasOwnProperty.call(message, "sourceFetcher"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.sourceFetcher);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StorageSource message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.StorageSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IStorageSource} message StorageSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StorageSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StorageSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.StorageSource} StorageSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StorageSource.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.StorageSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.bucket = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.object = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.generation = reader.int64();
                                        break;
                                    }
                                case 5: {
                                        message.sourceFetcher = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StorageSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.StorageSource} StorageSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StorageSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StorageSource message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StorageSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.bucket != null && message.hasOwnProperty("bucket"))
                                if (!$util.isString(message.bucket))
                                    return "bucket: string expected";
                            if (message.object != null && message.hasOwnProperty("object"))
                                if (!$util.isString(message.object))
                                    return "object: string expected";
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (!$util.isInteger(message.generation) && !(message.generation && $util.isInteger(message.generation.low) && $util.isInteger(message.generation.high)))
                                    return "generation: integer|Long expected";
                            if (message.sourceFetcher != null && message.hasOwnProperty("sourceFetcher"))
                                switch (message.sourceFetcher) {
                                default:
                                    return "sourceFetcher: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a StorageSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.StorageSource} StorageSource
                         */
                        StorageSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.StorageSource)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.StorageSource();
                            if (object.bucket != null)
                                message.bucket = String(object.bucket);
                            if (object.object != null)
                                message.object = String(object.object);
                            if (object.generation != null)
                                if ($util.Long)
                                    (message.generation = $util.Long.fromValue(object.generation)).unsigned = false;
                                else if (typeof object.generation === "string")
                                    message.generation = parseInt(object.generation, 10);
                                else if (typeof object.generation === "number")
                                    message.generation = object.generation;
                                else if (typeof object.generation === "object")
                                    message.generation = new $util.LongBits(object.generation.low >>> 0, object.generation.high >>> 0).toNumber();
                            switch (object.sourceFetcher) {
                            default:
                                if (typeof object.sourceFetcher === "number") {
                                    message.sourceFetcher = object.sourceFetcher;
                                    break;
                                }
                                break;
                            case "SOURCE_FETCHER_UNSPECIFIED":
                            case 0:
                                message.sourceFetcher = 0;
                                break;
                            case "GSUTIL":
                            case 1:
                                message.sourceFetcher = 1;
                                break;
                            case "GCS_FETCHER":
                            case 2:
                                message.sourceFetcher = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StorageSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.StorageSource} message StorageSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StorageSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.bucket = "";
                                object.object = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.generation = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.generation = options.longs === String ? "0" : 0;
                                object.sourceFetcher = options.enums === String ? "SOURCE_FETCHER_UNSPECIFIED" : 0;
                            }
                            if (message.bucket != null && message.hasOwnProperty("bucket"))
                                object.bucket = message.bucket;
                            if (message.object != null && message.hasOwnProperty("object"))
                                object.object = message.object;
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (typeof message.generation === "number")
                                    object.generation = options.longs === String ? String(message.generation) : message.generation;
                                else
                                    object.generation = options.longs === String ? $util.Long.prototype.toString.call(message.generation) : options.longs === Number ? new $util.LongBits(message.generation.low >>> 0, message.generation.high >>> 0).toNumber() : message.generation;
                            if (message.sourceFetcher != null && message.hasOwnProperty("sourceFetcher"))
                                object.sourceFetcher = options.enums === String ? $root.google.devtools.cloudbuild.v1.StorageSource.SourceFetcher[message.sourceFetcher] === undefined ? message.sourceFetcher : $root.google.devtools.cloudbuild.v1.StorageSource.SourceFetcher[message.sourceFetcher] : message.sourceFetcher;
                            return object;
                        };
    
                        /**
                         * Converts this StorageSource to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StorageSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StorageSource
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.StorageSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StorageSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.StorageSource";
                        };
    
                        /**
                         * SourceFetcher enum.
                         * @name google.devtools.cloudbuild.v1.StorageSource.SourceFetcher
                         * @enum {number}
                         * @property {number} SOURCE_FETCHER_UNSPECIFIED=0 SOURCE_FETCHER_UNSPECIFIED value
                         * @property {number} GSUTIL=1 GSUTIL value
                         * @property {number} GCS_FETCHER=2 GCS_FETCHER value
                         */
                        StorageSource.SourceFetcher = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SOURCE_FETCHER_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "GSUTIL"] = 1;
                            values[valuesById[2] = "GCS_FETCHER"] = 2;
                            return values;
                        })();
    
                        return StorageSource;
                    })();
    
                    v1.GitSource = (function() {
    
                        /**
                         * Properties of a GitSource.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IGitSource
                         * @property {string|null} [url] GitSource url
                         * @property {string|null} [dir] GitSource dir
                         * @property {string|null} [revision] GitSource revision
                         */
    
                        /**
                         * Constructs a new GitSource.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a GitSource.
                         * @implements IGitSource
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IGitSource=} [properties] Properties to set
                         */
                        function GitSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GitSource url.
                         * @member {string} url
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @instance
                         */
                        GitSource.prototype.url = "";
    
                        /**
                         * GitSource dir.
                         * @member {string} dir
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @instance
                         */
                        GitSource.prototype.dir = "";
    
                        /**
                         * GitSource revision.
                         * @member {string} revision
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @instance
                         */
                        GitSource.prototype.revision = "";
    
                        /**
                         * Creates a new GitSource instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitSource=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.GitSource} GitSource instance
                         */
                        GitSource.create = function create(properties) {
                            return new GitSource(properties);
                        };
    
                        /**
                         * Encodes the specified GitSource message. Does not implicitly {@link google.devtools.cloudbuild.v1.GitSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitSource} message GitSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.url);
                            if (message.dir != null && Object.hasOwnProperty.call(message, "dir"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.dir);
                            if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.revision);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GitSource message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.GitSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitSource} message GitSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GitSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.GitSource} GitSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitSource.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.GitSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.url = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.dir = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.revision = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GitSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.GitSource} GitSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GitSource message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GitSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            if (message.dir != null && message.hasOwnProperty("dir"))
                                if (!$util.isString(message.dir))
                                    return "dir: string expected";
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                if (!$util.isString(message.revision))
                                    return "revision: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GitSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.GitSource} GitSource
                         */
                        GitSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.GitSource)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.GitSource();
                            if (object.url != null)
                                message.url = String(object.url);
                            if (object.dir != null)
                                message.dir = String(object.dir);
                            if (object.revision != null)
                                message.revision = String(object.revision);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GitSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.GitSource} message GitSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GitSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.url = "";
                                object.dir = "";
                                object.revision = "";
                            }
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            if (message.dir != null && message.hasOwnProperty("dir"))
                                object.dir = message.dir;
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                object.revision = message.revision;
                            return object;
                        };
    
                        /**
                         * Converts this GitSource to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GitSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GitSource
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.GitSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GitSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.GitSource";
                        };
    
                        return GitSource;
                    })();
    
                    v1.RepoSource = (function() {
    
                        /**
                         * Properties of a RepoSource.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IRepoSource
                         * @property {string|null} [projectId] RepoSource projectId
                         * @property {string|null} [repoName] RepoSource repoName
                         * @property {string|null} [branchName] RepoSource branchName
                         * @property {string|null} [tagName] RepoSource tagName
                         * @property {string|null} [commitSha] RepoSource commitSha
                         * @property {string|null} [dir] RepoSource dir
                         * @property {boolean|null} [invertRegex] RepoSource invertRegex
                         * @property {Object.<string,string>|null} [substitutions] RepoSource substitutions
                         */
    
                        /**
                         * Constructs a new RepoSource.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a RepoSource.
                         * @implements IRepoSource
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IRepoSource=} [properties] Properties to set
                         */
                        function RepoSource(properties) {
                            this.substitutions = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RepoSource projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.projectId = "";
    
                        /**
                         * RepoSource repoName.
                         * @member {string} repoName
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.repoName = "";
    
                        /**
                         * RepoSource branchName.
                         * @member {string|null|undefined} branchName
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.branchName = null;
    
                        /**
                         * RepoSource tagName.
                         * @member {string|null|undefined} tagName
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.tagName = null;
    
                        /**
                         * RepoSource commitSha.
                         * @member {string|null|undefined} commitSha
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.commitSha = null;
    
                        /**
                         * RepoSource dir.
                         * @member {string} dir
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.dir = "";
    
                        /**
                         * RepoSource invertRegex.
                         * @member {boolean} invertRegex
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.invertRegex = false;
    
                        /**
                         * RepoSource substitutions.
                         * @member {Object.<string,string>} substitutions
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.substitutions = $util.emptyObject;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RepoSource revision.
                         * @member {"branchName"|"tagName"|"commitSha"|undefined} revision
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @instance
                         */
                        Object.defineProperty(RepoSource.prototype, "revision", {
                            get: $util.oneOfGetter($oneOfFields = ["branchName", "tagName", "commitSha"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RepoSource instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IRepoSource=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.RepoSource} RepoSource instance
                         */
                        RepoSource.create = function create(properties) {
                            return new RepoSource(properties);
                        };
    
                        /**
                         * Encodes the specified RepoSource message. Does not implicitly {@link google.devtools.cloudbuild.v1.RepoSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IRepoSource} message RepoSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepoSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.repoName != null && Object.hasOwnProperty.call(message, "repoName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.repoName);
                            if (message.branchName != null && Object.hasOwnProperty.call(message, "branchName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.branchName);
                            if (message.tagName != null && Object.hasOwnProperty.call(message, "tagName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.tagName);
                            if (message.commitSha != null && Object.hasOwnProperty.call(message, "commitSha"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.commitSha);
                            if (message.dir != null && Object.hasOwnProperty.call(message, "dir"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.dir);
                            if (message.invertRegex != null && Object.hasOwnProperty.call(message, "invertRegex"))
                                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.invertRegex);
                            if (message.substitutions != null && Object.hasOwnProperty.call(message, "substitutions"))
                                for (var keys = Object.keys(message.substitutions), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 9, wireType 2 =*/74).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.substitutions[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RepoSource message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.RepoSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IRepoSource} message RepoSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepoSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RepoSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.RepoSource} RepoSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepoSource.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.RepoSource(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.repoName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.branchName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.tagName = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.commitSha = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.dir = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.invertRegex = reader.bool();
                                        break;
                                    }
                                case 9: {
                                        if (message.substitutions === $util.emptyObject)
                                            message.substitutions = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.substitutions[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RepoSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.RepoSource} RepoSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepoSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RepoSource message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RepoSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.repoName != null && message.hasOwnProperty("repoName"))
                                if (!$util.isString(message.repoName))
                                    return "repoName: string expected";
                            if (message.branchName != null && message.hasOwnProperty("branchName")) {
                                properties.revision = 1;
                                if (!$util.isString(message.branchName))
                                    return "branchName: string expected";
                            }
                            if (message.tagName != null && message.hasOwnProperty("tagName")) {
                                if (properties.revision === 1)
                                    return "revision: multiple values";
                                properties.revision = 1;
                                if (!$util.isString(message.tagName))
                                    return "tagName: string expected";
                            }
                            if (message.commitSha != null && message.hasOwnProperty("commitSha")) {
                                if (properties.revision === 1)
                                    return "revision: multiple values";
                                properties.revision = 1;
                                if (!$util.isString(message.commitSha))
                                    return "commitSha: string expected";
                            }
                            if (message.dir != null && message.hasOwnProperty("dir"))
                                if (!$util.isString(message.dir))
                                    return "dir: string expected";
                            if (message.invertRegex != null && message.hasOwnProperty("invertRegex"))
                                if (typeof message.invertRegex !== "boolean")
                                    return "invertRegex: boolean expected";
                            if (message.substitutions != null && message.hasOwnProperty("substitutions")) {
                                if (!$util.isObject(message.substitutions))
                                    return "substitutions: object expected";
                                var key = Object.keys(message.substitutions);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.substitutions[key[i]]))
                                        return "substitutions: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RepoSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.RepoSource} RepoSource
                         */
                        RepoSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.RepoSource)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.RepoSource();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.repoName != null)
                                message.repoName = String(object.repoName);
                            if (object.branchName != null)
                                message.branchName = String(object.branchName);
                            if (object.tagName != null)
                                message.tagName = String(object.tagName);
                            if (object.commitSha != null)
                                message.commitSha = String(object.commitSha);
                            if (object.dir != null)
                                message.dir = String(object.dir);
                            if (object.invertRegex != null)
                                message.invertRegex = Boolean(object.invertRegex);
                            if (object.substitutions) {
                                if (typeof object.substitutions !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.RepoSource.substitutions: object expected");
                                message.substitutions = {};
                                for (var keys = Object.keys(object.substitutions), i = 0; i < keys.length; ++i)
                                    message.substitutions[keys[i]] = String(object.substitutions[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RepoSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.RepoSource} message RepoSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RepoSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.substitutions = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.repoName = "";
                                object.dir = "";
                                object.invertRegex = false;
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.repoName != null && message.hasOwnProperty("repoName"))
                                object.repoName = message.repoName;
                            if (message.branchName != null && message.hasOwnProperty("branchName")) {
                                object.branchName = message.branchName;
                                if (options.oneofs)
                                    object.revision = "branchName";
                            }
                            if (message.tagName != null && message.hasOwnProperty("tagName")) {
                                object.tagName = message.tagName;
                                if (options.oneofs)
                                    object.revision = "tagName";
                            }
                            if (message.commitSha != null && message.hasOwnProperty("commitSha")) {
                                object.commitSha = message.commitSha;
                                if (options.oneofs)
                                    object.revision = "commitSha";
                            }
                            if (message.dir != null && message.hasOwnProperty("dir"))
                                object.dir = message.dir;
                            if (message.invertRegex != null && message.hasOwnProperty("invertRegex"))
                                object.invertRegex = message.invertRegex;
                            var keys2;
                            if (message.substitutions && (keys2 = Object.keys(message.substitutions)).length) {
                                object.substitutions = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.substitutions[keys2[j]] = message.substitutions[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RepoSource to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RepoSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RepoSource
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.RepoSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RepoSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.RepoSource";
                        };
    
                        return RepoSource;
                    })();
    
                    v1.StorageSourceManifest = (function() {
    
                        /**
                         * Properties of a StorageSourceManifest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IStorageSourceManifest
                         * @property {string|null} [bucket] StorageSourceManifest bucket
                         * @property {string|null} [object] StorageSourceManifest object
                         * @property {number|Long|null} [generation] StorageSourceManifest generation
                         */
    
                        /**
                         * Constructs a new StorageSourceManifest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a StorageSourceManifest.
                         * @implements IStorageSourceManifest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IStorageSourceManifest=} [properties] Properties to set
                         */
                        function StorageSourceManifest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StorageSourceManifest bucket.
                         * @member {string} bucket
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @instance
                         */
                        StorageSourceManifest.prototype.bucket = "";
    
                        /**
                         * StorageSourceManifest object.
                         * @member {string} object
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @instance
                         */
                        StorageSourceManifest.prototype.object = "";
    
                        /**
                         * StorageSourceManifest generation.
                         * @member {number|Long} generation
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @instance
                         */
                        StorageSourceManifest.prototype.generation = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new StorageSourceManifest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IStorageSourceManifest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.StorageSourceManifest} StorageSourceManifest instance
                         */
                        StorageSourceManifest.create = function create(properties) {
                            return new StorageSourceManifest(properties);
                        };
    
                        /**
                         * Encodes the specified StorageSourceManifest message. Does not implicitly {@link google.devtools.cloudbuild.v1.StorageSourceManifest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IStorageSourceManifest} message StorageSourceManifest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StorageSourceManifest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.bucket != null && Object.hasOwnProperty.call(message, "bucket"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.bucket);
                            if (message.object != null && Object.hasOwnProperty.call(message, "object"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.object);
                            if (message.generation != null && Object.hasOwnProperty.call(message, "generation"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.generation);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StorageSourceManifest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.StorageSourceManifest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IStorageSourceManifest} message StorageSourceManifest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StorageSourceManifest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StorageSourceManifest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.StorageSourceManifest} StorageSourceManifest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StorageSourceManifest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.StorageSourceManifest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.bucket = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.object = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.generation = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StorageSourceManifest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.StorageSourceManifest} StorageSourceManifest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StorageSourceManifest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StorageSourceManifest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StorageSourceManifest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.bucket != null && message.hasOwnProperty("bucket"))
                                if (!$util.isString(message.bucket))
                                    return "bucket: string expected";
                            if (message.object != null && message.hasOwnProperty("object"))
                                if (!$util.isString(message.object))
                                    return "object: string expected";
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (!$util.isInteger(message.generation) && !(message.generation && $util.isInteger(message.generation.low) && $util.isInteger(message.generation.high)))
                                    return "generation: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates a StorageSourceManifest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.StorageSourceManifest} StorageSourceManifest
                         */
                        StorageSourceManifest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.StorageSourceManifest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.StorageSourceManifest();
                            if (object.bucket != null)
                                message.bucket = String(object.bucket);
                            if (object.object != null)
                                message.object = String(object.object);
                            if (object.generation != null)
                                if ($util.Long)
                                    (message.generation = $util.Long.fromValue(object.generation)).unsigned = false;
                                else if (typeof object.generation === "string")
                                    message.generation = parseInt(object.generation, 10);
                                else if (typeof object.generation === "number")
                                    message.generation = object.generation;
                                else if (typeof object.generation === "object")
                                    message.generation = new $util.LongBits(object.generation.low >>> 0, object.generation.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StorageSourceManifest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.StorageSourceManifest} message StorageSourceManifest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StorageSourceManifest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.bucket = "";
                                object.object = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.generation = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.generation = options.longs === String ? "0" : 0;
                            }
                            if (message.bucket != null && message.hasOwnProperty("bucket"))
                                object.bucket = message.bucket;
                            if (message.object != null && message.hasOwnProperty("object"))
                                object.object = message.object;
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (typeof message.generation === "number")
                                    object.generation = options.longs === String ? String(message.generation) : message.generation;
                                else
                                    object.generation = options.longs === String ? $util.Long.prototype.toString.call(message.generation) : options.longs === Number ? new $util.LongBits(message.generation.low >>> 0, message.generation.high >>> 0).toNumber() : message.generation;
                            return object;
                        };
    
                        /**
                         * Converts this StorageSourceManifest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StorageSourceManifest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StorageSourceManifest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.StorageSourceManifest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StorageSourceManifest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.StorageSourceManifest";
                        };
    
                        return StorageSourceManifest;
                    })();
    
                    v1.Source = (function() {
    
                        /**
                         * Properties of a Source.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface ISource
                         * @property {google.devtools.cloudbuild.v1.IStorageSource|null} [storageSource] Source storageSource
                         * @property {google.devtools.cloudbuild.v1.IRepoSource|null} [repoSource] Source repoSource
                         * @property {google.devtools.cloudbuild.v1.IGitSource|null} [gitSource] Source gitSource
                         * @property {google.devtools.cloudbuild.v1.IStorageSourceManifest|null} [storageSourceManifest] Source storageSourceManifest
                         */
    
                        /**
                         * Constructs a new Source.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a Source.
                         * @implements ISource
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.ISource=} [properties] Properties to set
                         */
                        function Source(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Source storageSource.
                         * @member {google.devtools.cloudbuild.v1.IStorageSource|null|undefined} storageSource
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @instance
                         */
                        Source.prototype.storageSource = null;
    
                        /**
                         * Source repoSource.
                         * @member {google.devtools.cloudbuild.v1.IRepoSource|null|undefined} repoSource
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @instance
                         */
                        Source.prototype.repoSource = null;
    
                        /**
                         * Source gitSource.
                         * @member {google.devtools.cloudbuild.v1.IGitSource|null|undefined} gitSource
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @instance
                         */
                        Source.prototype.gitSource = null;
    
                        /**
                         * Source storageSourceManifest.
                         * @member {google.devtools.cloudbuild.v1.IStorageSourceManifest|null|undefined} storageSourceManifest
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @instance
                         */
                        Source.prototype.storageSourceManifest = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Source source.
                         * @member {"storageSource"|"repoSource"|"gitSource"|"storageSourceManifest"|undefined} source
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @instance
                         */
                        Object.defineProperty(Source.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["storageSource", "repoSource", "gitSource", "storageSourceManifest"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Source instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISource=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.Source} Source instance
                         */
                        Source.create = function create(properties) {
                            return new Source(properties);
                        };
    
                        /**
                         * Encodes the specified Source message. Does not implicitly {@link google.devtools.cloudbuild.v1.Source.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISource} message Source message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Source.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.storageSource != null && Object.hasOwnProperty.call(message, "storageSource"))
                                $root.google.devtools.cloudbuild.v1.StorageSource.encode(message.storageSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.repoSource != null && Object.hasOwnProperty.call(message, "repoSource"))
                                $root.google.devtools.cloudbuild.v1.RepoSource.encode(message.repoSource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.gitSource != null && Object.hasOwnProperty.call(message, "gitSource"))
                                $root.google.devtools.cloudbuild.v1.GitSource.encode(message.gitSource, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.storageSourceManifest != null && Object.hasOwnProperty.call(message, "storageSourceManifest"))
                                $root.google.devtools.cloudbuild.v1.StorageSourceManifest.encode(message.storageSourceManifest, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Source message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Source.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISource} message Source message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Source.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Source message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.Source} Source
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Source.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Source();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.storageSource = $root.google.devtools.cloudbuild.v1.StorageSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.repoSource = $root.google.devtools.cloudbuild.v1.RepoSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.gitSource = $root.google.devtools.cloudbuild.v1.GitSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.storageSourceManifest = $root.google.devtools.cloudbuild.v1.StorageSourceManifest.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Source message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.Source} Source
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Source.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Source message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Source.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.storageSource != null && message.hasOwnProperty("storageSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.devtools.cloudbuild.v1.StorageSource.verify(message.storageSource);
                                    if (error)
                                        return "storageSource." + error;
                                }
                            }
                            if (message.repoSource != null && message.hasOwnProperty("repoSource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.devtools.cloudbuild.v1.RepoSource.verify(message.repoSource);
                                    if (error)
                                        return "repoSource." + error;
                                }
                            }
                            if (message.gitSource != null && message.hasOwnProperty("gitSource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.devtools.cloudbuild.v1.GitSource.verify(message.gitSource);
                                    if (error)
                                        return "gitSource." + error;
                                }
                            }
                            if (message.storageSourceManifest != null && message.hasOwnProperty("storageSourceManifest")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.devtools.cloudbuild.v1.StorageSourceManifest.verify(message.storageSourceManifest);
                                    if (error)
                                        return "storageSourceManifest." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Source message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.Source} Source
                         */
                        Source.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.Source)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.Source();
                            if (object.storageSource != null) {
                                if (typeof object.storageSource !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Source.storageSource: object expected");
                                message.storageSource = $root.google.devtools.cloudbuild.v1.StorageSource.fromObject(object.storageSource);
                            }
                            if (object.repoSource != null) {
                                if (typeof object.repoSource !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Source.repoSource: object expected");
                                message.repoSource = $root.google.devtools.cloudbuild.v1.RepoSource.fromObject(object.repoSource);
                            }
                            if (object.gitSource != null) {
                                if (typeof object.gitSource !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Source.gitSource: object expected");
                                message.gitSource = $root.google.devtools.cloudbuild.v1.GitSource.fromObject(object.gitSource);
                            }
                            if (object.storageSourceManifest != null) {
                                if (typeof object.storageSourceManifest !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Source.storageSourceManifest: object expected");
                                message.storageSourceManifest = $root.google.devtools.cloudbuild.v1.StorageSourceManifest.fromObject(object.storageSourceManifest);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Source message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @static
                         * @param {google.devtools.cloudbuild.v1.Source} message Source
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Source.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.storageSource != null && message.hasOwnProperty("storageSource")) {
                                object.storageSource = $root.google.devtools.cloudbuild.v1.StorageSource.toObject(message.storageSource, options);
                                if (options.oneofs)
                                    object.source = "storageSource";
                            }
                            if (message.repoSource != null && message.hasOwnProperty("repoSource")) {
                                object.repoSource = $root.google.devtools.cloudbuild.v1.RepoSource.toObject(message.repoSource, options);
                                if (options.oneofs)
                                    object.source = "repoSource";
                            }
                            if (message.gitSource != null && message.hasOwnProperty("gitSource")) {
                                object.gitSource = $root.google.devtools.cloudbuild.v1.GitSource.toObject(message.gitSource, options);
                                if (options.oneofs)
                                    object.source = "gitSource";
                            }
                            if (message.storageSourceManifest != null && message.hasOwnProperty("storageSourceManifest")) {
                                object.storageSourceManifest = $root.google.devtools.cloudbuild.v1.StorageSourceManifest.toObject(message.storageSourceManifest, options);
                                if (options.oneofs)
                                    object.source = "storageSourceManifest";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Source to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Source.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Source
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.Source
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Source.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Source";
                        };
    
                        return Source;
                    })();
    
                    v1.BuiltImage = (function() {
    
                        /**
                         * Properties of a BuiltImage.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IBuiltImage
                         * @property {string|null} [name] BuiltImage name
                         * @property {string|null} [digest] BuiltImage digest
                         * @property {google.devtools.cloudbuild.v1.ITimeSpan|null} [pushTiming] BuiltImage pushTiming
                         */
    
                        /**
                         * Constructs a new BuiltImage.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a BuiltImage.
                         * @implements IBuiltImage
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IBuiltImage=} [properties] Properties to set
                         */
                        function BuiltImage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BuiltImage name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @instance
                         */
                        BuiltImage.prototype.name = "";
    
                        /**
                         * BuiltImage digest.
                         * @member {string} digest
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @instance
                         */
                        BuiltImage.prototype.digest = "";
    
                        /**
                         * BuiltImage pushTiming.
                         * @member {google.devtools.cloudbuild.v1.ITimeSpan|null|undefined} pushTiming
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @instance
                         */
                        BuiltImage.prototype.pushTiming = null;
    
                        /**
                         * Creates a new BuiltImage instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuiltImage=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.BuiltImage} BuiltImage instance
                         */
                        BuiltImage.create = function create(properties) {
                            return new BuiltImage(properties);
                        };
    
                        /**
                         * Encodes the specified BuiltImage message. Does not implicitly {@link google.devtools.cloudbuild.v1.BuiltImage.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuiltImage} message BuiltImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuiltImage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.digest != null && Object.hasOwnProperty.call(message, "digest"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.digest);
                            if (message.pushTiming != null && Object.hasOwnProperty.call(message, "pushTiming"))
                                $root.google.devtools.cloudbuild.v1.TimeSpan.encode(message.pushTiming, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BuiltImage message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.BuiltImage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuiltImage} message BuiltImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuiltImage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BuiltImage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.BuiltImage} BuiltImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuiltImage.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.BuiltImage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.digest = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BuiltImage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.BuiltImage} BuiltImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuiltImage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BuiltImage message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BuiltImage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.digest != null && message.hasOwnProperty("digest"))
                                if (!$util.isString(message.digest))
                                    return "digest: string expected";
                            if (message.pushTiming != null && message.hasOwnProperty("pushTiming")) {
                                var error = $root.google.devtools.cloudbuild.v1.TimeSpan.verify(message.pushTiming);
                                if (error)
                                    return "pushTiming." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BuiltImage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.BuiltImage} BuiltImage
                         */
                        BuiltImage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.BuiltImage)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.BuiltImage();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.digest != null)
                                message.digest = String(object.digest);
                            if (object.pushTiming != null) {
                                if (typeof object.pushTiming !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuiltImage.pushTiming: object expected");
                                message.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.fromObject(object.pushTiming);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BuiltImage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @static
                         * @param {google.devtools.cloudbuild.v1.BuiltImage} message BuiltImage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BuiltImage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.digest = "";
                                object.pushTiming = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.digest != null && message.hasOwnProperty("digest"))
                                object.digest = message.digest;
                            if (message.pushTiming != null && message.hasOwnProperty("pushTiming"))
                                object.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.toObject(message.pushTiming, options);
                            return object;
                        };
    
                        /**
                         * Converts this BuiltImage to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BuiltImage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BuiltImage
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.BuiltImage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BuiltImage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.BuiltImage";
                        };
    
                        return BuiltImage;
                    })();
    
                    v1.UploadedPythonPackage = (function() {
    
                        /**
                         * Properties of an UploadedPythonPackage.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IUploadedPythonPackage
                         * @property {string|null} [uri] UploadedPythonPackage uri
                         * @property {google.devtools.cloudbuild.v1.IFileHashes|null} [fileHashes] UploadedPythonPackage fileHashes
                         * @property {google.devtools.cloudbuild.v1.ITimeSpan|null} [pushTiming] UploadedPythonPackage pushTiming
                         */
    
                        /**
                         * Constructs a new UploadedPythonPackage.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents an UploadedPythonPackage.
                         * @implements IUploadedPythonPackage
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IUploadedPythonPackage=} [properties] Properties to set
                         */
                        function UploadedPythonPackage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UploadedPythonPackage uri.
                         * @member {string} uri
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @instance
                         */
                        UploadedPythonPackage.prototype.uri = "";
    
                        /**
                         * UploadedPythonPackage fileHashes.
                         * @member {google.devtools.cloudbuild.v1.IFileHashes|null|undefined} fileHashes
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @instance
                         */
                        UploadedPythonPackage.prototype.fileHashes = null;
    
                        /**
                         * UploadedPythonPackage pushTiming.
                         * @member {google.devtools.cloudbuild.v1.ITimeSpan|null|undefined} pushTiming
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @instance
                         */
                        UploadedPythonPackage.prototype.pushTiming = null;
    
                        /**
                         * Creates a new UploadedPythonPackage instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUploadedPythonPackage=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.UploadedPythonPackage} UploadedPythonPackage instance
                         */
                        UploadedPythonPackage.create = function create(properties) {
                            return new UploadedPythonPackage(properties);
                        };
    
                        /**
                         * Encodes the specified UploadedPythonPackage message. Does not implicitly {@link google.devtools.cloudbuild.v1.UploadedPythonPackage.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUploadedPythonPackage} message UploadedPythonPackage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UploadedPythonPackage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            if (message.fileHashes != null && Object.hasOwnProperty.call(message, "fileHashes"))
                                $root.google.devtools.cloudbuild.v1.FileHashes.encode(message.fileHashes, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.pushTiming != null && Object.hasOwnProperty.call(message, "pushTiming"))
                                $root.google.devtools.cloudbuild.v1.TimeSpan.encode(message.pushTiming, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UploadedPythonPackage message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.UploadedPythonPackage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUploadedPythonPackage} message UploadedPythonPackage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UploadedPythonPackage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UploadedPythonPackage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.UploadedPythonPackage} UploadedPythonPackage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UploadedPythonPackage.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.UploadedPythonPackage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.fileHashes = $root.google.devtools.cloudbuild.v1.FileHashes.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UploadedPythonPackage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.UploadedPythonPackage} UploadedPythonPackage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UploadedPythonPackage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UploadedPythonPackage message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UploadedPythonPackage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.fileHashes != null && message.hasOwnProperty("fileHashes")) {
                                var error = $root.google.devtools.cloudbuild.v1.FileHashes.verify(message.fileHashes);
                                if (error)
                                    return "fileHashes." + error;
                            }
                            if (message.pushTiming != null && message.hasOwnProperty("pushTiming")) {
                                var error = $root.google.devtools.cloudbuild.v1.TimeSpan.verify(message.pushTiming);
                                if (error)
                                    return "pushTiming." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UploadedPythonPackage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.UploadedPythonPackage} UploadedPythonPackage
                         */
                        UploadedPythonPackage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.UploadedPythonPackage)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.UploadedPythonPackage();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.fileHashes != null) {
                                if (typeof object.fileHashes !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.UploadedPythonPackage.fileHashes: object expected");
                                message.fileHashes = $root.google.devtools.cloudbuild.v1.FileHashes.fromObject(object.fileHashes);
                            }
                            if (object.pushTiming != null) {
                                if (typeof object.pushTiming !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.UploadedPythonPackage.pushTiming: object expected");
                                message.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.fromObject(object.pushTiming);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UploadedPythonPackage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @static
                         * @param {google.devtools.cloudbuild.v1.UploadedPythonPackage} message UploadedPythonPackage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UploadedPythonPackage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.uri = "";
                                object.fileHashes = null;
                                object.pushTiming = null;
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.fileHashes != null && message.hasOwnProperty("fileHashes"))
                                object.fileHashes = $root.google.devtools.cloudbuild.v1.FileHashes.toObject(message.fileHashes, options);
                            if (message.pushTiming != null && message.hasOwnProperty("pushTiming"))
                                object.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.toObject(message.pushTiming, options);
                            return object;
                        };
    
                        /**
                         * Converts this UploadedPythonPackage to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UploadedPythonPackage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UploadedPythonPackage
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.UploadedPythonPackage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UploadedPythonPackage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.UploadedPythonPackage";
                        };
    
                        return UploadedPythonPackage;
                    })();
    
                    v1.UploadedMavenArtifact = (function() {
    
                        /**
                         * Properties of an UploadedMavenArtifact.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IUploadedMavenArtifact
                         * @property {string|null} [uri] UploadedMavenArtifact uri
                         * @property {google.devtools.cloudbuild.v1.IFileHashes|null} [fileHashes] UploadedMavenArtifact fileHashes
                         * @property {google.devtools.cloudbuild.v1.ITimeSpan|null} [pushTiming] UploadedMavenArtifact pushTiming
                         */
    
                        /**
                         * Constructs a new UploadedMavenArtifact.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents an UploadedMavenArtifact.
                         * @implements IUploadedMavenArtifact
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IUploadedMavenArtifact=} [properties] Properties to set
                         */
                        function UploadedMavenArtifact(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UploadedMavenArtifact uri.
                         * @member {string} uri
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @instance
                         */
                        UploadedMavenArtifact.prototype.uri = "";
    
                        /**
                         * UploadedMavenArtifact fileHashes.
                         * @member {google.devtools.cloudbuild.v1.IFileHashes|null|undefined} fileHashes
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @instance
                         */
                        UploadedMavenArtifact.prototype.fileHashes = null;
    
                        /**
                         * UploadedMavenArtifact pushTiming.
                         * @member {google.devtools.cloudbuild.v1.ITimeSpan|null|undefined} pushTiming
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @instance
                         */
                        UploadedMavenArtifact.prototype.pushTiming = null;
    
                        /**
                         * Creates a new UploadedMavenArtifact instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUploadedMavenArtifact=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.UploadedMavenArtifact} UploadedMavenArtifact instance
                         */
                        UploadedMavenArtifact.create = function create(properties) {
                            return new UploadedMavenArtifact(properties);
                        };
    
                        /**
                         * Encodes the specified UploadedMavenArtifact message. Does not implicitly {@link google.devtools.cloudbuild.v1.UploadedMavenArtifact.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUploadedMavenArtifact} message UploadedMavenArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UploadedMavenArtifact.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            if (message.fileHashes != null && Object.hasOwnProperty.call(message, "fileHashes"))
                                $root.google.devtools.cloudbuild.v1.FileHashes.encode(message.fileHashes, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.pushTiming != null && Object.hasOwnProperty.call(message, "pushTiming"))
                                $root.google.devtools.cloudbuild.v1.TimeSpan.encode(message.pushTiming, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UploadedMavenArtifact message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.UploadedMavenArtifact.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUploadedMavenArtifact} message UploadedMavenArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UploadedMavenArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UploadedMavenArtifact message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.UploadedMavenArtifact} UploadedMavenArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UploadedMavenArtifact.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.UploadedMavenArtifact();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.fileHashes = $root.google.devtools.cloudbuild.v1.FileHashes.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UploadedMavenArtifact message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.UploadedMavenArtifact} UploadedMavenArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UploadedMavenArtifact.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UploadedMavenArtifact message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UploadedMavenArtifact.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.fileHashes != null && message.hasOwnProperty("fileHashes")) {
                                var error = $root.google.devtools.cloudbuild.v1.FileHashes.verify(message.fileHashes);
                                if (error)
                                    return "fileHashes." + error;
                            }
                            if (message.pushTiming != null && message.hasOwnProperty("pushTiming")) {
                                var error = $root.google.devtools.cloudbuild.v1.TimeSpan.verify(message.pushTiming);
                                if (error)
                                    return "pushTiming." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UploadedMavenArtifact message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.UploadedMavenArtifact} UploadedMavenArtifact
                         */
                        UploadedMavenArtifact.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.UploadedMavenArtifact)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.UploadedMavenArtifact();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.fileHashes != null) {
                                if (typeof object.fileHashes !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.UploadedMavenArtifact.fileHashes: object expected");
                                message.fileHashes = $root.google.devtools.cloudbuild.v1.FileHashes.fromObject(object.fileHashes);
                            }
                            if (object.pushTiming != null) {
                                if (typeof object.pushTiming !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.UploadedMavenArtifact.pushTiming: object expected");
                                message.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.fromObject(object.pushTiming);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UploadedMavenArtifact message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @static
                         * @param {google.devtools.cloudbuild.v1.UploadedMavenArtifact} message UploadedMavenArtifact
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UploadedMavenArtifact.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.uri = "";
                                object.fileHashes = null;
                                object.pushTiming = null;
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.fileHashes != null && message.hasOwnProperty("fileHashes"))
                                object.fileHashes = $root.google.devtools.cloudbuild.v1.FileHashes.toObject(message.fileHashes, options);
                            if (message.pushTiming != null && message.hasOwnProperty("pushTiming"))
                                object.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.toObject(message.pushTiming, options);
                            return object;
                        };
    
                        /**
                         * Converts this UploadedMavenArtifact to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UploadedMavenArtifact.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UploadedMavenArtifact
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.UploadedMavenArtifact
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UploadedMavenArtifact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.UploadedMavenArtifact";
                        };
    
                        return UploadedMavenArtifact;
                    })();
    
                    v1.UploadedGoModule = (function() {
    
                        /**
                         * Properties of an UploadedGoModule.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IUploadedGoModule
                         * @property {string|null} [uri] UploadedGoModule uri
                         * @property {google.devtools.cloudbuild.v1.IFileHashes|null} [fileHashes] UploadedGoModule fileHashes
                         * @property {google.devtools.cloudbuild.v1.ITimeSpan|null} [pushTiming] UploadedGoModule pushTiming
                         */
    
                        /**
                         * Constructs a new UploadedGoModule.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents an UploadedGoModule.
                         * @implements IUploadedGoModule
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IUploadedGoModule=} [properties] Properties to set
                         */
                        function UploadedGoModule(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UploadedGoModule uri.
                         * @member {string} uri
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @instance
                         */
                        UploadedGoModule.prototype.uri = "";
    
                        /**
                         * UploadedGoModule fileHashes.
                         * @member {google.devtools.cloudbuild.v1.IFileHashes|null|undefined} fileHashes
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @instance
                         */
                        UploadedGoModule.prototype.fileHashes = null;
    
                        /**
                         * UploadedGoModule pushTiming.
                         * @member {google.devtools.cloudbuild.v1.ITimeSpan|null|undefined} pushTiming
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @instance
                         */
                        UploadedGoModule.prototype.pushTiming = null;
    
                        /**
                         * Creates a new UploadedGoModule instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUploadedGoModule=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.UploadedGoModule} UploadedGoModule instance
                         */
                        UploadedGoModule.create = function create(properties) {
                            return new UploadedGoModule(properties);
                        };
    
                        /**
                         * Encodes the specified UploadedGoModule message. Does not implicitly {@link google.devtools.cloudbuild.v1.UploadedGoModule.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUploadedGoModule} message UploadedGoModule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UploadedGoModule.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            if (message.fileHashes != null && Object.hasOwnProperty.call(message, "fileHashes"))
                                $root.google.devtools.cloudbuild.v1.FileHashes.encode(message.fileHashes, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.pushTiming != null && Object.hasOwnProperty.call(message, "pushTiming"))
                                $root.google.devtools.cloudbuild.v1.TimeSpan.encode(message.pushTiming, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UploadedGoModule message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.UploadedGoModule.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUploadedGoModule} message UploadedGoModule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UploadedGoModule.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UploadedGoModule message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.UploadedGoModule} UploadedGoModule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UploadedGoModule.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.UploadedGoModule();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.fileHashes = $root.google.devtools.cloudbuild.v1.FileHashes.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UploadedGoModule message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.UploadedGoModule} UploadedGoModule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UploadedGoModule.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UploadedGoModule message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UploadedGoModule.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.fileHashes != null && message.hasOwnProperty("fileHashes")) {
                                var error = $root.google.devtools.cloudbuild.v1.FileHashes.verify(message.fileHashes);
                                if (error)
                                    return "fileHashes." + error;
                            }
                            if (message.pushTiming != null && message.hasOwnProperty("pushTiming")) {
                                var error = $root.google.devtools.cloudbuild.v1.TimeSpan.verify(message.pushTiming);
                                if (error)
                                    return "pushTiming." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UploadedGoModule message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.UploadedGoModule} UploadedGoModule
                         */
                        UploadedGoModule.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.UploadedGoModule)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.UploadedGoModule();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.fileHashes != null) {
                                if (typeof object.fileHashes !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.UploadedGoModule.fileHashes: object expected");
                                message.fileHashes = $root.google.devtools.cloudbuild.v1.FileHashes.fromObject(object.fileHashes);
                            }
                            if (object.pushTiming != null) {
                                if (typeof object.pushTiming !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.UploadedGoModule.pushTiming: object expected");
                                message.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.fromObject(object.pushTiming);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UploadedGoModule message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @static
                         * @param {google.devtools.cloudbuild.v1.UploadedGoModule} message UploadedGoModule
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UploadedGoModule.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.uri = "";
                                object.fileHashes = null;
                                object.pushTiming = null;
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.fileHashes != null && message.hasOwnProperty("fileHashes"))
                                object.fileHashes = $root.google.devtools.cloudbuild.v1.FileHashes.toObject(message.fileHashes, options);
                            if (message.pushTiming != null && message.hasOwnProperty("pushTiming"))
                                object.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.toObject(message.pushTiming, options);
                            return object;
                        };
    
                        /**
                         * Converts this UploadedGoModule to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UploadedGoModule.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UploadedGoModule
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.UploadedGoModule
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UploadedGoModule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.UploadedGoModule";
                        };
    
                        return UploadedGoModule;
                    })();
    
                    v1.UploadedNpmPackage = (function() {
    
                        /**
                         * Properties of an UploadedNpmPackage.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IUploadedNpmPackage
                         * @property {string|null} [uri] UploadedNpmPackage uri
                         * @property {google.devtools.cloudbuild.v1.IFileHashes|null} [fileHashes] UploadedNpmPackage fileHashes
                         * @property {google.devtools.cloudbuild.v1.ITimeSpan|null} [pushTiming] UploadedNpmPackage pushTiming
                         */
    
                        /**
                         * Constructs a new UploadedNpmPackage.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents an UploadedNpmPackage.
                         * @implements IUploadedNpmPackage
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IUploadedNpmPackage=} [properties] Properties to set
                         */
                        function UploadedNpmPackage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UploadedNpmPackage uri.
                         * @member {string} uri
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @instance
                         */
                        UploadedNpmPackage.prototype.uri = "";
    
                        /**
                         * UploadedNpmPackage fileHashes.
                         * @member {google.devtools.cloudbuild.v1.IFileHashes|null|undefined} fileHashes
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @instance
                         */
                        UploadedNpmPackage.prototype.fileHashes = null;
    
                        /**
                         * UploadedNpmPackage pushTiming.
                         * @member {google.devtools.cloudbuild.v1.ITimeSpan|null|undefined} pushTiming
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @instance
                         */
                        UploadedNpmPackage.prototype.pushTiming = null;
    
                        /**
                         * Creates a new UploadedNpmPackage instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUploadedNpmPackage=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.UploadedNpmPackage} UploadedNpmPackage instance
                         */
                        UploadedNpmPackage.create = function create(properties) {
                            return new UploadedNpmPackage(properties);
                        };
    
                        /**
                         * Encodes the specified UploadedNpmPackage message. Does not implicitly {@link google.devtools.cloudbuild.v1.UploadedNpmPackage.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUploadedNpmPackage} message UploadedNpmPackage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UploadedNpmPackage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            if (message.fileHashes != null && Object.hasOwnProperty.call(message, "fileHashes"))
                                $root.google.devtools.cloudbuild.v1.FileHashes.encode(message.fileHashes, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.pushTiming != null && Object.hasOwnProperty.call(message, "pushTiming"))
                                $root.google.devtools.cloudbuild.v1.TimeSpan.encode(message.pushTiming, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UploadedNpmPackage message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.UploadedNpmPackage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUploadedNpmPackage} message UploadedNpmPackage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UploadedNpmPackage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UploadedNpmPackage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.UploadedNpmPackage} UploadedNpmPackage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UploadedNpmPackage.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.UploadedNpmPackage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.fileHashes = $root.google.devtools.cloudbuild.v1.FileHashes.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UploadedNpmPackage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.UploadedNpmPackage} UploadedNpmPackage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UploadedNpmPackage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UploadedNpmPackage message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UploadedNpmPackage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.fileHashes != null && message.hasOwnProperty("fileHashes")) {
                                var error = $root.google.devtools.cloudbuild.v1.FileHashes.verify(message.fileHashes);
                                if (error)
                                    return "fileHashes." + error;
                            }
                            if (message.pushTiming != null && message.hasOwnProperty("pushTiming")) {
                                var error = $root.google.devtools.cloudbuild.v1.TimeSpan.verify(message.pushTiming);
                                if (error)
                                    return "pushTiming." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UploadedNpmPackage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.UploadedNpmPackage} UploadedNpmPackage
                         */
                        UploadedNpmPackage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.UploadedNpmPackage)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.UploadedNpmPackage();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.fileHashes != null) {
                                if (typeof object.fileHashes !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.UploadedNpmPackage.fileHashes: object expected");
                                message.fileHashes = $root.google.devtools.cloudbuild.v1.FileHashes.fromObject(object.fileHashes);
                            }
                            if (object.pushTiming != null) {
                                if (typeof object.pushTiming !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.UploadedNpmPackage.pushTiming: object expected");
                                message.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.fromObject(object.pushTiming);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UploadedNpmPackage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @static
                         * @param {google.devtools.cloudbuild.v1.UploadedNpmPackage} message UploadedNpmPackage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UploadedNpmPackage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.uri = "";
                                object.fileHashes = null;
                                object.pushTiming = null;
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.fileHashes != null && message.hasOwnProperty("fileHashes"))
                                object.fileHashes = $root.google.devtools.cloudbuild.v1.FileHashes.toObject(message.fileHashes, options);
                            if (message.pushTiming != null && message.hasOwnProperty("pushTiming"))
                                object.pushTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.toObject(message.pushTiming, options);
                            return object;
                        };
    
                        /**
                         * Converts this UploadedNpmPackage to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UploadedNpmPackage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UploadedNpmPackage
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.UploadedNpmPackage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UploadedNpmPackage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.UploadedNpmPackage";
                        };
    
                        return UploadedNpmPackage;
                    })();
    
                    v1.BuildStep = (function() {
    
                        /**
                         * Properties of a BuildStep.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IBuildStep
                         * @property {string|null} [name] BuildStep name
                         * @property {Array.<string>|null} [env] BuildStep env
                         * @property {Array.<string>|null} [args] BuildStep args
                         * @property {string|null} [dir] BuildStep dir
                         * @property {string|null} [id] BuildStep id
                         * @property {Array.<string>|null} [waitFor] BuildStep waitFor
                         * @property {string|null} [entrypoint] BuildStep entrypoint
                         * @property {Array.<string>|null} [secretEnv] BuildStep secretEnv
                         * @property {Array.<google.devtools.cloudbuild.v1.IVolume>|null} [volumes] BuildStep volumes
                         * @property {google.devtools.cloudbuild.v1.ITimeSpan|null} [timing] BuildStep timing
                         * @property {google.devtools.cloudbuild.v1.ITimeSpan|null} [pullTiming] BuildStep pullTiming
                         * @property {google.protobuf.IDuration|null} [timeout] BuildStep timeout
                         * @property {google.devtools.cloudbuild.v1.Build.Status|null} [status] BuildStep status
                         * @property {boolean|null} [allowFailure] BuildStep allowFailure
                         * @property {number|null} [exitCode] BuildStep exitCode
                         * @property {Array.<number>|null} [allowExitCodes] BuildStep allowExitCodes
                         * @property {string|null} [script] BuildStep script
                         * @property {boolean|null} [automapSubstitutions] BuildStep automapSubstitutions
                         */
    
                        /**
                         * Constructs a new BuildStep.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a BuildStep.
                         * @implements IBuildStep
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IBuildStep=} [properties] Properties to set
                         */
                        function BuildStep(properties) {
                            this.env = [];
                            this.args = [];
                            this.waitFor = [];
                            this.secretEnv = [];
                            this.volumes = [];
                            this.allowExitCodes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BuildStep name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.name = "";
    
                        /**
                         * BuildStep env.
                         * @member {Array.<string>} env
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.env = $util.emptyArray;
    
                        /**
                         * BuildStep args.
                         * @member {Array.<string>} args
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.args = $util.emptyArray;
    
                        /**
                         * BuildStep dir.
                         * @member {string} dir
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.dir = "";
    
                        /**
                         * BuildStep id.
                         * @member {string} id
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.id = "";
    
                        /**
                         * BuildStep waitFor.
                         * @member {Array.<string>} waitFor
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.waitFor = $util.emptyArray;
    
                        /**
                         * BuildStep entrypoint.
                         * @member {string} entrypoint
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.entrypoint = "";
    
                        /**
                         * BuildStep secretEnv.
                         * @member {Array.<string>} secretEnv
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.secretEnv = $util.emptyArray;
    
                        /**
                         * BuildStep volumes.
                         * @member {Array.<google.devtools.cloudbuild.v1.IVolume>} volumes
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.volumes = $util.emptyArray;
    
                        /**
                         * BuildStep timing.
                         * @member {google.devtools.cloudbuild.v1.ITimeSpan|null|undefined} timing
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.timing = null;
    
                        /**
                         * BuildStep pullTiming.
                         * @member {google.devtools.cloudbuild.v1.ITimeSpan|null|undefined} pullTiming
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.pullTiming = null;
    
                        /**
                         * BuildStep timeout.
                         * @member {google.protobuf.IDuration|null|undefined} timeout
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.timeout = null;
    
                        /**
                         * BuildStep status.
                         * @member {google.devtools.cloudbuild.v1.Build.Status} status
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.status = 0;
    
                        /**
                         * BuildStep allowFailure.
                         * @member {boolean} allowFailure
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.allowFailure = false;
    
                        /**
                         * BuildStep exitCode.
                         * @member {number} exitCode
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.exitCode = 0;
    
                        /**
                         * BuildStep allowExitCodes.
                         * @member {Array.<number>} allowExitCodes
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.allowExitCodes = $util.emptyArray;
    
                        /**
                         * BuildStep script.
                         * @member {string} script
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.script = "";
    
                        /**
                         * BuildStep automapSubstitutions.
                         * @member {boolean|null|undefined} automapSubstitutions
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         */
                        BuildStep.prototype.automapSubstitutions = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        // Virtual OneOf for proto3 optional field
                        Object.defineProperty(BuildStep.prototype, "_automapSubstitutions", {
                            get: $util.oneOfGetter($oneOfFields = ["automapSubstitutions"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new BuildStep instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildStep=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.BuildStep} BuildStep instance
                         */
                        BuildStep.create = function create(properties) {
                            return new BuildStep(properties);
                        };
    
                        /**
                         * Encodes the specified BuildStep message. Does not implicitly {@link google.devtools.cloudbuild.v1.BuildStep.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildStep} message BuildStep message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildStep.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.env != null && message.env.length)
                                for (var i = 0; i < message.env.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.env[i]);
                            if (message.args != null && message.args.length)
                                for (var i = 0; i < message.args.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.args[i]);
                            if (message.dir != null && Object.hasOwnProperty.call(message, "dir"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.dir);
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.id);
                            if (message.waitFor != null && message.waitFor.length)
                                for (var i = 0; i < message.waitFor.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.waitFor[i]);
                            if (message.entrypoint != null && Object.hasOwnProperty.call(message, "entrypoint"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.entrypoint);
                            if (message.secretEnv != null && message.secretEnv.length)
                                for (var i = 0; i < message.secretEnv.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.secretEnv[i]);
                            if (message.volumes != null && message.volumes.length)
                                for (var i = 0; i < message.volumes.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.Volume.encode(message.volumes[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.timing != null && Object.hasOwnProperty.call(message, "timing"))
                                $root.google.devtools.cloudbuild.v1.TimeSpan.encode(message.timing, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                                $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.status);
                            if (message.pullTiming != null && Object.hasOwnProperty.call(message, "pullTiming"))
                                $root.google.devtools.cloudbuild.v1.TimeSpan.encode(message.pullTiming, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.allowFailure != null && Object.hasOwnProperty.call(message, "allowFailure"))
                                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.allowFailure);
                            if (message.exitCode != null && Object.hasOwnProperty.call(message, "exitCode"))
                                writer.uint32(/* id 16, wireType 0 =*/128).int32(message.exitCode);
                            if (message.allowExitCodes != null && message.allowExitCodes.length) {
                                writer.uint32(/* id 18, wireType 2 =*/146).fork();
                                for (var i = 0; i < message.allowExitCodes.length; ++i)
                                    writer.int32(message.allowExitCodes[i]);
                                writer.ldelim();
                            }
                            if (message.script != null && Object.hasOwnProperty.call(message, "script"))
                                writer.uint32(/* id 19, wireType 2 =*/154).string(message.script);
                            if (message.automapSubstitutions != null && Object.hasOwnProperty.call(message, "automapSubstitutions"))
                                writer.uint32(/* id 20, wireType 0 =*/160).bool(message.automapSubstitutions);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BuildStep message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.BuildStep.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildStep} message BuildStep message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildStep.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BuildStep message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.BuildStep} BuildStep
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildStep.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.BuildStep();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.env && message.env.length))
                                            message.env = [];
                                        message.env.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.args && message.args.length))
                                            message.args = [];
                                        message.args.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        message.dir = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (!(message.waitFor && message.waitFor.length))
                                            message.waitFor = [];
                                        message.waitFor.push(reader.string());
                                        break;
                                    }
                                case 7: {
                                        message.entrypoint = reader.string();
                                        break;
                                    }
                                case 8: {
                                        if (!(message.secretEnv && message.secretEnv.length))
                                            message.secretEnv = [];
                                        message.secretEnv.push(reader.string());
                                        break;
                                    }
                                case 9: {
                                        if (!(message.volumes && message.volumes.length))
                                            message.volumes = [];
                                        message.volumes.push($root.google.devtools.cloudbuild.v1.Volume.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 10: {
                                        message.timing = $root.google.devtools.cloudbuild.v1.TimeSpan.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.pullTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.status = reader.int32();
                                        break;
                                    }
                                case 14: {
                                        message.allowFailure = reader.bool();
                                        break;
                                    }
                                case 16: {
                                        message.exitCode = reader.int32();
                                        break;
                                    }
                                case 18: {
                                        if (!(message.allowExitCodes && message.allowExitCodes.length))
                                            message.allowExitCodes = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.allowExitCodes.push(reader.int32());
                                        } else
                                            message.allowExitCodes.push(reader.int32());
                                        break;
                                    }
                                case 19: {
                                        message.script = reader.string();
                                        break;
                                    }
                                case 20: {
                                        message.automapSubstitutions = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BuildStep message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.BuildStep} BuildStep
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildStep.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BuildStep message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BuildStep.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.env != null && message.hasOwnProperty("env")) {
                                if (!Array.isArray(message.env))
                                    return "env: array expected";
                                for (var i = 0; i < message.env.length; ++i)
                                    if (!$util.isString(message.env[i]))
                                        return "env: string[] expected";
                            }
                            if (message.args != null && message.hasOwnProperty("args")) {
                                if (!Array.isArray(message.args))
                                    return "args: array expected";
                                for (var i = 0; i < message.args.length; ++i)
                                    if (!$util.isString(message.args[i]))
                                        return "args: string[] expected";
                            }
                            if (message.dir != null && message.hasOwnProperty("dir"))
                                if (!$util.isString(message.dir))
                                    return "dir: string expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.waitFor != null && message.hasOwnProperty("waitFor")) {
                                if (!Array.isArray(message.waitFor))
                                    return "waitFor: array expected";
                                for (var i = 0; i < message.waitFor.length; ++i)
                                    if (!$util.isString(message.waitFor[i]))
                                        return "waitFor: string[] expected";
                            }
                            if (message.entrypoint != null && message.hasOwnProperty("entrypoint"))
                                if (!$util.isString(message.entrypoint))
                                    return "entrypoint: string expected";
                            if (message.secretEnv != null && message.hasOwnProperty("secretEnv")) {
                                if (!Array.isArray(message.secretEnv))
                                    return "secretEnv: array expected";
                                for (var i = 0; i < message.secretEnv.length; ++i)
                                    if (!$util.isString(message.secretEnv[i]))
                                        return "secretEnv: string[] expected";
                            }
                            if (message.volumes != null && message.hasOwnProperty("volumes")) {
                                if (!Array.isArray(message.volumes))
                                    return "volumes: array expected";
                                for (var i = 0; i < message.volumes.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.Volume.verify(message.volumes[i]);
                                    if (error)
                                        return "volumes." + error;
                                }
                            }
                            if (message.timing != null && message.hasOwnProperty("timing")) {
                                var error = $root.google.devtools.cloudbuild.v1.TimeSpan.verify(message.timing);
                                if (error)
                                    return "timing." + error;
                            }
                            if (message.pullTiming != null && message.hasOwnProperty("pullTiming")) {
                                var error = $root.google.devtools.cloudbuild.v1.TimeSpan.verify(message.pullTiming);
                                if (error)
                                    return "pullTiming." + error;
                            }
                            if (message.timeout != null && message.hasOwnProperty("timeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.timeout);
                                if (error)
                                    return "timeout." + error;
                            }
                            if (message.status != null && message.hasOwnProperty("status"))
                                switch (message.status) {
                                default:
                                    return "status: enum value expected";
                                case 0:
                                case 10:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 9:
                                    break;
                                }
                            if (message.allowFailure != null && message.hasOwnProperty("allowFailure"))
                                if (typeof message.allowFailure !== "boolean")
                                    return "allowFailure: boolean expected";
                            if (message.exitCode != null && message.hasOwnProperty("exitCode"))
                                if (!$util.isInteger(message.exitCode))
                                    return "exitCode: integer expected";
                            if (message.allowExitCodes != null && message.hasOwnProperty("allowExitCodes")) {
                                if (!Array.isArray(message.allowExitCodes))
                                    return "allowExitCodes: array expected";
                                for (var i = 0; i < message.allowExitCodes.length; ++i)
                                    if (!$util.isInteger(message.allowExitCodes[i]))
                                        return "allowExitCodes: integer[] expected";
                            }
                            if (message.script != null && message.hasOwnProperty("script"))
                                if (!$util.isString(message.script))
                                    return "script: string expected";
                            if (message.automapSubstitutions != null && message.hasOwnProperty("automapSubstitutions")) {
                                properties._automapSubstitutions = 1;
                                if (typeof message.automapSubstitutions !== "boolean")
                                    return "automapSubstitutions: boolean expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BuildStep message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.BuildStep} BuildStep
                         */
                        BuildStep.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.BuildStep)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.BuildStep();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.env) {
                                if (!Array.isArray(object.env))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildStep.env: array expected");
                                message.env = [];
                                for (var i = 0; i < object.env.length; ++i)
                                    message.env[i] = String(object.env[i]);
                            }
                            if (object.args) {
                                if (!Array.isArray(object.args))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildStep.args: array expected");
                                message.args = [];
                                for (var i = 0; i < object.args.length; ++i)
                                    message.args[i] = String(object.args[i]);
                            }
                            if (object.dir != null)
                                message.dir = String(object.dir);
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.waitFor) {
                                if (!Array.isArray(object.waitFor))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildStep.waitFor: array expected");
                                message.waitFor = [];
                                for (var i = 0; i < object.waitFor.length; ++i)
                                    message.waitFor[i] = String(object.waitFor[i]);
                            }
                            if (object.entrypoint != null)
                                message.entrypoint = String(object.entrypoint);
                            if (object.secretEnv) {
                                if (!Array.isArray(object.secretEnv))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildStep.secretEnv: array expected");
                                message.secretEnv = [];
                                for (var i = 0; i < object.secretEnv.length; ++i)
                                    message.secretEnv[i] = String(object.secretEnv[i]);
                            }
                            if (object.volumes) {
                                if (!Array.isArray(object.volumes))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildStep.volumes: array expected");
                                message.volumes = [];
                                for (var i = 0; i < object.volumes.length; ++i) {
                                    if (typeof object.volumes[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.BuildStep.volumes: object expected");
                                    message.volumes[i] = $root.google.devtools.cloudbuild.v1.Volume.fromObject(object.volumes[i]);
                                }
                            }
                            if (object.timing != null) {
                                if (typeof object.timing !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildStep.timing: object expected");
                                message.timing = $root.google.devtools.cloudbuild.v1.TimeSpan.fromObject(object.timing);
                            }
                            if (object.pullTiming != null) {
                                if (typeof object.pullTiming !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildStep.pullTiming: object expected");
                                message.pullTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.fromObject(object.pullTiming);
                            }
                            if (object.timeout != null) {
                                if (typeof object.timeout !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildStep.timeout: object expected");
                                message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                            }
                            switch (object.status) {
                            default:
                                if (typeof object.status === "number") {
                                    message.status = object.status;
                                    break;
                                }
                                break;
                            case "STATUS_UNKNOWN":
                            case 0:
                                message.status = 0;
                                break;
                            case "PENDING":
                            case 10:
                                message.status = 10;
                                break;
                            case "QUEUED":
                            case 1:
                                message.status = 1;
                                break;
                            case "WORKING":
                            case 2:
                                message.status = 2;
                                break;
                            case "SUCCESS":
                            case 3:
                                message.status = 3;
                                break;
                            case "FAILURE":
                            case 4:
                                message.status = 4;
                                break;
                            case "INTERNAL_ERROR":
                            case 5:
                                message.status = 5;
                                break;
                            case "TIMEOUT":
                            case 6:
                                message.status = 6;
                                break;
                            case "CANCELLED":
                            case 7:
                                message.status = 7;
                                break;
                            case "EXPIRED":
                            case 9:
                                message.status = 9;
                                break;
                            }
                            if (object.allowFailure != null)
                                message.allowFailure = Boolean(object.allowFailure);
                            if (object.exitCode != null)
                                message.exitCode = object.exitCode | 0;
                            if (object.allowExitCodes) {
                                if (!Array.isArray(object.allowExitCodes))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildStep.allowExitCodes: array expected");
                                message.allowExitCodes = [];
                                for (var i = 0; i < object.allowExitCodes.length; ++i)
                                    message.allowExitCodes[i] = object.allowExitCodes[i] | 0;
                            }
                            if (object.script != null)
                                message.script = String(object.script);
                            if (object.automapSubstitutions != null)
                                message.automapSubstitutions = Boolean(object.automapSubstitutions);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BuildStep message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @static
                         * @param {google.devtools.cloudbuild.v1.BuildStep} message BuildStep
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BuildStep.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.env = [];
                                object.args = [];
                                object.waitFor = [];
                                object.secretEnv = [];
                                object.volumes = [];
                                object.allowExitCodes = [];
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.dir = "";
                                object.id = "";
                                object.entrypoint = "";
                                object.timing = null;
                                object.timeout = null;
                                object.status = options.enums === String ? "STATUS_UNKNOWN" : 0;
                                object.pullTiming = null;
                                object.allowFailure = false;
                                object.exitCode = 0;
                                object.script = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.env && message.env.length) {
                                object.env = [];
                                for (var j = 0; j < message.env.length; ++j)
                                    object.env[j] = message.env[j];
                            }
                            if (message.args && message.args.length) {
                                object.args = [];
                                for (var j = 0; j < message.args.length; ++j)
                                    object.args[j] = message.args[j];
                            }
                            if (message.dir != null && message.hasOwnProperty("dir"))
                                object.dir = message.dir;
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.waitFor && message.waitFor.length) {
                                object.waitFor = [];
                                for (var j = 0; j < message.waitFor.length; ++j)
                                    object.waitFor[j] = message.waitFor[j];
                            }
                            if (message.entrypoint != null && message.hasOwnProperty("entrypoint"))
                                object.entrypoint = message.entrypoint;
                            if (message.secretEnv && message.secretEnv.length) {
                                object.secretEnv = [];
                                for (var j = 0; j < message.secretEnv.length; ++j)
                                    object.secretEnv[j] = message.secretEnv[j];
                            }
                            if (message.volumes && message.volumes.length) {
                                object.volumes = [];
                                for (var j = 0; j < message.volumes.length; ++j)
                                    object.volumes[j] = $root.google.devtools.cloudbuild.v1.Volume.toObject(message.volumes[j], options);
                            }
                            if (message.timing != null && message.hasOwnProperty("timing"))
                                object.timing = $root.google.devtools.cloudbuild.v1.TimeSpan.toObject(message.timing, options);
                            if (message.timeout != null && message.hasOwnProperty("timeout"))
                                object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = options.enums === String ? $root.google.devtools.cloudbuild.v1.Build.Status[message.status] === undefined ? message.status : $root.google.devtools.cloudbuild.v1.Build.Status[message.status] : message.status;
                            if (message.pullTiming != null && message.hasOwnProperty("pullTiming"))
                                object.pullTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.toObject(message.pullTiming, options);
                            if (message.allowFailure != null && message.hasOwnProperty("allowFailure"))
                                object.allowFailure = message.allowFailure;
                            if (message.exitCode != null && message.hasOwnProperty("exitCode"))
                                object.exitCode = message.exitCode;
                            if (message.allowExitCodes && message.allowExitCodes.length) {
                                object.allowExitCodes = [];
                                for (var j = 0; j < message.allowExitCodes.length; ++j)
                                    object.allowExitCodes[j] = message.allowExitCodes[j];
                            }
                            if (message.script != null && message.hasOwnProperty("script"))
                                object.script = message.script;
                            if (message.automapSubstitutions != null && message.hasOwnProperty("automapSubstitutions")) {
                                object.automapSubstitutions = message.automapSubstitutions;
                                if (options.oneofs)
                                    object._automapSubstitutions = "automapSubstitutions";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BuildStep to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BuildStep.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BuildStep
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.BuildStep
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BuildStep.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.BuildStep";
                        };
    
                        return BuildStep;
                    })();
    
                    v1.Volume = (function() {
    
                        /**
                         * Properties of a Volume.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IVolume
                         * @property {string|null} [name] Volume name
                         * @property {string|null} [path] Volume path
                         */
    
                        /**
                         * Constructs a new Volume.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a Volume.
                         * @implements IVolume
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IVolume=} [properties] Properties to set
                         */
                        function Volume(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Volume name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.Volume
                         * @instance
                         */
                        Volume.prototype.name = "";
    
                        /**
                         * Volume path.
                         * @member {string} path
                         * @memberof google.devtools.cloudbuild.v1.Volume
                         * @instance
                         */
                        Volume.prototype.path = "";
    
                        /**
                         * Creates a new Volume instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.Volume
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IVolume=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.Volume} Volume instance
                         */
                        Volume.create = function create(properties) {
                            return new Volume(properties);
                        };
    
                        /**
                         * Encodes the specified Volume message. Does not implicitly {@link google.devtools.cloudbuild.v1.Volume.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.Volume
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IVolume} message Volume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Volume.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Volume message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Volume.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Volume
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IVolume} message Volume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Volume.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Volume message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.Volume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.Volume} Volume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Volume.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Volume();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.path = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Volume message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Volume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.Volume} Volume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Volume.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Volume message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.Volume
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Volume.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.path != null && message.hasOwnProperty("path"))
                                if (!$util.isString(message.path))
                                    return "path: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Volume message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.Volume
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.Volume} Volume
                         */
                        Volume.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.Volume)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.Volume();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.path != null)
                                message.path = String(object.path);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Volume message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.Volume
                         * @static
                         * @param {google.devtools.cloudbuild.v1.Volume} message Volume
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Volume.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.path = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.path != null && message.hasOwnProperty("path"))
                                object.path = message.path;
                            return object;
                        };
    
                        /**
                         * Converts this Volume to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.Volume
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Volume.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Volume
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.Volume
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Volume.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Volume";
                        };
    
                        return Volume;
                    })();
    
                    v1.Results = (function() {
    
                        /**
                         * Properties of a Results.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IResults
                         * @property {Array.<google.devtools.cloudbuild.v1.IBuiltImage>|null} [images] Results images
                         * @property {Array.<string>|null} [buildStepImages] Results buildStepImages
                         * @property {string|null} [artifactManifest] Results artifactManifest
                         * @property {number|Long|null} [numArtifacts] Results numArtifacts
                         * @property {Array.<Uint8Array>|null} [buildStepOutputs] Results buildStepOutputs
                         * @property {google.devtools.cloudbuild.v1.ITimeSpan|null} [artifactTiming] Results artifactTiming
                         * @property {Array.<google.devtools.cloudbuild.v1.IUploadedPythonPackage>|null} [pythonPackages] Results pythonPackages
                         * @property {Array.<google.devtools.cloudbuild.v1.IUploadedMavenArtifact>|null} [mavenArtifacts] Results mavenArtifacts
                         * @property {Array.<google.devtools.cloudbuild.v1.IUploadedGoModule>|null} [goModules] Results goModules
                         * @property {Array.<google.devtools.cloudbuild.v1.IUploadedNpmPackage>|null} [npmPackages] Results npmPackages
                         */
    
                        /**
                         * Constructs a new Results.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a Results.
                         * @implements IResults
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IResults=} [properties] Properties to set
                         */
                        function Results(properties) {
                            this.images = [];
                            this.buildStepImages = [];
                            this.buildStepOutputs = [];
                            this.pythonPackages = [];
                            this.mavenArtifacts = [];
                            this.goModules = [];
                            this.npmPackages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Results images.
                         * @member {Array.<google.devtools.cloudbuild.v1.IBuiltImage>} images
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @instance
                         */
                        Results.prototype.images = $util.emptyArray;
    
                        /**
                         * Results buildStepImages.
                         * @member {Array.<string>} buildStepImages
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @instance
                         */
                        Results.prototype.buildStepImages = $util.emptyArray;
    
                        /**
                         * Results artifactManifest.
                         * @member {string} artifactManifest
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @instance
                         */
                        Results.prototype.artifactManifest = "";
    
                        /**
                         * Results numArtifacts.
                         * @member {number|Long} numArtifacts
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @instance
                         */
                        Results.prototype.numArtifacts = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Results buildStepOutputs.
                         * @member {Array.<Uint8Array>} buildStepOutputs
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @instance
                         */
                        Results.prototype.buildStepOutputs = $util.emptyArray;
    
                        /**
                         * Results artifactTiming.
                         * @member {google.devtools.cloudbuild.v1.ITimeSpan|null|undefined} artifactTiming
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @instance
                         */
                        Results.prototype.artifactTiming = null;
    
                        /**
                         * Results pythonPackages.
                         * @member {Array.<google.devtools.cloudbuild.v1.IUploadedPythonPackage>} pythonPackages
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @instance
                         */
                        Results.prototype.pythonPackages = $util.emptyArray;
    
                        /**
                         * Results mavenArtifacts.
                         * @member {Array.<google.devtools.cloudbuild.v1.IUploadedMavenArtifact>} mavenArtifacts
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @instance
                         */
                        Results.prototype.mavenArtifacts = $util.emptyArray;
    
                        /**
                         * Results goModules.
                         * @member {Array.<google.devtools.cloudbuild.v1.IUploadedGoModule>} goModules
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @instance
                         */
                        Results.prototype.goModules = $util.emptyArray;
    
                        /**
                         * Results npmPackages.
                         * @member {Array.<google.devtools.cloudbuild.v1.IUploadedNpmPackage>} npmPackages
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @instance
                         */
                        Results.prototype.npmPackages = $util.emptyArray;
    
                        /**
                         * Creates a new Results instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IResults=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.Results} Results instance
                         */
                        Results.create = function create(properties) {
                            return new Results(properties);
                        };
    
                        /**
                         * Encodes the specified Results message. Does not implicitly {@link google.devtools.cloudbuild.v1.Results.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IResults} message Results message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Results.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.images != null && message.images.length)
                                for (var i = 0; i < message.images.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.BuiltImage.encode(message.images[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.buildStepImages != null && message.buildStepImages.length)
                                for (var i = 0; i < message.buildStepImages.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.buildStepImages[i]);
                            if (message.artifactManifest != null && Object.hasOwnProperty.call(message, "artifactManifest"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.artifactManifest);
                            if (message.numArtifacts != null && Object.hasOwnProperty.call(message, "numArtifacts"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.numArtifacts);
                            if (message.buildStepOutputs != null && message.buildStepOutputs.length)
                                for (var i = 0; i < message.buildStepOutputs.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.buildStepOutputs[i]);
                            if (message.artifactTiming != null && Object.hasOwnProperty.call(message, "artifactTiming"))
                                $root.google.devtools.cloudbuild.v1.TimeSpan.encode(message.artifactTiming, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.pythonPackages != null && message.pythonPackages.length)
                                for (var i = 0; i < message.pythonPackages.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.UploadedPythonPackage.encode(message.pythonPackages[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.mavenArtifacts != null && message.mavenArtifacts.length)
                                for (var i = 0; i < message.mavenArtifacts.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.UploadedMavenArtifact.encode(message.mavenArtifacts[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.goModules != null && message.goModules.length)
                                for (var i = 0; i < message.goModules.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.UploadedGoModule.encode(message.goModules[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.npmPackages != null && message.npmPackages.length)
                                for (var i = 0; i < message.npmPackages.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.UploadedNpmPackage.encode(message.npmPackages[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Results message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Results.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IResults} message Results message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Results.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Results message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.Results} Results
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Results.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Results();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        if (!(message.images && message.images.length))
                                            message.images = [];
                                        message.images.push($root.google.devtools.cloudbuild.v1.BuiltImage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.buildStepImages && message.buildStepImages.length))
                                            message.buildStepImages = [];
                                        message.buildStepImages.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        message.artifactManifest = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.numArtifacts = reader.int64();
                                        break;
                                    }
                                case 6: {
                                        if (!(message.buildStepOutputs && message.buildStepOutputs.length))
                                            message.buildStepOutputs = [];
                                        message.buildStepOutputs.push(reader.bytes());
                                        break;
                                    }
                                case 7: {
                                        message.artifactTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        if (!(message.pythonPackages && message.pythonPackages.length))
                                            message.pythonPackages = [];
                                        message.pythonPackages.push($root.google.devtools.cloudbuild.v1.UploadedPythonPackage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 9: {
                                        if (!(message.mavenArtifacts && message.mavenArtifacts.length))
                                            message.mavenArtifacts = [];
                                        message.mavenArtifacts.push($root.google.devtools.cloudbuild.v1.UploadedMavenArtifact.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 10: {
                                        if (!(message.goModules && message.goModules.length))
                                            message.goModules = [];
                                        message.goModules.push($root.google.devtools.cloudbuild.v1.UploadedGoModule.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 12: {
                                        if (!(message.npmPackages && message.npmPackages.length))
                                            message.npmPackages = [];
                                        message.npmPackages.push($root.google.devtools.cloudbuild.v1.UploadedNpmPackage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Results message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.Results} Results
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Results.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Results message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Results.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.images != null && message.hasOwnProperty("images")) {
                                if (!Array.isArray(message.images))
                                    return "images: array expected";
                                for (var i = 0; i < message.images.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.BuiltImage.verify(message.images[i]);
                                    if (error)
                                        return "images." + error;
                                }
                            }
                            if (message.buildStepImages != null && message.hasOwnProperty("buildStepImages")) {
                                if (!Array.isArray(message.buildStepImages))
                                    return "buildStepImages: array expected";
                                for (var i = 0; i < message.buildStepImages.length; ++i)
                                    if (!$util.isString(message.buildStepImages[i]))
                                        return "buildStepImages: string[] expected";
                            }
                            if (message.artifactManifest != null && message.hasOwnProperty("artifactManifest"))
                                if (!$util.isString(message.artifactManifest))
                                    return "artifactManifest: string expected";
                            if (message.numArtifacts != null && message.hasOwnProperty("numArtifacts"))
                                if (!$util.isInteger(message.numArtifacts) && !(message.numArtifacts && $util.isInteger(message.numArtifacts.low) && $util.isInteger(message.numArtifacts.high)))
                                    return "numArtifacts: integer|Long expected";
                            if (message.buildStepOutputs != null && message.hasOwnProperty("buildStepOutputs")) {
                                if (!Array.isArray(message.buildStepOutputs))
                                    return "buildStepOutputs: array expected";
                                for (var i = 0; i < message.buildStepOutputs.length; ++i)
                                    if (!(message.buildStepOutputs[i] && typeof message.buildStepOutputs[i].length === "number" || $util.isString(message.buildStepOutputs[i])))
                                        return "buildStepOutputs: buffer[] expected";
                            }
                            if (message.artifactTiming != null && message.hasOwnProperty("artifactTiming")) {
                                var error = $root.google.devtools.cloudbuild.v1.TimeSpan.verify(message.artifactTiming);
                                if (error)
                                    return "artifactTiming." + error;
                            }
                            if (message.pythonPackages != null && message.hasOwnProperty("pythonPackages")) {
                                if (!Array.isArray(message.pythonPackages))
                                    return "pythonPackages: array expected";
                                for (var i = 0; i < message.pythonPackages.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.UploadedPythonPackage.verify(message.pythonPackages[i]);
                                    if (error)
                                        return "pythonPackages." + error;
                                }
                            }
                            if (message.mavenArtifacts != null && message.hasOwnProperty("mavenArtifacts")) {
                                if (!Array.isArray(message.mavenArtifacts))
                                    return "mavenArtifacts: array expected";
                                for (var i = 0; i < message.mavenArtifacts.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.UploadedMavenArtifact.verify(message.mavenArtifacts[i]);
                                    if (error)
                                        return "mavenArtifacts." + error;
                                }
                            }
                            if (message.goModules != null && message.hasOwnProperty("goModules")) {
                                if (!Array.isArray(message.goModules))
                                    return "goModules: array expected";
                                for (var i = 0; i < message.goModules.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.UploadedGoModule.verify(message.goModules[i]);
                                    if (error)
                                        return "goModules." + error;
                                }
                            }
                            if (message.npmPackages != null && message.hasOwnProperty("npmPackages")) {
                                if (!Array.isArray(message.npmPackages))
                                    return "npmPackages: array expected";
                                for (var i = 0; i < message.npmPackages.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.UploadedNpmPackage.verify(message.npmPackages[i]);
                                    if (error)
                                        return "npmPackages." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Results message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.Results} Results
                         */
                        Results.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.Results)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.Results();
                            if (object.images) {
                                if (!Array.isArray(object.images))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Results.images: array expected");
                                message.images = [];
                                for (var i = 0; i < object.images.length; ++i) {
                                    if (typeof object.images[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Results.images: object expected");
                                    message.images[i] = $root.google.devtools.cloudbuild.v1.BuiltImage.fromObject(object.images[i]);
                                }
                            }
                            if (object.buildStepImages) {
                                if (!Array.isArray(object.buildStepImages))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Results.buildStepImages: array expected");
                                message.buildStepImages = [];
                                for (var i = 0; i < object.buildStepImages.length; ++i)
                                    message.buildStepImages[i] = String(object.buildStepImages[i]);
                            }
                            if (object.artifactManifest != null)
                                message.artifactManifest = String(object.artifactManifest);
                            if (object.numArtifacts != null)
                                if ($util.Long)
                                    (message.numArtifacts = $util.Long.fromValue(object.numArtifacts)).unsigned = false;
                                else if (typeof object.numArtifacts === "string")
                                    message.numArtifacts = parseInt(object.numArtifacts, 10);
                                else if (typeof object.numArtifacts === "number")
                                    message.numArtifacts = object.numArtifacts;
                                else if (typeof object.numArtifacts === "object")
                                    message.numArtifacts = new $util.LongBits(object.numArtifacts.low >>> 0, object.numArtifacts.high >>> 0).toNumber();
                            if (object.buildStepOutputs) {
                                if (!Array.isArray(object.buildStepOutputs))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Results.buildStepOutputs: array expected");
                                message.buildStepOutputs = [];
                                for (var i = 0; i < object.buildStepOutputs.length; ++i)
                                    if (typeof object.buildStepOutputs[i] === "string")
                                        $util.base64.decode(object.buildStepOutputs[i], message.buildStepOutputs[i] = $util.newBuffer($util.base64.length(object.buildStepOutputs[i])), 0);
                                    else if (object.buildStepOutputs[i].length >= 0)
                                        message.buildStepOutputs[i] = object.buildStepOutputs[i];
                            }
                            if (object.artifactTiming != null) {
                                if (typeof object.artifactTiming !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Results.artifactTiming: object expected");
                                message.artifactTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.fromObject(object.artifactTiming);
                            }
                            if (object.pythonPackages) {
                                if (!Array.isArray(object.pythonPackages))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Results.pythonPackages: array expected");
                                message.pythonPackages = [];
                                for (var i = 0; i < object.pythonPackages.length; ++i) {
                                    if (typeof object.pythonPackages[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Results.pythonPackages: object expected");
                                    message.pythonPackages[i] = $root.google.devtools.cloudbuild.v1.UploadedPythonPackage.fromObject(object.pythonPackages[i]);
                                }
                            }
                            if (object.mavenArtifacts) {
                                if (!Array.isArray(object.mavenArtifacts))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Results.mavenArtifacts: array expected");
                                message.mavenArtifacts = [];
                                for (var i = 0; i < object.mavenArtifacts.length; ++i) {
                                    if (typeof object.mavenArtifacts[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Results.mavenArtifacts: object expected");
                                    message.mavenArtifacts[i] = $root.google.devtools.cloudbuild.v1.UploadedMavenArtifact.fromObject(object.mavenArtifacts[i]);
                                }
                            }
                            if (object.goModules) {
                                if (!Array.isArray(object.goModules))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Results.goModules: array expected");
                                message.goModules = [];
                                for (var i = 0; i < object.goModules.length; ++i) {
                                    if (typeof object.goModules[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Results.goModules: object expected");
                                    message.goModules[i] = $root.google.devtools.cloudbuild.v1.UploadedGoModule.fromObject(object.goModules[i]);
                                }
                            }
                            if (object.npmPackages) {
                                if (!Array.isArray(object.npmPackages))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Results.npmPackages: array expected");
                                message.npmPackages = [];
                                for (var i = 0; i < object.npmPackages.length; ++i) {
                                    if (typeof object.npmPackages[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Results.npmPackages: object expected");
                                    message.npmPackages[i] = $root.google.devtools.cloudbuild.v1.UploadedNpmPackage.fromObject(object.npmPackages[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Results message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @static
                         * @param {google.devtools.cloudbuild.v1.Results} message Results
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Results.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.images = [];
                                object.buildStepImages = [];
                                object.buildStepOutputs = [];
                                object.pythonPackages = [];
                                object.mavenArtifacts = [];
                                object.goModules = [];
                                object.npmPackages = [];
                            }
                            if (options.defaults) {
                                object.artifactManifest = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.numArtifacts = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.numArtifacts = options.longs === String ? "0" : 0;
                                object.artifactTiming = null;
                            }
                            if (message.images && message.images.length) {
                                object.images = [];
                                for (var j = 0; j < message.images.length; ++j)
                                    object.images[j] = $root.google.devtools.cloudbuild.v1.BuiltImage.toObject(message.images[j], options);
                            }
                            if (message.buildStepImages && message.buildStepImages.length) {
                                object.buildStepImages = [];
                                for (var j = 0; j < message.buildStepImages.length; ++j)
                                    object.buildStepImages[j] = message.buildStepImages[j];
                            }
                            if (message.artifactManifest != null && message.hasOwnProperty("artifactManifest"))
                                object.artifactManifest = message.artifactManifest;
                            if (message.numArtifacts != null && message.hasOwnProperty("numArtifacts"))
                                if (typeof message.numArtifacts === "number")
                                    object.numArtifacts = options.longs === String ? String(message.numArtifacts) : message.numArtifacts;
                                else
                                    object.numArtifacts = options.longs === String ? $util.Long.prototype.toString.call(message.numArtifacts) : options.longs === Number ? new $util.LongBits(message.numArtifacts.low >>> 0, message.numArtifacts.high >>> 0).toNumber() : message.numArtifacts;
                            if (message.buildStepOutputs && message.buildStepOutputs.length) {
                                object.buildStepOutputs = [];
                                for (var j = 0; j < message.buildStepOutputs.length; ++j)
                                    object.buildStepOutputs[j] = options.bytes === String ? $util.base64.encode(message.buildStepOutputs[j], 0, message.buildStepOutputs[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.buildStepOutputs[j]) : message.buildStepOutputs[j];
                            }
                            if (message.artifactTiming != null && message.hasOwnProperty("artifactTiming"))
                                object.artifactTiming = $root.google.devtools.cloudbuild.v1.TimeSpan.toObject(message.artifactTiming, options);
                            if (message.pythonPackages && message.pythonPackages.length) {
                                object.pythonPackages = [];
                                for (var j = 0; j < message.pythonPackages.length; ++j)
                                    object.pythonPackages[j] = $root.google.devtools.cloudbuild.v1.UploadedPythonPackage.toObject(message.pythonPackages[j], options);
                            }
                            if (message.mavenArtifacts && message.mavenArtifacts.length) {
                                object.mavenArtifacts = [];
                                for (var j = 0; j < message.mavenArtifacts.length; ++j)
                                    object.mavenArtifacts[j] = $root.google.devtools.cloudbuild.v1.UploadedMavenArtifact.toObject(message.mavenArtifacts[j], options);
                            }
                            if (message.goModules && message.goModules.length) {
                                object.goModules = [];
                                for (var j = 0; j < message.goModules.length; ++j)
                                    object.goModules[j] = $root.google.devtools.cloudbuild.v1.UploadedGoModule.toObject(message.goModules[j], options);
                            }
                            if (message.npmPackages && message.npmPackages.length) {
                                object.npmPackages = [];
                                for (var j = 0; j < message.npmPackages.length; ++j)
                                    object.npmPackages[j] = $root.google.devtools.cloudbuild.v1.UploadedNpmPackage.toObject(message.npmPackages[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Results to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Results.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Results
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.Results
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Results.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Results";
                        };
    
                        return Results;
                    })();
    
                    v1.ArtifactResult = (function() {
    
                        /**
                         * Properties of an ArtifactResult.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IArtifactResult
                         * @property {string|null} [location] ArtifactResult location
                         * @property {Array.<google.devtools.cloudbuild.v1.IFileHashes>|null} [fileHash] ArtifactResult fileHash
                         */
    
                        /**
                         * Constructs a new ArtifactResult.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents an ArtifactResult.
                         * @implements IArtifactResult
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IArtifactResult=} [properties] Properties to set
                         */
                        function ArtifactResult(properties) {
                            this.fileHash = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ArtifactResult location.
                         * @member {string} location
                         * @memberof google.devtools.cloudbuild.v1.ArtifactResult
                         * @instance
                         */
                        ArtifactResult.prototype.location = "";
    
                        /**
                         * ArtifactResult fileHash.
                         * @member {Array.<google.devtools.cloudbuild.v1.IFileHashes>} fileHash
                         * @memberof google.devtools.cloudbuild.v1.ArtifactResult
                         * @instance
                         */
                        ArtifactResult.prototype.fileHash = $util.emptyArray;
    
                        /**
                         * Creates a new ArtifactResult instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.ArtifactResult
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IArtifactResult=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.ArtifactResult} ArtifactResult instance
                         */
                        ArtifactResult.create = function create(properties) {
                            return new ArtifactResult(properties);
                        };
    
                        /**
                         * Encodes the specified ArtifactResult message. Does not implicitly {@link google.devtools.cloudbuild.v1.ArtifactResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.ArtifactResult
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IArtifactResult} message ArtifactResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ArtifactResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.location);
                            if (message.fileHash != null && message.fileHash.length)
                                for (var i = 0; i < message.fileHash.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.FileHashes.encode(message.fileHash[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ArtifactResult message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.ArtifactResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ArtifactResult
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IArtifactResult} message ArtifactResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ArtifactResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ArtifactResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.ArtifactResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.ArtifactResult} ArtifactResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ArtifactResult.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.ArtifactResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.location = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.fileHash && message.fileHash.length))
                                            message.fileHash = [];
                                        message.fileHash.push($root.google.devtools.cloudbuild.v1.FileHashes.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ArtifactResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ArtifactResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.ArtifactResult} ArtifactResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ArtifactResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ArtifactResult message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.ArtifactResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ArtifactResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            if (message.fileHash != null && message.hasOwnProperty("fileHash")) {
                                if (!Array.isArray(message.fileHash))
                                    return "fileHash: array expected";
                                for (var i = 0; i < message.fileHash.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.FileHashes.verify(message.fileHash[i]);
                                    if (error)
                                        return "fileHash." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ArtifactResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.ArtifactResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.ArtifactResult} ArtifactResult
                         */
                        ArtifactResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.ArtifactResult)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.ArtifactResult();
                            if (object.location != null)
                                message.location = String(object.location);
                            if (object.fileHash) {
                                if (!Array.isArray(object.fileHash))
                                    throw TypeError(".google.devtools.cloudbuild.v1.ArtifactResult.fileHash: array expected");
                                message.fileHash = [];
                                for (var i = 0; i < object.fileHash.length; ++i) {
                                    if (typeof object.fileHash[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.ArtifactResult.fileHash: object expected");
                                    message.fileHash[i] = $root.google.devtools.cloudbuild.v1.FileHashes.fromObject(object.fileHash[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ArtifactResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.ArtifactResult
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ArtifactResult} message ArtifactResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ArtifactResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.fileHash = [];
                            if (options.defaults)
                                object.location = "";
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            if (message.fileHash && message.fileHash.length) {
                                object.fileHash = [];
                                for (var j = 0; j < message.fileHash.length; ++j)
                                    object.fileHash[j] = $root.google.devtools.cloudbuild.v1.FileHashes.toObject(message.fileHash[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ArtifactResult to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.ArtifactResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ArtifactResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ArtifactResult
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.ArtifactResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ArtifactResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.ArtifactResult";
                        };
    
                        return ArtifactResult;
                    })();
    
                    v1.Build = (function() {
    
                        /**
                         * Properties of a Build.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IBuild
                         * @property {string|null} [name] Build name
                         * @property {string|null} [id] Build id
                         * @property {string|null} [projectId] Build projectId
                         * @property {google.devtools.cloudbuild.v1.Build.Status|null} [status] Build status
                         * @property {string|null} [statusDetail] Build statusDetail
                         * @property {google.devtools.cloudbuild.v1.ISource|null} [source] Build source
                         * @property {Array.<google.devtools.cloudbuild.v1.IBuildStep>|null} [steps] Build steps
                         * @property {google.devtools.cloudbuild.v1.IResults|null} [results] Build results
                         * @property {google.protobuf.ITimestamp|null} [createTime] Build createTime
                         * @property {google.protobuf.ITimestamp|null} [startTime] Build startTime
                         * @property {google.protobuf.ITimestamp|null} [finishTime] Build finishTime
                         * @property {google.protobuf.IDuration|null} [timeout] Build timeout
                         * @property {Array.<string>|null} [images] Build images
                         * @property {google.protobuf.IDuration|null} [queueTtl] Build queueTtl
                         * @property {google.devtools.cloudbuild.v1.IArtifacts|null} [artifacts] Build artifacts
                         * @property {string|null} [logsBucket] Build logsBucket
                         * @property {google.devtools.cloudbuild.v1.ISourceProvenance|null} [sourceProvenance] Build sourceProvenance
                         * @property {string|null} [buildTriggerId] Build buildTriggerId
                         * @property {google.devtools.cloudbuild.v1.IBuildOptions|null} [options] Build options
                         * @property {string|null} [logUrl] Build logUrl
                         * @property {Object.<string,string>|null} [substitutions] Build substitutions
                         * @property {Array.<string>|null} [tags] Build tags
                         * @property {Array.<google.devtools.cloudbuild.v1.ISecret>|null} [secrets] Build secrets
                         * @property {Object.<string,google.devtools.cloudbuild.v1.ITimeSpan>|null} [timing] Build timing
                         * @property {google.devtools.cloudbuild.v1.IBuildApproval|null} [approval] Build approval
                         * @property {string|null} [serviceAccount] Build serviceAccount
                         * @property {google.devtools.cloudbuild.v1.ISecrets|null} [availableSecrets] Build availableSecrets
                         * @property {Array.<google.devtools.cloudbuild.v1.Build.IWarning>|null} [warnings] Build warnings
                         * @property {google.devtools.cloudbuild.v1.IGitConfig|null} [gitConfig] Build gitConfig
                         * @property {google.devtools.cloudbuild.v1.Build.IFailureInfo|null} [failureInfo] Build failureInfo
                         * @property {Array.<google.devtools.cloudbuild.v1.IDependency>|null} [dependencies] Build dependencies
                         */
    
                        /**
                         * Constructs a new Build.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a Build.
                         * @implements IBuild
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IBuild=} [properties] Properties to set
                         */
                        function Build(properties) {
                            this.steps = [];
                            this.images = [];
                            this.substitutions = {};
                            this.tags = [];
                            this.secrets = [];
                            this.timing = {};
                            this.warnings = [];
                            this.dependencies = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Build name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.name = "";
    
                        /**
                         * Build id.
                         * @member {string} id
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.id = "";
    
                        /**
                         * Build projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.projectId = "";
    
                        /**
                         * Build status.
                         * @member {google.devtools.cloudbuild.v1.Build.Status} status
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.status = 0;
    
                        /**
                         * Build statusDetail.
                         * @member {string} statusDetail
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.statusDetail = "";
    
                        /**
                         * Build source.
                         * @member {google.devtools.cloudbuild.v1.ISource|null|undefined} source
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.source = null;
    
                        /**
                         * Build steps.
                         * @member {Array.<google.devtools.cloudbuild.v1.IBuildStep>} steps
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.steps = $util.emptyArray;
    
                        /**
                         * Build results.
                         * @member {google.devtools.cloudbuild.v1.IResults|null|undefined} results
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.results = null;
    
                        /**
                         * Build createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.createTime = null;
    
                        /**
                         * Build startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.startTime = null;
    
                        /**
                         * Build finishTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} finishTime
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.finishTime = null;
    
                        /**
                         * Build timeout.
                         * @member {google.protobuf.IDuration|null|undefined} timeout
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.timeout = null;
    
                        /**
                         * Build images.
                         * @member {Array.<string>} images
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.images = $util.emptyArray;
    
                        /**
                         * Build queueTtl.
                         * @member {google.protobuf.IDuration|null|undefined} queueTtl
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.queueTtl = null;
    
                        /**
                         * Build artifacts.
                         * @member {google.devtools.cloudbuild.v1.IArtifacts|null|undefined} artifacts
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.artifacts = null;
    
                        /**
                         * Build logsBucket.
                         * @member {string} logsBucket
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.logsBucket = "";
    
                        /**
                         * Build sourceProvenance.
                         * @member {google.devtools.cloudbuild.v1.ISourceProvenance|null|undefined} sourceProvenance
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.sourceProvenance = null;
    
                        /**
                         * Build buildTriggerId.
                         * @member {string} buildTriggerId
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.buildTriggerId = "";
    
                        /**
                         * Build options.
                         * @member {google.devtools.cloudbuild.v1.IBuildOptions|null|undefined} options
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.options = null;
    
                        /**
                         * Build logUrl.
                         * @member {string} logUrl
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.logUrl = "";
    
                        /**
                         * Build substitutions.
                         * @member {Object.<string,string>} substitutions
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.substitutions = $util.emptyObject;
    
                        /**
                         * Build tags.
                         * @member {Array.<string>} tags
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.tags = $util.emptyArray;
    
                        /**
                         * Build secrets.
                         * @member {Array.<google.devtools.cloudbuild.v1.ISecret>} secrets
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.secrets = $util.emptyArray;
    
                        /**
                         * Build timing.
                         * @member {Object.<string,google.devtools.cloudbuild.v1.ITimeSpan>} timing
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.timing = $util.emptyObject;
    
                        /**
                         * Build approval.
                         * @member {google.devtools.cloudbuild.v1.IBuildApproval|null|undefined} approval
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.approval = null;
    
                        /**
                         * Build serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.serviceAccount = "";
    
                        /**
                         * Build availableSecrets.
                         * @member {google.devtools.cloudbuild.v1.ISecrets|null|undefined} availableSecrets
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.availableSecrets = null;
    
                        /**
                         * Build warnings.
                         * @member {Array.<google.devtools.cloudbuild.v1.Build.IWarning>} warnings
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.warnings = $util.emptyArray;
    
                        /**
                         * Build gitConfig.
                         * @member {google.devtools.cloudbuild.v1.IGitConfig|null|undefined} gitConfig
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.gitConfig = null;
    
                        /**
                         * Build failureInfo.
                         * @member {google.devtools.cloudbuild.v1.Build.IFailureInfo|null|undefined} failureInfo
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.failureInfo = null;
    
                        /**
                         * Build dependencies.
                         * @member {Array.<google.devtools.cloudbuild.v1.IDependency>} dependencies
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         */
                        Build.prototype.dependencies = $util.emptyArray;
    
                        /**
                         * Creates a new Build instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuild=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.Build} Build instance
                         */
                        Build.create = function create(properties) {
                            return new Build(properties);
                        };
    
                        /**
                         * Encodes the specified Build message. Does not implicitly {@link google.devtools.cloudbuild.v1.Build.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuild} message Build message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Build.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.status);
                            if (message.source != null && Object.hasOwnProperty.call(message, "source"))
                                $root.google.devtools.cloudbuild.v1.Source.encode(message.source, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.finishTime != null && Object.hasOwnProperty.call(message, "finishTime"))
                                $root.google.protobuf.Timestamp.encode(message.finishTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.results != null && Object.hasOwnProperty.call(message, "results"))
                                $root.google.devtools.cloudbuild.v1.Results.encode(message.results, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.steps != null && message.steps.length)
                                for (var i = 0; i < message.steps.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.BuildStep.encode(message.steps[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                                $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.images != null && message.images.length)
                                for (var i = 0; i < message.images.length; ++i)
                                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.images[i]);
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.projectId);
                            if (message.logsBucket != null && Object.hasOwnProperty.call(message, "logsBucket"))
                                writer.uint32(/* id 19, wireType 2 =*/154).string(message.logsBucket);
                            if (message.sourceProvenance != null && Object.hasOwnProperty.call(message, "sourceProvenance"))
                                $root.google.devtools.cloudbuild.v1.SourceProvenance.encode(message.sourceProvenance, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                            if (message.buildTriggerId != null && Object.hasOwnProperty.call(message, "buildTriggerId"))
                                writer.uint32(/* id 22, wireType 2 =*/178).string(message.buildTriggerId);
                            if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                                $root.google.devtools.cloudbuild.v1.BuildOptions.encode(message.options, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            if (message.statusDetail != null && Object.hasOwnProperty.call(message, "statusDetail"))
                                writer.uint32(/* id 24, wireType 2 =*/194).string(message.statusDetail);
                            if (message.logUrl != null && Object.hasOwnProperty.call(message, "logUrl"))
                                writer.uint32(/* id 25, wireType 2 =*/202).string(message.logUrl);
                            if (message.substitutions != null && Object.hasOwnProperty.call(message, "substitutions"))
                                for (var keys = Object.keys(message.substitutions), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 29, wireType 2 =*/234).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.substitutions[keys[i]]).ldelim();
                            if (message.tags != null && message.tags.length)
                                for (var i = 0; i < message.tags.length; ++i)
                                    writer.uint32(/* id 31, wireType 2 =*/250).string(message.tags[i]);
                            if (message.secrets != null && message.secrets.length)
                                for (var i = 0; i < message.secrets.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.Secret.encode(message.secrets[i], writer.uint32(/* id 32, wireType 2 =*/258).fork()).ldelim();
                            if (message.timing != null && Object.hasOwnProperty.call(message, "timing"))
                                for (var keys = Object.keys(message.timing), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 33, wireType 2 =*/266).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.devtools.cloudbuild.v1.TimeSpan.encode(message.timing[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.artifacts != null && Object.hasOwnProperty.call(message, "artifacts"))
                                $root.google.devtools.cloudbuild.v1.Artifacts.encode(message.artifacts, writer.uint32(/* id 37, wireType 2 =*/298).fork()).ldelim();
                            if (message.queueTtl != null && Object.hasOwnProperty.call(message, "queueTtl"))
                                $root.google.protobuf.Duration.encode(message.queueTtl, writer.uint32(/* id 40, wireType 2 =*/322).fork()).ldelim();
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 42, wireType 2 =*/338).string(message.serviceAccount);
                            if (message.approval != null && Object.hasOwnProperty.call(message, "approval"))
                                $root.google.devtools.cloudbuild.v1.BuildApproval.encode(message.approval, writer.uint32(/* id 44, wireType 2 =*/354).fork()).ldelim();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 45, wireType 2 =*/362).string(message.name);
                            if (message.availableSecrets != null && Object.hasOwnProperty.call(message, "availableSecrets"))
                                $root.google.devtools.cloudbuild.v1.Secrets.encode(message.availableSecrets, writer.uint32(/* id 47, wireType 2 =*/378).fork()).ldelim();
                            if (message.gitConfig != null && Object.hasOwnProperty.call(message, "gitConfig"))
                                $root.google.devtools.cloudbuild.v1.GitConfig.encode(message.gitConfig, writer.uint32(/* id 48, wireType 2 =*/386).fork()).ldelim();
                            if (message.warnings != null && message.warnings.length)
                                for (var i = 0; i < message.warnings.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.Build.Warning.encode(message.warnings[i], writer.uint32(/* id 49, wireType 2 =*/394).fork()).ldelim();
                            if (message.failureInfo != null && Object.hasOwnProperty.call(message, "failureInfo"))
                                $root.google.devtools.cloudbuild.v1.Build.FailureInfo.encode(message.failureInfo, writer.uint32(/* id 51, wireType 2 =*/410).fork()).ldelim();
                            if (message.dependencies != null && message.dependencies.length)
                                for (var i = 0; i < message.dependencies.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.Dependency.encode(message.dependencies[i], writer.uint32(/* id 56, wireType 2 =*/450).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Build message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Build.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuild} message Build message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Build.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Build message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.Build} Build
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Build.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Build(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 45: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 16: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.status = reader.int32();
                                        break;
                                    }
                                case 24: {
                                        message.statusDetail = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.source = $root.google.devtools.cloudbuild.v1.Source.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        if (!(message.steps && message.steps.length))
                                            message.steps = [];
                                        message.steps.push($root.google.devtools.cloudbuild.v1.BuildStep.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 10: {
                                        message.results = $root.google.devtools.cloudbuild.v1.Results.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.finishTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        if (!(message.images && message.images.length))
                                            message.images = [];
                                        message.images.push(reader.string());
                                        break;
                                    }
                                case 40: {
                                        message.queueTtl = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 37: {
                                        message.artifacts = $root.google.devtools.cloudbuild.v1.Artifacts.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        message.logsBucket = reader.string();
                                        break;
                                    }
                                case 21: {
                                        message.sourceProvenance = $root.google.devtools.cloudbuild.v1.SourceProvenance.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 22: {
                                        message.buildTriggerId = reader.string();
                                        break;
                                    }
                                case 23: {
                                        message.options = $root.google.devtools.cloudbuild.v1.BuildOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 25: {
                                        message.logUrl = reader.string();
                                        break;
                                    }
                                case 29: {
                                        if (message.substitutions === $util.emptyObject)
                                            message.substitutions = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.substitutions[key] = value;
                                        break;
                                    }
                                case 31: {
                                        if (!(message.tags && message.tags.length))
                                            message.tags = [];
                                        message.tags.push(reader.string());
                                        break;
                                    }
                                case 32: {
                                        if (!(message.secrets && message.secrets.length))
                                            message.secrets = [];
                                        message.secrets.push($root.google.devtools.cloudbuild.v1.Secret.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 33: {
                                        if (message.timing === $util.emptyObject)
                                            message.timing = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.devtools.cloudbuild.v1.TimeSpan.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.timing[key] = value;
                                        break;
                                    }
                                case 44: {
                                        message.approval = $root.google.devtools.cloudbuild.v1.BuildApproval.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 42: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 47: {
                                        message.availableSecrets = $root.google.devtools.cloudbuild.v1.Secrets.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 49: {
                                        if (!(message.warnings && message.warnings.length))
                                            message.warnings = [];
                                        message.warnings.push($root.google.devtools.cloudbuild.v1.Build.Warning.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 48: {
                                        message.gitConfig = $root.google.devtools.cloudbuild.v1.GitConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 51: {
                                        message.failureInfo = $root.google.devtools.cloudbuild.v1.Build.FailureInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 56: {
                                        if (!(message.dependencies && message.dependencies.length))
                                            message.dependencies = [];
                                        message.dependencies.push($root.google.devtools.cloudbuild.v1.Dependency.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Build message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.Build} Build
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Build.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Build message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Build.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.status != null && message.hasOwnProperty("status"))
                                switch (message.status) {
                                default:
                                    return "status: enum value expected";
                                case 0:
                                case 10:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 9:
                                    break;
                                }
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                if (!$util.isString(message.statusDetail))
                                    return "statusDetail: string expected";
                            if (message.source != null && message.hasOwnProperty("source")) {
                                var error = $root.google.devtools.cloudbuild.v1.Source.verify(message.source);
                                if (error)
                                    return "source." + error;
                            }
                            if (message.steps != null && message.hasOwnProperty("steps")) {
                                if (!Array.isArray(message.steps))
                                    return "steps: array expected";
                                for (var i = 0; i < message.steps.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.BuildStep.verify(message.steps[i]);
                                    if (error)
                                        return "steps." + error;
                                }
                            }
                            if (message.results != null && message.hasOwnProperty("results")) {
                                var error = $root.google.devtools.cloudbuild.v1.Results.verify(message.results);
                                if (error)
                                    return "results." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.finishTime != null && message.hasOwnProperty("finishTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.finishTime);
                                if (error)
                                    return "finishTime." + error;
                            }
                            if (message.timeout != null && message.hasOwnProperty("timeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.timeout);
                                if (error)
                                    return "timeout." + error;
                            }
                            if (message.images != null && message.hasOwnProperty("images")) {
                                if (!Array.isArray(message.images))
                                    return "images: array expected";
                                for (var i = 0; i < message.images.length; ++i)
                                    if (!$util.isString(message.images[i]))
                                        return "images: string[] expected";
                            }
                            if (message.queueTtl != null && message.hasOwnProperty("queueTtl")) {
                                var error = $root.google.protobuf.Duration.verify(message.queueTtl);
                                if (error)
                                    return "queueTtl." + error;
                            }
                            if (message.artifacts != null && message.hasOwnProperty("artifacts")) {
                                var error = $root.google.devtools.cloudbuild.v1.Artifacts.verify(message.artifacts);
                                if (error)
                                    return "artifacts." + error;
                            }
                            if (message.logsBucket != null && message.hasOwnProperty("logsBucket"))
                                if (!$util.isString(message.logsBucket))
                                    return "logsBucket: string expected";
                            if (message.sourceProvenance != null && message.hasOwnProperty("sourceProvenance")) {
                                var error = $root.google.devtools.cloudbuild.v1.SourceProvenance.verify(message.sourceProvenance);
                                if (error)
                                    return "sourceProvenance." + error;
                            }
                            if (message.buildTriggerId != null && message.hasOwnProperty("buildTriggerId"))
                                if (!$util.isString(message.buildTriggerId))
                                    return "buildTriggerId: string expected";
                            if (message.options != null && message.hasOwnProperty("options")) {
                                var error = $root.google.devtools.cloudbuild.v1.BuildOptions.verify(message.options);
                                if (error)
                                    return "options." + error;
                            }
                            if (message.logUrl != null && message.hasOwnProperty("logUrl"))
                                if (!$util.isString(message.logUrl))
                                    return "logUrl: string expected";
                            if (message.substitutions != null && message.hasOwnProperty("substitutions")) {
                                if (!$util.isObject(message.substitutions))
                                    return "substitutions: object expected";
                                var key = Object.keys(message.substitutions);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.substitutions[key[i]]))
                                        return "substitutions: string{k:string} expected";
                            }
                            if (message.tags != null && message.hasOwnProperty("tags")) {
                                if (!Array.isArray(message.tags))
                                    return "tags: array expected";
                                for (var i = 0; i < message.tags.length; ++i)
                                    if (!$util.isString(message.tags[i]))
                                        return "tags: string[] expected";
                            }
                            if (message.secrets != null && message.hasOwnProperty("secrets")) {
                                if (!Array.isArray(message.secrets))
                                    return "secrets: array expected";
                                for (var i = 0; i < message.secrets.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.Secret.verify(message.secrets[i]);
                                    if (error)
                                        return "secrets." + error;
                                }
                            }
                            if (message.timing != null && message.hasOwnProperty("timing")) {
                                if (!$util.isObject(message.timing))
                                    return "timing: object expected";
                                var key = Object.keys(message.timing);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.TimeSpan.verify(message.timing[key[i]]);
                                    if (error)
                                        return "timing." + error;
                                }
                            }
                            if (message.approval != null && message.hasOwnProperty("approval")) {
                                var error = $root.google.devtools.cloudbuild.v1.BuildApproval.verify(message.approval);
                                if (error)
                                    return "approval." + error;
                            }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.availableSecrets != null && message.hasOwnProperty("availableSecrets")) {
                                var error = $root.google.devtools.cloudbuild.v1.Secrets.verify(message.availableSecrets);
                                if (error)
                                    return "availableSecrets." + error;
                            }
                            if (message.warnings != null && message.hasOwnProperty("warnings")) {
                                if (!Array.isArray(message.warnings))
                                    return "warnings: array expected";
                                for (var i = 0; i < message.warnings.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.Build.Warning.verify(message.warnings[i]);
                                    if (error)
                                        return "warnings." + error;
                                }
                            }
                            if (message.gitConfig != null && message.hasOwnProperty("gitConfig")) {
                                var error = $root.google.devtools.cloudbuild.v1.GitConfig.verify(message.gitConfig);
                                if (error)
                                    return "gitConfig." + error;
                            }
                            if (message.failureInfo != null && message.hasOwnProperty("failureInfo")) {
                                var error = $root.google.devtools.cloudbuild.v1.Build.FailureInfo.verify(message.failureInfo);
                                if (error)
                                    return "failureInfo." + error;
                            }
                            if (message.dependencies != null && message.hasOwnProperty("dependencies")) {
                                if (!Array.isArray(message.dependencies))
                                    return "dependencies: array expected";
                                for (var i = 0; i < message.dependencies.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.Dependency.verify(message.dependencies[i]);
                                    if (error)
                                        return "dependencies." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Build message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.Build} Build
                         */
                        Build.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.Build)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.Build();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            switch (object.status) {
                            default:
                                if (typeof object.status === "number") {
                                    message.status = object.status;
                                    break;
                                }
                                break;
                            case "STATUS_UNKNOWN":
                            case 0:
                                message.status = 0;
                                break;
                            case "PENDING":
                            case 10:
                                message.status = 10;
                                break;
                            case "QUEUED":
                            case 1:
                                message.status = 1;
                                break;
                            case "WORKING":
                            case 2:
                                message.status = 2;
                                break;
                            case "SUCCESS":
                            case 3:
                                message.status = 3;
                                break;
                            case "FAILURE":
                            case 4:
                                message.status = 4;
                                break;
                            case "INTERNAL_ERROR":
                            case 5:
                                message.status = 5;
                                break;
                            case "TIMEOUT":
                            case 6:
                                message.status = 6;
                                break;
                            case "CANCELLED":
                            case 7:
                                message.status = 7;
                                break;
                            case "EXPIRED":
                            case 9:
                                message.status = 9;
                                break;
                            }
                            if (object.statusDetail != null)
                                message.statusDetail = String(object.statusDetail);
                            if (object.source != null) {
                                if (typeof object.source !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.source: object expected");
                                message.source = $root.google.devtools.cloudbuild.v1.Source.fromObject(object.source);
                            }
                            if (object.steps) {
                                if (!Array.isArray(object.steps))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.steps: array expected");
                                message.steps = [];
                                for (var i = 0; i < object.steps.length; ++i) {
                                    if (typeof object.steps[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Build.steps: object expected");
                                    message.steps[i] = $root.google.devtools.cloudbuild.v1.BuildStep.fromObject(object.steps[i]);
                                }
                            }
                            if (object.results != null) {
                                if (typeof object.results !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.results: object expected");
                                message.results = $root.google.devtools.cloudbuild.v1.Results.fromObject(object.results);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.finishTime != null) {
                                if (typeof object.finishTime !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.finishTime: object expected");
                                message.finishTime = $root.google.protobuf.Timestamp.fromObject(object.finishTime);
                            }
                            if (object.timeout != null) {
                                if (typeof object.timeout !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.timeout: object expected");
                                message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                            }
                            if (object.images) {
                                if (!Array.isArray(object.images))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.images: array expected");
                                message.images = [];
                                for (var i = 0; i < object.images.length; ++i)
                                    message.images[i] = String(object.images[i]);
                            }
                            if (object.queueTtl != null) {
                                if (typeof object.queueTtl !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.queueTtl: object expected");
                                message.queueTtl = $root.google.protobuf.Duration.fromObject(object.queueTtl);
                            }
                            if (object.artifacts != null) {
                                if (typeof object.artifacts !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.artifacts: object expected");
                                message.artifacts = $root.google.devtools.cloudbuild.v1.Artifacts.fromObject(object.artifacts);
                            }
                            if (object.logsBucket != null)
                                message.logsBucket = String(object.logsBucket);
                            if (object.sourceProvenance != null) {
                                if (typeof object.sourceProvenance !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.sourceProvenance: object expected");
                                message.sourceProvenance = $root.google.devtools.cloudbuild.v1.SourceProvenance.fromObject(object.sourceProvenance);
                            }
                            if (object.buildTriggerId != null)
                                message.buildTriggerId = String(object.buildTriggerId);
                            if (object.options != null) {
                                if (typeof object.options !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.options: object expected");
                                message.options = $root.google.devtools.cloudbuild.v1.BuildOptions.fromObject(object.options);
                            }
                            if (object.logUrl != null)
                                message.logUrl = String(object.logUrl);
                            if (object.substitutions) {
                                if (typeof object.substitutions !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.substitutions: object expected");
                                message.substitutions = {};
                                for (var keys = Object.keys(object.substitutions), i = 0; i < keys.length; ++i)
                                    message.substitutions[keys[i]] = String(object.substitutions[keys[i]]);
                            }
                            if (object.tags) {
                                if (!Array.isArray(object.tags))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.tags: array expected");
                                message.tags = [];
                                for (var i = 0; i < object.tags.length; ++i)
                                    message.tags[i] = String(object.tags[i]);
                            }
                            if (object.secrets) {
                                if (!Array.isArray(object.secrets))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.secrets: array expected");
                                message.secrets = [];
                                for (var i = 0; i < object.secrets.length; ++i) {
                                    if (typeof object.secrets[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Build.secrets: object expected");
                                    message.secrets[i] = $root.google.devtools.cloudbuild.v1.Secret.fromObject(object.secrets[i]);
                                }
                            }
                            if (object.timing) {
                                if (typeof object.timing !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.timing: object expected");
                                message.timing = {};
                                for (var keys = Object.keys(object.timing), i = 0; i < keys.length; ++i) {
                                    if (typeof object.timing[keys[i]] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Build.timing: object expected");
                                    message.timing[keys[i]] = $root.google.devtools.cloudbuild.v1.TimeSpan.fromObject(object.timing[keys[i]]);
                                }
                            }
                            if (object.approval != null) {
                                if (typeof object.approval !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.approval: object expected");
                                message.approval = $root.google.devtools.cloudbuild.v1.BuildApproval.fromObject(object.approval);
                            }
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            if (object.availableSecrets != null) {
                                if (typeof object.availableSecrets !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.availableSecrets: object expected");
                                message.availableSecrets = $root.google.devtools.cloudbuild.v1.Secrets.fromObject(object.availableSecrets);
                            }
                            if (object.warnings) {
                                if (!Array.isArray(object.warnings))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.warnings: array expected");
                                message.warnings = [];
                                for (var i = 0; i < object.warnings.length; ++i) {
                                    if (typeof object.warnings[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Build.warnings: object expected");
                                    message.warnings[i] = $root.google.devtools.cloudbuild.v1.Build.Warning.fromObject(object.warnings[i]);
                                }
                            }
                            if (object.gitConfig != null) {
                                if (typeof object.gitConfig !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.gitConfig: object expected");
                                message.gitConfig = $root.google.devtools.cloudbuild.v1.GitConfig.fromObject(object.gitConfig);
                            }
                            if (object.failureInfo != null) {
                                if (typeof object.failureInfo !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.failureInfo: object expected");
                                message.failureInfo = $root.google.devtools.cloudbuild.v1.Build.FailureInfo.fromObject(object.failureInfo);
                            }
                            if (object.dependencies) {
                                if (!Array.isArray(object.dependencies))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Build.dependencies: array expected");
                                message.dependencies = [];
                                for (var i = 0; i < object.dependencies.length; ++i) {
                                    if (typeof object.dependencies[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Build.dependencies: object expected");
                                    message.dependencies[i] = $root.google.devtools.cloudbuild.v1.Dependency.fromObject(object.dependencies[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Build message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @static
                         * @param {google.devtools.cloudbuild.v1.Build} message Build
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Build.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.steps = [];
                                object.images = [];
                                object.tags = [];
                                object.secrets = [];
                                object.warnings = [];
                                object.dependencies = [];
                            }
                            if (options.objects || options.defaults) {
                                object.substitutions = {};
                                object.timing = {};
                            }
                            if (options.defaults) {
                                object.id = "";
                                object.status = options.enums === String ? "STATUS_UNKNOWN" : 0;
                                object.source = null;
                                object.createTime = null;
                                object.startTime = null;
                                object.finishTime = null;
                                object.results = null;
                                object.timeout = null;
                                object.projectId = "";
                                object.logsBucket = "";
                                object.sourceProvenance = null;
                                object.buildTriggerId = "";
                                object.options = null;
                                object.statusDetail = "";
                                object.logUrl = "";
                                object.artifacts = null;
                                object.queueTtl = null;
                                object.serviceAccount = "";
                                object.approval = null;
                                object.name = "";
                                object.availableSecrets = null;
                                object.gitConfig = null;
                                object.failureInfo = null;
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = options.enums === String ? $root.google.devtools.cloudbuild.v1.Build.Status[message.status] === undefined ? message.status : $root.google.devtools.cloudbuild.v1.Build.Status[message.status] : message.status;
                            if (message.source != null && message.hasOwnProperty("source"))
                                object.source = $root.google.devtools.cloudbuild.v1.Source.toObject(message.source, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.finishTime != null && message.hasOwnProperty("finishTime"))
                                object.finishTime = $root.google.protobuf.Timestamp.toObject(message.finishTime, options);
                            if (message.results != null && message.hasOwnProperty("results"))
                                object.results = $root.google.devtools.cloudbuild.v1.Results.toObject(message.results, options);
                            if (message.steps && message.steps.length) {
                                object.steps = [];
                                for (var j = 0; j < message.steps.length; ++j)
                                    object.steps[j] = $root.google.devtools.cloudbuild.v1.BuildStep.toObject(message.steps[j], options);
                            }
                            if (message.timeout != null && message.hasOwnProperty("timeout"))
                                object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                            if (message.images && message.images.length) {
                                object.images = [];
                                for (var j = 0; j < message.images.length; ++j)
                                    object.images[j] = message.images[j];
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.logsBucket != null && message.hasOwnProperty("logsBucket"))
                                object.logsBucket = message.logsBucket;
                            if (message.sourceProvenance != null && message.hasOwnProperty("sourceProvenance"))
                                object.sourceProvenance = $root.google.devtools.cloudbuild.v1.SourceProvenance.toObject(message.sourceProvenance, options);
                            if (message.buildTriggerId != null && message.hasOwnProperty("buildTriggerId"))
                                object.buildTriggerId = message.buildTriggerId;
                            if (message.options != null && message.hasOwnProperty("options"))
                                object.options = $root.google.devtools.cloudbuild.v1.BuildOptions.toObject(message.options, options);
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                object.statusDetail = message.statusDetail;
                            if (message.logUrl != null && message.hasOwnProperty("logUrl"))
                                object.logUrl = message.logUrl;
                            var keys2;
                            if (message.substitutions && (keys2 = Object.keys(message.substitutions)).length) {
                                object.substitutions = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.substitutions[keys2[j]] = message.substitutions[keys2[j]];
                            }
                            if (message.tags && message.tags.length) {
                                object.tags = [];
                                for (var j = 0; j < message.tags.length; ++j)
                                    object.tags[j] = message.tags[j];
                            }
                            if (message.secrets && message.secrets.length) {
                                object.secrets = [];
                                for (var j = 0; j < message.secrets.length; ++j)
                                    object.secrets[j] = $root.google.devtools.cloudbuild.v1.Secret.toObject(message.secrets[j], options);
                            }
                            if (message.timing && (keys2 = Object.keys(message.timing)).length) {
                                object.timing = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.timing[keys2[j]] = $root.google.devtools.cloudbuild.v1.TimeSpan.toObject(message.timing[keys2[j]], options);
                            }
                            if (message.artifacts != null && message.hasOwnProperty("artifacts"))
                                object.artifacts = $root.google.devtools.cloudbuild.v1.Artifacts.toObject(message.artifacts, options);
                            if (message.queueTtl != null && message.hasOwnProperty("queueTtl"))
                                object.queueTtl = $root.google.protobuf.Duration.toObject(message.queueTtl, options);
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.approval != null && message.hasOwnProperty("approval"))
                                object.approval = $root.google.devtools.cloudbuild.v1.BuildApproval.toObject(message.approval, options);
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.availableSecrets != null && message.hasOwnProperty("availableSecrets"))
                                object.availableSecrets = $root.google.devtools.cloudbuild.v1.Secrets.toObject(message.availableSecrets, options);
                            if (message.gitConfig != null && message.hasOwnProperty("gitConfig"))
                                object.gitConfig = $root.google.devtools.cloudbuild.v1.GitConfig.toObject(message.gitConfig, options);
                            if (message.warnings && message.warnings.length) {
                                object.warnings = [];
                                for (var j = 0; j < message.warnings.length; ++j)
                                    object.warnings[j] = $root.google.devtools.cloudbuild.v1.Build.Warning.toObject(message.warnings[j], options);
                            }
                            if (message.failureInfo != null && message.hasOwnProperty("failureInfo"))
                                object.failureInfo = $root.google.devtools.cloudbuild.v1.Build.FailureInfo.toObject(message.failureInfo, options);
                            if (message.dependencies && message.dependencies.length) {
                                object.dependencies = [];
                                for (var j = 0; j < message.dependencies.length; ++j)
                                    object.dependencies[j] = $root.google.devtools.cloudbuild.v1.Dependency.toObject(message.dependencies[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Build to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Build.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Build
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.Build
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Build.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Build";
                        };
    
                        /**
                         * Status enum.
                         * @name google.devtools.cloudbuild.v1.Build.Status
                         * @enum {number}
                         * @property {number} STATUS_UNKNOWN=0 STATUS_UNKNOWN value
                         * @property {number} PENDING=10 PENDING value
                         * @property {number} QUEUED=1 QUEUED value
                         * @property {number} WORKING=2 WORKING value
                         * @property {number} SUCCESS=3 SUCCESS value
                         * @property {number} FAILURE=4 FAILURE value
                         * @property {number} INTERNAL_ERROR=5 INTERNAL_ERROR value
                         * @property {number} TIMEOUT=6 TIMEOUT value
                         * @property {number} CANCELLED=7 CANCELLED value
                         * @property {number} EXPIRED=9 EXPIRED value
                         */
                        Build.Status = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATUS_UNKNOWN"] = 0;
                            values[valuesById[10] = "PENDING"] = 10;
                            values[valuesById[1] = "QUEUED"] = 1;
                            values[valuesById[2] = "WORKING"] = 2;
                            values[valuesById[3] = "SUCCESS"] = 3;
                            values[valuesById[4] = "FAILURE"] = 4;
                            values[valuesById[5] = "INTERNAL_ERROR"] = 5;
                            values[valuesById[6] = "TIMEOUT"] = 6;
                            values[valuesById[7] = "CANCELLED"] = 7;
                            values[valuesById[9] = "EXPIRED"] = 9;
                            return values;
                        })();
    
                        Build.Warning = (function() {
    
                            /**
                             * Properties of a Warning.
                             * @memberof google.devtools.cloudbuild.v1.Build
                             * @interface IWarning
                             * @property {string|null} [text] Warning text
                             * @property {google.devtools.cloudbuild.v1.Build.Warning.Priority|null} [priority] Warning priority
                             */
    
                            /**
                             * Constructs a new Warning.
                             * @memberof google.devtools.cloudbuild.v1.Build
                             * @classdesc Represents a Warning.
                             * @implements IWarning
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.Build.IWarning=} [properties] Properties to set
                             */
                            function Warning(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Warning text.
                             * @member {string} text
                             * @memberof google.devtools.cloudbuild.v1.Build.Warning
                             * @instance
                             */
                            Warning.prototype.text = "";
    
                            /**
                             * Warning priority.
                             * @member {google.devtools.cloudbuild.v1.Build.Warning.Priority} priority
                             * @memberof google.devtools.cloudbuild.v1.Build.Warning
                             * @instance
                             */
                            Warning.prototype.priority = 0;
    
                            /**
                             * Creates a new Warning instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.Build.Warning
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Build.IWarning=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.Build.Warning} Warning instance
                             */
                            Warning.create = function create(properties) {
                                return new Warning(properties);
                            };
    
                            /**
                             * Encodes the specified Warning message. Does not implicitly {@link google.devtools.cloudbuild.v1.Build.Warning.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.Build.Warning
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Build.IWarning} message Warning message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Warning.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.text);
                                if (message.priority != null && Object.hasOwnProperty.call(message, "priority"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.priority);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Warning message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Build.Warning.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Build.Warning
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Build.IWarning} message Warning message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Warning.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Warning message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.Build.Warning
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.Build.Warning} Warning
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Warning.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Build.Warning();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.text = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.priority = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Warning message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Build.Warning
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.Build.Warning} Warning
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Warning.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Warning message.
                             * @function verify
                             * @memberof google.devtools.cloudbuild.v1.Build.Warning
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Warning.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.text != null && message.hasOwnProperty("text"))
                                    if (!$util.isString(message.text))
                                        return "text: string expected";
                                if (message.priority != null && message.hasOwnProperty("priority"))
                                    switch (message.priority) {
                                    default:
                                        return "priority: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a Warning message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.cloudbuild.v1.Build.Warning
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.cloudbuild.v1.Build.Warning} Warning
                             */
                            Warning.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.cloudbuild.v1.Build.Warning)
                                    return object;
                                var message = new $root.google.devtools.cloudbuild.v1.Build.Warning();
                                if (object.text != null)
                                    message.text = String(object.text);
                                switch (object.priority) {
                                default:
                                    if (typeof object.priority === "number") {
                                        message.priority = object.priority;
                                        break;
                                    }
                                    break;
                                case "PRIORITY_UNSPECIFIED":
                                case 0:
                                    message.priority = 0;
                                    break;
                                case "INFO":
                                case 1:
                                    message.priority = 1;
                                    break;
                                case "WARNING":
                                case 2:
                                    message.priority = 2;
                                    break;
                                case "ALERT":
                                case 3:
                                    message.priority = 3;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Warning message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.cloudbuild.v1.Build.Warning
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Build.Warning} message Warning
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Warning.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.text = "";
                                    object.priority = options.enums === String ? "PRIORITY_UNSPECIFIED" : 0;
                                }
                                if (message.text != null && message.hasOwnProperty("text"))
                                    object.text = message.text;
                                if (message.priority != null && message.hasOwnProperty("priority"))
                                    object.priority = options.enums === String ? $root.google.devtools.cloudbuild.v1.Build.Warning.Priority[message.priority] === undefined ? message.priority : $root.google.devtools.cloudbuild.v1.Build.Warning.Priority[message.priority] : message.priority;
                                return object;
                            };
    
                            /**
                             * Converts this Warning to JSON.
                             * @function toJSON
                             * @memberof google.devtools.cloudbuild.v1.Build.Warning
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Warning.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Warning
                             * @function getTypeUrl
                             * @memberof google.devtools.cloudbuild.v1.Build.Warning
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Warning.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Build.Warning";
                            };
    
                            /**
                             * Priority enum.
                             * @name google.devtools.cloudbuild.v1.Build.Warning.Priority
                             * @enum {number}
                             * @property {number} PRIORITY_UNSPECIFIED=0 PRIORITY_UNSPECIFIED value
                             * @property {number} INFO=1 INFO value
                             * @property {number} WARNING=2 WARNING value
                             * @property {number} ALERT=3 ALERT value
                             */
                            Warning.Priority = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "PRIORITY_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "INFO"] = 1;
                                values[valuesById[2] = "WARNING"] = 2;
                                values[valuesById[3] = "ALERT"] = 3;
                                return values;
                            })();
    
                            return Warning;
                        })();
    
                        Build.FailureInfo = (function() {
    
                            /**
                             * Properties of a FailureInfo.
                             * @memberof google.devtools.cloudbuild.v1.Build
                             * @interface IFailureInfo
                             * @property {google.devtools.cloudbuild.v1.Build.FailureInfo.FailureType|null} [type] FailureInfo type
                             * @property {string|null} [detail] FailureInfo detail
                             */
    
                            /**
                             * Constructs a new FailureInfo.
                             * @memberof google.devtools.cloudbuild.v1.Build
                             * @classdesc Represents a FailureInfo.
                             * @implements IFailureInfo
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.Build.IFailureInfo=} [properties] Properties to set
                             */
                            function FailureInfo(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FailureInfo type.
                             * @member {google.devtools.cloudbuild.v1.Build.FailureInfo.FailureType} type
                             * @memberof google.devtools.cloudbuild.v1.Build.FailureInfo
                             * @instance
                             */
                            FailureInfo.prototype.type = 0;
    
                            /**
                             * FailureInfo detail.
                             * @member {string} detail
                             * @memberof google.devtools.cloudbuild.v1.Build.FailureInfo
                             * @instance
                             */
                            FailureInfo.prototype.detail = "";
    
                            /**
                             * Creates a new FailureInfo instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.Build.FailureInfo
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Build.IFailureInfo=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.Build.FailureInfo} FailureInfo instance
                             */
                            FailureInfo.create = function create(properties) {
                                return new FailureInfo(properties);
                            };
    
                            /**
                             * Encodes the specified FailureInfo message. Does not implicitly {@link google.devtools.cloudbuild.v1.Build.FailureInfo.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.Build.FailureInfo
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Build.IFailureInfo} message FailureInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FailureInfo.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                                if (message.detail != null && Object.hasOwnProperty.call(message, "detail"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.detail);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FailureInfo message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Build.FailureInfo.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Build.FailureInfo
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Build.IFailureInfo} message FailureInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FailureInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FailureInfo message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.Build.FailureInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.Build.FailureInfo} FailureInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FailureInfo.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Build.FailureInfo();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.detail = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FailureInfo message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Build.FailureInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.Build.FailureInfo} FailureInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FailureInfo.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FailureInfo message.
                             * @function verify
                             * @memberof google.devtools.cloudbuild.v1.Build.FailureInfo
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FailureInfo.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                                if (message.detail != null && message.hasOwnProperty("detail"))
                                    if (!$util.isString(message.detail))
                                        return "detail: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a FailureInfo message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.cloudbuild.v1.Build.FailureInfo
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.cloudbuild.v1.Build.FailureInfo} FailureInfo
                             */
                            FailureInfo.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.cloudbuild.v1.Build.FailureInfo)
                                    return object;
                                var message = new $root.google.devtools.cloudbuild.v1.Build.FailureInfo();
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "FAILURE_TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "PUSH_FAILED":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "PUSH_IMAGE_NOT_FOUND":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "PUSH_NOT_AUTHORIZED":
                                case 3:
                                    message.type = 3;
                                    break;
                                case "LOGGING_FAILURE":
                                case 4:
                                    message.type = 4;
                                    break;
                                case "USER_BUILD_STEP":
                                case 5:
                                    message.type = 5;
                                    break;
                                case "FETCH_SOURCE_FAILED":
                                case 6:
                                    message.type = 6;
                                    break;
                                }
                                if (object.detail != null)
                                    message.detail = String(object.detail);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FailureInfo message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.cloudbuild.v1.Build.FailureInfo
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Build.FailureInfo} message FailureInfo
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FailureInfo.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.type = options.enums === String ? "FAILURE_TYPE_UNSPECIFIED" : 0;
                                    object.detail = "";
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.devtools.cloudbuild.v1.Build.FailureInfo.FailureType[message.type] === undefined ? message.type : $root.google.devtools.cloudbuild.v1.Build.FailureInfo.FailureType[message.type] : message.type;
                                if (message.detail != null && message.hasOwnProperty("detail"))
                                    object.detail = message.detail;
                                return object;
                            };
    
                            /**
                             * Converts this FailureInfo to JSON.
                             * @function toJSON
                             * @memberof google.devtools.cloudbuild.v1.Build.FailureInfo
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FailureInfo.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FailureInfo
                             * @function getTypeUrl
                             * @memberof google.devtools.cloudbuild.v1.Build.FailureInfo
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FailureInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Build.FailureInfo";
                            };
    
                            /**
                             * FailureType enum.
                             * @name google.devtools.cloudbuild.v1.Build.FailureInfo.FailureType
                             * @enum {number}
                             * @property {number} FAILURE_TYPE_UNSPECIFIED=0 FAILURE_TYPE_UNSPECIFIED value
                             * @property {number} PUSH_FAILED=1 PUSH_FAILED value
                             * @property {number} PUSH_IMAGE_NOT_FOUND=2 PUSH_IMAGE_NOT_FOUND value
                             * @property {number} PUSH_NOT_AUTHORIZED=3 PUSH_NOT_AUTHORIZED value
                             * @property {number} LOGGING_FAILURE=4 LOGGING_FAILURE value
                             * @property {number} USER_BUILD_STEP=5 USER_BUILD_STEP value
                             * @property {number} FETCH_SOURCE_FAILED=6 FETCH_SOURCE_FAILED value
                             */
                            FailureInfo.FailureType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "FAILURE_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "PUSH_FAILED"] = 1;
                                values[valuesById[2] = "PUSH_IMAGE_NOT_FOUND"] = 2;
                                values[valuesById[3] = "PUSH_NOT_AUTHORIZED"] = 3;
                                values[valuesById[4] = "LOGGING_FAILURE"] = 4;
                                values[valuesById[5] = "USER_BUILD_STEP"] = 5;
                                values[valuesById[6] = "FETCH_SOURCE_FAILED"] = 6;
                                return values;
                            })();
    
                            return FailureInfo;
                        })();
    
                        return Build;
                    })();
    
                    v1.Dependency = (function() {
    
                        /**
                         * Properties of a Dependency.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IDependency
                         * @property {boolean|null} [empty] Dependency empty
                         * @property {google.devtools.cloudbuild.v1.Dependency.IGitSourceDependency|null} [gitSource] Dependency gitSource
                         */
    
                        /**
                         * Constructs a new Dependency.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a Dependency.
                         * @implements IDependency
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IDependency=} [properties] Properties to set
                         */
                        function Dependency(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Dependency empty.
                         * @member {boolean|null|undefined} empty
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @instance
                         */
                        Dependency.prototype.empty = null;
    
                        /**
                         * Dependency gitSource.
                         * @member {google.devtools.cloudbuild.v1.Dependency.IGitSourceDependency|null|undefined} gitSource
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @instance
                         */
                        Dependency.prototype.gitSource = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Dependency dep.
                         * @member {"empty"|"gitSource"|undefined} dep
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @instance
                         */
                        Object.defineProperty(Dependency.prototype, "dep", {
                            get: $util.oneOfGetter($oneOfFields = ["empty", "gitSource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Dependency instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IDependency=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.Dependency} Dependency instance
                         */
                        Dependency.create = function create(properties) {
                            return new Dependency(properties);
                        };
    
                        /**
                         * Encodes the specified Dependency message. Does not implicitly {@link google.devtools.cloudbuild.v1.Dependency.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IDependency} message Dependency message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Dependency.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.empty != null && Object.hasOwnProperty.call(message, "empty"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.empty);
                            if (message.gitSource != null && Object.hasOwnProperty.call(message, "gitSource"))
                                $root.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency.encode(message.gitSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Dependency message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Dependency.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IDependency} message Dependency message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Dependency.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Dependency message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.Dependency} Dependency
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Dependency.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Dependency();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.empty = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.gitSource = $root.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Dependency message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.Dependency} Dependency
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Dependency.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Dependency message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Dependency.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.empty != null && message.hasOwnProperty("empty")) {
                                properties.dep = 1;
                                if (typeof message.empty !== "boolean")
                                    return "empty: boolean expected";
                            }
                            if (message.gitSource != null && message.hasOwnProperty("gitSource")) {
                                if (properties.dep === 1)
                                    return "dep: multiple values";
                                properties.dep = 1;
                                {
                                    var error = $root.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency.verify(message.gitSource);
                                    if (error)
                                        return "gitSource." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Dependency message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.Dependency} Dependency
                         */
                        Dependency.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.Dependency)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.Dependency();
                            if (object.empty != null)
                                message.empty = Boolean(object.empty);
                            if (object.gitSource != null) {
                                if (typeof object.gitSource !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Dependency.gitSource: object expected");
                                message.gitSource = $root.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency.fromObject(object.gitSource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Dependency message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @static
                         * @param {google.devtools.cloudbuild.v1.Dependency} message Dependency
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Dependency.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.empty != null && message.hasOwnProperty("empty")) {
                                object.empty = message.empty;
                                if (options.oneofs)
                                    object.dep = "empty";
                            }
                            if (message.gitSource != null && message.hasOwnProperty("gitSource")) {
                                object.gitSource = $root.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency.toObject(message.gitSource, options);
                                if (options.oneofs)
                                    object.dep = "gitSource";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Dependency to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Dependency.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Dependency
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.Dependency
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Dependency.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Dependency";
                        };
    
                        Dependency.GitSourceDependency = (function() {
    
                            /**
                             * Properties of a GitSourceDependency.
                             * @memberof google.devtools.cloudbuild.v1.Dependency
                             * @interface IGitSourceDependency
                             * @property {google.devtools.cloudbuild.v1.Dependency.IGitSourceRepository|null} [repository] GitSourceDependency repository
                             * @property {string|null} [revision] GitSourceDependency revision
                             * @property {boolean|null} [recurseSubmodules] GitSourceDependency recurseSubmodules
                             * @property {number|Long|null} [depth] GitSourceDependency depth
                             * @property {string|null} [destPath] GitSourceDependency destPath
                             */
    
                            /**
                             * Constructs a new GitSourceDependency.
                             * @memberof google.devtools.cloudbuild.v1.Dependency
                             * @classdesc Represents a GitSourceDependency.
                             * @implements IGitSourceDependency
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.Dependency.IGitSourceDependency=} [properties] Properties to set
                             */
                            function GitSourceDependency(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GitSourceDependency repository.
                             * @member {google.devtools.cloudbuild.v1.Dependency.IGitSourceRepository|null|undefined} repository
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @instance
                             */
                            GitSourceDependency.prototype.repository = null;
    
                            /**
                             * GitSourceDependency revision.
                             * @member {string} revision
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @instance
                             */
                            GitSourceDependency.prototype.revision = "";
    
                            /**
                             * GitSourceDependency recurseSubmodules.
                             * @member {boolean} recurseSubmodules
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @instance
                             */
                            GitSourceDependency.prototype.recurseSubmodules = false;
    
                            /**
                             * GitSourceDependency depth.
                             * @member {number|Long} depth
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @instance
                             */
                            GitSourceDependency.prototype.depth = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * GitSourceDependency destPath.
                             * @member {string} destPath
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @instance
                             */
                            GitSourceDependency.prototype.destPath = "";
    
                            /**
                             * Creates a new GitSourceDependency instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Dependency.IGitSourceDependency=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.Dependency.GitSourceDependency} GitSourceDependency instance
                             */
                            GitSourceDependency.create = function create(properties) {
                                return new GitSourceDependency(properties);
                            };
    
                            /**
                             * Encodes the specified GitSourceDependency message. Does not implicitly {@link google.devtools.cloudbuild.v1.Dependency.GitSourceDependency.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Dependency.IGitSourceDependency} message GitSourceDependency message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GitSourceDependency.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                    $root.google.devtools.cloudbuild.v1.Dependency.GitSourceRepository.encode(message.repository, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.revision);
                                if (message.recurseSubmodules != null && Object.hasOwnProperty.call(message, "recurseSubmodules"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.recurseSubmodules);
                                if (message.depth != null && Object.hasOwnProperty.call(message, "depth"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int64(message.depth);
                                if (message.destPath != null && Object.hasOwnProperty.call(message, "destPath"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.destPath);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GitSourceDependency message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Dependency.GitSourceDependency.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Dependency.IGitSourceDependency} message GitSourceDependency message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GitSourceDependency.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GitSourceDependency message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.Dependency.GitSourceDependency} GitSourceDependency
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GitSourceDependency.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.repository = $root.google.devtools.cloudbuild.v1.Dependency.GitSourceRepository.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.revision = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.recurseSubmodules = reader.bool();
                                            break;
                                        }
                                    case 4: {
                                            message.depth = reader.int64();
                                            break;
                                        }
                                    case 5: {
                                            message.destPath = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GitSourceDependency message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.Dependency.GitSourceDependency} GitSourceDependency
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GitSourceDependency.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GitSourceDependency message.
                             * @function verify
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GitSourceDependency.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.repository != null && message.hasOwnProperty("repository")) {
                                    var error = $root.google.devtools.cloudbuild.v1.Dependency.GitSourceRepository.verify(message.repository);
                                    if (error)
                                        return "repository." + error;
                                }
                                if (message.revision != null && message.hasOwnProperty("revision"))
                                    if (!$util.isString(message.revision))
                                        return "revision: string expected";
                                if (message.recurseSubmodules != null && message.hasOwnProperty("recurseSubmodules"))
                                    if (typeof message.recurseSubmodules !== "boolean")
                                        return "recurseSubmodules: boolean expected";
                                if (message.depth != null && message.hasOwnProperty("depth"))
                                    if (!$util.isInteger(message.depth) && !(message.depth && $util.isInteger(message.depth.low) && $util.isInteger(message.depth.high)))
                                        return "depth: integer|Long expected";
                                if (message.destPath != null && message.hasOwnProperty("destPath"))
                                    if (!$util.isString(message.destPath))
                                        return "destPath: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GitSourceDependency message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.cloudbuild.v1.Dependency.GitSourceDependency} GitSourceDependency
                             */
                            GitSourceDependency.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency)
                                    return object;
                                var message = new $root.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency();
                                if (object.repository != null) {
                                    if (typeof object.repository !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Dependency.GitSourceDependency.repository: object expected");
                                    message.repository = $root.google.devtools.cloudbuild.v1.Dependency.GitSourceRepository.fromObject(object.repository);
                                }
                                if (object.revision != null)
                                    message.revision = String(object.revision);
                                if (object.recurseSubmodules != null)
                                    message.recurseSubmodules = Boolean(object.recurseSubmodules);
                                if (object.depth != null)
                                    if ($util.Long)
                                        (message.depth = $util.Long.fromValue(object.depth)).unsigned = false;
                                    else if (typeof object.depth === "string")
                                        message.depth = parseInt(object.depth, 10);
                                    else if (typeof object.depth === "number")
                                        message.depth = object.depth;
                                    else if (typeof object.depth === "object")
                                        message.depth = new $util.LongBits(object.depth.low >>> 0, object.depth.high >>> 0).toNumber();
                                if (object.destPath != null)
                                    message.destPath = String(object.destPath);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GitSourceDependency message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Dependency.GitSourceDependency} message GitSourceDependency
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GitSourceDependency.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.repository = null;
                                    object.revision = "";
                                    object.recurseSubmodules = false;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.depth = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.depth = options.longs === String ? "0" : 0;
                                    object.destPath = "";
                                }
                                if (message.repository != null && message.hasOwnProperty("repository"))
                                    object.repository = $root.google.devtools.cloudbuild.v1.Dependency.GitSourceRepository.toObject(message.repository, options);
                                if (message.revision != null && message.hasOwnProperty("revision"))
                                    object.revision = message.revision;
                                if (message.recurseSubmodules != null && message.hasOwnProperty("recurseSubmodules"))
                                    object.recurseSubmodules = message.recurseSubmodules;
                                if (message.depth != null && message.hasOwnProperty("depth"))
                                    if (typeof message.depth === "number")
                                        object.depth = options.longs === String ? String(message.depth) : message.depth;
                                    else
                                        object.depth = options.longs === String ? $util.Long.prototype.toString.call(message.depth) : options.longs === Number ? new $util.LongBits(message.depth.low >>> 0, message.depth.high >>> 0).toNumber() : message.depth;
                                if (message.destPath != null && message.hasOwnProperty("destPath"))
                                    object.destPath = message.destPath;
                                return object;
                            };
    
                            /**
                             * Converts this GitSourceDependency to JSON.
                             * @function toJSON
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GitSourceDependency.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GitSourceDependency
                             * @function getTypeUrl
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceDependency
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GitSourceDependency.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Dependency.GitSourceDependency";
                            };
    
                            return GitSourceDependency;
                        })();
    
                        Dependency.GitSourceRepository = (function() {
    
                            /**
                             * Properties of a GitSourceRepository.
                             * @memberof google.devtools.cloudbuild.v1.Dependency
                             * @interface IGitSourceRepository
                             * @property {string|null} [url] GitSourceRepository url
                             * @property {string|null} [developerConnect] GitSourceRepository developerConnect
                             */
    
                            /**
                             * Constructs a new GitSourceRepository.
                             * @memberof google.devtools.cloudbuild.v1.Dependency
                             * @classdesc Represents a GitSourceRepository.
                             * @implements IGitSourceRepository
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.Dependency.IGitSourceRepository=} [properties] Properties to set
                             */
                            function GitSourceRepository(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GitSourceRepository url.
                             * @member {string|null|undefined} url
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @instance
                             */
                            GitSourceRepository.prototype.url = null;
    
                            /**
                             * GitSourceRepository developerConnect.
                             * @member {string|null|undefined} developerConnect
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @instance
                             */
                            GitSourceRepository.prototype.developerConnect = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * GitSourceRepository repotype.
                             * @member {"url"|"developerConnect"|undefined} repotype
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @instance
                             */
                            Object.defineProperty(GitSourceRepository.prototype, "repotype", {
                                get: $util.oneOfGetter($oneOfFields = ["url", "developerConnect"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new GitSourceRepository instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Dependency.IGitSourceRepository=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.Dependency.GitSourceRepository} GitSourceRepository instance
                             */
                            GitSourceRepository.create = function create(properties) {
                                return new GitSourceRepository(properties);
                            };
    
                            /**
                             * Encodes the specified GitSourceRepository message. Does not implicitly {@link google.devtools.cloudbuild.v1.Dependency.GitSourceRepository.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Dependency.IGitSourceRepository} message GitSourceRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GitSourceRepository.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.url);
                                if (message.developerConnect != null && Object.hasOwnProperty.call(message, "developerConnect"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.developerConnect);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GitSourceRepository message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Dependency.GitSourceRepository.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Dependency.IGitSourceRepository} message GitSourceRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GitSourceRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GitSourceRepository message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.Dependency.GitSourceRepository} GitSourceRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GitSourceRepository.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Dependency.GitSourceRepository();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.url = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.developerConnect = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GitSourceRepository message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.Dependency.GitSourceRepository} GitSourceRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GitSourceRepository.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GitSourceRepository message.
                             * @function verify
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GitSourceRepository.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.url != null && message.hasOwnProperty("url")) {
                                    properties.repotype = 1;
                                    if (!$util.isString(message.url))
                                        return "url: string expected";
                                }
                                if (message.developerConnect != null && message.hasOwnProperty("developerConnect")) {
                                    if (properties.repotype === 1)
                                        return "repotype: multiple values";
                                    properties.repotype = 1;
                                    if (!$util.isString(message.developerConnect))
                                        return "developerConnect: string expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a GitSourceRepository message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.cloudbuild.v1.Dependency.GitSourceRepository} GitSourceRepository
                             */
                            GitSourceRepository.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.cloudbuild.v1.Dependency.GitSourceRepository)
                                    return object;
                                var message = new $root.google.devtools.cloudbuild.v1.Dependency.GitSourceRepository();
                                if (object.url != null)
                                    message.url = String(object.url);
                                if (object.developerConnect != null)
                                    message.developerConnect = String(object.developerConnect);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GitSourceRepository message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Dependency.GitSourceRepository} message GitSourceRepository
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GitSourceRepository.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.url != null && message.hasOwnProperty("url")) {
                                    object.url = message.url;
                                    if (options.oneofs)
                                        object.repotype = "url";
                                }
                                if (message.developerConnect != null && message.hasOwnProperty("developerConnect")) {
                                    object.developerConnect = message.developerConnect;
                                    if (options.oneofs)
                                        object.repotype = "developerConnect";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this GitSourceRepository to JSON.
                             * @function toJSON
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GitSourceRepository.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GitSourceRepository
                             * @function getTypeUrl
                             * @memberof google.devtools.cloudbuild.v1.Dependency.GitSourceRepository
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GitSourceRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Dependency.GitSourceRepository";
                            };
    
                            return GitSourceRepository;
                        })();
    
                        return Dependency;
                    })();
    
                    v1.GitConfig = (function() {
    
                        /**
                         * Properties of a GitConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IGitConfig
                         * @property {google.devtools.cloudbuild.v1.GitConfig.IHttpConfig|null} [http] GitConfig http
                         */
    
                        /**
                         * Constructs a new GitConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a GitConfig.
                         * @implements IGitConfig
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IGitConfig=} [properties] Properties to set
                         */
                        function GitConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GitConfig http.
                         * @member {google.devtools.cloudbuild.v1.GitConfig.IHttpConfig|null|undefined} http
                         * @memberof google.devtools.cloudbuild.v1.GitConfig
                         * @instance
                         */
                        GitConfig.prototype.http = null;
    
                        /**
                         * Creates a new GitConfig instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.GitConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitConfig=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.GitConfig} GitConfig instance
                         */
                        GitConfig.create = function create(properties) {
                            return new GitConfig(properties);
                        };
    
                        /**
                         * Encodes the specified GitConfig message. Does not implicitly {@link google.devtools.cloudbuild.v1.GitConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.GitConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitConfig} message GitConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.http != null && Object.hasOwnProperty.call(message, "http"))
                                $root.google.devtools.cloudbuild.v1.GitConfig.HttpConfig.encode(message.http, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GitConfig message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.GitConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitConfig} message GitConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GitConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.GitConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.GitConfig} GitConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.GitConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.http = $root.google.devtools.cloudbuild.v1.GitConfig.HttpConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GitConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.GitConfig} GitConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GitConfig message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.GitConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GitConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.http != null && message.hasOwnProperty("http")) {
                                var error = $root.google.devtools.cloudbuild.v1.GitConfig.HttpConfig.verify(message.http);
                                if (error)
                                    return "http." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GitConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.GitConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.GitConfig} GitConfig
                         */
                        GitConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.GitConfig)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.GitConfig();
                            if (object.http != null) {
                                if (typeof object.http !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.GitConfig.http: object expected");
                                message.http = $root.google.devtools.cloudbuild.v1.GitConfig.HttpConfig.fromObject(object.http);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GitConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.GitConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.GitConfig} message GitConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GitConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.http = null;
                            if (message.http != null && message.hasOwnProperty("http"))
                                object.http = $root.google.devtools.cloudbuild.v1.GitConfig.HttpConfig.toObject(message.http, options);
                            return object;
                        };
    
                        /**
                         * Converts this GitConfig to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.GitConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GitConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GitConfig
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.GitConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GitConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.GitConfig";
                        };
    
                        GitConfig.HttpConfig = (function() {
    
                            /**
                             * Properties of a HttpConfig.
                             * @memberof google.devtools.cloudbuild.v1.GitConfig
                             * @interface IHttpConfig
                             * @property {string|null} [proxySecretVersionName] HttpConfig proxySecretVersionName
                             */
    
                            /**
                             * Constructs a new HttpConfig.
                             * @memberof google.devtools.cloudbuild.v1.GitConfig
                             * @classdesc Represents a HttpConfig.
                             * @implements IHttpConfig
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.GitConfig.IHttpConfig=} [properties] Properties to set
                             */
                            function HttpConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HttpConfig proxySecretVersionName.
                             * @member {string} proxySecretVersionName
                             * @memberof google.devtools.cloudbuild.v1.GitConfig.HttpConfig
                             * @instance
                             */
                            HttpConfig.prototype.proxySecretVersionName = "";
    
                            /**
                             * Creates a new HttpConfig instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.GitConfig.HttpConfig
                             * @static
                             * @param {google.devtools.cloudbuild.v1.GitConfig.IHttpConfig=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.GitConfig.HttpConfig} HttpConfig instance
                             */
                            HttpConfig.create = function create(properties) {
                                return new HttpConfig(properties);
                            };
    
                            /**
                             * Encodes the specified HttpConfig message. Does not implicitly {@link google.devtools.cloudbuild.v1.GitConfig.HttpConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.GitConfig.HttpConfig
                             * @static
                             * @param {google.devtools.cloudbuild.v1.GitConfig.IHttpConfig} message HttpConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HttpConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.proxySecretVersionName != null && Object.hasOwnProperty.call(message, "proxySecretVersionName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.proxySecretVersionName);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HttpConfig message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.GitConfig.HttpConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.GitConfig.HttpConfig
                             * @static
                             * @param {google.devtools.cloudbuild.v1.GitConfig.IHttpConfig} message HttpConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HttpConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HttpConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.GitConfig.HttpConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.GitConfig.HttpConfig} HttpConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HttpConfig.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.GitConfig.HttpConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.proxySecretVersionName = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HttpConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.GitConfig.HttpConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.GitConfig.HttpConfig} HttpConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HttpConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HttpConfig message.
                             * @function verify
                             * @memberof google.devtools.cloudbuild.v1.GitConfig.HttpConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HttpConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.proxySecretVersionName != null && message.hasOwnProperty("proxySecretVersionName"))
                                    if (!$util.isString(message.proxySecretVersionName))
                                        return "proxySecretVersionName: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a HttpConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.cloudbuild.v1.GitConfig.HttpConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.cloudbuild.v1.GitConfig.HttpConfig} HttpConfig
                             */
                            HttpConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.cloudbuild.v1.GitConfig.HttpConfig)
                                    return object;
                                var message = new $root.google.devtools.cloudbuild.v1.GitConfig.HttpConfig();
                                if (object.proxySecretVersionName != null)
                                    message.proxySecretVersionName = String(object.proxySecretVersionName);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HttpConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.cloudbuild.v1.GitConfig.HttpConfig
                             * @static
                             * @param {google.devtools.cloudbuild.v1.GitConfig.HttpConfig} message HttpConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HttpConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.proxySecretVersionName = "";
                                if (message.proxySecretVersionName != null && message.hasOwnProperty("proxySecretVersionName"))
                                    object.proxySecretVersionName = message.proxySecretVersionName;
                                return object;
                            };
    
                            /**
                             * Converts this HttpConfig to JSON.
                             * @function toJSON
                             * @memberof google.devtools.cloudbuild.v1.GitConfig.HttpConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HttpConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for HttpConfig
                             * @function getTypeUrl
                             * @memberof google.devtools.cloudbuild.v1.GitConfig.HttpConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            HttpConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.cloudbuild.v1.GitConfig.HttpConfig";
                            };
    
                            return HttpConfig;
                        })();
    
                        return GitConfig;
                    })();
    
                    v1.Artifacts = (function() {
    
                        /**
                         * Properties of an Artifacts.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IArtifacts
                         * @property {Array.<string>|null} [images] Artifacts images
                         * @property {google.devtools.cloudbuild.v1.Artifacts.IArtifactObjects|null} [objects] Artifacts objects
                         * @property {Array.<google.devtools.cloudbuild.v1.Artifacts.IMavenArtifact>|null} [mavenArtifacts] Artifacts mavenArtifacts
                         * @property {Array.<google.devtools.cloudbuild.v1.Artifacts.IGoModule>|null} [goModules] Artifacts goModules
                         * @property {Array.<google.devtools.cloudbuild.v1.Artifacts.IPythonPackage>|null} [pythonPackages] Artifacts pythonPackages
                         * @property {Array.<google.devtools.cloudbuild.v1.Artifacts.INpmPackage>|null} [npmPackages] Artifacts npmPackages
                         */
    
                        /**
                         * Constructs a new Artifacts.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents an Artifacts.
                         * @implements IArtifacts
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IArtifacts=} [properties] Properties to set
                         */
                        function Artifacts(properties) {
                            this.images = [];
                            this.mavenArtifacts = [];
                            this.goModules = [];
                            this.pythonPackages = [];
                            this.npmPackages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Artifacts images.
                         * @member {Array.<string>} images
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @instance
                         */
                        Artifacts.prototype.images = $util.emptyArray;
    
                        /**
                         * Artifacts objects.
                         * @member {google.devtools.cloudbuild.v1.Artifacts.IArtifactObjects|null|undefined} objects
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @instance
                         */
                        Artifacts.prototype.objects = null;
    
                        /**
                         * Artifacts mavenArtifacts.
                         * @member {Array.<google.devtools.cloudbuild.v1.Artifacts.IMavenArtifact>} mavenArtifacts
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @instance
                         */
                        Artifacts.prototype.mavenArtifacts = $util.emptyArray;
    
                        /**
                         * Artifacts goModules.
                         * @member {Array.<google.devtools.cloudbuild.v1.Artifacts.IGoModule>} goModules
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @instance
                         */
                        Artifacts.prototype.goModules = $util.emptyArray;
    
                        /**
                         * Artifacts pythonPackages.
                         * @member {Array.<google.devtools.cloudbuild.v1.Artifacts.IPythonPackage>} pythonPackages
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @instance
                         */
                        Artifacts.prototype.pythonPackages = $util.emptyArray;
    
                        /**
                         * Artifacts npmPackages.
                         * @member {Array.<google.devtools.cloudbuild.v1.Artifacts.INpmPackage>} npmPackages
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @instance
                         */
                        Artifacts.prototype.npmPackages = $util.emptyArray;
    
                        /**
                         * Creates a new Artifacts instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IArtifacts=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.Artifacts} Artifacts instance
                         */
                        Artifacts.create = function create(properties) {
                            return new Artifacts(properties);
                        };
    
                        /**
                         * Encodes the specified Artifacts message. Does not implicitly {@link google.devtools.cloudbuild.v1.Artifacts.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IArtifacts} message Artifacts message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Artifacts.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.images != null && message.images.length)
                                for (var i = 0; i < message.images.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.images[i]);
                            if (message.objects != null && Object.hasOwnProperty.call(message, "objects"))
                                $root.google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects.encode(message.objects, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.mavenArtifacts != null && message.mavenArtifacts.length)
                                for (var i = 0; i < message.mavenArtifacts.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.Artifacts.MavenArtifact.encode(message.mavenArtifacts[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.goModules != null && message.goModules.length)
                                for (var i = 0; i < message.goModules.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.Artifacts.GoModule.encode(message.goModules[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.pythonPackages != null && message.pythonPackages.length)
                                for (var i = 0; i < message.pythonPackages.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.Artifacts.PythonPackage.encode(message.pythonPackages[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.npmPackages != null && message.npmPackages.length)
                                for (var i = 0; i < message.npmPackages.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.Artifacts.NpmPackage.encode(message.npmPackages[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Artifacts message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Artifacts.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IArtifacts} message Artifacts message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Artifacts.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Artifacts message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.Artifacts} Artifacts
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Artifacts.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Artifacts();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.images && message.images.length))
                                            message.images = [];
                                        message.images.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        message.objects = $root.google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.mavenArtifacts && message.mavenArtifacts.length))
                                            message.mavenArtifacts = [];
                                        message.mavenArtifacts.push($root.google.devtools.cloudbuild.v1.Artifacts.MavenArtifact.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        if (!(message.goModules && message.goModules.length))
                                            message.goModules = [];
                                        message.goModules.push($root.google.devtools.cloudbuild.v1.Artifacts.GoModule.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        if (!(message.pythonPackages && message.pythonPackages.length))
                                            message.pythonPackages = [];
                                        message.pythonPackages.push($root.google.devtools.cloudbuild.v1.Artifacts.PythonPackage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        if (!(message.npmPackages && message.npmPackages.length))
                                            message.npmPackages = [];
                                        message.npmPackages.push($root.google.devtools.cloudbuild.v1.Artifacts.NpmPackage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Artifacts message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.Artifacts} Artifacts
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Artifacts.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Artifacts message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Artifacts.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.images != null && message.hasOwnProperty("images")) {
                                if (!Array.isArray(message.images))
                                    return "images: array expected";
                                for (var i = 0; i < message.images.length; ++i)
                                    if (!$util.isString(message.images[i]))
                                        return "images: string[] expected";
                            }
                            if (message.objects != null && message.hasOwnProperty("objects")) {
                                var error = $root.google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects.verify(message.objects);
                                if (error)
                                    return "objects." + error;
                            }
                            if (message.mavenArtifacts != null && message.hasOwnProperty("mavenArtifacts")) {
                                if (!Array.isArray(message.mavenArtifacts))
                                    return "mavenArtifacts: array expected";
                                for (var i = 0; i < message.mavenArtifacts.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.Artifacts.MavenArtifact.verify(message.mavenArtifacts[i]);
                                    if (error)
                                        return "mavenArtifacts." + error;
                                }
                            }
                            if (message.goModules != null && message.hasOwnProperty("goModules")) {
                                if (!Array.isArray(message.goModules))
                                    return "goModules: array expected";
                                for (var i = 0; i < message.goModules.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.Artifacts.GoModule.verify(message.goModules[i]);
                                    if (error)
                                        return "goModules." + error;
                                }
                            }
                            if (message.pythonPackages != null && message.hasOwnProperty("pythonPackages")) {
                                if (!Array.isArray(message.pythonPackages))
                                    return "pythonPackages: array expected";
                                for (var i = 0; i < message.pythonPackages.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.Artifacts.PythonPackage.verify(message.pythonPackages[i]);
                                    if (error)
                                        return "pythonPackages." + error;
                                }
                            }
                            if (message.npmPackages != null && message.hasOwnProperty("npmPackages")) {
                                if (!Array.isArray(message.npmPackages))
                                    return "npmPackages: array expected";
                                for (var i = 0; i < message.npmPackages.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.Artifacts.NpmPackage.verify(message.npmPackages[i]);
                                    if (error)
                                        return "npmPackages." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Artifacts message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.Artifacts} Artifacts
                         */
                        Artifacts.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.Artifacts)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.Artifacts();
                            if (object.images) {
                                if (!Array.isArray(object.images))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.images: array expected");
                                message.images = [];
                                for (var i = 0; i < object.images.length; ++i)
                                    message.images[i] = String(object.images[i]);
                            }
                            if (object.objects != null) {
                                if (typeof object.objects !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.objects: object expected");
                                message.objects = $root.google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects.fromObject(object.objects);
                            }
                            if (object.mavenArtifacts) {
                                if (!Array.isArray(object.mavenArtifacts))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.mavenArtifacts: array expected");
                                message.mavenArtifacts = [];
                                for (var i = 0; i < object.mavenArtifacts.length; ++i) {
                                    if (typeof object.mavenArtifacts[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.mavenArtifacts: object expected");
                                    message.mavenArtifacts[i] = $root.google.devtools.cloudbuild.v1.Artifacts.MavenArtifact.fromObject(object.mavenArtifacts[i]);
                                }
                            }
                            if (object.goModules) {
                                if (!Array.isArray(object.goModules))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.goModules: array expected");
                                message.goModules = [];
                                for (var i = 0; i < object.goModules.length; ++i) {
                                    if (typeof object.goModules[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.goModules: object expected");
                                    message.goModules[i] = $root.google.devtools.cloudbuild.v1.Artifacts.GoModule.fromObject(object.goModules[i]);
                                }
                            }
                            if (object.pythonPackages) {
                                if (!Array.isArray(object.pythonPackages))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.pythonPackages: array expected");
                                message.pythonPackages = [];
                                for (var i = 0; i < object.pythonPackages.length; ++i) {
                                    if (typeof object.pythonPackages[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.pythonPackages: object expected");
                                    message.pythonPackages[i] = $root.google.devtools.cloudbuild.v1.Artifacts.PythonPackage.fromObject(object.pythonPackages[i]);
                                }
                            }
                            if (object.npmPackages) {
                                if (!Array.isArray(object.npmPackages))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.npmPackages: array expected");
                                message.npmPackages = [];
                                for (var i = 0; i < object.npmPackages.length; ++i) {
                                    if (typeof object.npmPackages[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.npmPackages: object expected");
                                    message.npmPackages[i] = $root.google.devtools.cloudbuild.v1.Artifacts.NpmPackage.fromObject(object.npmPackages[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Artifacts message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @static
                         * @param {google.devtools.cloudbuild.v1.Artifacts} message Artifacts
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Artifacts.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.images = [];
                                object.mavenArtifacts = [];
                                object.goModules = [];
                                object.pythonPackages = [];
                                object.npmPackages = [];
                            }
                            if (options.defaults)
                                object.objects = null;
                            if (message.images && message.images.length) {
                                object.images = [];
                                for (var j = 0; j < message.images.length; ++j)
                                    object.images[j] = message.images[j];
                            }
                            if (message.objects != null && message.hasOwnProperty("objects"))
                                object.objects = $root.google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects.toObject(message.objects, options);
                            if (message.mavenArtifacts && message.mavenArtifacts.length) {
                                object.mavenArtifacts = [];
                                for (var j = 0; j < message.mavenArtifacts.length; ++j)
                                    object.mavenArtifacts[j] = $root.google.devtools.cloudbuild.v1.Artifacts.MavenArtifact.toObject(message.mavenArtifacts[j], options);
                            }
                            if (message.goModules && message.goModules.length) {
                                object.goModules = [];
                                for (var j = 0; j < message.goModules.length; ++j)
                                    object.goModules[j] = $root.google.devtools.cloudbuild.v1.Artifacts.GoModule.toObject(message.goModules[j], options);
                            }
                            if (message.pythonPackages && message.pythonPackages.length) {
                                object.pythonPackages = [];
                                for (var j = 0; j < message.pythonPackages.length; ++j)
                                    object.pythonPackages[j] = $root.google.devtools.cloudbuild.v1.Artifacts.PythonPackage.toObject(message.pythonPackages[j], options);
                            }
                            if (message.npmPackages && message.npmPackages.length) {
                                object.npmPackages = [];
                                for (var j = 0; j < message.npmPackages.length; ++j)
                                    object.npmPackages[j] = $root.google.devtools.cloudbuild.v1.Artifacts.NpmPackage.toObject(message.npmPackages[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Artifacts to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Artifacts.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Artifacts
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.Artifacts
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Artifacts.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Artifacts";
                        };
    
                        Artifacts.ArtifactObjects = (function() {
    
                            /**
                             * Properties of an ArtifactObjects.
                             * @memberof google.devtools.cloudbuild.v1.Artifacts
                             * @interface IArtifactObjects
                             * @property {string|null} [location] ArtifactObjects location
                             * @property {Array.<string>|null} [paths] ArtifactObjects paths
                             * @property {google.devtools.cloudbuild.v1.ITimeSpan|null} [timing] ArtifactObjects timing
                             */
    
                            /**
                             * Constructs a new ArtifactObjects.
                             * @memberof google.devtools.cloudbuild.v1.Artifacts
                             * @classdesc Represents an ArtifactObjects.
                             * @implements IArtifactObjects
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IArtifactObjects=} [properties] Properties to set
                             */
                            function ArtifactObjects(properties) {
                                this.paths = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ArtifactObjects location.
                             * @member {string} location
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @instance
                             */
                            ArtifactObjects.prototype.location = "";
    
                            /**
                             * ArtifactObjects paths.
                             * @member {Array.<string>} paths
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @instance
                             */
                            ArtifactObjects.prototype.paths = $util.emptyArray;
    
                            /**
                             * ArtifactObjects timing.
                             * @member {google.devtools.cloudbuild.v1.ITimeSpan|null|undefined} timing
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @instance
                             */
                            ArtifactObjects.prototype.timing = null;
    
                            /**
                             * Creates a new ArtifactObjects instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IArtifactObjects=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects} ArtifactObjects instance
                             */
                            ArtifactObjects.create = function create(properties) {
                                return new ArtifactObjects(properties);
                            };
    
                            /**
                             * Encodes the specified ArtifactObjects message. Does not implicitly {@link google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IArtifactObjects} message ArtifactObjects message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArtifactObjects.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.location);
                                if (message.paths != null && message.paths.length)
                                    for (var i = 0; i < message.paths.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.paths[i]);
                                if (message.timing != null && Object.hasOwnProperty.call(message, "timing"))
                                    $root.google.devtools.cloudbuild.v1.TimeSpan.encode(message.timing, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ArtifactObjects message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IArtifactObjects} message ArtifactObjects message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ArtifactObjects.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ArtifactObjects message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects} ArtifactObjects
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArtifactObjects.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.location = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.paths && message.paths.length))
                                                message.paths = [];
                                            message.paths.push(reader.string());
                                            break;
                                        }
                                    case 3: {
                                            message.timing = $root.google.devtools.cloudbuild.v1.TimeSpan.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ArtifactObjects message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects} ArtifactObjects
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ArtifactObjects.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ArtifactObjects message.
                             * @function verify
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ArtifactObjects.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.location != null && message.hasOwnProperty("location"))
                                    if (!$util.isString(message.location))
                                        return "location: string expected";
                                if (message.paths != null && message.hasOwnProperty("paths")) {
                                    if (!Array.isArray(message.paths))
                                        return "paths: array expected";
                                    for (var i = 0; i < message.paths.length; ++i)
                                        if (!$util.isString(message.paths[i]))
                                            return "paths: string[] expected";
                                }
                                if (message.timing != null && message.hasOwnProperty("timing")) {
                                    var error = $root.google.devtools.cloudbuild.v1.TimeSpan.verify(message.timing);
                                    if (error)
                                        return "timing." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates an ArtifactObjects message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects} ArtifactObjects
                             */
                            ArtifactObjects.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects)
                                    return object;
                                var message = new $root.google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects();
                                if (object.location != null)
                                    message.location = String(object.location);
                                if (object.paths) {
                                    if (!Array.isArray(object.paths))
                                        throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects.paths: array expected");
                                    message.paths = [];
                                    for (var i = 0; i < object.paths.length; ++i)
                                        message.paths[i] = String(object.paths[i]);
                                }
                                if (object.timing != null) {
                                    if (typeof object.timing !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects.timing: object expected");
                                    message.timing = $root.google.devtools.cloudbuild.v1.TimeSpan.fromObject(object.timing);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ArtifactObjects message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects} message ArtifactObjects
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ArtifactObjects.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.paths = [];
                                if (options.defaults) {
                                    object.location = "";
                                    object.timing = null;
                                }
                                if (message.location != null && message.hasOwnProperty("location"))
                                    object.location = message.location;
                                if (message.paths && message.paths.length) {
                                    object.paths = [];
                                    for (var j = 0; j < message.paths.length; ++j)
                                        object.paths[j] = message.paths[j];
                                }
                                if (message.timing != null && message.hasOwnProperty("timing"))
                                    object.timing = $root.google.devtools.cloudbuild.v1.TimeSpan.toObject(message.timing, options);
                                return object;
                            };
    
                            /**
                             * Converts this ArtifactObjects to JSON.
                             * @function toJSON
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ArtifactObjects.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ArtifactObjects
                             * @function getTypeUrl
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ArtifactObjects.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Artifacts.ArtifactObjects";
                            };
    
                            return ArtifactObjects;
                        })();
    
                        Artifacts.MavenArtifact = (function() {
    
                            /**
                             * Properties of a MavenArtifact.
                             * @memberof google.devtools.cloudbuild.v1.Artifacts
                             * @interface IMavenArtifact
                             * @property {string|null} [repository] MavenArtifact repository
                             * @property {string|null} [path] MavenArtifact path
                             * @property {string|null} [artifactId] MavenArtifact artifactId
                             * @property {string|null} [groupId] MavenArtifact groupId
                             * @property {string|null} [version] MavenArtifact version
                             */
    
                            /**
                             * Constructs a new MavenArtifact.
                             * @memberof google.devtools.cloudbuild.v1.Artifacts
                             * @classdesc Represents a MavenArtifact.
                             * @implements IMavenArtifact
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IMavenArtifact=} [properties] Properties to set
                             */
                            function MavenArtifact(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MavenArtifact repository.
                             * @member {string} repository
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @instance
                             */
                            MavenArtifact.prototype.repository = "";
    
                            /**
                             * MavenArtifact path.
                             * @member {string} path
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @instance
                             */
                            MavenArtifact.prototype.path = "";
    
                            /**
                             * MavenArtifact artifactId.
                             * @member {string} artifactId
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @instance
                             */
                            MavenArtifact.prototype.artifactId = "";
    
                            /**
                             * MavenArtifact groupId.
                             * @member {string} groupId
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @instance
                             */
                            MavenArtifact.prototype.groupId = "";
    
                            /**
                             * MavenArtifact version.
                             * @member {string} version
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @instance
                             */
                            MavenArtifact.prototype.version = "";
    
                            /**
                             * Creates a new MavenArtifact instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IMavenArtifact=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.MavenArtifact} MavenArtifact instance
                             */
                            MavenArtifact.create = function create(properties) {
                                return new MavenArtifact(properties);
                            };
    
                            /**
                             * Encodes the specified MavenArtifact message. Does not implicitly {@link google.devtools.cloudbuild.v1.Artifacts.MavenArtifact.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IMavenArtifact} message MavenArtifact message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MavenArtifact.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.repository);
                                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                                if (message.artifactId != null && Object.hasOwnProperty.call(message, "artifactId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.artifactId);
                                if (message.groupId != null && Object.hasOwnProperty.call(message, "groupId"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.groupId);
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.version);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MavenArtifact message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Artifacts.MavenArtifact.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IMavenArtifact} message MavenArtifact message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MavenArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MavenArtifact message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.MavenArtifact} MavenArtifact
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MavenArtifact.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Artifacts.MavenArtifact();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.repository = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.path = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.artifactId = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.groupId = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.version = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MavenArtifact message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.MavenArtifact} MavenArtifact
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MavenArtifact.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MavenArtifact message.
                             * @function verify
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MavenArtifact.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.repository != null && message.hasOwnProperty("repository"))
                                    if (!$util.isString(message.repository))
                                        return "repository: string expected";
                                if (message.path != null && message.hasOwnProperty("path"))
                                    if (!$util.isString(message.path))
                                        return "path: string expected";
                                if (message.artifactId != null && message.hasOwnProperty("artifactId"))
                                    if (!$util.isString(message.artifactId))
                                        return "artifactId: string expected";
                                if (message.groupId != null && message.hasOwnProperty("groupId"))
                                    if (!$util.isString(message.groupId))
                                        return "groupId: string expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a MavenArtifact message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.MavenArtifact} MavenArtifact
                             */
                            MavenArtifact.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.cloudbuild.v1.Artifacts.MavenArtifact)
                                    return object;
                                var message = new $root.google.devtools.cloudbuild.v1.Artifacts.MavenArtifact();
                                if (object.repository != null)
                                    message.repository = String(object.repository);
                                if (object.path != null)
                                    message.path = String(object.path);
                                if (object.artifactId != null)
                                    message.artifactId = String(object.artifactId);
                                if (object.groupId != null)
                                    message.groupId = String(object.groupId);
                                if (object.version != null)
                                    message.version = String(object.version);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MavenArtifact message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.MavenArtifact} message MavenArtifact
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MavenArtifact.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.repository = "";
                                    object.path = "";
                                    object.artifactId = "";
                                    object.groupId = "";
                                    object.version = "";
                                }
                                if (message.repository != null && message.hasOwnProperty("repository"))
                                    object.repository = message.repository;
                                if (message.path != null && message.hasOwnProperty("path"))
                                    object.path = message.path;
                                if (message.artifactId != null && message.hasOwnProperty("artifactId"))
                                    object.artifactId = message.artifactId;
                                if (message.groupId != null && message.hasOwnProperty("groupId"))
                                    object.groupId = message.groupId;
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                return object;
                            };
    
                            /**
                             * Converts this MavenArtifact to JSON.
                             * @function toJSON
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MavenArtifact.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for MavenArtifact
                             * @function getTypeUrl
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.MavenArtifact
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            MavenArtifact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Artifacts.MavenArtifact";
                            };
    
                            return MavenArtifact;
                        })();
    
                        Artifacts.GoModule = (function() {
    
                            /**
                             * Properties of a GoModule.
                             * @memberof google.devtools.cloudbuild.v1.Artifacts
                             * @interface IGoModule
                             * @property {string|null} [repositoryName] GoModule repositoryName
                             * @property {string|null} [repositoryLocation] GoModule repositoryLocation
                             * @property {string|null} [repositoryProjectId] GoModule repositoryProjectId
                             * @property {string|null} [sourcePath] GoModule sourcePath
                             * @property {string|null} [modulePath] GoModule modulePath
                             * @property {string|null} [moduleVersion] GoModule moduleVersion
                             */
    
                            /**
                             * Constructs a new GoModule.
                             * @memberof google.devtools.cloudbuild.v1.Artifacts
                             * @classdesc Represents a GoModule.
                             * @implements IGoModule
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IGoModule=} [properties] Properties to set
                             */
                            function GoModule(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GoModule repositoryName.
                             * @member {string} repositoryName
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @instance
                             */
                            GoModule.prototype.repositoryName = "";
    
                            /**
                             * GoModule repositoryLocation.
                             * @member {string} repositoryLocation
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @instance
                             */
                            GoModule.prototype.repositoryLocation = "";
    
                            /**
                             * GoModule repositoryProjectId.
                             * @member {string} repositoryProjectId
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @instance
                             */
                            GoModule.prototype.repositoryProjectId = "";
    
                            /**
                             * GoModule sourcePath.
                             * @member {string} sourcePath
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @instance
                             */
                            GoModule.prototype.sourcePath = "";
    
                            /**
                             * GoModule modulePath.
                             * @member {string} modulePath
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @instance
                             */
                            GoModule.prototype.modulePath = "";
    
                            /**
                             * GoModule moduleVersion.
                             * @member {string} moduleVersion
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @instance
                             */
                            GoModule.prototype.moduleVersion = "";
    
                            /**
                             * Creates a new GoModule instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IGoModule=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.GoModule} GoModule instance
                             */
                            GoModule.create = function create(properties) {
                                return new GoModule(properties);
                            };
    
                            /**
                             * Encodes the specified GoModule message. Does not implicitly {@link google.devtools.cloudbuild.v1.Artifacts.GoModule.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IGoModule} message GoModule message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GoModule.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.repositoryName != null && Object.hasOwnProperty.call(message, "repositoryName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.repositoryName);
                                if (message.repositoryLocation != null && Object.hasOwnProperty.call(message, "repositoryLocation"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.repositoryLocation);
                                if (message.repositoryProjectId != null && Object.hasOwnProperty.call(message, "repositoryProjectId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.repositoryProjectId);
                                if (message.sourcePath != null && Object.hasOwnProperty.call(message, "sourcePath"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.sourcePath);
                                if (message.modulePath != null && Object.hasOwnProperty.call(message, "modulePath"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.modulePath);
                                if (message.moduleVersion != null && Object.hasOwnProperty.call(message, "moduleVersion"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.moduleVersion);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GoModule message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Artifacts.GoModule.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IGoModule} message GoModule message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GoModule.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GoModule message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.GoModule} GoModule
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GoModule.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Artifacts.GoModule();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.repositoryName = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.repositoryLocation = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.repositoryProjectId = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.sourcePath = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.modulePath = reader.string();
                                            break;
                                        }
                                    case 6: {
                                            message.moduleVersion = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GoModule message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.GoModule} GoModule
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GoModule.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GoModule message.
                             * @function verify
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GoModule.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.repositoryName != null && message.hasOwnProperty("repositoryName"))
                                    if (!$util.isString(message.repositoryName))
                                        return "repositoryName: string expected";
                                if (message.repositoryLocation != null && message.hasOwnProperty("repositoryLocation"))
                                    if (!$util.isString(message.repositoryLocation))
                                        return "repositoryLocation: string expected";
                                if (message.repositoryProjectId != null && message.hasOwnProperty("repositoryProjectId"))
                                    if (!$util.isString(message.repositoryProjectId))
                                        return "repositoryProjectId: string expected";
                                if (message.sourcePath != null && message.hasOwnProperty("sourcePath"))
                                    if (!$util.isString(message.sourcePath))
                                        return "sourcePath: string expected";
                                if (message.modulePath != null && message.hasOwnProperty("modulePath"))
                                    if (!$util.isString(message.modulePath))
                                        return "modulePath: string expected";
                                if (message.moduleVersion != null && message.hasOwnProperty("moduleVersion"))
                                    if (!$util.isString(message.moduleVersion))
                                        return "moduleVersion: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GoModule message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.GoModule} GoModule
                             */
                            GoModule.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.cloudbuild.v1.Artifacts.GoModule)
                                    return object;
                                var message = new $root.google.devtools.cloudbuild.v1.Artifacts.GoModule();
                                if (object.repositoryName != null)
                                    message.repositoryName = String(object.repositoryName);
                                if (object.repositoryLocation != null)
                                    message.repositoryLocation = String(object.repositoryLocation);
                                if (object.repositoryProjectId != null)
                                    message.repositoryProjectId = String(object.repositoryProjectId);
                                if (object.sourcePath != null)
                                    message.sourcePath = String(object.sourcePath);
                                if (object.modulePath != null)
                                    message.modulePath = String(object.modulePath);
                                if (object.moduleVersion != null)
                                    message.moduleVersion = String(object.moduleVersion);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GoModule message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.GoModule} message GoModule
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GoModule.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.repositoryName = "";
                                    object.repositoryLocation = "";
                                    object.repositoryProjectId = "";
                                    object.sourcePath = "";
                                    object.modulePath = "";
                                    object.moduleVersion = "";
                                }
                                if (message.repositoryName != null && message.hasOwnProperty("repositoryName"))
                                    object.repositoryName = message.repositoryName;
                                if (message.repositoryLocation != null && message.hasOwnProperty("repositoryLocation"))
                                    object.repositoryLocation = message.repositoryLocation;
                                if (message.repositoryProjectId != null && message.hasOwnProperty("repositoryProjectId"))
                                    object.repositoryProjectId = message.repositoryProjectId;
                                if (message.sourcePath != null && message.hasOwnProperty("sourcePath"))
                                    object.sourcePath = message.sourcePath;
                                if (message.modulePath != null && message.hasOwnProperty("modulePath"))
                                    object.modulePath = message.modulePath;
                                if (message.moduleVersion != null && message.hasOwnProperty("moduleVersion"))
                                    object.moduleVersion = message.moduleVersion;
                                return object;
                            };
    
                            /**
                             * Converts this GoModule to JSON.
                             * @function toJSON
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GoModule.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GoModule
                             * @function getTypeUrl
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.GoModule
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GoModule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Artifacts.GoModule";
                            };
    
                            return GoModule;
                        })();
    
                        Artifacts.PythonPackage = (function() {
    
                            /**
                             * Properties of a PythonPackage.
                             * @memberof google.devtools.cloudbuild.v1.Artifacts
                             * @interface IPythonPackage
                             * @property {string|null} [repository] PythonPackage repository
                             * @property {Array.<string>|null} [paths] PythonPackage paths
                             */
    
                            /**
                             * Constructs a new PythonPackage.
                             * @memberof google.devtools.cloudbuild.v1.Artifacts
                             * @classdesc Represents a PythonPackage.
                             * @implements IPythonPackage
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IPythonPackage=} [properties] Properties to set
                             */
                            function PythonPackage(properties) {
                                this.paths = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PythonPackage repository.
                             * @member {string} repository
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.PythonPackage
                             * @instance
                             */
                            PythonPackage.prototype.repository = "";
    
                            /**
                             * PythonPackage paths.
                             * @member {Array.<string>} paths
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.PythonPackage
                             * @instance
                             */
                            PythonPackage.prototype.paths = $util.emptyArray;
    
                            /**
                             * Creates a new PythonPackage instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.PythonPackage
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IPythonPackage=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.PythonPackage} PythonPackage instance
                             */
                            PythonPackage.create = function create(properties) {
                                return new PythonPackage(properties);
                            };
    
                            /**
                             * Encodes the specified PythonPackage message. Does not implicitly {@link google.devtools.cloudbuild.v1.Artifacts.PythonPackage.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.PythonPackage
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IPythonPackage} message PythonPackage message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PythonPackage.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.repository);
                                if (message.paths != null && message.paths.length)
                                    for (var i = 0; i < message.paths.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.paths[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PythonPackage message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Artifacts.PythonPackage.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.PythonPackage
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.IPythonPackage} message PythonPackage message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PythonPackage.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PythonPackage message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.PythonPackage
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.PythonPackage} PythonPackage
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PythonPackage.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Artifacts.PythonPackage();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.repository = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.paths && message.paths.length))
                                                message.paths = [];
                                            message.paths.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PythonPackage message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.PythonPackage
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.PythonPackage} PythonPackage
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PythonPackage.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PythonPackage message.
                             * @function verify
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.PythonPackage
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PythonPackage.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.repository != null && message.hasOwnProperty("repository"))
                                    if (!$util.isString(message.repository))
                                        return "repository: string expected";
                                if (message.paths != null && message.hasOwnProperty("paths")) {
                                    if (!Array.isArray(message.paths))
                                        return "paths: array expected";
                                    for (var i = 0; i < message.paths.length; ++i)
                                        if (!$util.isString(message.paths[i]))
                                            return "paths: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a PythonPackage message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.PythonPackage
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.PythonPackage} PythonPackage
                             */
                            PythonPackage.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.cloudbuild.v1.Artifacts.PythonPackage)
                                    return object;
                                var message = new $root.google.devtools.cloudbuild.v1.Artifacts.PythonPackage();
                                if (object.repository != null)
                                    message.repository = String(object.repository);
                                if (object.paths) {
                                    if (!Array.isArray(object.paths))
                                        throw TypeError(".google.devtools.cloudbuild.v1.Artifacts.PythonPackage.paths: array expected");
                                    message.paths = [];
                                    for (var i = 0; i < object.paths.length; ++i)
                                        message.paths[i] = String(object.paths[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PythonPackage message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.PythonPackage
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.PythonPackage} message PythonPackage
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PythonPackage.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.paths = [];
                                if (options.defaults)
                                    object.repository = "";
                                if (message.repository != null && message.hasOwnProperty("repository"))
                                    object.repository = message.repository;
                                if (message.paths && message.paths.length) {
                                    object.paths = [];
                                    for (var j = 0; j < message.paths.length; ++j)
                                        object.paths[j] = message.paths[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this PythonPackage to JSON.
                             * @function toJSON
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.PythonPackage
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PythonPackage.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PythonPackage
                             * @function getTypeUrl
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.PythonPackage
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PythonPackage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Artifacts.PythonPackage";
                            };
    
                            return PythonPackage;
                        })();
    
                        Artifacts.NpmPackage = (function() {
    
                            /**
                             * Properties of a NpmPackage.
                             * @memberof google.devtools.cloudbuild.v1.Artifacts
                             * @interface INpmPackage
                             * @property {string|null} [repository] NpmPackage repository
                             * @property {string|null} [packagePath] NpmPackage packagePath
                             */
    
                            /**
                             * Constructs a new NpmPackage.
                             * @memberof google.devtools.cloudbuild.v1.Artifacts
                             * @classdesc Represents a NpmPackage.
                             * @implements INpmPackage
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.Artifacts.INpmPackage=} [properties] Properties to set
                             */
                            function NpmPackage(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * NpmPackage repository.
                             * @member {string} repository
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.NpmPackage
                             * @instance
                             */
                            NpmPackage.prototype.repository = "";
    
                            /**
                             * NpmPackage packagePath.
                             * @member {string} packagePath
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.NpmPackage
                             * @instance
                             */
                            NpmPackage.prototype.packagePath = "";
    
                            /**
                             * Creates a new NpmPackage instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.NpmPackage
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.INpmPackage=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.NpmPackage} NpmPackage instance
                             */
                            NpmPackage.create = function create(properties) {
                                return new NpmPackage(properties);
                            };
    
                            /**
                             * Encodes the specified NpmPackage message. Does not implicitly {@link google.devtools.cloudbuild.v1.Artifacts.NpmPackage.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.NpmPackage
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.INpmPackage} message NpmPackage message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            NpmPackage.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.repository);
                                if (message.packagePath != null && Object.hasOwnProperty.call(message, "packagePath"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.packagePath);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified NpmPackage message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Artifacts.NpmPackage.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.NpmPackage
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.INpmPackage} message NpmPackage message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            NpmPackage.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a NpmPackage message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.NpmPackage
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.NpmPackage} NpmPackage
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            NpmPackage.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Artifacts.NpmPackage();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.repository = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.packagePath = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a NpmPackage message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.NpmPackage
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.NpmPackage} NpmPackage
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            NpmPackage.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a NpmPackage message.
                             * @function verify
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.NpmPackage
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            NpmPackage.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.repository != null && message.hasOwnProperty("repository"))
                                    if (!$util.isString(message.repository))
                                        return "repository: string expected";
                                if (message.packagePath != null && message.hasOwnProperty("packagePath"))
                                    if (!$util.isString(message.packagePath))
                                        return "packagePath: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a NpmPackage message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.NpmPackage
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.cloudbuild.v1.Artifacts.NpmPackage} NpmPackage
                             */
                            NpmPackage.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.cloudbuild.v1.Artifacts.NpmPackage)
                                    return object;
                                var message = new $root.google.devtools.cloudbuild.v1.Artifacts.NpmPackage();
                                if (object.repository != null)
                                    message.repository = String(object.repository);
                                if (object.packagePath != null)
                                    message.packagePath = String(object.packagePath);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a NpmPackage message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.NpmPackage
                             * @static
                             * @param {google.devtools.cloudbuild.v1.Artifacts.NpmPackage} message NpmPackage
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            NpmPackage.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.repository = "";
                                    object.packagePath = "";
                                }
                                if (message.repository != null && message.hasOwnProperty("repository"))
                                    object.repository = message.repository;
                                if (message.packagePath != null && message.hasOwnProperty("packagePath"))
                                    object.packagePath = message.packagePath;
                                return object;
                            };
    
                            /**
                             * Converts this NpmPackage to JSON.
                             * @function toJSON
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.NpmPackage
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            NpmPackage.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for NpmPackage
                             * @function getTypeUrl
                             * @memberof google.devtools.cloudbuild.v1.Artifacts.NpmPackage
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            NpmPackage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Artifacts.NpmPackage";
                            };
    
                            return NpmPackage;
                        })();
    
                        return Artifacts;
                    })();
    
                    v1.TimeSpan = (function() {
    
                        /**
                         * Properties of a TimeSpan.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface ITimeSpan
                         * @property {google.protobuf.ITimestamp|null} [startTime] TimeSpan startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] TimeSpan endTime
                         */
    
                        /**
                         * Constructs a new TimeSpan.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a TimeSpan.
                         * @implements ITimeSpan
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.ITimeSpan=} [properties] Properties to set
                         */
                        function TimeSpan(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TimeSpan startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.devtools.cloudbuild.v1.TimeSpan
                         * @instance
                         */
                        TimeSpan.prototype.startTime = null;
    
                        /**
                         * TimeSpan endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.devtools.cloudbuild.v1.TimeSpan
                         * @instance
                         */
                        TimeSpan.prototype.endTime = null;
    
                        /**
                         * Creates a new TimeSpan instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.TimeSpan
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ITimeSpan=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.TimeSpan} TimeSpan instance
                         */
                        TimeSpan.create = function create(properties) {
                            return new TimeSpan(properties);
                        };
    
                        /**
                         * Encodes the specified TimeSpan message. Does not implicitly {@link google.devtools.cloudbuild.v1.TimeSpan.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.TimeSpan
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ITimeSpan} message TimeSpan message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimeSpan.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TimeSpan message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.TimeSpan.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.TimeSpan
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ITimeSpan} message TimeSpan message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimeSpan.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TimeSpan message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.TimeSpan
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.TimeSpan} TimeSpan
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimeSpan.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.TimeSpan();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TimeSpan message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.TimeSpan
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.TimeSpan} TimeSpan
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimeSpan.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TimeSpan message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.TimeSpan
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TimeSpan.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TimeSpan message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.TimeSpan
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.TimeSpan} TimeSpan
                         */
                        TimeSpan.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.TimeSpan)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.TimeSpan();
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.TimeSpan.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.TimeSpan.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TimeSpan message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.TimeSpan
                         * @static
                         * @param {google.devtools.cloudbuild.v1.TimeSpan} message TimeSpan
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TimeSpan.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startTime = null;
                                object.endTime = null;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this TimeSpan to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.TimeSpan
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TimeSpan.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TimeSpan
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.TimeSpan
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TimeSpan.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.TimeSpan";
                        };
    
                        return TimeSpan;
                    })();
    
                    v1.BuildOperationMetadata = (function() {
    
                        /**
                         * Properties of a BuildOperationMetadata.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IBuildOperationMetadata
                         * @property {google.devtools.cloudbuild.v1.IBuild|null} [build] BuildOperationMetadata build
                         */
    
                        /**
                         * Constructs a new BuildOperationMetadata.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a BuildOperationMetadata.
                         * @implements IBuildOperationMetadata
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IBuildOperationMetadata=} [properties] Properties to set
                         */
                        function BuildOperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BuildOperationMetadata build.
                         * @member {google.devtools.cloudbuild.v1.IBuild|null|undefined} build
                         * @memberof google.devtools.cloudbuild.v1.BuildOperationMetadata
                         * @instance
                         */
                        BuildOperationMetadata.prototype.build = null;
    
                        /**
                         * Creates a new BuildOperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.BuildOperationMetadata
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildOperationMetadata=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.BuildOperationMetadata} BuildOperationMetadata instance
                         */
                        BuildOperationMetadata.create = function create(properties) {
                            return new BuildOperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified BuildOperationMetadata message. Does not implicitly {@link google.devtools.cloudbuild.v1.BuildOperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.BuildOperationMetadata
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildOperationMetadata} message BuildOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildOperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.build != null && Object.hasOwnProperty.call(message, "build"))
                                $root.google.devtools.cloudbuild.v1.Build.encode(message.build, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BuildOperationMetadata message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.BuildOperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.BuildOperationMetadata
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildOperationMetadata} message BuildOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildOperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BuildOperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.BuildOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.BuildOperationMetadata} BuildOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildOperationMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.BuildOperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.build = $root.google.devtools.cloudbuild.v1.Build.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BuildOperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.BuildOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.BuildOperationMetadata} BuildOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildOperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BuildOperationMetadata message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.BuildOperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BuildOperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.build != null && message.hasOwnProperty("build")) {
                                var error = $root.google.devtools.cloudbuild.v1.Build.verify(message.build);
                                if (error)
                                    return "build." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BuildOperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.BuildOperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.BuildOperationMetadata} BuildOperationMetadata
                         */
                        BuildOperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.BuildOperationMetadata)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.BuildOperationMetadata();
                            if (object.build != null) {
                                if (typeof object.build !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildOperationMetadata.build: object expected");
                                message.build = $root.google.devtools.cloudbuild.v1.Build.fromObject(object.build);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BuildOperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.BuildOperationMetadata
                         * @static
                         * @param {google.devtools.cloudbuild.v1.BuildOperationMetadata} message BuildOperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BuildOperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.build = null;
                            if (message.build != null && message.hasOwnProperty("build"))
                                object.build = $root.google.devtools.cloudbuild.v1.Build.toObject(message.build, options);
                            return object;
                        };
    
                        /**
                         * Converts this BuildOperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.BuildOperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BuildOperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BuildOperationMetadata
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.BuildOperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BuildOperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.BuildOperationMetadata";
                        };
    
                        return BuildOperationMetadata;
                    })();
    
                    v1.SourceProvenance = (function() {
    
                        /**
                         * Properties of a SourceProvenance.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface ISourceProvenance
                         * @property {google.devtools.cloudbuild.v1.IStorageSource|null} [resolvedStorageSource] SourceProvenance resolvedStorageSource
                         * @property {google.devtools.cloudbuild.v1.IRepoSource|null} [resolvedRepoSource] SourceProvenance resolvedRepoSource
                         * @property {google.devtools.cloudbuild.v1.IStorageSourceManifest|null} [resolvedStorageSourceManifest] SourceProvenance resolvedStorageSourceManifest
                         * @property {Object.<string,google.devtools.cloudbuild.v1.IFileHashes>|null} [fileHashes] SourceProvenance fileHashes
                         */
    
                        /**
                         * Constructs a new SourceProvenance.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a SourceProvenance.
                         * @implements ISourceProvenance
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.ISourceProvenance=} [properties] Properties to set
                         */
                        function SourceProvenance(properties) {
                            this.fileHashes = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SourceProvenance resolvedStorageSource.
                         * @member {google.devtools.cloudbuild.v1.IStorageSource|null|undefined} resolvedStorageSource
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @instance
                         */
                        SourceProvenance.prototype.resolvedStorageSource = null;
    
                        /**
                         * SourceProvenance resolvedRepoSource.
                         * @member {google.devtools.cloudbuild.v1.IRepoSource|null|undefined} resolvedRepoSource
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @instance
                         */
                        SourceProvenance.prototype.resolvedRepoSource = null;
    
                        /**
                         * SourceProvenance resolvedStorageSourceManifest.
                         * @member {google.devtools.cloudbuild.v1.IStorageSourceManifest|null|undefined} resolvedStorageSourceManifest
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @instance
                         */
                        SourceProvenance.prototype.resolvedStorageSourceManifest = null;
    
                        /**
                         * SourceProvenance fileHashes.
                         * @member {Object.<string,google.devtools.cloudbuild.v1.IFileHashes>} fileHashes
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @instance
                         */
                        SourceProvenance.prototype.fileHashes = $util.emptyObject;
    
                        /**
                         * Creates a new SourceProvenance instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISourceProvenance=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.SourceProvenance} SourceProvenance instance
                         */
                        SourceProvenance.create = function create(properties) {
                            return new SourceProvenance(properties);
                        };
    
                        /**
                         * Encodes the specified SourceProvenance message. Does not implicitly {@link google.devtools.cloudbuild.v1.SourceProvenance.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISourceProvenance} message SourceProvenance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceProvenance.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resolvedStorageSource != null && Object.hasOwnProperty.call(message, "resolvedStorageSource"))
                                $root.google.devtools.cloudbuild.v1.StorageSource.encode(message.resolvedStorageSource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.fileHashes != null && Object.hasOwnProperty.call(message, "fileHashes"))
                                for (var keys = Object.keys(message.fileHashes), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.devtools.cloudbuild.v1.FileHashes.encode(message.fileHashes[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.resolvedRepoSource != null && Object.hasOwnProperty.call(message, "resolvedRepoSource"))
                                $root.google.devtools.cloudbuild.v1.RepoSource.encode(message.resolvedRepoSource, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.resolvedStorageSourceManifest != null && Object.hasOwnProperty.call(message, "resolvedStorageSourceManifest"))
                                $root.google.devtools.cloudbuild.v1.StorageSourceManifest.encode(message.resolvedStorageSourceManifest, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SourceProvenance message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.SourceProvenance.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISourceProvenance} message SourceProvenance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceProvenance.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SourceProvenance message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.SourceProvenance} SourceProvenance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceProvenance.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.SourceProvenance(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 3: {
                                        message.resolvedStorageSource = $root.google.devtools.cloudbuild.v1.StorageSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.resolvedRepoSource = $root.google.devtools.cloudbuild.v1.RepoSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.resolvedStorageSourceManifest = $root.google.devtools.cloudbuild.v1.StorageSourceManifest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.fileHashes === $util.emptyObject)
                                            message.fileHashes = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.devtools.cloudbuild.v1.FileHashes.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.fileHashes[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SourceProvenance message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.SourceProvenance} SourceProvenance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceProvenance.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SourceProvenance message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SourceProvenance.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resolvedStorageSource != null && message.hasOwnProperty("resolvedStorageSource")) {
                                var error = $root.google.devtools.cloudbuild.v1.StorageSource.verify(message.resolvedStorageSource);
                                if (error)
                                    return "resolvedStorageSource." + error;
                            }
                            if (message.resolvedRepoSource != null && message.hasOwnProperty("resolvedRepoSource")) {
                                var error = $root.google.devtools.cloudbuild.v1.RepoSource.verify(message.resolvedRepoSource);
                                if (error)
                                    return "resolvedRepoSource." + error;
                            }
                            if (message.resolvedStorageSourceManifest != null && message.hasOwnProperty("resolvedStorageSourceManifest")) {
                                var error = $root.google.devtools.cloudbuild.v1.StorageSourceManifest.verify(message.resolvedStorageSourceManifest);
                                if (error)
                                    return "resolvedStorageSourceManifest." + error;
                            }
                            if (message.fileHashes != null && message.hasOwnProperty("fileHashes")) {
                                if (!$util.isObject(message.fileHashes))
                                    return "fileHashes: object expected";
                                var key = Object.keys(message.fileHashes);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.FileHashes.verify(message.fileHashes[key[i]]);
                                    if (error)
                                        return "fileHashes." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SourceProvenance message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.SourceProvenance} SourceProvenance
                         */
                        SourceProvenance.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.SourceProvenance)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.SourceProvenance();
                            if (object.resolvedStorageSource != null) {
                                if (typeof object.resolvedStorageSource !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.SourceProvenance.resolvedStorageSource: object expected");
                                message.resolvedStorageSource = $root.google.devtools.cloudbuild.v1.StorageSource.fromObject(object.resolvedStorageSource);
                            }
                            if (object.resolvedRepoSource != null) {
                                if (typeof object.resolvedRepoSource !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.SourceProvenance.resolvedRepoSource: object expected");
                                message.resolvedRepoSource = $root.google.devtools.cloudbuild.v1.RepoSource.fromObject(object.resolvedRepoSource);
                            }
                            if (object.resolvedStorageSourceManifest != null) {
                                if (typeof object.resolvedStorageSourceManifest !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.SourceProvenance.resolvedStorageSourceManifest: object expected");
                                message.resolvedStorageSourceManifest = $root.google.devtools.cloudbuild.v1.StorageSourceManifest.fromObject(object.resolvedStorageSourceManifest);
                            }
                            if (object.fileHashes) {
                                if (typeof object.fileHashes !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.SourceProvenance.fileHashes: object expected");
                                message.fileHashes = {};
                                for (var keys = Object.keys(object.fileHashes), i = 0; i < keys.length; ++i) {
                                    if (typeof object.fileHashes[keys[i]] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.SourceProvenance.fileHashes: object expected");
                                    message.fileHashes[keys[i]] = $root.google.devtools.cloudbuild.v1.FileHashes.fromObject(object.fileHashes[keys[i]]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SourceProvenance message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @static
                         * @param {google.devtools.cloudbuild.v1.SourceProvenance} message SourceProvenance
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SourceProvenance.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.fileHashes = {};
                            if (options.defaults) {
                                object.resolvedStorageSource = null;
                                object.resolvedRepoSource = null;
                                object.resolvedStorageSourceManifest = null;
                            }
                            if (message.resolvedStorageSource != null && message.hasOwnProperty("resolvedStorageSource"))
                                object.resolvedStorageSource = $root.google.devtools.cloudbuild.v1.StorageSource.toObject(message.resolvedStorageSource, options);
                            var keys2;
                            if (message.fileHashes && (keys2 = Object.keys(message.fileHashes)).length) {
                                object.fileHashes = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.fileHashes[keys2[j]] = $root.google.devtools.cloudbuild.v1.FileHashes.toObject(message.fileHashes[keys2[j]], options);
                            }
                            if (message.resolvedRepoSource != null && message.hasOwnProperty("resolvedRepoSource"))
                                object.resolvedRepoSource = $root.google.devtools.cloudbuild.v1.RepoSource.toObject(message.resolvedRepoSource, options);
                            if (message.resolvedStorageSourceManifest != null && message.hasOwnProperty("resolvedStorageSourceManifest"))
                                object.resolvedStorageSourceManifest = $root.google.devtools.cloudbuild.v1.StorageSourceManifest.toObject(message.resolvedStorageSourceManifest, options);
                            return object;
                        };
    
                        /**
                         * Converts this SourceProvenance to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SourceProvenance.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SourceProvenance
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.SourceProvenance
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SourceProvenance.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.SourceProvenance";
                        };
    
                        return SourceProvenance;
                    })();
    
                    v1.FileHashes = (function() {
    
                        /**
                         * Properties of a FileHashes.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IFileHashes
                         * @property {Array.<google.devtools.cloudbuild.v1.IHash>|null} [fileHash] FileHashes fileHash
                         */
    
                        /**
                         * Constructs a new FileHashes.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a FileHashes.
                         * @implements IFileHashes
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IFileHashes=} [properties] Properties to set
                         */
                        function FileHashes(properties) {
                            this.fileHash = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FileHashes fileHash.
                         * @member {Array.<google.devtools.cloudbuild.v1.IHash>} fileHash
                         * @memberof google.devtools.cloudbuild.v1.FileHashes
                         * @instance
                         */
                        FileHashes.prototype.fileHash = $util.emptyArray;
    
                        /**
                         * Creates a new FileHashes instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.FileHashes
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IFileHashes=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.FileHashes} FileHashes instance
                         */
                        FileHashes.create = function create(properties) {
                            return new FileHashes(properties);
                        };
    
                        /**
                         * Encodes the specified FileHashes message. Does not implicitly {@link google.devtools.cloudbuild.v1.FileHashes.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.FileHashes
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IFileHashes} message FileHashes message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FileHashes.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.fileHash != null && message.fileHash.length)
                                for (var i = 0; i < message.fileHash.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.Hash.encode(message.fileHash[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FileHashes message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.FileHashes.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.FileHashes
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IFileHashes} message FileHashes message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FileHashes.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FileHashes message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.FileHashes
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.FileHashes} FileHashes
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FileHashes.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.FileHashes();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.fileHash && message.fileHash.length))
                                            message.fileHash = [];
                                        message.fileHash.push($root.google.devtools.cloudbuild.v1.Hash.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FileHashes message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.FileHashes
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.FileHashes} FileHashes
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FileHashes.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FileHashes message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.FileHashes
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FileHashes.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.fileHash != null && message.hasOwnProperty("fileHash")) {
                                if (!Array.isArray(message.fileHash))
                                    return "fileHash: array expected";
                                for (var i = 0; i < message.fileHash.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.Hash.verify(message.fileHash[i]);
                                    if (error)
                                        return "fileHash." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FileHashes message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.FileHashes
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.FileHashes} FileHashes
                         */
                        FileHashes.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.FileHashes)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.FileHashes();
                            if (object.fileHash) {
                                if (!Array.isArray(object.fileHash))
                                    throw TypeError(".google.devtools.cloudbuild.v1.FileHashes.fileHash: array expected");
                                message.fileHash = [];
                                for (var i = 0; i < object.fileHash.length; ++i) {
                                    if (typeof object.fileHash[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.FileHashes.fileHash: object expected");
                                    message.fileHash[i] = $root.google.devtools.cloudbuild.v1.Hash.fromObject(object.fileHash[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FileHashes message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.FileHashes
                         * @static
                         * @param {google.devtools.cloudbuild.v1.FileHashes} message FileHashes
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FileHashes.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.fileHash = [];
                            if (message.fileHash && message.fileHash.length) {
                                object.fileHash = [];
                                for (var j = 0; j < message.fileHash.length; ++j)
                                    object.fileHash[j] = $root.google.devtools.cloudbuild.v1.Hash.toObject(message.fileHash[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FileHashes to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.FileHashes
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FileHashes.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FileHashes
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.FileHashes
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FileHashes.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.FileHashes";
                        };
    
                        return FileHashes;
                    })();
    
                    v1.Hash = (function() {
    
                        /**
                         * Properties of a Hash.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IHash
                         * @property {google.devtools.cloudbuild.v1.Hash.HashType|null} [type] Hash type
                         * @property {Uint8Array|null} [value] Hash value
                         */
    
                        /**
                         * Constructs a new Hash.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a Hash.
                         * @implements IHash
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IHash=} [properties] Properties to set
                         */
                        function Hash(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Hash type.
                         * @member {google.devtools.cloudbuild.v1.Hash.HashType} type
                         * @memberof google.devtools.cloudbuild.v1.Hash
                         * @instance
                         */
                        Hash.prototype.type = 0;
    
                        /**
                         * Hash value.
                         * @member {Uint8Array} value
                         * @memberof google.devtools.cloudbuild.v1.Hash
                         * @instance
                         */
                        Hash.prototype.value = $util.newBuffer([]);
    
                        /**
                         * Creates a new Hash instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.Hash
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IHash=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.Hash} Hash instance
                         */
                        Hash.create = function create(properties) {
                            return new Hash(properties);
                        };
    
                        /**
                         * Encodes the specified Hash message. Does not implicitly {@link google.devtools.cloudbuild.v1.Hash.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.Hash
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IHash} message Hash message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Hash.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Hash message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Hash.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Hash
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IHash} message Hash message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Hash.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Hash message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.Hash
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.Hash} Hash
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Hash.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Hash();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.value = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Hash message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Hash
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.Hash} Hash
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Hash.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Hash message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.Hash
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Hash.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.value != null && message.hasOwnProperty("value"))
                                if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                                    return "value: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates a Hash message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.Hash
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.Hash} Hash
                         */
                        Hash.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.Hash)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.Hash();
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "NONE":
                            case 0:
                                message.type = 0;
                                break;
                            case "SHA256":
                            case 1:
                                message.type = 1;
                                break;
                            case "MD5":
                            case 2:
                                message.type = 2;
                                break;
                            case "GO_MODULE_H1":
                            case 3:
                                message.type = 3;
                                break;
                            case "SHA512":
                            case 4:
                                message.type = 4;
                                break;
                            }
                            if (object.value != null)
                                if (typeof object.value === "string")
                                    $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                                else if (object.value.length >= 0)
                                    message.value = object.value;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Hash message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.Hash
                         * @static
                         * @param {google.devtools.cloudbuild.v1.Hash} message Hash
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Hash.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = options.enums === String ? "NONE" : 0;
                                if (options.bytes === String)
                                    object.value = "";
                                else {
                                    object.value = [];
                                    if (options.bytes !== Array)
                                        object.value = $util.newBuffer(object.value);
                                }
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.devtools.cloudbuild.v1.Hash.HashType[message.type] === undefined ? message.type : $root.google.devtools.cloudbuild.v1.Hash.HashType[message.type] : message.type;
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                            return object;
                        };
    
                        /**
                         * Converts this Hash to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.Hash
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Hash.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Hash
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.Hash
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Hash.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Hash";
                        };
    
                        /**
                         * HashType enum.
                         * @name google.devtools.cloudbuild.v1.Hash.HashType
                         * @enum {number}
                         * @property {number} NONE=0 NONE value
                         * @property {number} SHA256=1 SHA256 value
                         * @property {number} MD5=2 MD5 value
                         * @property {number} GO_MODULE_H1=3 GO_MODULE_H1 value
                         * @property {number} SHA512=4 SHA512 value
                         */
                        Hash.HashType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "NONE"] = 0;
                            values[valuesById[1] = "SHA256"] = 1;
                            values[valuesById[2] = "MD5"] = 2;
                            values[valuesById[3] = "GO_MODULE_H1"] = 3;
                            values[valuesById[4] = "SHA512"] = 4;
                            return values;
                        })();
    
                        return Hash;
                    })();
    
                    v1.Secrets = (function() {
    
                        /**
                         * Properties of a Secrets.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface ISecrets
                         * @property {Array.<google.devtools.cloudbuild.v1.ISecretManagerSecret>|null} [secretManager] Secrets secretManager
                         * @property {Array.<google.devtools.cloudbuild.v1.IInlineSecret>|null} [inline] Secrets inline
                         */
    
                        /**
                         * Constructs a new Secrets.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a Secrets.
                         * @implements ISecrets
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.ISecrets=} [properties] Properties to set
                         */
                        function Secrets(properties) {
                            this.secretManager = [];
                            this.inline = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Secrets secretManager.
                         * @member {Array.<google.devtools.cloudbuild.v1.ISecretManagerSecret>} secretManager
                         * @memberof google.devtools.cloudbuild.v1.Secrets
                         * @instance
                         */
                        Secrets.prototype.secretManager = $util.emptyArray;
    
                        /**
                         * Secrets inline.
                         * @member {Array.<google.devtools.cloudbuild.v1.IInlineSecret>} inline
                         * @memberof google.devtools.cloudbuild.v1.Secrets
                         * @instance
                         */
                        Secrets.prototype.inline = $util.emptyArray;
    
                        /**
                         * Creates a new Secrets instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.Secrets
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISecrets=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.Secrets} Secrets instance
                         */
                        Secrets.create = function create(properties) {
                            return new Secrets(properties);
                        };
    
                        /**
                         * Encodes the specified Secrets message. Does not implicitly {@link google.devtools.cloudbuild.v1.Secrets.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.Secrets
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISecrets} message Secrets message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Secrets.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.secretManager != null && message.secretManager.length)
                                for (var i = 0; i < message.secretManager.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.SecretManagerSecret.encode(message.secretManager[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.inline != null && message.inline.length)
                                for (var i = 0; i < message.inline.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.InlineSecret.encode(message.inline[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Secrets message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Secrets.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Secrets
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISecrets} message Secrets message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Secrets.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Secrets message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.Secrets
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.Secrets} Secrets
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Secrets.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Secrets();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.secretManager && message.secretManager.length))
                                            message.secretManager = [];
                                        message.secretManager.push($root.google.devtools.cloudbuild.v1.SecretManagerSecret.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.inline && message.inline.length))
                                            message.inline = [];
                                        message.inline.push($root.google.devtools.cloudbuild.v1.InlineSecret.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Secrets message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Secrets
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.Secrets} Secrets
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Secrets.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Secrets message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.Secrets
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Secrets.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.secretManager != null && message.hasOwnProperty("secretManager")) {
                                if (!Array.isArray(message.secretManager))
                                    return "secretManager: array expected";
                                for (var i = 0; i < message.secretManager.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.SecretManagerSecret.verify(message.secretManager[i]);
                                    if (error)
                                        return "secretManager." + error;
                                }
                            }
                            if (message.inline != null && message.hasOwnProperty("inline")) {
                                if (!Array.isArray(message.inline))
                                    return "inline: array expected";
                                for (var i = 0; i < message.inline.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.InlineSecret.verify(message.inline[i]);
                                    if (error)
                                        return "inline." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Secrets message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.Secrets
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.Secrets} Secrets
                         */
                        Secrets.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.Secrets)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.Secrets();
                            if (object.secretManager) {
                                if (!Array.isArray(object.secretManager))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Secrets.secretManager: array expected");
                                message.secretManager = [];
                                for (var i = 0; i < object.secretManager.length; ++i) {
                                    if (typeof object.secretManager[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Secrets.secretManager: object expected");
                                    message.secretManager[i] = $root.google.devtools.cloudbuild.v1.SecretManagerSecret.fromObject(object.secretManager[i]);
                                }
                            }
                            if (object.inline) {
                                if (!Array.isArray(object.inline))
                                    throw TypeError(".google.devtools.cloudbuild.v1.Secrets.inline: array expected");
                                message.inline = [];
                                for (var i = 0; i < object.inline.length; ++i) {
                                    if (typeof object.inline[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.Secrets.inline: object expected");
                                    message.inline[i] = $root.google.devtools.cloudbuild.v1.InlineSecret.fromObject(object.inline[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Secrets message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.Secrets
                         * @static
                         * @param {google.devtools.cloudbuild.v1.Secrets} message Secrets
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Secrets.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.secretManager = [];
                                object.inline = [];
                            }
                            if (message.secretManager && message.secretManager.length) {
                                object.secretManager = [];
                                for (var j = 0; j < message.secretManager.length; ++j)
                                    object.secretManager[j] = $root.google.devtools.cloudbuild.v1.SecretManagerSecret.toObject(message.secretManager[j], options);
                            }
                            if (message.inline && message.inline.length) {
                                object.inline = [];
                                for (var j = 0; j < message.inline.length; ++j)
                                    object.inline[j] = $root.google.devtools.cloudbuild.v1.InlineSecret.toObject(message.inline[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Secrets to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.Secrets
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Secrets.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Secrets
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.Secrets
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Secrets.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Secrets";
                        };
    
                        return Secrets;
                    })();
    
                    v1.InlineSecret = (function() {
    
                        /**
                         * Properties of an InlineSecret.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IInlineSecret
                         * @property {string|null} [kmsKeyName] InlineSecret kmsKeyName
                         * @property {Object.<string,Uint8Array>|null} [envMap] InlineSecret envMap
                         */
    
                        /**
                         * Constructs a new InlineSecret.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents an InlineSecret.
                         * @implements IInlineSecret
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IInlineSecret=} [properties] Properties to set
                         */
                        function InlineSecret(properties) {
                            this.envMap = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InlineSecret kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.devtools.cloudbuild.v1.InlineSecret
                         * @instance
                         */
                        InlineSecret.prototype.kmsKeyName = "";
    
                        /**
                         * InlineSecret envMap.
                         * @member {Object.<string,Uint8Array>} envMap
                         * @memberof google.devtools.cloudbuild.v1.InlineSecret
                         * @instance
                         */
                        InlineSecret.prototype.envMap = $util.emptyObject;
    
                        /**
                         * Creates a new InlineSecret instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.InlineSecret
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IInlineSecret=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.InlineSecret} InlineSecret instance
                         */
                        InlineSecret.create = function create(properties) {
                            return new InlineSecret(properties);
                        };
    
                        /**
                         * Encodes the specified InlineSecret message. Does not implicitly {@link google.devtools.cloudbuild.v1.InlineSecret.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.InlineSecret
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IInlineSecret} message InlineSecret message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InlineSecret.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kmsKeyName);
                            if (message.envMap != null && Object.hasOwnProperty.call(message, "envMap"))
                                for (var keys = Object.keys(message.envMap), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).bytes(message.envMap[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InlineSecret message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.InlineSecret.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.InlineSecret
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IInlineSecret} message InlineSecret message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InlineSecret.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InlineSecret message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.InlineSecret
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.InlineSecret} InlineSecret
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InlineSecret.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.InlineSecret(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.envMap === $util.emptyObject)
                                            message.envMap = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = [];
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.bytes();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.envMap[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InlineSecret message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.InlineSecret
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.InlineSecret} InlineSecret
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InlineSecret.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InlineSecret message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.InlineSecret
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InlineSecret.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            if (message.envMap != null && message.hasOwnProperty("envMap")) {
                                if (!$util.isObject(message.envMap))
                                    return "envMap: object expected";
                                var key = Object.keys(message.envMap);
                                for (var i = 0; i < key.length; ++i)
                                    if (!(message.envMap[key[i]] && typeof message.envMap[key[i]].length === "number" || $util.isString(message.envMap[key[i]])))
                                        return "envMap: buffer{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an InlineSecret message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.InlineSecret
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.InlineSecret} InlineSecret
                         */
                        InlineSecret.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.InlineSecret)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.InlineSecret();
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            if (object.envMap) {
                                if (typeof object.envMap !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.InlineSecret.envMap: object expected");
                                message.envMap = {};
                                for (var keys = Object.keys(object.envMap), i = 0; i < keys.length; ++i)
                                    if (typeof object.envMap[keys[i]] === "string")
                                        $util.base64.decode(object.envMap[keys[i]], message.envMap[keys[i]] = $util.newBuffer($util.base64.length(object.envMap[keys[i]])), 0);
                                    else if (object.envMap[keys[i]].length >= 0)
                                        message.envMap[keys[i]] = object.envMap[keys[i]];
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InlineSecret message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.InlineSecret
                         * @static
                         * @param {google.devtools.cloudbuild.v1.InlineSecret} message InlineSecret
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InlineSecret.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.envMap = {};
                            if (options.defaults)
                                object.kmsKeyName = "";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            var keys2;
                            if (message.envMap && (keys2 = Object.keys(message.envMap)).length) {
                                object.envMap = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.envMap[keys2[j]] = options.bytes === String ? $util.base64.encode(message.envMap[keys2[j]], 0, message.envMap[keys2[j]].length) : options.bytes === Array ? Array.prototype.slice.call(message.envMap[keys2[j]]) : message.envMap[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this InlineSecret to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.InlineSecret
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InlineSecret.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for InlineSecret
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.InlineSecret
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        InlineSecret.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.InlineSecret";
                        };
    
                        return InlineSecret;
                    })();
    
                    v1.SecretManagerSecret = (function() {
    
                        /**
                         * Properties of a SecretManagerSecret.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface ISecretManagerSecret
                         * @property {string|null} [versionName] SecretManagerSecret versionName
                         * @property {string|null} [env] SecretManagerSecret env
                         */
    
                        /**
                         * Constructs a new SecretManagerSecret.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a SecretManagerSecret.
                         * @implements ISecretManagerSecret
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.ISecretManagerSecret=} [properties] Properties to set
                         */
                        function SecretManagerSecret(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SecretManagerSecret versionName.
                         * @member {string} versionName
                         * @memberof google.devtools.cloudbuild.v1.SecretManagerSecret
                         * @instance
                         */
                        SecretManagerSecret.prototype.versionName = "";
    
                        /**
                         * SecretManagerSecret env.
                         * @member {string} env
                         * @memberof google.devtools.cloudbuild.v1.SecretManagerSecret
                         * @instance
                         */
                        SecretManagerSecret.prototype.env = "";
    
                        /**
                         * Creates a new SecretManagerSecret instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.SecretManagerSecret
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISecretManagerSecret=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.SecretManagerSecret} SecretManagerSecret instance
                         */
                        SecretManagerSecret.create = function create(properties) {
                            return new SecretManagerSecret(properties);
                        };
    
                        /**
                         * Encodes the specified SecretManagerSecret message. Does not implicitly {@link google.devtools.cloudbuild.v1.SecretManagerSecret.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.SecretManagerSecret
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISecretManagerSecret} message SecretManagerSecret message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretManagerSecret.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.versionName != null && Object.hasOwnProperty.call(message, "versionName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.versionName);
                            if (message.env != null && Object.hasOwnProperty.call(message, "env"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.env);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SecretManagerSecret message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.SecretManagerSecret.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.SecretManagerSecret
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISecretManagerSecret} message SecretManagerSecret message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretManagerSecret.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SecretManagerSecret message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.SecretManagerSecret
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.SecretManagerSecret} SecretManagerSecret
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretManagerSecret.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.SecretManagerSecret();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.versionName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.env = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SecretManagerSecret message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.SecretManagerSecret
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.SecretManagerSecret} SecretManagerSecret
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretManagerSecret.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SecretManagerSecret message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.SecretManagerSecret
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SecretManagerSecret.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.versionName != null && message.hasOwnProperty("versionName"))
                                if (!$util.isString(message.versionName))
                                    return "versionName: string expected";
                            if (message.env != null && message.hasOwnProperty("env"))
                                if (!$util.isString(message.env))
                                    return "env: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SecretManagerSecret message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.SecretManagerSecret
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.SecretManagerSecret} SecretManagerSecret
                         */
                        SecretManagerSecret.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.SecretManagerSecret)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.SecretManagerSecret();
                            if (object.versionName != null)
                                message.versionName = String(object.versionName);
                            if (object.env != null)
                                message.env = String(object.env);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SecretManagerSecret message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.SecretManagerSecret
                         * @static
                         * @param {google.devtools.cloudbuild.v1.SecretManagerSecret} message SecretManagerSecret
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SecretManagerSecret.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.versionName = "";
                                object.env = "";
                            }
                            if (message.versionName != null && message.hasOwnProperty("versionName"))
                                object.versionName = message.versionName;
                            if (message.env != null && message.hasOwnProperty("env"))
                                object.env = message.env;
                            return object;
                        };
    
                        /**
                         * Converts this SecretManagerSecret to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.SecretManagerSecret
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SecretManagerSecret.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SecretManagerSecret
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.SecretManagerSecret
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SecretManagerSecret.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.SecretManagerSecret";
                        };
    
                        return SecretManagerSecret;
                    })();
    
                    v1.Secret = (function() {
    
                        /**
                         * Properties of a Secret.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface ISecret
                         * @property {string|null} [kmsKeyName] Secret kmsKeyName
                         * @property {Object.<string,Uint8Array>|null} [secretEnv] Secret secretEnv
                         */
    
                        /**
                         * Constructs a new Secret.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a Secret.
                         * @implements ISecret
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.ISecret=} [properties] Properties to set
                         */
                        function Secret(properties) {
                            this.secretEnv = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Secret kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.devtools.cloudbuild.v1.Secret
                         * @instance
                         */
                        Secret.prototype.kmsKeyName = "";
    
                        /**
                         * Secret secretEnv.
                         * @member {Object.<string,Uint8Array>} secretEnv
                         * @memberof google.devtools.cloudbuild.v1.Secret
                         * @instance
                         */
                        Secret.prototype.secretEnv = $util.emptyObject;
    
                        /**
                         * Creates a new Secret instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.Secret
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISecret=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.Secret} Secret instance
                         */
                        Secret.create = function create(properties) {
                            return new Secret(properties);
                        };
    
                        /**
                         * Encodes the specified Secret message. Does not implicitly {@link google.devtools.cloudbuild.v1.Secret.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.Secret
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISecret} message Secret message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Secret.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kmsKeyName);
                            if (message.secretEnv != null && Object.hasOwnProperty.call(message, "secretEnv"))
                                for (var keys = Object.keys(message.secretEnv), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).bytes(message.secretEnv[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Secret message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.Secret.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Secret
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ISecret} message Secret message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Secret.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Secret message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.Secret
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.Secret} Secret
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Secret.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.Secret(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (message.secretEnv === $util.emptyObject)
                                            message.secretEnv = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = [];
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.bytes();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.secretEnv[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Secret message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.Secret
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.Secret} Secret
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Secret.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Secret message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.Secret
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Secret.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            if (message.secretEnv != null && message.hasOwnProperty("secretEnv")) {
                                if (!$util.isObject(message.secretEnv))
                                    return "secretEnv: object expected";
                                var key = Object.keys(message.secretEnv);
                                for (var i = 0; i < key.length; ++i)
                                    if (!(message.secretEnv[key[i]] && typeof message.secretEnv[key[i]].length === "number" || $util.isString(message.secretEnv[key[i]])))
                                        return "secretEnv: buffer{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Secret message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.Secret
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.Secret} Secret
                         */
                        Secret.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.Secret)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.Secret();
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            if (object.secretEnv) {
                                if (typeof object.secretEnv !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.Secret.secretEnv: object expected");
                                message.secretEnv = {};
                                for (var keys = Object.keys(object.secretEnv), i = 0; i < keys.length; ++i)
                                    if (typeof object.secretEnv[keys[i]] === "string")
                                        $util.base64.decode(object.secretEnv[keys[i]], message.secretEnv[keys[i]] = $util.newBuffer($util.base64.length(object.secretEnv[keys[i]])), 0);
                                    else if (object.secretEnv[keys[i]].length >= 0)
                                        message.secretEnv[keys[i]] = object.secretEnv[keys[i]];
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Secret message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.Secret
                         * @static
                         * @param {google.devtools.cloudbuild.v1.Secret} message Secret
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Secret.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.secretEnv = {};
                            if (options.defaults)
                                object.kmsKeyName = "";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            var keys2;
                            if (message.secretEnv && (keys2 = Object.keys(message.secretEnv)).length) {
                                object.secretEnv = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.secretEnv[keys2[j]] = options.bytes === String ? $util.base64.encode(message.secretEnv[keys2[j]], 0, message.secretEnv[keys2[j]].length) : options.bytes === Array ? Array.prototype.slice.call(message.secretEnv[keys2[j]]) : message.secretEnv[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Secret to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.Secret
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Secret.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Secret
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.Secret
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Secret.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.Secret";
                        };
    
                        return Secret;
                    })();
    
                    v1.CreateBuildRequest = (function() {
    
                        /**
                         * Properties of a CreateBuildRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface ICreateBuildRequest
                         * @property {string|null} [parent] CreateBuildRequest parent
                         * @property {string|null} [projectId] CreateBuildRequest projectId
                         * @property {google.devtools.cloudbuild.v1.IBuild|null} [build] CreateBuildRequest build
                         */
    
                        /**
                         * Constructs a new CreateBuildRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a CreateBuildRequest.
                         * @implements ICreateBuildRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.ICreateBuildRequest=} [properties] Properties to set
                         */
                        function CreateBuildRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateBuildRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @instance
                         */
                        CreateBuildRequest.prototype.parent = "";
    
                        /**
                         * CreateBuildRequest projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @instance
                         */
                        CreateBuildRequest.prototype.projectId = "";
    
                        /**
                         * CreateBuildRequest build.
                         * @member {google.devtools.cloudbuild.v1.IBuild|null|undefined} build
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @instance
                         */
                        CreateBuildRequest.prototype.build = null;
    
                        /**
                         * Creates a new CreateBuildRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ICreateBuildRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.CreateBuildRequest} CreateBuildRequest instance
                         */
                        CreateBuildRequest.create = function create(properties) {
                            return new CreateBuildRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateBuildRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.CreateBuildRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ICreateBuildRequest} message CreateBuildRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateBuildRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.build != null && Object.hasOwnProperty.call(message, "build"))
                                $root.google.devtools.cloudbuild.v1.Build.encode(message.build, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.parent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateBuildRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.CreateBuildRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ICreateBuildRequest} message CreateBuildRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateBuildRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateBuildRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.CreateBuildRequest} CreateBuildRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateBuildRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.CreateBuildRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 4: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.build = $root.google.devtools.cloudbuild.v1.Build.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateBuildRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.CreateBuildRequest} CreateBuildRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateBuildRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateBuildRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateBuildRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.build != null && message.hasOwnProperty("build")) {
                                var error = $root.google.devtools.cloudbuild.v1.Build.verify(message.build);
                                if (error)
                                    return "build." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateBuildRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.CreateBuildRequest} CreateBuildRequest
                         */
                        CreateBuildRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.CreateBuildRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.CreateBuildRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.build != null) {
                                if (typeof object.build !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.CreateBuildRequest.build: object expected");
                                message.build = $root.google.devtools.cloudbuild.v1.Build.fromObject(object.build);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateBuildRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.CreateBuildRequest} message CreateBuildRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateBuildRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.build = null;
                                object.parent = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.build != null && message.hasOwnProperty("build"))
                                object.build = $root.google.devtools.cloudbuild.v1.Build.toObject(message.build, options);
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            return object;
                        };
    
                        /**
                         * Converts this CreateBuildRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateBuildRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateBuildRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateBuildRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.CreateBuildRequest";
                        };
    
                        return CreateBuildRequest;
                    })();
    
                    v1.GetBuildRequest = (function() {
    
                        /**
                         * Properties of a GetBuildRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IGetBuildRequest
                         * @property {string|null} [name] GetBuildRequest name
                         * @property {string|null} [projectId] GetBuildRequest projectId
                         * @property {string|null} [id] GetBuildRequest id
                         */
    
                        /**
                         * Constructs a new GetBuildRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a GetBuildRequest.
                         * @implements IGetBuildRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IGetBuildRequest=} [properties] Properties to set
                         */
                        function GetBuildRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetBuildRequest name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @instance
                         */
                        GetBuildRequest.prototype.name = "";
    
                        /**
                         * GetBuildRequest projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @instance
                         */
                        GetBuildRequest.prototype.projectId = "";
    
                        /**
                         * GetBuildRequest id.
                         * @member {string} id
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @instance
                         */
                        GetBuildRequest.prototype.id = "";
    
                        /**
                         * Creates a new GetBuildRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGetBuildRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.GetBuildRequest} GetBuildRequest instance
                         */
                        GetBuildRequest.create = function create(properties) {
                            return new GetBuildRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetBuildRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.GetBuildRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGetBuildRequest} message GetBuildRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetBuildRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.id);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetBuildRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.GetBuildRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGetBuildRequest} message GetBuildRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetBuildRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetBuildRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.GetBuildRequest} GetBuildRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetBuildRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.GetBuildRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 4: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.id = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetBuildRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.GetBuildRequest} GetBuildRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetBuildRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetBuildRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetBuildRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetBuildRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.GetBuildRequest} GetBuildRequest
                         */
                        GetBuildRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.GetBuildRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.GetBuildRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.id != null)
                                message.id = String(object.id);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetBuildRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.GetBuildRequest} message GetBuildRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetBuildRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.id = "";
                                object.name = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetBuildRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetBuildRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetBuildRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.GetBuildRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetBuildRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.GetBuildRequest";
                        };
    
                        return GetBuildRequest;
                    })();
    
                    v1.ListBuildsRequest = (function() {
    
                        /**
                         * Properties of a ListBuildsRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IListBuildsRequest
                         * @property {string|null} [parent] ListBuildsRequest parent
                         * @property {string|null} [projectId] ListBuildsRequest projectId
                         * @property {number|null} [pageSize] ListBuildsRequest pageSize
                         * @property {string|null} [pageToken] ListBuildsRequest pageToken
                         * @property {string|null} [filter] ListBuildsRequest filter
                         */
    
                        /**
                         * Constructs a new ListBuildsRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a ListBuildsRequest.
                         * @implements IListBuildsRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IListBuildsRequest=} [properties] Properties to set
                         */
                        function ListBuildsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListBuildsRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @instance
                         */
                        ListBuildsRequest.prototype.parent = "";
    
                        /**
                         * ListBuildsRequest projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @instance
                         */
                        ListBuildsRequest.prototype.projectId = "";
    
                        /**
                         * ListBuildsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @instance
                         */
                        ListBuildsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListBuildsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @instance
                         */
                        ListBuildsRequest.prototype.pageToken = "";
    
                        /**
                         * ListBuildsRequest filter.
                         * @member {string} filter
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @instance
                         */
                        ListBuildsRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListBuildsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IListBuildsRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.ListBuildsRequest} ListBuildsRequest instance
                         */
                        ListBuildsRequest.create = function create(properties) {
                            return new ListBuildsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListBuildsRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.ListBuildsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IListBuildsRequest} message ListBuildsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBuildsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.filter);
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.parent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListBuildsRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.ListBuildsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IListBuildsRequest} message ListBuildsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBuildsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListBuildsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.ListBuildsRequest} ListBuildsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBuildsRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.ListBuildsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 9: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListBuildsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.ListBuildsRequest} ListBuildsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBuildsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListBuildsRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListBuildsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListBuildsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.ListBuildsRequest} ListBuildsRequest
                         */
                        ListBuildsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.ListBuildsRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.ListBuildsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListBuildsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ListBuildsRequest} message ListBuildsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListBuildsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.parent = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            return object;
                        };
    
                        /**
                         * Converts this ListBuildsRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListBuildsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListBuildsRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListBuildsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.ListBuildsRequest";
                        };
    
                        return ListBuildsRequest;
                    })();
    
                    v1.ListBuildsResponse = (function() {
    
                        /**
                         * Properties of a ListBuildsResponse.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IListBuildsResponse
                         * @property {Array.<google.devtools.cloudbuild.v1.IBuild>|null} [builds] ListBuildsResponse builds
                         * @property {string|null} [nextPageToken] ListBuildsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListBuildsResponse.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a ListBuildsResponse.
                         * @implements IListBuildsResponse
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IListBuildsResponse=} [properties] Properties to set
                         */
                        function ListBuildsResponse(properties) {
                            this.builds = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListBuildsResponse builds.
                         * @member {Array.<google.devtools.cloudbuild.v1.IBuild>} builds
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsResponse
                         * @instance
                         */
                        ListBuildsResponse.prototype.builds = $util.emptyArray;
    
                        /**
                         * ListBuildsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsResponse
                         * @instance
                         */
                        ListBuildsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListBuildsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsResponse
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IListBuildsResponse=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.ListBuildsResponse} ListBuildsResponse instance
                         */
                        ListBuildsResponse.create = function create(properties) {
                            return new ListBuildsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListBuildsResponse message. Does not implicitly {@link google.devtools.cloudbuild.v1.ListBuildsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsResponse
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IListBuildsResponse} message ListBuildsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBuildsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.builds != null && message.builds.length)
                                for (var i = 0; i < message.builds.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.Build.encode(message.builds[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListBuildsResponse message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.ListBuildsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsResponse
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IListBuildsResponse} message ListBuildsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBuildsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListBuildsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.ListBuildsResponse} ListBuildsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBuildsResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.ListBuildsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.builds && message.builds.length))
                                            message.builds = [];
                                        message.builds.push($root.google.devtools.cloudbuild.v1.Build.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListBuildsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.ListBuildsResponse} ListBuildsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBuildsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListBuildsResponse message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListBuildsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.builds != null && message.hasOwnProperty("builds")) {
                                if (!Array.isArray(message.builds))
                                    return "builds: array expected";
                                for (var i = 0; i < message.builds.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.Build.verify(message.builds[i]);
                                    if (error)
                                        return "builds." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListBuildsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.ListBuildsResponse} ListBuildsResponse
                         */
                        ListBuildsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.ListBuildsResponse)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.ListBuildsResponse();
                            if (object.builds) {
                                if (!Array.isArray(object.builds))
                                    throw TypeError(".google.devtools.cloudbuild.v1.ListBuildsResponse.builds: array expected");
                                message.builds = [];
                                for (var i = 0; i < object.builds.length; ++i) {
                                    if (typeof object.builds[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.ListBuildsResponse.builds: object expected");
                                    message.builds[i] = $root.google.devtools.cloudbuild.v1.Build.fromObject(object.builds[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListBuildsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsResponse
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ListBuildsResponse} message ListBuildsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListBuildsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.builds = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.builds && message.builds.length) {
                                object.builds = [];
                                for (var j = 0; j < message.builds.length; ++j)
                                    object.builds[j] = $root.google.devtools.cloudbuild.v1.Build.toObject(message.builds[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListBuildsResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListBuildsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListBuildsResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.ListBuildsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListBuildsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.ListBuildsResponse";
                        };
    
                        return ListBuildsResponse;
                    })();
    
                    v1.CancelBuildRequest = (function() {
    
                        /**
                         * Properties of a CancelBuildRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface ICancelBuildRequest
                         * @property {string|null} [name] CancelBuildRequest name
                         * @property {string|null} [projectId] CancelBuildRequest projectId
                         * @property {string|null} [id] CancelBuildRequest id
                         */
    
                        /**
                         * Constructs a new CancelBuildRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a CancelBuildRequest.
                         * @implements ICancelBuildRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.ICancelBuildRequest=} [properties] Properties to set
                         */
                        function CancelBuildRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CancelBuildRequest name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @instance
                         */
                        CancelBuildRequest.prototype.name = "";
    
                        /**
                         * CancelBuildRequest projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @instance
                         */
                        CancelBuildRequest.prototype.projectId = "";
    
                        /**
                         * CancelBuildRequest id.
                         * @member {string} id
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @instance
                         */
                        CancelBuildRequest.prototype.id = "";
    
                        /**
                         * Creates a new CancelBuildRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ICancelBuildRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.CancelBuildRequest} CancelBuildRequest instance
                         */
                        CancelBuildRequest.create = function create(properties) {
                            return new CancelBuildRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CancelBuildRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.CancelBuildRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ICancelBuildRequest} message CancelBuildRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelBuildRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.id);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CancelBuildRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.CancelBuildRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ICancelBuildRequest} message CancelBuildRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelBuildRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CancelBuildRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.CancelBuildRequest} CancelBuildRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelBuildRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.CancelBuildRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 4: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.id = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CancelBuildRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.CancelBuildRequest} CancelBuildRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelBuildRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CancelBuildRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CancelBuildRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CancelBuildRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.CancelBuildRequest} CancelBuildRequest
                         */
                        CancelBuildRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.CancelBuildRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.CancelBuildRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.id != null)
                                message.id = String(object.id);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CancelBuildRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.CancelBuildRequest} message CancelBuildRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CancelBuildRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.id = "";
                                object.name = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this CancelBuildRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CancelBuildRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CancelBuildRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.CancelBuildRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CancelBuildRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.CancelBuildRequest";
                        };
    
                        return CancelBuildRequest;
                    })();
    
                    v1.ApproveBuildRequest = (function() {
    
                        /**
                         * Properties of an ApproveBuildRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IApproveBuildRequest
                         * @property {string|null} [name] ApproveBuildRequest name
                         * @property {google.devtools.cloudbuild.v1.IApprovalResult|null} [approvalResult] ApproveBuildRequest approvalResult
                         */
    
                        /**
                         * Constructs a new ApproveBuildRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents an ApproveBuildRequest.
                         * @implements IApproveBuildRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IApproveBuildRequest=} [properties] Properties to set
                         */
                        function ApproveBuildRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ApproveBuildRequest name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.ApproveBuildRequest
                         * @instance
                         */
                        ApproveBuildRequest.prototype.name = "";
    
                        /**
                         * ApproveBuildRequest approvalResult.
                         * @member {google.devtools.cloudbuild.v1.IApprovalResult|null|undefined} approvalResult
                         * @memberof google.devtools.cloudbuild.v1.ApproveBuildRequest
                         * @instance
                         */
                        ApproveBuildRequest.prototype.approvalResult = null;
    
                        /**
                         * Creates a new ApproveBuildRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.ApproveBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IApproveBuildRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.ApproveBuildRequest} ApproveBuildRequest instance
                         */
                        ApproveBuildRequest.create = function create(properties) {
                            return new ApproveBuildRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ApproveBuildRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.ApproveBuildRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.ApproveBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IApproveBuildRequest} message ApproveBuildRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApproveBuildRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.approvalResult != null && Object.hasOwnProperty.call(message, "approvalResult"))
                                $root.google.devtools.cloudbuild.v1.ApprovalResult.encode(message.approvalResult, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ApproveBuildRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.ApproveBuildRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ApproveBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IApproveBuildRequest} message ApproveBuildRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApproveBuildRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ApproveBuildRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.ApproveBuildRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.ApproveBuildRequest} ApproveBuildRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApproveBuildRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.ApproveBuildRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.approvalResult = $root.google.devtools.cloudbuild.v1.ApprovalResult.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ApproveBuildRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ApproveBuildRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.ApproveBuildRequest} ApproveBuildRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApproveBuildRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ApproveBuildRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.ApproveBuildRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ApproveBuildRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.approvalResult != null && message.hasOwnProperty("approvalResult")) {
                                var error = $root.google.devtools.cloudbuild.v1.ApprovalResult.verify(message.approvalResult);
                                if (error)
                                    return "approvalResult." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ApproveBuildRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.ApproveBuildRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.ApproveBuildRequest} ApproveBuildRequest
                         */
                        ApproveBuildRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.ApproveBuildRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.ApproveBuildRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.approvalResult != null) {
                                if (typeof object.approvalResult !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.ApproveBuildRequest.approvalResult: object expected");
                                message.approvalResult = $root.google.devtools.cloudbuild.v1.ApprovalResult.fromObject(object.approvalResult);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ApproveBuildRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.ApproveBuildRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ApproveBuildRequest} message ApproveBuildRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ApproveBuildRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.approvalResult = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.approvalResult != null && message.hasOwnProperty("approvalResult"))
                                object.approvalResult = $root.google.devtools.cloudbuild.v1.ApprovalResult.toObject(message.approvalResult, options);
                            return object;
                        };
    
                        /**
                         * Converts this ApproveBuildRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.ApproveBuildRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ApproveBuildRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ApproveBuildRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.ApproveBuildRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ApproveBuildRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.ApproveBuildRequest";
                        };
    
                        return ApproveBuildRequest;
                    })();
    
                    v1.BuildApproval = (function() {
    
                        /**
                         * Properties of a BuildApproval.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IBuildApproval
                         * @property {google.devtools.cloudbuild.v1.BuildApproval.State|null} [state] BuildApproval state
                         * @property {google.devtools.cloudbuild.v1.IApprovalConfig|null} [config] BuildApproval config
                         * @property {google.devtools.cloudbuild.v1.IApprovalResult|null} [result] BuildApproval result
                         */
    
                        /**
                         * Constructs a new BuildApproval.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a BuildApproval.
                         * @implements IBuildApproval
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IBuildApproval=} [properties] Properties to set
                         */
                        function BuildApproval(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BuildApproval state.
                         * @member {google.devtools.cloudbuild.v1.BuildApproval.State} state
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @instance
                         */
                        BuildApproval.prototype.state = 0;
    
                        /**
                         * BuildApproval config.
                         * @member {google.devtools.cloudbuild.v1.IApprovalConfig|null|undefined} config
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @instance
                         */
                        BuildApproval.prototype.config = null;
    
                        /**
                         * BuildApproval result.
                         * @member {google.devtools.cloudbuild.v1.IApprovalResult|null|undefined} result
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @instance
                         */
                        BuildApproval.prototype.result = null;
    
                        /**
                         * Creates a new BuildApproval instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildApproval=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.BuildApproval} BuildApproval instance
                         */
                        BuildApproval.create = function create(properties) {
                            return new BuildApproval(properties);
                        };
    
                        /**
                         * Encodes the specified BuildApproval message. Does not implicitly {@link google.devtools.cloudbuild.v1.BuildApproval.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildApproval} message BuildApproval message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildApproval.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                $root.google.devtools.cloudbuild.v1.ApprovalConfig.encode(message.config, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                                $root.google.devtools.cloudbuild.v1.ApprovalResult.encode(message.result, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BuildApproval message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.BuildApproval.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildApproval} message BuildApproval message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildApproval.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BuildApproval message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.BuildApproval} BuildApproval
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildApproval.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.BuildApproval();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.config = $root.google.devtools.cloudbuild.v1.ApprovalConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.result = $root.google.devtools.cloudbuild.v1.ApprovalResult.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BuildApproval message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.BuildApproval} BuildApproval
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildApproval.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BuildApproval message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BuildApproval.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 5:
                                    break;
                                }
                            if (message.config != null && message.hasOwnProperty("config")) {
                                var error = $root.google.devtools.cloudbuild.v1.ApprovalConfig.verify(message.config);
                                if (error)
                                    return "config." + error;
                            }
                            if (message.result != null && message.hasOwnProperty("result")) {
                                var error = $root.google.devtools.cloudbuild.v1.ApprovalResult.verify(message.result);
                                if (error)
                                    return "result." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BuildApproval message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.BuildApproval} BuildApproval
                         */
                        BuildApproval.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.BuildApproval)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.BuildApproval();
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "PENDING":
                            case 1:
                                message.state = 1;
                                break;
                            case "APPROVED":
                            case 2:
                                message.state = 2;
                                break;
                            case "REJECTED":
                            case 3:
                                message.state = 3;
                                break;
                            case "CANCELLED":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.config != null) {
                                if (typeof object.config !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildApproval.config: object expected");
                                message.config = $root.google.devtools.cloudbuild.v1.ApprovalConfig.fromObject(object.config);
                            }
                            if (object.result != null) {
                                if (typeof object.result !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildApproval.result: object expected");
                                message.result = $root.google.devtools.cloudbuild.v1.ApprovalResult.fromObject(object.result);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BuildApproval message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @static
                         * @param {google.devtools.cloudbuild.v1.BuildApproval} message BuildApproval
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BuildApproval.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.config = null;
                                object.result = null;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.devtools.cloudbuild.v1.BuildApproval.State[message.state] === undefined ? message.state : $root.google.devtools.cloudbuild.v1.BuildApproval.State[message.state] : message.state;
                            if (message.config != null && message.hasOwnProperty("config"))
                                object.config = $root.google.devtools.cloudbuild.v1.ApprovalConfig.toObject(message.config, options);
                            if (message.result != null && message.hasOwnProperty("result"))
                                object.result = $root.google.devtools.cloudbuild.v1.ApprovalResult.toObject(message.result, options);
                            return object;
                        };
    
                        /**
                         * Converts this BuildApproval to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BuildApproval.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BuildApproval
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.BuildApproval
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BuildApproval.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.BuildApproval";
                        };
    
                        /**
                         * State enum.
                         * @name google.devtools.cloudbuild.v1.BuildApproval.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} PENDING=1 PENDING value
                         * @property {number} APPROVED=2 APPROVED value
                         * @property {number} REJECTED=3 REJECTED value
                         * @property {number} CANCELLED=5 CANCELLED value
                         */
                        BuildApproval.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PENDING"] = 1;
                            values[valuesById[2] = "APPROVED"] = 2;
                            values[valuesById[3] = "REJECTED"] = 3;
                            values[valuesById[5] = "CANCELLED"] = 5;
                            return values;
                        })();
    
                        return BuildApproval;
                    })();
    
                    v1.ApprovalConfig = (function() {
    
                        /**
                         * Properties of an ApprovalConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IApprovalConfig
                         * @property {boolean|null} [approvalRequired] ApprovalConfig approvalRequired
                         */
    
                        /**
                         * Constructs a new ApprovalConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents an ApprovalConfig.
                         * @implements IApprovalConfig
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IApprovalConfig=} [properties] Properties to set
                         */
                        function ApprovalConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ApprovalConfig approvalRequired.
                         * @member {boolean} approvalRequired
                         * @memberof google.devtools.cloudbuild.v1.ApprovalConfig
                         * @instance
                         */
                        ApprovalConfig.prototype.approvalRequired = false;
    
                        /**
                         * Creates a new ApprovalConfig instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.ApprovalConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IApprovalConfig=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.ApprovalConfig} ApprovalConfig instance
                         */
                        ApprovalConfig.create = function create(properties) {
                            return new ApprovalConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ApprovalConfig message. Does not implicitly {@link google.devtools.cloudbuild.v1.ApprovalConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.ApprovalConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IApprovalConfig} message ApprovalConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApprovalConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.approvalRequired != null && Object.hasOwnProperty.call(message, "approvalRequired"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.approvalRequired);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ApprovalConfig message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.ApprovalConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ApprovalConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IApprovalConfig} message ApprovalConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApprovalConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ApprovalConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.ApprovalConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.ApprovalConfig} ApprovalConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApprovalConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.ApprovalConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.approvalRequired = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ApprovalConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ApprovalConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.ApprovalConfig} ApprovalConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApprovalConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ApprovalConfig message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.ApprovalConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ApprovalConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.approvalRequired != null && message.hasOwnProperty("approvalRequired"))
                                if (typeof message.approvalRequired !== "boolean")
                                    return "approvalRequired: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an ApprovalConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.ApprovalConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.ApprovalConfig} ApprovalConfig
                         */
                        ApprovalConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.ApprovalConfig)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.ApprovalConfig();
                            if (object.approvalRequired != null)
                                message.approvalRequired = Boolean(object.approvalRequired);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ApprovalConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.ApprovalConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ApprovalConfig} message ApprovalConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ApprovalConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.approvalRequired = false;
                            if (message.approvalRequired != null && message.hasOwnProperty("approvalRequired"))
                                object.approvalRequired = message.approvalRequired;
                            return object;
                        };
    
                        /**
                         * Converts this ApprovalConfig to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.ApprovalConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ApprovalConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ApprovalConfig
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.ApprovalConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ApprovalConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.ApprovalConfig";
                        };
    
                        return ApprovalConfig;
                    })();
    
                    v1.ApprovalResult = (function() {
    
                        /**
                         * Properties of an ApprovalResult.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IApprovalResult
                         * @property {string|null} [approverAccount] ApprovalResult approverAccount
                         * @property {google.protobuf.ITimestamp|null} [approvalTime] ApprovalResult approvalTime
                         * @property {google.devtools.cloudbuild.v1.ApprovalResult.Decision|null} [decision] ApprovalResult decision
                         * @property {string|null} [comment] ApprovalResult comment
                         * @property {string|null} [url] ApprovalResult url
                         */
    
                        /**
                         * Constructs a new ApprovalResult.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents an ApprovalResult.
                         * @implements IApprovalResult
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IApprovalResult=} [properties] Properties to set
                         */
                        function ApprovalResult(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ApprovalResult approverAccount.
                         * @member {string} approverAccount
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @instance
                         */
                        ApprovalResult.prototype.approverAccount = "";
    
                        /**
                         * ApprovalResult approvalTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} approvalTime
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @instance
                         */
                        ApprovalResult.prototype.approvalTime = null;
    
                        /**
                         * ApprovalResult decision.
                         * @member {google.devtools.cloudbuild.v1.ApprovalResult.Decision} decision
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @instance
                         */
                        ApprovalResult.prototype.decision = 0;
    
                        /**
                         * ApprovalResult comment.
                         * @member {string} comment
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @instance
                         */
                        ApprovalResult.prototype.comment = "";
    
                        /**
                         * ApprovalResult url.
                         * @member {string} url
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @instance
                         */
                        ApprovalResult.prototype.url = "";
    
                        /**
                         * Creates a new ApprovalResult instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IApprovalResult=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.ApprovalResult} ApprovalResult instance
                         */
                        ApprovalResult.create = function create(properties) {
                            return new ApprovalResult(properties);
                        };
    
                        /**
                         * Encodes the specified ApprovalResult message. Does not implicitly {@link google.devtools.cloudbuild.v1.ApprovalResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IApprovalResult} message ApprovalResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApprovalResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.approverAccount != null && Object.hasOwnProperty.call(message, "approverAccount"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.approverAccount);
                            if (message.approvalTime != null && Object.hasOwnProperty.call(message, "approvalTime"))
                                $root.google.protobuf.Timestamp.encode(message.approvalTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.decision != null && Object.hasOwnProperty.call(message, "decision"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.decision);
                            if (message.comment != null && Object.hasOwnProperty.call(message, "comment"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.comment);
                            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.url);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ApprovalResult message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.ApprovalResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IApprovalResult} message ApprovalResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApprovalResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ApprovalResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.ApprovalResult} ApprovalResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApprovalResult.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.ApprovalResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.approverAccount = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.approvalTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.decision = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.comment = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.url = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ApprovalResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.ApprovalResult} ApprovalResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApprovalResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ApprovalResult message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ApprovalResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.approverAccount != null && message.hasOwnProperty("approverAccount"))
                                if (!$util.isString(message.approverAccount))
                                    return "approverAccount: string expected";
                            if (message.approvalTime != null && message.hasOwnProperty("approvalTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.approvalTime);
                                if (error)
                                    return "approvalTime." + error;
                            }
                            if (message.decision != null && message.hasOwnProperty("decision"))
                                switch (message.decision) {
                                default:
                                    return "decision: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.comment != null && message.hasOwnProperty("comment"))
                                if (!$util.isString(message.comment))
                                    return "comment: string expected";
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ApprovalResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.ApprovalResult} ApprovalResult
                         */
                        ApprovalResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.ApprovalResult)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.ApprovalResult();
                            if (object.approverAccount != null)
                                message.approverAccount = String(object.approverAccount);
                            if (object.approvalTime != null) {
                                if (typeof object.approvalTime !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.ApprovalResult.approvalTime: object expected");
                                message.approvalTime = $root.google.protobuf.Timestamp.fromObject(object.approvalTime);
                            }
                            switch (object.decision) {
                            default:
                                if (typeof object.decision === "number") {
                                    message.decision = object.decision;
                                    break;
                                }
                                break;
                            case "DECISION_UNSPECIFIED":
                            case 0:
                                message.decision = 0;
                                break;
                            case "APPROVED":
                            case 1:
                                message.decision = 1;
                                break;
                            case "REJECTED":
                            case 2:
                                message.decision = 2;
                                break;
                            }
                            if (object.comment != null)
                                message.comment = String(object.comment);
                            if (object.url != null)
                                message.url = String(object.url);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ApprovalResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ApprovalResult} message ApprovalResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ApprovalResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.approverAccount = "";
                                object.approvalTime = null;
                                object.decision = options.enums === String ? "DECISION_UNSPECIFIED" : 0;
                                object.comment = "";
                                object.url = "";
                            }
                            if (message.approverAccount != null && message.hasOwnProperty("approverAccount"))
                                object.approverAccount = message.approverAccount;
                            if (message.approvalTime != null && message.hasOwnProperty("approvalTime"))
                                object.approvalTime = $root.google.protobuf.Timestamp.toObject(message.approvalTime, options);
                            if (message.decision != null && message.hasOwnProperty("decision"))
                                object.decision = options.enums === String ? $root.google.devtools.cloudbuild.v1.ApprovalResult.Decision[message.decision] === undefined ? message.decision : $root.google.devtools.cloudbuild.v1.ApprovalResult.Decision[message.decision] : message.decision;
                            if (message.comment != null && message.hasOwnProperty("comment"))
                                object.comment = message.comment;
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            return object;
                        };
    
                        /**
                         * Converts this ApprovalResult to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ApprovalResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ApprovalResult
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.ApprovalResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ApprovalResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.ApprovalResult";
                        };
    
                        /**
                         * Decision enum.
                         * @name google.devtools.cloudbuild.v1.ApprovalResult.Decision
                         * @enum {number}
                         * @property {number} DECISION_UNSPECIFIED=0 DECISION_UNSPECIFIED value
                         * @property {number} APPROVED=1 APPROVED value
                         * @property {number} REJECTED=2 REJECTED value
                         */
                        ApprovalResult.Decision = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DECISION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "APPROVED"] = 1;
                            values[valuesById[2] = "REJECTED"] = 2;
                            return values;
                        })();
    
                        return ApprovalResult;
                    })();
    
                    v1.GitRepoSource = (function() {
    
                        /**
                         * Properties of a GitRepoSource.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IGitRepoSource
                         * @property {string|null} [uri] GitRepoSource uri
                         * @property {string|null} [repository] GitRepoSource repository
                         * @property {string|null} [ref] GitRepoSource ref
                         * @property {google.devtools.cloudbuild.v1.GitFileSource.RepoType|null} [repoType] GitRepoSource repoType
                         * @property {string|null} [githubEnterpriseConfig] GitRepoSource githubEnterpriseConfig
                         */
    
                        /**
                         * Constructs a new GitRepoSource.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a GitRepoSource.
                         * @implements IGitRepoSource
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IGitRepoSource=} [properties] Properties to set
                         */
                        function GitRepoSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GitRepoSource uri.
                         * @member {string} uri
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @instance
                         */
                        GitRepoSource.prototype.uri = "";
    
                        /**
                         * GitRepoSource repository.
                         * @member {string|null|undefined} repository
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @instance
                         */
                        GitRepoSource.prototype.repository = null;
    
                        /**
                         * GitRepoSource ref.
                         * @member {string} ref
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @instance
                         */
                        GitRepoSource.prototype.ref = "";
    
                        /**
                         * GitRepoSource repoType.
                         * @member {google.devtools.cloudbuild.v1.GitFileSource.RepoType} repoType
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @instance
                         */
                        GitRepoSource.prototype.repoType = 0;
    
                        /**
                         * GitRepoSource githubEnterpriseConfig.
                         * @member {string|null|undefined} githubEnterpriseConfig
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @instance
                         */
                        GitRepoSource.prototype.githubEnterpriseConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GitRepoSource source.
                         * @member {"repository"|undefined} source
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @instance
                         */
                        Object.defineProperty(GitRepoSource.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["repository"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GitRepoSource enterpriseConfig.
                         * @member {"githubEnterpriseConfig"|undefined} enterpriseConfig
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @instance
                         */
                        Object.defineProperty(GitRepoSource.prototype, "enterpriseConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["githubEnterpriseConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GitRepoSource instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitRepoSource=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.GitRepoSource} GitRepoSource instance
                         */
                        GitRepoSource.create = function create(properties) {
                            return new GitRepoSource(properties);
                        };
    
                        /**
                         * Encodes the specified GitRepoSource message. Does not implicitly {@link google.devtools.cloudbuild.v1.GitRepoSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitRepoSource} message GitRepoSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitRepoSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            if (message.ref != null && Object.hasOwnProperty.call(message, "ref"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.ref);
                            if (message.repoType != null && Object.hasOwnProperty.call(message, "repoType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.repoType);
                            if (message.githubEnterpriseConfig != null && Object.hasOwnProperty.call(message, "githubEnterpriseConfig"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.githubEnterpriseConfig);
                            if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.repository);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GitRepoSource message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.GitRepoSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitRepoSource} message GitRepoSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitRepoSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GitRepoSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.GitRepoSource} GitRepoSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitRepoSource.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.GitRepoSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.repository = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.ref = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.repoType = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.githubEnterpriseConfig = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GitRepoSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.GitRepoSource} GitRepoSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitRepoSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GitRepoSource message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GitRepoSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.repository != null && message.hasOwnProperty("repository")) {
                                properties.source = 1;
                                if (!$util.isString(message.repository))
                                    return "repository: string expected";
                            }
                            if (message.ref != null && message.hasOwnProperty("ref"))
                                if (!$util.isString(message.ref))
                                    return "ref: string expected";
                            if (message.repoType != null && message.hasOwnProperty("repoType"))
                                switch (message.repoType) {
                                default:
                                    return "repoType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.githubEnterpriseConfig != null && message.hasOwnProperty("githubEnterpriseConfig")) {
                                properties.enterpriseConfig = 1;
                                if (!$util.isString(message.githubEnterpriseConfig))
                                    return "githubEnterpriseConfig: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GitRepoSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.GitRepoSource} GitRepoSource
                         */
                        GitRepoSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.GitRepoSource)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.GitRepoSource();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.repository != null)
                                message.repository = String(object.repository);
                            if (object.ref != null)
                                message.ref = String(object.ref);
                            switch (object.repoType) {
                            default:
                                if (typeof object.repoType === "number") {
                                    message.repoType = object.repoType;
                                    break;
                                }
                                break;
                            case "UNKNOWN":
                            case 0:
                                message.repoType = 0;
                                break;
                            case "CLOUD_SOURCE_REPOSITORIES":
                            case 1:
                                message.repoType = 1;
                                break;
                            case "GITHUB":
                            case 2:
                                message.repoType = 2;
                                break;
                            case "BITBUCKET_SERVER":
                            case 3:
                                message.repoType = 3;
                                break;
                            case "GITLAB":
                            case 4:
                                message.repoType = 4;
                                break;
                            }
                            if (object.githubEnterpriseConfig != null)
                                message.githubEnterpriseConfig = String(object.githubEnterpriseConfig);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GitRepoSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.GitRepoSource} message GitRepoSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GitRepoSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.uri = "";
                                object.ref = "";
                                object.repoType = options.enums === String ? "UNKNOWN" : 0;
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.ref != null && message.hasOwnProperty("ref"))
                                object.ref = message.ref;
                            if (message.repoType != null && message.hasOwnProperty("repoType"))
                                object.repoType = options.enums === String ? $root.google.devtools.cloudbuild.v1.GitFileSource.RepoType[message.repoType] === undefined ? message.repoType : $root.google.devtools.cloudbuild.v1.GitFileSource.RepoType[message.repoType] : message.repoType;
                            if (message.githubEnterpriseConfig != null && message.hasOwnProperty("githubEnterpriseConfig")) {
                                object.githubEnterpriseConfig = message.githubEnterpriseConfig;
                                if (options.oneofs)
                                    object.enterpriseConfig = "githubEnterpriseConfig";
                            }
                            if (message.repository != null && message.hasOwnProperty("repository")) {
                                object.repository = message.repository;
                                if (options.oneofs)
                                    object.source = "repository";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GitRepoSource to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GitRepoSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GitRepoSource
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.GitRepoSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GitRepoSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.GitRepoSource";
                        };
    
                        return GitRepoSource;
                    })();
    
                    v1.GitFileSource = (function() {
    
                        /**
                         * Properties of a GitFileSource.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IGitFileSource
                         * @property {string|null} [path] GitFileSource path
                         * @property {string|null} [uri] GitFileSource uri
                         * @property {string|null} [repository] GitFileSource repository
                         * @property {google.devtools.cloudbuild.v1.GitFileSource.RepoType|null} [repoType] GitFileSource repoType
                         * @property {string|null} [revision] GitFileSource revision
                         * @property {string|null} [githubEnterpriseConfig] GitFileSource githubEnterpriseConfig
                         */
    
                        /**
                         * Constructs a new GitFileSource.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a GitFileSource.
                         * @implements IGitFileSource
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IGitFileSource=} [properties] Properties to set
                         */
                        function GitFileSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GitFileSource path.
                         * @member {string} path
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @instance
                         */
                        GitFileSource.prototype.path = "";
    
                        /**
                         * GitFileSource uri.
                         * @member {string} uri
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @instance
                         */
                        GitFileSource.prototype.uri = "";
    
                        /**
                         * GitFileSource repository.
                         * @member {string|null|undefined} repository
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @instance
                         */
                        GitFileSource.prototype.repository = null;
    
                        /**
                         * GitFileSource repoType.
                         * @member {google.devtools.cloudbuild.v1.GitFileSource.RepoType} repoType
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @instance
                         */
                        GitFileSource.prototype.repoType = 0;
    
                        /**
                         * GitFileSource revision.
                         * @member {string} revision
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @instance
                         */
                        GitFileSource.prototype.revision = "";
    
                        /**
                         * GitFileSource githubEnterpriseConfig.
                         * @member {string|null|undefined} githubEnterpriseConfig
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @instance
                         */
                        GitFileSource.prototype.githubEnterpriseConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GitFileSource source.
                         * @member {"repository"|undefined} source
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @instance
                         */
                        Object.defineProperty(GitFileSource.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["repository"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * GitFileSource enterpriseConfig.
                         * @member {"githubEnterpriseConfig"|undefined} enterpriseConfig
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @instance
                         */
                        Object.defineProperty(GitFileSource.prototype, "enterpriseConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["githubEnterpriseConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GitFileSource instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitFileSource=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.GitFileSource} GitFileSource instance
                         */
                        GitFileSource.create = function create(properties) {
                            return new GitFileSource(properties);
                        };
    
                        /**
                         * Encodes the specified GitFileSource message. Does not implicitly {@link google.devtools.cloudbuild.v1.GitFileSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitFileSource} message GitFileSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitFileSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uri);
                            if (message.repoType != null && Object.hasOwnProperty.call(message, "repoType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.repoType);
                            if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.revision);
                            if (message.githubEnterpriseConfig != null && Object.hasOwnProperty.call(message, "githubEnterpriseConfig"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.githubEnterpriseConfig);
                            if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.repository);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GitFileSource message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.GitFileSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitFileSource} message GitFileSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitFileSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GitFileSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.GitFileSource} GitFileSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitFileSource.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.GitFileSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.path = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.repository = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.repoType = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.revision = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.githubEnterpriseConfig = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GitFileSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.GitFileSource} GitFileSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitFileSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GitFileSource message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GitFileSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.path != null && message.hasOwnProperty("path"))
                                if (!$util.isString(message.path))
                                    return "path: string expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.repository != null && message.hasOwnProperty("repository")) {
                                properties.source = 1;
                                if (!$util.isString(message.repository))
                                    return "repository: string expected";
                            }
                            if (message.repoType != null && message.hasOwnProperty("repoType"))
                                switch (message.repoType) {
                                default:
                                    return "repoType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                if (!$util.isString(message.revision))
                                    return "revision: string expected";
                            if (message.githubEnterpriseConfig != null && message.hasOwnProperty("githubEnterpriseConfig")) {
                                properties.enterpriseConfig = 1;
                                if (!$util.isString(message.githubEnterpriseConfig))
                                    return "githubEnterpriseConfig: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GitFileSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.GitFileSource} GitFileSource
                         */
                        GitFileSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.GitFileSource)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.GitFileSource();
                            if (object.path != null)
                                message.path = String(object.path);
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.repository != null)
                                message.repository = String(object.repository);
                            switch (object.repoType) {
                            default:
                                if (typeof object.repoType === "number") {
                                    message.repoType = object.repoType;
                                    break;
                                }
                                break;
                            case "UNKNOWN":
                            case 0:
                                message.repoType = 0;
                                break;
                            case "CLOUD_SOURCE_REPOSITORIES":
                            case 1:
                                message.repoType = 1;
                                break;
                            case "GITHUB":
                            case 2:
                                message.repoType = 2;
                                break;
                            case "BITBUCKET_SERVER":
                            case 3:
                                message.repoType = 3;
                                break;
                            case "GITLAB":
                            case 4:
                                message.repoType = 4;
                                break;
                            }
                            if (object.revision != null)
                                message.revision = String(object.revision);
                            if (object.githubEnterpriseConfig != null)
                                message.githubEnterpriseConfig = String(object.githubEnterpriseConfig);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GitFileSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @static
                         * @param {google.devtools.cloudbuild.v1.GitFileSource} message GitFileSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GitFileSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.path = "";
                                object.uri = "";
                                object.repoType = options.enums === String ? "UNKNOWN" : 0;
                                object.revision = "";
                            }
                            if (message.path != null && message.hasOwnProperty("path"))
                                object.path = message.path;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.repoType != null && message.hasOwnProperty("repoType"))
                                object.repoType = options.enums === String ? $root.google.devtools.cloudbuild.v1.GitFileSource.RepoType[message.repoType] === undefined ? message.repoType : $root.google.devtools.cloudbuild.v1.GitFileSource.RepoType[message.repoType] : message.repoType;
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                object.revision = message.revision;
                            if (message.githubEnterpriseConfig != null && message.hasOwnProperty("githubEnterpriseConfig")) {
                                object.githubEnterpriseConfig = message.githubEnterpriseConfig;
                                if (options.oneofs)
                                    object.enterpriseConfig = "githubEnterpriseConfig";
                            }
                            if (message.repository != null && message.hasOwnProperty("repository")) {
                                object.repository = message.repository;
                                if (options.oneofs)
                                    object.source = "repository";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GitFileSource to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GitFileSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GitFileSource
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.GitFileSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GitFileSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.GitFileSource";
                        };
    
                        /**
                         * RepoType enum.
                         * @name google.devtools.cloudbuild.v1.GitFileSource.RepoType
                         * @enum {number}
                         * @property {number} UNKNOWN=0 UNKNOWN value
                         * @property {number} CLOUD_SOURCE_REPOSITORIES=1 CLOUD_SOURCE_REPOSITORIES value
                         * @property {number} GITHUB=2 GITHUB value
                         * @property {number} BITBUCKET_SERVER=3 BITBUCKET_SERVER value
                         * @property {number} GITLAB=4 GITLAB value
                         */
                        GitFileSource.RepoType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNKNOWN"] = 0;
                            values[valuesById[1] = "CLOUD_SOURCE_REPOSITORIES"] = 1;
                            values[valuesById[2] = "GITHUB"] = 2;
                            values[valuesById[3] = "BITBUCKET_SERVER"] = 3;
                            values[valuesById[4] = "GITLAB"] = 4;
                            return values;
                        })();
    
                        return GitFileSource;
                    })();
    
                    v1.BuildTrigger = (function() {
    
                        /**
                         * Properties of a BuildTrigger.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IBuildTrigger
                         * @property {string|null} [resourceName] BuildTrigger resourceName
                         * @property {string|null} [id] BuildTrigger id
                         * @property {string|null} [description] BuildTrigger description
                         * @property {string|null} [name] BuildTrigger name
                         * @property {Array.<string>|null} [tags] BuildTrigger tags
                         * @property {google.devtools.cloudbuild.v1.IRepoSource|null} [triggerTemplate] BuildTrigger triggerTemplate
                         * @property {google.devtools.cloudbuild.v1.IGitHubEventsConfig|null} [github] BuildTrigger github
                         * @property {google.devtools.cloudbuild.v1.IPubsubConfig|null} [pubsubConfig] BuildTrigger pubsubConfig
                         * @property {google.devtools.cloudbuild.v1.IWebhookConfig|null} [webhookConfig] BuildTrigger webhookConfig
                         * @property {boolean|null} [autodetect] BuildTrigger autodetect
                         * @property {google.devtools.cloudbuild.v1.IBuild|null} [build] BuildTrigger build
                         * @property {string|null} [filename] BuildTrigger filename
                         * @property {google.devtools.cloudbuild.v1.IGitFileSource|null} [gitFileSource] BuildTrigger gitFileSource
                         * @property {google.protobuf.ITimestamp|null} [createTime] BuildTrigger createTime
                         * @property {boolean|null} [disabled] BuildTrigger disabled
                         * @property {Object.<string,string>|null} [substitutions] BuildTrigger substitutions
                         * @property {Array.<string>|null} [ignoredFiles] BuildTrigger ignoredFiles
                         * @property {Array.<string>|null} [includedFiles] BuildTrigger includedFiles
                         * @property {string|null} [filter] BuildTrigger filter
                         * @property {google.devtools.cloudbuild.v1.IGitRepoSource|null} [sourceToBuild] BuildTrigger sourceToBuild
                         * @property {string|null} [serviceAccount] BuildTrigger serviceAccount
                         * @property {google.devtools.cloudbuild.v1.IRepositoryEventConfig|null} [repositoryEventConfig] BuildTrigger repositoryEventConfig
                         */
    
                        /**
                         * Constructs a new BuildTrigger.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a BuildTrigger.
                         * @implements IBuildTrigger
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IBuildTrigger=} [properties] Properties to set
                         */
                        function BuildTrigger(properties) {
                            this.tags = [];
                            this.substitutions = {};
                            this.ignoredFiles = [];
                            this.includedFiles = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BuildTrigger resourceName.
                         * @member {string} resourceName
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.resourceName = "";
    
                        /**
                         * BuildTrigger id.
                         * @member {string} id
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.id = "";
    
                        /**
                         * BuildTrigger description.
                         * @member {string} description
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.description = "";
    
                        /**
                         * BuildTrigger name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.name = "";
    
                        /**
                         * BuildTrigger tags.
                         * @member {Array.<string>} tags
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.tags = $util.emptyArray;
    
                        /**
                         * BuildTrigger triggerTemplate.
                         * @member {google.devtools.cloudbuild.v1.IRepoSource|null|undefined} triggerTemplate
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.triggerTemplate = null;
    
                        /**
                         * BuildTrigger github.
                         * @member {google.devtools.cloudbuild.v1.IGitHubEventsConfig|null|undefined} github
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.github = null;
    
                        /**
                         * BuildTrigger pubsubConfig.
                         * @member {google.devtools.cloudbuild.v1.IPubsubConfig|null|undefined} pubsubConfig
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.pubsubConfig = null;
    
                        /**
                         * BuildTrigger webhookConfig.
                         * @member {google.devtools.cloudbuild.v1.IWebhookConfig|null|undefined} webhookConfig
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.webhookConfig = null;
    
                        /**
                         * BuildTrigger autodetect.
                         * @member {boolean|null|undefined} autodetect
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.autodetect = null;
    
                        /**
                         * BuildTrigger build.
                         * @member {google.devtools.cloudbuild.v1.IBuild|null|undefined} build
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.build = null;
    
                        /**
                         * BuildTrigger filename.
                         * @member {string|null|undefined} filename
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.filename = null;
    
                        /**
                         * BuildTrigger gitFileSource.
                         * @member {google.devtools.cloudbuild.v1.IGitFileSource|null|undefined} gitFileSource
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.gitFileSource = null;
    
                        /**
                         * BuildTrigger createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.createTime = null;
    
                        /**
                         * BuildTrigger disabled.
                         * @member {boolean} disabled
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.disabled = false;
    
                        /**
                         * BuildTrigger substitutions.
                         * @member {Object.<string,string>} substitutions
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.substitutions = $util.emptyObject;
    
                        /**
                         * BuildTrigger ignoredFiles.
                         * @member {Array.<string>} ignoredFiles
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.ignoredFiles = $util.emptyArray;
    
                        /**
                         * BuildTrigger includedFiles.
                         * @member {Array.<string>} includedFiles
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.includedFiles = $util.emptyArray;
    
                        /**
                         * BuildTrigger filter.
                         * @member {string} filter
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.filter = "";
    
                        /**
                         * BuildTrigger sourceToBuild.
                         * @member {google.devtools.cloudbuild.v1.IGitRepoSource|null|undefined} sourceToBuild
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.sourceToBuild = null;
    
                        /**
                         * BuildTrigger serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.serviceAccount = "";
    
                        /**
                         * BuildTrigger repositoryEventConfig.
                         * @member {google.devtools.cloudbuild.v1.IRepositoryEventConfig|null|undefined} repositoryEventConfig
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        BuildTrigger.prototype.repositoryEventConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * BuildTrigger buildTemplate.
                         * @member {"autodetect"|"build"|"filename"|"gitFileSource"|undefined} buildTemplate
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         */
                        Object.defineProperty(BuildTrigger.prototype, "buildTemplate", {
                            get: $util.oneOfGetter($oneOfFields = ["autodetect", "build", "filename", "gitFileSource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new BuildTrigger instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildTrigger=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.BuildTrigger} BuildTrigger instance
                         */
                        BuildTrigger.create = function create(properties) {
                            return new BuildTrigger(properties);
                        };
    
                        /**
                         * Encodes the specified BuildTrigger message. Does not implicitly {@link google.devtools.cloudbuild.v1.BuildTrigger.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildTrigger} message BuildTrigger message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildTrigger.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                            if (message.build != null && Object.hasOwnProperty.call(message, "build"))
                                $root.google.devtools.cloudbuild.v1.Build.encode(message.build, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.triggerTemplate != null && Object.hasOwnProperty.call(message, "triggerTemplate"))
                                $root.google.devtools.cloudbuild.v1.RepoSource.encode(message.triggerTemplate, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.filename != null && Object.hasOwnProperty.call(message, "filename"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.filename);
                            if (message.disabled != null && Object.hasOwnProperty.call(message, "disabled"))
                                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.disabled);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.description);
                            if (message.substitutions != null && Object.hasOwnProperty.call(message, "substitutions"))
                                for (var keys = Object.keys(message.substitutions), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 11, wireType 2 =*/90).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.substitutions[keys[i]]).ldelim();
                            if (message.github != null && Object.hasOwnProperty.call(message, "github"))
                                $root.google.devtools.cloudbuild.v1.GitHubEventsConfig.encode(message.github, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.ignoredFiles != null && message.ignoredFiles.length)
                                for (var i = 0; i < message.ignoredFiles.length; ++i)
                                    writer.uint32(/* id 15, wireType 2 =*/122).string(message.ignoredFiles[i]);
                            if (message.includedFiles != null && message.includedFiles.length)
                                for (var i = 0; i < message.includedFiles.length; ++i)
                                    writer.uint32(/* id 16, wireType 2 =*/130).string(message.includedFiles[i]);
                            if (message.autodetect != null && Object.hasOwnProperty.call(message, "autodetect"))
                                writer.uint32(/* id 18, wireType 0 =*/144).bool(message.autodetect);
                            if (message.tags != null && message.tags.length)
                                for (var i = 0; i < message.tags.length; ++i)
                                    writer.uint32(/* id 19, wireType 2 =*/154).string(message.tags[i]);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 21, wireType 2 =*/170).string(message.name);
                            if (message.gitFileSource != null && Object.hasOwnProperty.call(message, "gitFileSource"))
                                $root.google.devtools.cloudbuild.v1.GitFileSource.encode(message.gitFileSource, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                            if (message.sourceToBuild != null && Object.hasOwnProperty.call(message, "sourceToBuild"))
                                $root.google.devtools.cloudbuild.v1.GitRepoSource.encode(message.sourceToBuild, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                            if (message.pubsubConfig != null && Object.hasOwnProperty.call(message, "pubsubConfig"))
                                $root.google.devtools.cloudbuild.v1.PubsubConfig.encode(message.pubsubConfig, writer.uint32(/* id 29, wireType 2 =*/234).fork()).ldelim();
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 30, wireType 2 =*/242).string(message.filter);
                            if (message.webhookConfig != null && Object.hasOwnProperty.call(message, "webhookConfig"))
                                $root.google.devtools.cloudbuild.v1.WebhookConfig.encode(message.webhookConfig, writer.uint32(/* id 31, wireType 2 =*/250).fork()).ldelim();
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 33, wireType 2 =*/266).string(message.serviceAccount);
                            if (message.resourceName != null && Object.hasOwnProperty.call(message, "resourceName"))
                                writer.uint32(/* id 34, wireType 2 =*/274).string(message.resourceName);
                            if (message.repositoryEventConfig != null && Object.hasOwnProperty.call(message, "repositoryEventConfig"))
                                $root.google.devtools.cloudbuild.v1.RepositoryEventConfig.encode(message.repositoryEventConfig, writer.uint32(/* id 39, wireType 2 =*/314).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BuildTrigger message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.BuildTrigger.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildTrigger} message BuildTrigger message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildTrigger.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BuildTrigger message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.BuildTrigger} BuildTrigger
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildTrigger.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.BuildTrigger(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 34: {
                                        message.resourceName = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 21: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 19: {
                                        if (!(message.tags && message.tags.length))
                                            message.tags = [];
                                        message.tags.push(reader.string());
                                        break;
                                    }
                                case 7: {
                                        message.triggerTemplate = $root.google.devtools.cloudbuild.v1.RepoSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.github = $root.google.devtools.cloudbuild.v1.GitHubEventsConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 29: {
                                        message.pubsubConfig = $root.google.devtools.cloudbuild.v1.PubsubConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 31: {
                                        message.webhookConfig = $root.google.devtools.cloudbuild.v1.WebhookConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 18: {
                                        message.autodetect = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.build = $root.google.devtools.cloudbuild.v1.Build.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.filename = reader.string();
                                        break;
                                    }
                                case 24: {
                                        message.gitFileSource = $root.google.devtools.cloudbuild.v1.GitFileSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.disabled = reader.bool();
                                        break;
                                    }
                                case 11: {
                                        if (message.substitutions === $util.emptyObject)
                                            message.substitutions = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.substitutions[key] = value;
                                        break;
                                    }
                                case 15: {
                                        if (!(message.ignoredFiles && message.ignoredFiles.length))
                                            message.ignoredFiles = [];
                                        message.ignoredFiles.push(reader.string());
                                        break;
                                    }
                                case 16: {
                                        if (!(message.includedFiles && message.includedFiles.length))
                                            message.includedFiles = [];
                                        message.includedFiles.push(reader.string());
                                        break;
                                    }
                                case 30: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 26: {
                                        message.sourceToBuild = $root.google.devtools.cloudbuild.v1.GitRepoSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 33: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 39: {
                                        message.repositoryEventConfig = $root.google.devtools.cloudbuild.v1.RepositoryEventConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BuildTrigger message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.BuildTrigger} BuildTrigger
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildTrigger.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BuildTrigger message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BuildTrigger.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                if (!$util.isString(message.resourceName))
                                    return "resourceName: string expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.tags != null && message.hasOwnProperty("tags")) {
                                if (!Array.isArray(message.tags))
                                    return "tags: array expected";
                                for (var i = 0; i < message.tags.length; ++i)
                                    if (!$util.isString(message.tags[i]))
                                        return "tags: string[] expected";
                            }
                            if (message.triggerTemplate != null && message.hasOwnProperty("triggerTemplate")) {
                                var error = $root.google.devtools.cloudbuild.v1.RepoSource.verify(message.triggerTemplate);
                                if (error)
                                    return "triggerTemplate." + error;
                            }
                            if (message.github != null && message.hasOwnProperty("github")) {
                                var error = $root.google.devtools.cloudbuild.v1.GitHubEventsConfig.verify(message.github);
                                if (error)
                                    return "github." + error;
                            }
                            if (message.pubsubConfig != null && message.hasOwnProperty("pubsubConfig")) {
                                var error = $root.google.devtools.cloudbuild.v1.PubsubConfig.verify(message.pubsubConfig);
                                if (error)
                                    return "pubsubConfig." + error;
                            }
                            if (message.webhookConfig != null && message.hasOwnProperty("webhookConfig")) {
                                var error = $root.google.devtools.cloudbuild.v1.WebhookConfig.verify(message.webhookConfig);
                                if (error)
                                    return "webhookConfig." + error;
                            }
                            if (message.autodetect != null && message.hasOwnProperty("autodetect")) {
                                properties.buildTemplate = 1;
                                if (typeof message.autodetect !== "boolean")
                                    return "autodetect: boolean expected";
                            }
                            if (message.build != null && message.hasOwnProperty("build")) {
                                if (properties.buildTemplate === 1)
                                    return "buildTemplate: multiple values";
                                properties.buildTemplate = 1;
                                {
                                    var error = $root.google.devtools.cloudbuild.v1.Build.verify(message.build);
                                    if (error)
                                        return "build." + error;
                                }
                            }
                            if (message.filename != null && message.hasOwnProperty("filename")) {
                                if (properties.buildTemplate === 1)
                                    return "buildTemplate: multiple values";
                                properties.buildTemplate = 1;
                                if (!$util.isString(message.filename))
                                    return "filename: string expected";
                            }
                            if (message.gitFileSource != null && message.hasOwnProperty("gitFileSource")) {
                                if (properties.buildTemplate === 1)
                                    return "buildTemplate: multiple values";
                                properties.buildTemplate = 1;
                                {
                                    var error = $root.google.devtools.cloudbuild.v1.GitFileSource.verify(message.gitFileSource);
                                    if (error)
                                        return "gitFileSource." + error;
                                }
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.disabled != null && message.hasOwnProperty("disabled"))
                                if (typeof message.disabled !== "boolean")
                                    return "disabled: boolean expected";
                            if (message.substitutions != null && message.hasOwnProperty("substitutions")) {
                                if (!$util.isObject(message.substitutions))
                                    return "substitutions: object expected";
                                var key = Object.keys(message.substitutions);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.substitutions[key[i]]))
                                        return "substitutions: string{k:string} expected";
                            }
                            if (message.ignoredFiles != null && message.hasOwnProperty("ignoredFiles")) {
                                if (!Array.isArray(message.ignoredFiles))
                                    return "ignoredFiles: array expected";
                                for (var i = 0; i < message.ignoredFiles.length; ++i)
                                    if (!$util.isString(message.ignoredFiles[i]))
                                        return "ignoredFiles: string[] expected";
                            }
                            if (message.includedFiles != null && message.hasOwnProperty("includedFiles")) {
                                if (!Array.isArray(message.includedFiles))
                                    return "includedFiles: array expected";
                                for (var i = 0; i < message.includedFiles.length; ++i)
                                    if (!$util.isString(message.includedFiles[i]))
                                        return "includedFiles: string[] expected";
                            }
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.sourceToBuild != null && message.hasOwnProperty("sourceToBuild")) {
                                var error = $root.google.devtools.cloudbuild.v1.GitRepoSource.verify(message.sourceToBuild);
                                if (error)
                                    return "sourceToBuild." + error;
                            }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.repositoryEventConfig != null && message.hasOwnProperty("repositoryEventConfig")) {
                                var error = $root.google.devtools.cloudbuild.v1.RepositoryEventConfig.verify(message.repositoryEventConfig);
                                if (error)
                                    return "repositoryEventConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BuildTrigger message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.BuildTrigger} BuildTrigger
                         */
                        BuildTrigger.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.BuildTrigger)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.BuildTrigger();
                            if (object.resourceName != null)
                                message.resourceName = String(object.resourceName);
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.tags) {
                                if (!Array.isArray(object.tags))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.tags: array expected");
                                message.tags = [];
                                for (var i = 0; i < object.tags.length; ++i)
                                    message.tags[i] = String(object.tags[i]);
                            }
                            if (object.triggerTemplate != null) {
                                if (typeof object.triggerTemplate !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.triggerTemplate: object expected");
                                message.triggerTemplate = $root.google.devtools.cloudbuild.v1.RepoSource.fromObject(object.triggerTemplate);
                            }
                            if (object.github != null) {
                                if (typeof object.github !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.github: object expected");
                                message.github = $root.google.devtools.cloudbuild.v1.GitHubEventsConfig.fromObject(object.github);
                            }
                            if (object.pubsubConfig != null) {
                                if (typeof object.pubsubConfig !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.pubsubConfig: object expected");
                                message.pubsubConfig = $root.google.devtools.cloudbuild.v1.PubsubConfig.fromObject(object.pubsubConfig);
                            }
                            if (object.webhookConfig != null) {
                                if (typeof object.webhookConfig !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.webhookConfig: object expected");
                                message.webhookConfig = $root.google.devtools.cloudbuild.v1.WebhookConfig.fromObject(object.webhookConfig);
                            }
                            if (object.autodetect != null)
                                message.autodetect = Boolean(object.autodetect);
                            if (object.build != null) {
                                if (typeof object.build !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.build: object expected");
                                message.build = $root.google.devtools.cloudbuild.v1.Build.fromObject(object.build);
                            }
                            if (object.filename != null)
                                message.filename = String(object.filename);
                            if (object.gitFileSource != null) {
                                if (typeof object.gitFileSource !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.gitFileSource: object expected");
                                message.gitFileSource = $root.google.devtools.cloudbuild.v1.GitFileSource.fromObject(object.gitFileSource);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.disabled != null)
                                message.disabled = Boolean(object.disabled);
                            if (object.substitutions) {
                                if (typeof object.substitutions !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.substitutions: object expected");
                                message.substitutions = {};
                                for (var keys = Object.keys(object.substitutions), i = 0; i < keys.length; ++i)
                                    message.substitutions[keys[i]] = String(object.substitutions[keys[i]]);
                            }
                            if (object.ignoredFiles) {
                                if (!Array.isArray(object.ignoredFiles))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.ignoredFiles: array expected");
                                message.ignoredFiles = [];
                                for (var i = 0; i < object.ignoredFiles.length; ++i)
                                    message.ignoredFiles[i] = String(object.ignoredFiles[i]);
                            }
                            if (object.includedFiles) {
                                if (!Array.isArray(object.includedFiles))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.includedFiles: array expected");
                                message.includedFiles = [];
                                for (var i = 0; i < object.includedFiles.length; ++i)
                                    message.includedFiles[i] = String(object.includedFiles[i]);
                            }
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.sourceToBuild != null) {
                                if (typeof object.sourceToBuild !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.sourceToBuild: object expected");
                                message.sourceToBuild = $root.google.devtools.cloudbuild.v1.GitRepoSource.fromObject(object.sourceToBuild);
                            }
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            if (object.repositoryEventConfig != null) {
                                if (typeof object.repositoryEventConfig !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildTrigger.repositoryEventConfig: object expected");
                                message.repositoryEventConfig = $root.google.devtools.cloudbuild.v1.RepositoryEventConfig.fromObject(object.repositoryEventConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BuildTrigger message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @static
                         * @param {google.devtools.cloudbuild.v1.BuildTrigger} message BuildTrigger
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BuildTrigger.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.ignoredFiles = [];
                                object.includedFiles = [];
                                object.tags = [];
                            }
                            if (options.objects || options.defaults)
                                object.substitutions = {};
                            if (options.defaults) {
                                object.id = "";
                                object.createTime = null;
                                object.triggerTemplate = null;
                                object.disabled = false;
                                object.description = "";
                                object.github = null;
                                object.name = "";
                                object.sourceToBuild = null;
                                object.pubsubConfig = null;
                                object.filter = "";
                                object.webhookConfig = null;
                                object.serviceAccount = "";
                                object.resourceName = "";
                                object.repositoryEventConfig = null;
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.build != null && message.hasOwnProperty("build")) {
                                object.build = $root.google.devtools.cloudbuild.v1.Build.toObject(message.build, options);
                                if (options.oneofs)
                                    object.buildTemplate = "build";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.triggerTemplate != null && message.hasOwnProperty("triggerTemplate"))
                                object.triggerTemplate = $root.google.devtools.cloudbuild.v1.RepoSource.toObject(message.triggerTemplate, options);
                            if (message.filename != null && message.hasOwnProperty("filename")) {
                                object.filename = message.filename;
                                if (options.oneofs)
                                    object.buildTemplate = "filename";
                            }
                            if (message.disabled != null && message.hasOwnProperty("disabled"))
                                object.disabled = message.disabled;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            var keys2;
                            if (message.substitutions && (keys2 = Object.keys(message.substitutions)).length) {
                                object.substitutions = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.substitutions[keys2[j]] = message.substitutions[keys2[j]];
                            }
                            if (message.github != null && message.hasOwnProperty("github"))
                                object.github = $root.google.devtools.cloudbuild.v1.GitHubEventsConfig.toObject(message.github, options);
                            if (message.ignoredFiles && message.ignoredFiles.length) {
                                object.ignoredFiles = [];
                                for (var j = 0; j < message.ignoredFiles.length; ++j)
                                    object.ignoredFiles[j] = message.ignoredFiles[j];
                            }
                            if (message.includedFiles && message.includedFiles.length) {
                                object.includedFiles = [];
                                for (var j = 0; j < message.includedFiles.length; ++j)
                                    object.includedFiles[j] = message.includedFiles[j];
                            }
                            if (message.autodetect != null && message.hasOwnProperty("autodetect")) {
                                object.autodetect = message.autodetect;
                                if (options.oneofs)
                                    object.buildTemplate = "autodetect";
                            }
                            if (message.tags && message.tags.length) {
                                object.tags = [];
                                for (var j = 0; j < message.tags.length; ++j)
                                    object.tags[j] = message.tags[j];
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.gitFileSource != null && message.hasOwnProperty("gitFileSource")) {
                                object.gitFileSource = $root.google.devtools.cloudbuild.v1.GitFileSource.toObject(message.gitFileSource, options);
                                if (options.oneofs)
                                    object.buildTemplate = "gitFileSource";
                            }
                            if (message.sourceToBuild != null && message.hasOwnProperty("sourceToBuild"))
                                object.sourceToBuild = $root.google.devtools.cloudbuild.v1.GitRepoSource.toObject(message.sourceToBuild, options);
                            if (message.pubsubConfig != null && message.hasOwnProperty("pubsubConfig"))
                                object.pubsubConfig = $root.google.devtools.cloudbuild.v1.PubsubConfig.toObject(message.pubsubConfig, options);
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.webhookConfig != null && message.hasOwnProperty("webhookConfig"))
                                object.webhookConfig = $root.google.devtools.cloudbuild.v1.WebhookConfig.toObject(message.webhookConfig, options);
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                object.resourceName = message.resourceName;
                            if (message.repositoryEventConfig != null && message.hasOwnProperty("repositoryEventConfig"))
                                object.repositoryEventConfig = $root.google.devtools.cloudbuild.v1.RepositoryEventConfig.toObject(message.repositoryEventConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this BuildTrigger to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BuildTrigger.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BuildTrigger
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.BuildTrigger
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BuildTrigger.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.BuildTrigger";
                        };
    
                        return BuildTrigger;
                    })();
    
                    v1.RepositoryEventConfig = (function() {
    
                        /**
                         * Properties of a RepositoryEventConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IRepositoryEventConfig
                         * @property {string|null} [repository] RepositoryEventConfig repository
                         * @property {google.devtools.cloudbuild.v1.RepositoryEventConfig.RepositoryType|null} [repositoryType] RepositoryEventConfig repositoryType
                         * @property {google.devtools.cloudbuild.v1.IPullRequestFilter|null} [pullRequest] RepositoryEventConfig pullRequest
                         * @property {google.devtools.cloudbuild.v1.IPushFilter|null} [push] RepositoryEventConfig push
                         */
    
                        /**
                         * Constructs a new RepositoryEventConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a RepositoryEventConfig.
                         * @implements IRepositoryEventConfig
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IRepositoryEventConfig=} [properties] Properties to set
                         */
                        function RepositoryEventConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RepositoryEventConfig repository.
                         * @member {string} repository
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @instance
                         */
                        RepositoryEventConfig.prototype.repository = "";
    
                        /**
                         * RepositoryEventConfig repositoryType.
                         * @member {google.devtools.cloudbuild.v1.RepositoryEventConfig.RepositoryType} repositoryType
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @instance
                         */
                        RepositoryEventConfig.prototype.repositoryType = 0;
    
                        /**
                         * RepositoryEventConfig pullRequest.
                         * @member {google.devtools.cloudbuild.v1.IPullRequestFilter|null|undefined} pullRequest
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @instance
                         */
                        RepositoryEventConfig.prototype.pullRequest = null;
    
                        /**
                         * RepositoryEventConfig push.
                         * @member {google.devtools.cloudbuild.v1.IPushFilter|null|undefined} push
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @instance
                         */
                        RepositoryEventConfig.prototype.push = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RepositoryEventConfig filter.
                         * @member {"pullRequest"|"push"|undefined} filter
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @instance
                         */
                        Object.defineProperty(RepositoryEventConfig.prototype, "filter", {
                            get: $util.oneOfGetter($oneOfFields = ["pullRequest", "push"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RepositoryEventConfig instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IRepositoryEventConfig=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.RepositoryEventConfig} RepositoryEventConfig instance
                         */
                        RepositoryEventConfig.create = function create(properties) {
                            return new RepositoryEventConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RepositoryEventConfig message. Does not implicitly {@link google.devtools.cloudbuild.v1.RepositoryEventConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IRepositoryEventConfig} message RepositoryEventConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepositoryEventConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.repository);
                            if (message.repositoryType != null && Object.hasOwnProperty.call(message, "repositoryType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.repositoryType);
                            if (message.pullRequest != null && Object.hasOwnProperty.call(message, "pullRequest"))
                                $root.google.devtools.cloudbuild.v1.PullRequestFilter.encode(message.pullRequest, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.push != null && Object.hasOwnProperty.call(message, "push"))
                                $root.google.devtools.cloudbuild.v1.PushFilter.encode(message.push, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RepositoryEventConfig message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.RepositoryEventConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IRepositoryEventConfig} message RepositoryEventConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepositoryEventConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RepositoryEventConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.RepositoryEventConfig} RepositoryEventConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepositoryEventConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.RepositoryEventConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.repository = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.repositoryType = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pullRequest = $root.google.devtools.cloudbuild.v1.PullRequestFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.push = $root.google.devtools.cloudbuild.v1.PushFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RepositoryEventConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.RepositoryEventConfig} RepositoryEventConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepositoryEventConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RepositoryEventConfig message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RepositoryEventConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.repository != null && message.hasOwnProperty("repository"))
                                if (!$util.isString(message.repository))
                                    return "repository: string expected";
                            if (message.repositoryType != null && message.hasOwnProperty("repositoryType"))
                                switch (message.repositoryType) {
                                default:
                                    return "repositoryType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.pullRequest != null && message.hasOwnProperty("pullRequest")) {
                                properties.filter = 1;
                                {
                                    var error = $root.google.devtools.cloudbuild.v1.PullRequestFilter.verify(message.pullRequest);
                                    if (error)
                                        return "pullRequest." + error;
                                }
                            }
                            if (message.push != null && message.hasOwnProperty("push")) {
                                if (properties.filter === 1)
                                    return "filter: multiple values";
                                properties.filter = 1;
                                {
                                    var error = $root.google.devtools.cloudbuild.v1.PushFilter.verify(message.push);
                                    if (error)
                                        return "push." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RepositoryEventConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.RepositoryEventConfig} RepositoryEventConfig
                         */
                        RepositoryEventConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.RepositoryEventConfig)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.RepositoryEventConfig();
                            if (object.repository != null)
                                message.repository = String(object.repository);
                            switch (object.repositoryType) {
                            default:
                                if (typeof object.repositoryType === "number") {
                                    message.repositoryType = object.repositoryType;
                                    break;
                                }
                                break;
                            case "REPOSITORY_TYPE_UNSPECIFIED":
                            case 0:
                                message.repositoryType = 0;
                                break;
                            case "GITHUB":
                            case 1:
                                message.repositoryType = 1;
                                break;
                            case "GITHUB_ENTERPRISE":
                            case 2:
                                message.repositoryType = 2;
                                break;
                            case "GITLAB_ENTERPRISE":
                            case 3:
                                message.repositoryType = 3;
                                break;
                            }
                            if (object.pullRequest != null) {
                                if (typeof object.pullRequest !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.RepositoryEventConfig.pullRequest: object expected");
                                message.pullRequest = $root.google.devtools.cloudbuild.v1.PullRequestFilter.fromObject(object.pullRequest);
                            }
                            if (object.push != null) {
                                if (typeof object.push !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.RepositoryEventConfig.push: object expected");
                                message.push = $root.google.devtools.cloudbuild.v1.PushFilter.fromObject(object.push);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RepositoryEventConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.RepositoryEventConfig} message RepositoryEventConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RepositoryEventConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.repository = "";
                                object.repositoryType = options.enums === String ? "REPOSITORY_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.repository != null && message.hasOwnProperty("repository"))
                                object.repository = message.repository;
                            if (message.repositoryType != null && message.hasOwnProperty("repositoryType"))
                                object.repositoryType = options.enums === String ? $root.google.devtools.cloudbuild.v1.RepositoryEventConfig.RepositoryType[message.repositoryType] === undefined ? message.repositoryType : $root.google.devtools.cloudbuild.v1.RepositoryEventConfig.RepositoryType[message.repositoryType] : message.repositoryType;
                            if (message.pullRequest != null && message.hasOwnProperty("pullRequest")) {
                                object.pullRequest = $root.google.devtools.cloudbuild.v1.PullRequestFilter.toObject(message.pullRequest, options);
                                if (options.oneofs)
                                    object.filter = "pullRequest";
                            }
                            if (message.push != null && message.hasOwnProperty("push")) {
                                object.push = $root.google.devtools.cloudbuild.v1.PushFilter.toObject(message.push, options);
                                if (options.oneofs)
                                    object.filter = "push";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RepositoryEventConfig to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RepositoryEventConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RepositoryEventConfig
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.RepositoryEventConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RepositoryEventConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.RepositoryEventConfig";
                        };
    
                        /**
                         * RepositoryType enum.
                         * @name google.devtools.cloudbuild.v1.RepositoryEventConfig.RepositoryType
                         * @enum {number}
                         * @property {number} REPOSITORY_TYPE_UNSPECIFIED=0 REPOSITORY_TYPE_UNSPECIFIED value
                         * @property {number} GITHUB=1 GITHUB value
                         * @property {number} GITHUB_ENTERPRISE=2 GITHUB_ENTERPRISE value
                         * @property {number} GITLAB_ENTERPRISE=3 GITLAB_ENTERPRISE value
                         */
                        RepositoryEventConfig.RepositoryType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "REPOSITORY_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "GITHUB"] = 1;
                            values[valuesById[2] = "GITHUB_ENTERPRISE"] = 2;
                            values[valuesById[3] = "GITLAB_ENTERPRISE"] = 3;
                            return values;
                        })();
    
                        return RepositoryEventConfig;
                    })();
    
                    v1.GitHubEventsConfig = (function() {
    
                        /**
                         * Properties of a GitHubEventsConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IGitHubEventsConfig
                         * @property {number|Long|null} [installationId] GitHubEventsConfig installationId
                         * @property {string|null} [owner] GitHubEventsConfig owner
                         * @property {string|null} [name] GitHubEventsConfig name
                         * @property {google.devtools.cloudbuild.v1.IPullRequestFilter|null} [pullRequest] GitHubEventsConfig pullRequest
                         * @property {google.devtools.cloudbuild.v1.IPushFilter|null} [push] GitHubEventsConfig push
                         */
    
                        /**
                         * Constructs a new GitHubEventsConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a GitHubEventsConfig.
                         * @implements IGitHubEventsConfig
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IGitHubEventsConfig=} [properties] Properties to set
                         */
                        function GitHubEventsConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GitHubEventsConfig installationId.
                         * @member {number|Long} installationId
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @instance
                         */
                        GitHubEventsConfig.prototype.installationId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * GitHubEventsConfig owner.
                         * @member {string} owner
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @instance
                         */
                        GitHubEventsConfig.prototype.owner = "";
    
                        /**
                         * GitHubEventsConfig name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @instance
                         */
                        GitHubEventsConfig.prototype.name = "";
    
                        /**
                         * GitHubEventsConfig pullRequest.
                         * @member {google.devtools.cloudbuild.v1.IPullRequestFilter|null|undefined} pullRequest
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @instance
                         */
                        GitHubEventsConfig.prototype.pullRequest = null;
    
                        /**
                         * GitHubEventsConfig push.
                         * @member {google.devtools.cloudbuild.v1.IPushFilter|null|undefined} push
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @instance
                         */
                        GitHubEventsConfig.prototype.push = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GitHubEventsConfig event.
                         * @member {"pullRequest"|"push"|undefined} event
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @instance
                         */
                        Object.defineProperty(GitHubEventsConfig.prototype, "event", {
                            get: $util.oneOfGetter($oneOfFields = ["pullRequest", "push"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GitHubEventsConfig instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitHubEventsConfig=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.GitHubEventsConfig} GitHubEventsConfig instance
                         */
                        GitHubEventsConfig.create = function create(properties) {
                            return new GitHubEventsConfig(properties);
                        };
    
                        /**
                         * Encodes the specified GitHubEventsConfig message. Does not implicitly {@link google.devtools.cloudbuild.v1.GitHubEventsConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitHubEventsConfig} message GitHubEventsConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitHubEventsConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.installationId != null && Object.hasOwnProperty.call(message, "installationId"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.installationId);
                            if (message.pullRequest != null && Object.hasOwnProperty.call(message, "pullRequest"))
                                $root.google.devtools.cloudbuild.v1.PullRequestFilter.encode(message.pullRequest, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.push != null && Object.hasOwnProperty.call(message, "push"))
                                $root.google.devtools.cloudbuild.v1.PushFilter.encode(message.push, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.owner != null && Object.hasOwnProperty.call(message, "owner"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.owner);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GitHubEventsConfig message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.GitHubEventsConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitHubEventsConfig} message GitHubEventsConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitHubEventsConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GitHubEventsConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.GitHubEventsConfig} GitHubEventsConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitHubEventsConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.GitHubEventsConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.installationId = reader.int64();
                                        break;
                                    }
                                case 6: {
                                        message.owner = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.pullRequest = $root.google.devtools.cloudbuild.v1.PullRequestFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.push = $root.google.devtools.cloudbuild.v1.PushFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GitHubEventsConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.GitHubEventsConfig} GitHubEventsConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitHubEventsConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GitHubEventsConfig message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GitHubEventsConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.installationId != null && message.hasOwnProperty("installationId"))
                                if (!$util.isInteger(message.installationId) && !(message.installationId && $util.isInteger(message.installationId.low) && $util.isInteger(message.installationId.high)))
                                    return "installationId: integer|Long expected";
                            if (message.owner != null && message.hasOwnProperty("owner"))
                                if (!$util.isString(message.owner))
                                    return "owner: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.pullRequest != null && message.hasOwnProperty("pullRequest")) {
                                properties.event = 1;
                                {
                                    var error = $root.google.devtools.cloudbuild.v1.PullRequestFilter.verify(message.pullRequest);
                                    if (error)
                                        return "pullRequest." + error;
                                }
                            }
                            if (message.push != null && message.hasOwnProperty("push")) {
                                if (properties.event === 1)
                                    return "event: multiple values";
                                properties.event = 1;
                                {
                                    var error = $root.google.devtools.cloudbuild.v1.PushFilter.verify(message.push);
                                    if (error)
                                        return "push." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GitHubEventsConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.GitHubEventsConfig} GitHubEventsConfig
                         */
                        GitHubEventsConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.GitHubEventsConfig)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.GitHubEventsConfig();
                            if (object.installationId != null)
                                if ($util.Long)
                                    (message.installationId = $util.Long.fromValue(object.installationId)).unsigned = false;
                                else if (typeof object.installationId === "string")
                                    message.installationId = parseInt(object.installationId, 10);
                                else if (typeof object.installationId === "number")
                                    message.installationId = object.installationId;
                                else if (typeof object.installationId === "object")
                                    message.installationId = new $util.LongBits(object.installationId.low >>> 0, object.installationId.high >>> 0).toNumber();
                            if (object.owner != null)
                                message.owner = String(object.owner);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.pullRequest != null) {
                                if (typeof object.pullRequest !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.GitHubEventsConfig.pullRequest: object expected");
                                message.pullRequest = $root.google.devtools.cloudbuild.v1.PullRequestFilter.fromObject(object.pullRequest);
                            }
                            if (object.push != null) {
                                if (typeof object.push !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.GitHubEventsConfig.push: object expected");
                                message.push = $root.google.devtools.cloudbuild.v1.PushFilter.fromObject(object.push);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GitHubEventsConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.GitHubEventsConfig} message GitHubEventsConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GitHubEventsConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.installationId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.installationId = options.longs === String ? "0" : 0;
                                object.owner = "";
                                object.name = "";
                            }
                            if (message.installationId != null && message.hasOwnProperty("installationId"))
                                if (typeof message.installationId === "number")
                                    object.installationId = options.longs === String ? String(message.installationId) : message.installationId;
                                else
                                    object.installationId = options.longs === String ? $util.Long.prototype.toString.call(message.installationId) : options.longs === Number ? new $util.LongBits(message.installationId.low >>> 0, message.installationId.high >>> 0).toNumber() : message.installationId;
                            if (message.pullRequest != null && message.hasOwnProperty("pullRequest")) {
                                object.pullRequest = $root.google.devtools.cloudbuild.v1.PullRequestFilter.toObject(message.pullRequest, options);
                                if (options.oneofs)
                                    object.event = "pullRequest";
                            }
                            if (message.push != null && message.hasOwnProperty("push")) {
                                object.push = $root.google.devtools.cloudbuild.v1.PushFilter.toObject(message.push, options);
                                if (options.oneofs)
                                    object.event = "push";
                            }
                            if (message.owner != null && message.hasOwnProperty("owner"))
                                object.owner = message.owner;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GitHubEventsConfig to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GitHubEventsConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GitHubEventsConfig
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.GitHubEventsConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GitHubEventsConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.GitHubEventsConfig";
                        };
    
                        return GitHubEventsConfig;
                    })();
    
                    v1.PubsubConfig = (function() {
    
                        /**
                         * Properties of a PubsubConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IPubsubConfig
                         * @property {string|null} [subscription] PubsubConfig subscription
                         * @property {string|null} [topic] PubsubConfig topic
                         * @property {string|null} [serviceAccountEmail] PubsubConfig serviceAccountEmail
                         * @property {google.devtools.cloudbuild.v1.PubsubConfig.State|null} [state] PubsubConfig state
                         */
    
                        /**
                         * Constructs a new PubsubConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a PubsubConfig.
                         * @implements IPubsubConfig
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IPubsubConfig=} [properties] Properties to set
                         */
                        function PubsubConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PubsubConfig subscription.
                         * @member {string} subscription
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @instance
                         */
                        PubsubConfig.prototype.subscription = "";
    
                        /**
                         * PubsubConfig topic.
                         * @member {string} topic
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @instance
                         */
                        PubsubConfig.prototype.topic = "";
    
                        /**
                         * PubsubConfig serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @instance
                         */
                        PubsubConfig.prototype.serviceAccountEmail = "";
    
                        /**
                         * PubsubConfig state.
                         * @member {google.devtools.cloudbuild.v1.PubsubConfig.State} state
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @instance
                         */
                        PubsubConfig.prototype.state = 0;
    
                        /**
                         * Creates a new PubsubConfig instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IPubsubConfig=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.PubsubConfig} PubsubConfig instance
                         */
                        PubsubConfig.create = function create(properties) {
                            return new PubsubConfig(properties);
                        };
    
                        /**
                         * Encodes the specified PubsubConfig message. Does not implicitly {@link google.devtools.cloudbuild.v1.PubsubConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IPubsubConfig} message PubsubConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PubsubConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.subscription != null && Object.hasOwnProperty.call(message, "subscription"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.subscription);
                            if (message.topic != null && Object.hasOwnProperty.call(message, "topic"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.topic);
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.serviceAccountEmail);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.state);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PubsubConfig message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.PubsubConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IPubsubConfig} message PubsubConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PubsubConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PubsubConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.PubsubConfig} PubsubConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PubsubConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.PubsubConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.subscription = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.topic = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PubsubConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.PubsubConfig} PubsubConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PubsubConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PubsubConfig message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PubsubConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.subscription != null && message.hasOwnProperty("subscription"))
                                if (!$util.isString(message.subscription))
                                    return "subscription: string expected";
                            if (message.topic != null && message.hasOwnProperty("topic"))
                                if (!$util.isString(message.topic))
                                    return "topic: string expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a PubsubConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.PubsubConfig} PubsubConfig
                         */
                        PubsubConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.PubsubConfig)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.PubsubConfig();
                            if (object.subscription != null)
                                message.subscription = String(object.subscription);
                            if (object.topic != null)
                                message.topic = String(object.topic);
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "OK":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUBSCRIPTION_DELETED":
                            case 2:
                                message.state = 2;
                                break;
                            case "TOPIC_DELETED":
                            case 3:
                                message.state = 3;
                                break;
                            case "SUBSCRIPTION_MISCONFIGURED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PubsubConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.PubsubConfig} message PubsubConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PubsubConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.subscription = "";
                                object.topic = "";
                                object.serviceAccountEmail = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                            }
                            if (message.subscription != null && message.hasOwnProperty("subscription"))
                                object.subscription = message.subscription;
                            if (message.topic != null && message.hasOwnProperty("topic"))
                                object.topic = message.topic;
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.devtools.cloudbuild.v1.PubsubConfig.State[message.state] === undefined ? message.state : $root.google.devtools.cloudbuild.v1.PubsubConfig.State[message.state] : message.state;
                            return object;
                        };
    
                        /**
                         * Converts this PubsubConfig to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PubsubConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PubsubConfig
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.PubsubConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PubsubConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.PubsubConfig";
                        };
    
                        /**
                         * State enum.
                         * @name google.devtools.cloudbuild.v1.PubsubConfig.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} OK=1 OK value
                         * @property {number} SUBSCRIPTION_DELETED=2 SUBSCRIPTION_DELETED value
                         * @property {number} TOPIC_DELETED=3 TOPIC_DELETED value
                         * @property {number} SUBSCRIPTION_MISCONFIGURED=4 SUBSCRIPTION_MISCONFIGURED value
                         */
                        PubsubConfig.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "OK"] = 1;
                            values[valuesById[2] = "SUBSCRIPTION_DELETED"] = 2;
                            values[valuesById[3] = "TOPIC_DELETED"] = 3;
                            values[valuesById[4] = "SUBSCRIPTION_MISCONFIGURED"] = 4;
                            return values;
                        })();
    
                        return PubsubConfig;
                    })();
    
                    v1.WebhookConfig = (function() {
    
                        /**
                         * Properties of a WebhookConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IWebhookConfig
                         * @property {string|null} [secret] WebhookConfig secret
                         * @property {google.devtools.cloudbuild.v1.WebhookConfig.State|null} [state] WebhookConfig state
                         */
    
                        /**
                         * Constructs a new WebhookConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a WebhookConfig.
                         * @implements IWebhookConfig
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IWebhookConfig=} [properties] Properties to set
                         */
                        function WebhookConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * WebhookConfig secret.
                         * @member {string|null|undefined} secret
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @instance
                         */
                        WebhookConfig.prototype.secret = null;
    
                        /**
                         * WebhookConfig state.
                         * @member {google.devtools.cloudbuild.v1.WebhookConfig.State} state
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @instance
                         */
                        WebhookConfig.prototype.state = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * WebhookConfig authMethod.
                         * @member {"secret"|undefined} authMethod
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @instance
                         */
                        Object.defineProperty(WebhookConfig.prototype, "authMethod", {
                            get: $util.oneOfGetter($oneOfFields = ["secret"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new WebhookConfig instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IWebhookConfig=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.WebhookConfig} WebhookConfig instance
                         */
                        WebhookConfig.create = function create(properties) {
                            return new WebhookConfig(properties);
                        };
    
                        /**
                         * Encodes the specified WebhookConfig message. Does not implicitly {@link google.devtools.cloudbuild.v1.WebhookConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IWebhookConfig} message WebhookConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WebhookConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.secret);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.state);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified WebhookConfig message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.WebhookConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IWebhookConfig} message WebhookConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WebhookConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a WebhookConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.WebhookConfig} WebhookConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WebhookConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.WebhookConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 3: {
                                        message.secret = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a WebhookConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.WebhookConfig} WebhookConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WebhookConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a WebhookConfig message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        WebhookConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.secret != null && message.hasOwnProperty("secret")) {
                                properties.authMethod = 1;
                                if (!$util.isString(message.secret))
                                    return "secret: string expected";
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a WebhookConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.WebhookConfig} WebhookConfig
                         */
                        WebhookConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.WebhookConfig)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.WebhookConfig();
                            if (object.secret != null)
                                message.secret = String(object.secret);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "OK":
                            case 1:
                                message.state = 1;
                                break;
                            case "SECRET_DELETED":
                            case 2:
                                message.state = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a WebhookConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.WebhookConfig} message WebhookConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        WebhookConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                            if (message.secret != null && message.hasOwnProperty("secret")) {
                                object.secret = message.secret;
                                if (options.oneofs)
                                    object.authMethod = "secret";
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.devtools.cloudbuild.v1.WebhookConfig.State[message.state] === undefined ? message.state : $root.google.devtools.cloudbuild.v1.WebhookConfig.State[message.state] : message.state;
                            return object;
                        };
    
                        /**
                         * Converts this WebhookConfig to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        WebhookConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for WebhookConfig
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.WebhookConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        WebhookConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.WebhookConfig";
                        };
    
                        /**
                         * State enum.
                         * @name google.devtools.cloudbuild.v1.WebhookConfig.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} OK=1 OK value
                         * @property {number} SECRET_DELETED=2 SECRET_DELETED value
                         */
                        WebhookConfig.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "OK"] = 1;
                            values[valuesById[2] = "SECRET_DELETED"] = 2;
                            return values;
                        })();
    
                        return WebhookConfig;
                    })();
    
                    v1.PullRequestFilter = (function() {
    
                        /**
                         * Properties of a PullRequestFilter.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IPullRequestFilter
                         * @property {string|null} [branch] PullRequestFilter branch
                         * @property {google.devtools.cloudbuild.v1.PullRequestFilter.CommentControl|null} [commentControl] PullRequestFilter commentControl
                         * @property {boolean|null} [invertRegex] PullRequestFilter invertRegex
                         */
    
                        /**
                         * Constructs a new PullRequestFilter.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a PullRequestFilter.
                         * @implements IPullRequestFilter
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IPullRequestFilter=} [properties] Properties to set
                         */
                        function PullRequestFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PullRequestFilter branch.
                         * @member {string|null|undefined} branch
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @instance
                         */
                        PullRequestFilter.prototype.branch = null;
    
                        /**
                         * PullRequestFilter commentControl.
                         * @member {google.devtools.cloudbuild.v1.PullRequestFilter.CommentControl} commentControl
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @instance
                         */
                        PullRequestFilter.prototype.commentControl = 0;
    
                        /**
                         * PullRequestFilter invertRegex.
                         * @member {boolean} invertRegex
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @instance
                         */
                        PullRequestFilter.prototype.invertRegex = false;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * PullRequestFilter gitRef.
                         * @member {"branch"|undefined} gitRef
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @instance
                         */
                        Object.defineProperty(PullRequestFilter.prototype, "gitRef", {
                            get: $util.oneOfGetter($oneOfFields = ["branch"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new PullRequestFilter instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IPullRequestFilter=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.PullRequestFilter} PullRequestFilter instance
                         */
                        PullRequestFilter.create = function create(properties) {
                            return new PullRequestFilter(properties);
                        };
    
                        /**
                         * Encodes the specified PullRequestFilter message. Does not implicitly {@link google.devtools.cloudbuild.v1.PullRequestFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IPullRequestFilter} message PullRequestFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullRequestFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.branch != null && Object.hasOwnProperty.call(message, "branch"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.branch);
                            if (message.commentControl != null && Object.hasOwnProperty.call(message, "commentControl"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.commentControl);
                            if (message.invertRegex != null && Object.hasOwnProperty.call(message, "invertRegex"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.invertRegex);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PullRequestFilter message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.PullRequestFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IPullRequestFilter} message PullRequestFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullRequestFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PullRequestFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.PullRequestFilter} PullRequestFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullRequestFilter.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.PullRequestFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.branch = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.commentControl = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.invertRegex = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PullRequestFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.PullRequestFilter} PullRequestFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullRequestFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PullRequestFilter message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PullRequestFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.branch != null && message.hasOwnProperty("branch")) {
                                properties.gitRef = 1;
                                if (!$util.isString(message.branch))
                                    return "branch: string expected";
                            }
                            if (message.commentControl != null && message.hasOwnProperty("commentControl"))
                                switch (message.commentControl) {
                                default:
                                    return "commentControl: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.invertRegex != null && message.hasOwnProperty("invertRegex"))
                                if (typeof message.invertRegex !== "boolean")
                                    return "invertRegex: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a PullRequestFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.PullRequestFilter} PullRequestFilter
                         */
                        PullRequestFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.PullRequestFilter)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.PullRequestFilter();
                            if (object.branch != null)
                                message.branch = String(object.branch);
                            switch (object.commentControl) {
                            default:
                                if (typeof object.commentControl === "number") {
                                    message.commentControl = object.commentControl;
                                    break;
                                }
                                break;
                            case "COMMENTS_DISABLED":
                            case 0:
                                message.commentControl = 0;
                                break;
                            case "COMMENTS_ENABLED":
                            case 1:
                                message.commentControl = 1;
                                break;
                            case "COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY":
                            case 2:
                                message.commentControl = 2;
                                break;
                            }
                            if (object.invertRegex != null)
                                message.invertRegex = Boolean(object.invertRegex);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PullRequestFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @static
                         * @param {google.devtools.cloudbuild.v1.PullRequestFilter} message PullRequestFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PullRequestFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.commentControl = options.enums === String ? "COMMENTS_DISABLED" : 0;
                                object.invertRegex = false;
                            }
                            if (message.branch != null && message.hasOwnProperty("branch")) {
                                object.branch = message.branch;
                                if (options.oneofs)
                                    object.gitRef = "branch";
                            }
                            if (message.commentControl != null && message.hasOwnProperty("commentControl"))
                                object.commentControl = options.enums === String ? $root.google.devtools.cloudbuild.v1.PullRequestFilter.CommentControl[message.commentControl] === undefined ? message.commentControl : $root.google.devtools.cloudbuild.v1.PullRequestFilter.CommentControl[message.commentControl] : message.commentControl;
                            if (message.invertRegex != null && message.hasOwnProperty("invertRegex"))
                                object.invertRegex = message.invertRegex;
                            return object;
                        };
    
                        /**
                         * Converts this PullRequestFilter to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PullRequestFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PullRequestFilter
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.PullRequestFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PullRequestFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.PullRequestFilter";
                        };
    
                        /**
                         * CommentControl enum.
                         * @name google.devtools.cloudbuild.v1.PullRequestFilter.CommentControl
                         * @enum {number}
                         * @property {number} COMMENTS_DISABLED=0 COMMENTS_DISABLED value
                         * @property {number} COMMENTS_ENABLED=1 COMMENTS_ENABLED value
                         * @property {number} COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY=2 COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY value
                         */
                        PullRequestFilter.CommentControl = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "COMMENTS_DISABLED"] = 0;
                            values[valuesById[1] = "COMMENTS_ENABLED"] = 1;
                            values[valuesById[2] = "COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY"] = 2;
                            return values;
                        })();
    
                        return PullRequestFilter;
                    })();
    
                    v1.PushFilter = (function() {
    
                        /**
                         * Properties of a PushFilter.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IPushFilter
                         * @property {string|null} [branch] PushFilter branch
                         * @property {string|null} [tag] PushFilter tag
                         * @property {boolean|null} [invertRegex] PushFilter invertRegex
                         */
    
                        /**
                         * Constructs a new PushFilter.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a PushFilter.
                         * @implements IPushFilter
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IPushFilter=} [properties] Properties to set
                         */
                        function PushFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PushFilter branch.
                         * @member {string|null|undefined} branch
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @instance
                         */
                        PushFilter.prototype.branch = null;
    
                        /**
                         * PushFilter tag.
                         * @member {string|null|undefined} tag
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @instance
                         */
                        PushFilter.prototype.tag = null;
    
                        /**
                         * PushFilter invertRegex.
                         * @member {boolean} invertRegex
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @instance
                         */
                        PushFilter.prototype.invertRegex = false;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * PushFilter gitRef.
                         * @member {"branch"|"tag"|undefined} gitRef
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @instance
                         */
                        Object.defineProperty(PushFilter.prototype, "gitRef", {
                            get: $util.oneOfGetter($oneOfFields = ["branch", "tag"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new PushFilter instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IPushFilter=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.PushFilter} PushFilter instance
                         */
                        PushFilter.create = function create(properties) {
                            return new PushFilter(properties);
                        };
    
                        /**
                         * Encodes the specified PushFilter message. Does not implicitly {@link google.devtools.cloudbuild.v1.PushFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IPushFilter} message PushFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PushFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.branch != null && Object.hasOwnProperty.call(message, "branch"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.branch);
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.tag);
                            if (message.invertRegex != null && Object.hasOwnProperty.call(message, "invertRegex"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.invertRegex);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PushFilter message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.PushFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IPushFilter} message PushFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PushFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PushFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.PushFilter} PushFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PushFilter.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.PushFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.branch = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.tag = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.invertRegex = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PushFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.PushFilter} PushFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PushFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PushFilter message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PushFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.branch != null && message.hasOwnProperty("branch")) {
                                properties.gitRef = 1;
                                if (!$util.isString(message.branch))
                                    return "branch: string expected";
                            }
                            if (message.tag != null && message.hasOwnProperty("tag")) {
                                if (properties.gitRef === 1)
                                    return "gitRef: multiple values";
                                properties.gitRef = 1;
                                if (!$util.isString(message.tag))
                                    return "tag: string expected";
                            }
                            if (message.invertRegex != null && message.hasOwnProperty("invertRegex"))
                                if (typeof message.invertRegex !== "boolean")
                                    return "invertRegex: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a PushFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.PushFilter} PushFilter
                         */
                        PushFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.PushFilter)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.PushFilter();
                            if (object.branch != null)
                                message.branch = String(object.branch);
                            if (object.tag != null)
                                message.tag = String(object.tag);
                            if (object.invertRegex != null)
                                message.invertRegex = Boolean(object.invertRegex);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PushFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @static
                         * @param {google.devtools.cloudbuild.v1.PushFilter} message PushFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PushFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.invertRegex = false;
                            if (message.branch != null && message.hasOwnProperty("branch")) {
                                object.branch = message.branch;
                                if (options.oneofs)
                                    object.gitRef = "branch";
                            }
                            if (message.tag != null && message.hasOwnProperty("tag")) {
                                object.tag = message.tag;
                                if (options.oneofs)
                                    object.gitRef = "tag";
                            }
                            if (message.invertRegex != null && message.hasOwnProperty("invertRegex"))
                                object.invertRegex = message.invertRegex;
                            return object;
                        };
    
                        /**
                         * Converts this PushFilter to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PushFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PushFilter
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.PushFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PushFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.PushFilter";
                        };
    
                        return PushFilter;
                    })();
    
                    v1.CreateBuildTriggerRequest = (function() {
    
                        /**
                         * Properties of a CreateBuildTriggerRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface ICreateBuildTriggerRequest
                         * @property {string|null} [parent] CreateBuildTriggerRequest parent
                         * @property {string|null} [projectId] CreateBuildTriggerRequest projectId
                         * @property {google.devtools.cloudbuild.v1.IBuildTrigger|null} [trigger] CreateBuildTriggerRequest trigger
                         */
    
                        /**
                         * Constructs a new CreateBuildTriggerRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a CreateBuildTriggerRequest.
                         * @implements ICreateBuildTriggerRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.ICreateBuildTriggerRequest=} [properties] Properties to set
                         */
                        function CreateBuildTriggerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateBuildTriggerRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @instance
                         */
                        CreateBuildTriggerRequest.prototype.parent = "";
    
                        /**
                         * CreateBuildTriggerRequest projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @instance
                         */
                        CreateBuildTriggerRequest.prototype.projectId = "";
    
                        /**
                         * CreateBuildTriggerRequest trigger.
                         * @member {google.devtools.cloudbuild.v1.IBuildTrigger|null|undefined} trigger
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @instance
                         */
                        CreateBuildTriggerRequest.prototype.trigger = null;
    
                        /**
                         * Creates a new CreateBuildTriggerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ICreateBuildTriggerRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.CreateBuildTriggerRequest} CreateBuildTriggerRequest instance
                         */
                        CreateBuildTriggerRequest.create = function create(properties) {
                            return new CreateBuildTriggerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateBuildTriggerRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ICreateBuildTriggerRequest} message CreateBuildTriggerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateBuildTriggerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.trigger != null && Object.hasOwnProperty.call(message, "trigger"))
                                $root.google.devtools.cloudbuild.v1.BuildTrigger.encode(message.trigger, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.parent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateBuildTriggerRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ICreateBuildTriggerRequest} message CreateBuildTriggerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateBuildTriggerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateBuildTriggerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.CreateBuildTriggerRequest} CreateBuildTriggerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateBuildTriggerRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.CreateBuildTriggerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 3: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.trigger = $root.google.devtools.cloudbuild.v1.BuildTrigger.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateBuildTriggerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.CreateBuildTriggerRequest} CreateBuildTriggerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateBuildTriggerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateBuildTriggerRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateBuildTriggerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.trigger != null && message.hasOwnProperty("trigger")) {
                                var error = $root.google.devtools.cloudbuild.v1.BuildTrigger.verify(message.trigger);
                                if (error)
                                    return "trigger." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateBuildTriggerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.CreateBuildTriggerRequest} CreateBuildTriggerRequest
                         */
                        CreateBuildTriggerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.CreateBuildTriggerRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.CreateBuildTriggerRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.trigger != null) {
                                if (typeof object.trigger !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.CreateBuildTriggerRequest.trigger: object expected");
                                message.trigger = $root.google.devtools.cloudbuild.v1.BuildTrigger.fromObject(object.trigger);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateBuildTriggerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.CreateBuildTriggerRequest} message CreateBuildTriggerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateBuildTriggerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.trigger = null;
                                object.parent = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.trigger != null && message.hasOwnProperty("trigger"))
                                object.trigger = $root.google.devtools.cloudbuild.v1.BuildTrigger.toObject(message.trigger, options);
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            return object;
                        };
    
                        /**
                         * Converts this CreateBuildTriggerRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateBuildTriggerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateBuildTriggerRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.CreateBuildTriggerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateBuildTriggerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.CreateBuildTriggerRequest";
                        };
    
                        return CreateBuildTriggerRequest;
                    })();
    
                    v1.GetBuildTriggerRequest = (function() {
    
                        /**
                         * Properties of a GetBuildTriggerRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IGetBuildTriggerRequest
                         * @property {string|null} [name] GetBuildTriggerRequest name
                         * @property {string|null} [projectId] GetBuildTriggerRequest projectId
                         * @property {string|null} [triggerId] GetBuildTriggerRequest triggerId
                         */
    
                        /**
                         * Constructs a new GetBuildTriggerRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a GetBuildTriggerRequest.
                         * @implements IGetBuildTriggerRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IGetBuildTriggerRequest=} [properties] Properties to set
                         */
                        function GetBuildTriggerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetBuildTriggerRequest name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @instance
                         */
                        GetBuildTriggerRequest.prototype.name = "";
    
                        /**
                         * GetBuildTriggerRequest projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @instance
                         */
                        GetBuildTriggerRequest.prototype.projectId = "";
    
                        /**
                         * GetBuildTriggerRequest triggerId.
                         * @member {string} triggerId
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @instance
                         */
                        GetBuildTriggerRequest.prototype.triggerId = "";
    
                        /**
                         * Creates a new GetBuildTriggerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGetBuildTriggerRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.GetBuildTriggerRequest} GetBuildTriggerRequest instance
                         */
                        GetBuildTriggerRequest.create = function create(properties) {
                            return new GetBuildTriggerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetBuildTriggerRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.GetBuildTriggerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGetBuildTriggerRequest} message GetBuildTriggerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetBuildTriggerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.triggerId != null && Object.hasOwnProperty.call(message, "triggerId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.triggerId);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetBuildTriggerRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.GetBuildTriggerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGetBuildTriggerRequest} message GetBuildTriggerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetBuildTriggerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetBuildTriggerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.GetBuildTriggerRequest} GetBuildTriggerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetBuildTriggerRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.GetBuildTriggerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 3: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.triggerId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetBuildTriggerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.GetBuildTriggerRequest} GetBuildTriggerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetBuildTriggerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetBuildTriggerRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetBuildTriggerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.triggerId != null && message.hasOwnProperty("triggerId"))
                                if (!$util.isString(message.triggerId))
                                    return "triggerId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetBuildTriggerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.GetBuildTriggerRequest} GetBuildTriggerRequest
                         */
                        GetBuildTriggerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.GetBuildTriggerRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.GetBuildTriggerRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.triggerId != null)
                                message.triggerId = String(object.triggerId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetBuildTriggerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.GetBuildTriggerRequest} message GetBuildTriggerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetBuildTriggerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.triggerId = "";
                                object.name = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.triggerId != null && message.hasOwnProperty("triggerId"))
                                object.triggerId = message.triggerId;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetBuildTriggerRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetBuildTriggerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetBuildTriggerRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.GetBuildTriggerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetBuildTriggerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.GetBuildTriggerRequest";
                        };
    
                        return GetBuildTriggerRequest;
                    })();
    
                    v1.ListBuildTriggersRequest = (function() {
    
                        /**
                         * Properties of a ListBuildTriggersRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IListBuildTriggersRequest
                         * @property {string|null} [parent] ListBuildTriggersRequest parent
                         * @property {string|null} [projectId] ListBuildTriggersRequest projectId
                         * @property {number|null} [pageSize] ListBuildTriggersRequest pageSize
                         * @property {string|null} [pageToken] ListBuildTriggersRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListBuildTriggersRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a ListBuildTriggersRequest.
                         * @implements IListBuildTriggersRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IListBuildTriggersRequest=} [properties] Properties to set
                         */
                        function ListBuildTriggersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListBuildTriggersRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @instance
                         */
                        ListBuildTriggersRequest.prototype.parent = "";
    
                        /**
                         * ListBuildTriggersRequest projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @instance
                         */
                        ListBuildTriggersRequest.prototype.projectId = "";
    
                        /**
                         * ListBuildTriggersRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @instance
                         */
                        ListBuildTriggersRequest.prototype.pageSize = 0;
    
                        /**
                         * ListBuildTriggersRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @instance
                         */
                        ListBuildTriggersRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListBuildTriggersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IListBuildTriggersRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.ListBuildTriggersRequest} ListBuildTriggersRequest instance
                         */
                        ListBuildTriggersRequest.create = function create(properties) {
                            return new ListBuildTriggersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListBuildTriggersRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.ListBuildTriggersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IListBuildTriggersRequest} message ListBuildTriggersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBuildTriggersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.parent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListBuildTriggersRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.ListBuildTriggersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IListBuildTriggersRequest} message ListBuildTriggersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBuildTriggersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListBuildTriggersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.ListBuildTriggersRequest} ListBuildTriggersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBuildTriggersRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.ListBuildTriggersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 4: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListBuildTriggersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.ListBuildTriggersRequest} ListBuildTriggersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBuildTriggersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListBuildTriggersRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListBuildTriggersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListBuildTriggersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.ListBuildTriggersRequest} ListBuildTriggersRequest
                         */
                        ListBuildTriggersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.ListBuildTriggersRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.ListBuildTriggersRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListBuildTriggersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ListBuildTriggersRequest} message ListBuildTriggersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListBuildTriggersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.parent = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            return object;
                        };
    
                        /**
                         * Converts this ListBuildTriggersRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListBuildTriggersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListBuildTriggersRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListBuildTriggersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.ListBuildTriggersRequest";
                        };
    
                        return ListBuildTriggersRequest;
                    })();
    
                    v1.ListBuildTriggersResponse = (function() {
    
                        /**
                         * Properties of a ListBuildTriggersResponse.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IListBuildTriggersResponse
                         * @property {Array.<google.devtools.cloudbuild.v1.IBuildTrigger>|null} [triggers] ListBuildTriggersResponse triggers
                         * @property {string|null} [nextPageToken] ListBuildTriggersResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListBuildTriggersResponse.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a ListBuildTriggersResponse.
                         * @implements IListBuildTriggersResponse
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IListBuildTriggersResponse=} [properties] Properties to set
                         */
                        function ListBuildTriggersResponse(properties) {
                            this.triggers = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListBuildTriggersResponse triggers.
                         * @member {Array.<google.devtools.cloudbuild.v1.IBuildTrigger>} triggers
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersResponse
                         * @instance
                         */
                        ListBuildTriggersResponse.prototype.triggers = $util.emptyArray;
    
                        /**
                         * ListBuildTriggersResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersResponse
                         * @instance
                         */
                        ListBuildTriggersResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListBuildTriggersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersResponse
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IListBuildTriggersResponse=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.ListBuildTriggersResponse} ListBuildTriggersResponse instance
                         */
                        ListBuildTriggersResponse.create = function create(properties) {
                            return new ListBuildTriggersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListBuildTriggersResponse message. Does not implicitly {@link google.devtools.cloudbuild.v1.ListBuildTriggersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersResponse
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IListBuildTriggersResponse} message ListBuildTriggersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBuildTriggersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.triggers != null && message.triggers.length)
                                for (var i = 0; i < message.triggers.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.BuildTrigger.encode(message.triggers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListBuildTriggersResponse message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.ListBuildTriggersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersResponse
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IListBuildTriggersResponse} message ListBuildTriggersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBuildTriggersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListBuildTriggersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.ListBuildTriggersResponse} ListBuildTriggersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBuildTriggersResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.ListBuildTriggersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.triggers && message.triggers.length))
                                            message.triggers = [];
                                        message.triggers.push($root.google.devtools.cloudbuild.v1.BuildTrigger.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListBuildTriggersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.ListBuildTriggersResponse} ListBuildTriggersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBuildTriggersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListBuildTriggersResponse message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListBuildTriggersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.triggers != null && message.hasOwnProperty("triggers")) {
                                if (!Array.isArray(message.triggers))
                                    return "triggers: array expected";
                                for (var i = 0; i < message.triggers.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.BuildTrigger.verify(message.triggers[i]);
                                    if (error)
                                        return "triggers." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListBuildTriggersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.ListBuildTriggersResponse} ListBuildTriggersResponse
                         */
                        ListBuildTriggersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.ListBuildTriggersResponse)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.ListBuildTriggersResponse();
                            if (object.triggers) {
                                if (!Array.isArray(object.triggers))
                                    throw TypeError(".google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers: array expected");
                                message.triggers = [];
                                for (var i = 0; i < object.triggers.length; ++i) {
                                    if (typeof object.triggers[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.ListBuildTriggersResponse.triggers: object expected");
                                    message.triggers[i] = $root.google.devtools.cloudbuild.v1.BuildTrigger.fromObject(object.triggers[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListBuildTriggersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersResponse
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ListBuildTriggersResponse} message ListBuildTriggersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListBuildTriggersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.triggers = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.triggers && message.triggers.length) {
                                object.triggers = [];
                                for (var j = 0; j < message.triggers.length; ++j)
                                    object.triggers[j] = $root.google.devtools.cloudbuild.v1.BuildTrigger.toObject(message.triggers[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListBuildTriggersResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListBuildTriggersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListBuildTriggersResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.ListBuildTriggersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListBuildTriggersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.ListBuildTriggersResponse";
                        };
    
                        return ListBuildTriggersResponse;
                    })();
    
                    v1.DeleteBuildTriggerRequest = (function() {
    
                        /**
                         * Properties of a DeleteBuildTriggerRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IDeleteBuildTriggerRequest
                         * @property {string|null} [name] DeleteBuildTriggerRequest name
                         * @property {string|null} [projectId] DeleteBuildTriggerRequest projectId
                         * @property {string|null} [triggerId] DeleteBuildTriggerRequest triggerId
                         */
    
                        /**
                         * Constructs a new DeleteBuildTriggerRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a DeleteBuildTriggerRequest.
                         * @implements IDeleteBuildTriggerRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IDeleteBuildTriggerRequest=} [properties] Properties to set
                         */
                        function DeleteBuildTriggerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteBuildTriggerRequest name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @instance
                         */
                        DeleteBuildTriggerRequest.prototype.name = "";
    
                        /**
                         * DeleteBuildTriggerRequest projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @instance
                         */
                        DeleteBuildTriggerRequest.prototype.projectId = "";
    
                        /**
                         * DeleteBuildTriggerRequest triggerId.
                         * @member {string} triggerId
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @instance
                         */
                        DeleteBuildTriggerRequest.prototype.triggerId = "";
    
                        /**
                         * Creates a new DeleteBuildTriggerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IDeleteBuildTriggerRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest} DeleteBuildTriggerRequest instance
                         */
                        DeleteBuildTriggerRequest.create = function create(properties) {
                            return new DeleteBuildTriggerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteBuildTriggerRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IDeleteBuildTriggerRequest} message DeleteBuildTriggerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteBuildTriggerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.triggerId != null && Object.hasOwnProperty.call(message, "triggerId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.triggerId);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteBuildTriggerRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IDeleteBuildTriggerRequest} message DeleteBuildTriggerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteBuildTriggerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteBuildTriggerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest} DeleteBuildTriggerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteBuildTriggerRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 3: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.triggerId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteBuildTriggerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest} DeleteBuildTriggerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteBuildTriggerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteBuildTriggerRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteBuildTriggerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.triggerId != null && message.hasOwnProperty("triggerId"))
                                if (!$util.isString(message.triggerId))
                                    return "triggerId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteBuildTriggerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest} DeleteBuildTriggerRequest
                         */
                        DeleteBuildTriggerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.triggerId != null)
                                message.triggerId = String(object.triggerId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteBuildTriggerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest} message DeleteBuildTriggerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteBuildTriggerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.triggerId = "";
                                object.name = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.triggerId != null && message.hasOwnProperty("triggerId"))
                                object.triggerId = message.triggerId;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteBuildTriggerRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteBuildTriggerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteBuildTriggerRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteBuildTriggerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.DeleteBuildTriggerRequest";
                        };
    
                        return DeleteBuildTriggerRequest;
                    })();
    
                    v1.UpdateBuildTriggerRequest = (function() {
    
                        /**
                         * Properties of an UpdateBuildTriggerRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IUpdateBuildTriggerRequest
                         * @property {string|null} [projectId] UpdateBuildTriggerRequest projectId
                         * @property {string|null} [triggerId] UpdateBuildTriggerRequest triggerId
                         * @property {google.devtools.cloudbuild.v1.IBuildTrigger|null} [trigger] UpdateBuildTriggerRequest trigger
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateBuildTriggerRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateBuildTriggerRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents an UpdateBuildTriggerRequest.
                         * @implements IUpdateBuildTriggerRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IUpdateBuildTriggerRequest=} [properties] Properties to set
                         */
                        function UpdateBuildTriggerRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateBuildTriggerRequest projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @instance
                         */
                        UpdateBuildTriggerRequest.prototype.projectId = "";
    
                        /**
                         * UpdateBuildTriggerRequest triggerId.
                         * @member {string} triggerId
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @instance
                         */
                        UpdateBuildTriggerRequest.prototype.triggerId = "";
    
                        /**
                         * UpdateBuildTriggerRequest trigger.
                         * @member {google.devtools.cloudbuild.v1.IBuildTrigger|null|undefined} trigger
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @instance
                         */
                        UpdateBuildTriggerRequest.prototype.trigger = null;
    
                        /**
                         * UpdateBuildTriggerRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @instance
                         */
                        UpdateBuildTriggerRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateBuildTriggerRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUpdateBuildTriggerRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest} UpdateBuildTriggerRequest instance
                         */
                        UpdateBuildTriggerRequest.create = function create(properties) {
                            return new UpdateBuildTriggerRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateBuildTriggerRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUpdateBuildTriggerRequest} message UpdateBuildTriggerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateBuildTriggerRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.triggerId != null && Object.hasOwnProperty.call(message, "triggerId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.triggerId);
                            if (message.trigger != null && Object.hasOwnProperty.call(message, "trigger"))
                                $root.google.devtools.cloudbuild.v1.BuildTrigger.encode(message.trigger, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateBuildTriggerRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IUpdateBuildTriggerRequest} message UpdateBuildTriggerRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateBuildTriggerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateBuildTriggerRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest} UpdateBuildTriggerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateBuildTriggerRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.triggerId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.trigger = $root.google.devtools.cloudbuild.v1.BuildTrigger.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateBuildTriggerRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest} UpdateBuildTriggerRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateBuildTriggerRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateBuildTriggerRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateBuildTriggerRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.triggerId != null && message.hasOwnProperty("triggerId"))
                                if (!$util.isString(message.triggerId))
                                    return "triggerId: string expected";
                            if (message.trigger != null && message.hasOwnProperty("trigger")) {
                                var error = $root.google.devtools.cloudbuild.v1.BuildTrigger.verify(message.trigger);
                                if (error)
                                    return "trigger." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateBuildTriggerRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest} UpdateBuildTriggerRequest
                         */
                        UpdateBuildTriggerRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.triggerId != null)
                                message.triggerId = String(object.triggerId);
                            if (object.trigger != null) {
                                if (typeof object.trigger !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.trigger: object expected");
                                message.trigger = $root.google.devtools.cloudbuild.v1.BuildTrigger.fromObject(object.trigger);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateBuildTriggerRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest} message UpdateBuildTriggerRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateBuildTriggerRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.triggerId = "";
                                object.trigger = null;
                                object.updateMask = null;
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.triggerId != null && message.hasOwnProperty("triggerId"))
                                object.triggerId = message.triggerId;
                            if (message.trigger != null && message.hasOwnProperty("trigger"))
                                object.trigger = $root.google.devtools.cloudbuild.v1.BuildTrigger.toObject(message.trigger, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateBuildTriggerRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateBuildTriggerRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateBuildTriggerRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateBuildTriggerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.UpdateBuildTriggerRequest";
                        };
    
                        return UpdateBuildTriggerRequest;
                    })();
    
                    v1.BuildOptions = (function() {
    
                        /**
                         * Properties of a BuildOptions.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IBuildOptions
                         * @property {Array.<google.devtools.cloudbuild.v1.Hash.HashType>|null} [sourceProvenanceHash] BuildOptions sourceProvenanceHash
                         * @property {google.devtools.cloudbuild.v1.BuildOptions.VerifyOption|null} [requestedVerifyOption] BuildOptions requestedVerifyOption
                         * @property {google.devtools.cloudbuild.v1.BuildOptions.MachineType|null} [machineType] BuildOptions machineType
                         * @property {number|Long|null} [diskSizeGb] BuildOptions diskSizeGb
                         * @property {google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption|null} [substitutionOption] BuildOptions substitutionOption
                         * @property {boolean|null} [dynamicSubstitutions] BuildOptions dynamicSubstitutions
                         * @property {boolean|null} [automapSubstitutions] BuildOptions automapSubstitutions
                         * @property {google.devtools.cloudbuild.v1.BuildOptions.LogStreamingOption|null} [logStreamingOption] BuildOptions logStreamingOption
                         * @property {string|null} [workerPool] BuildOptions workerPool
                         * @property {google.devtools.cloudbuild.v1.BuildOptions.IPoolOption|null} [pool] BuildOptions pool
                         * @property {google.devtools.cloudbuild.v1.BuildOptions.LoggingMode|null} [logging] BuildOptions logging
                         * @property {Array.<string>|null} [env] BuildOptions env
                         * @property {Array.<string>|null} [secretEnv] BuildOptions secretEnv
                         * @property {Array.<google.devtools.cloudbuild.v1.IVolume>|null} [volumes] BuildOptions volumes
                         * @property {google.devtools.cloudbuild.v1.BuildOptions.DefaultLogsBucketBehavior|null} [defaultLogsBucketBehavior] BuildOptions defaultLogsBucketBehavior
                         * @property {boolean|null} [enableStructuredLogging] BuildOptions enableStructuredLogging
                         */
    
                        /**
                         * Constructs a new BuildOptions.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a BuildOptions.
                         * @implements IBuildOptions
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IBuildOptions=} [properties] Properties to set
                         */
                        function BuildOptions(properties) {
                            this.sourceProvenanceHash = [];
                            this.env = [];
                            this.secretEnv = [];
                            this.volumes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BuildOptions sourceProvenanceHash.
                         * @member {Array.<google.devtools.cloudbuild.v1.Hash.HashType>} sourceProvenanceHash
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.sourceProvenanceHash = $util.emptyArray;
    
                        /**
                         * BuildOptions requestedVerifyOption.
                         * @member {google.devtools.cloudbuild.v1.BuildOptions.VerifyOption} requestedVerifyOption
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.requestedVerifyOption = 0;
    
                        /**
                         * BuildOptions machineType.
                         * @member {google.devtools.cloudbuild.v1.BuildOptions.MachineType} machineType
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.machineType = 0;
    
                        /**
                         * BuildOptions diskSizeGb.
                         * @member {number|Long} diskSizeGb
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.diskSizeGb = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * BuildOptions substitutionOption.
                         * @member {google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption} substitutionOption
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.substitutionOption = 0;
    
                        /**
                         * BuildOptions dynamicSubstitutions.
                         * @member {boolean} dynamicSubstitutions
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.dynamicSubstitutions = false;
    
                        /**
                         * BuildOptions automapSubstitutions.
                         * @member {boolean} automapSubstitutions
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.automapSubstitutions = false;
    
                        /**
                         * BuildOptions logStreamingOption.
                         * @member {google.devtools.cloudbuild.v1.BuildOptions.LogStreamingOption} logStreamingOption
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.logStreamingOption = 0;
    
                        /**
                         * BuildOptions workerPool.
                         * @member {string} workerPool
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.workerPool = "";
    
                        /**
                         * BuildOptions pool.
                         * @member {google.devtools.cloudbuild.v1.BuildOptions.IPoolOption|null|undefined} pool
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.pool = null;
    
                        /**
                         * BuildOptions logging.
                         * @member {google.devtools.cloudbuild.v1.BuildOptions.LoggingMode} logging
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.logging = 0;
    
                        /**
                         * BuildOptions env.
                         * @member {Array.<string>} env
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.env = $util.emptyArray;
    
                        /**
                         * BuildOptions secretEnv.
                         * @member {Array.<string>} secretEnv
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.secretEnv = $util.emptyArray;
    
                        /**
                         * BuildOptions volumes.
                         * @member {Array.<google.devtools.cloudbuild.v1.IVolume>} volumes
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.volumes = $util.emptyArray;
    
                        /**
                         * BuildOptions defaultLogsBucketBehavior.
                         * @member {google.devtools.cloudbuild.v1.BuildOptions.DefaultLogsBucketBehavior} defaultLogsBucketBehavior
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.defaultLogsBucketBehavior = 0;
    
                        /**
                         * BuildOptions enableStructuredLogging.
                         * @member {boolean} enableStructuredLogging
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         */
                        BuildOptions.prototype.enableStructuredLogging = false;
    
                        /**
                         * Creates a new BuildOptions instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildOptions=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.BuildOptions} BuildOptions instance
                         */
                        BuildOptions.create = function create(properties) {
                            return new BuildOptions(properties);
                        };
    
                        /**
                         * Encodes the specified BuildOptions message. Does not implicitly {@link google.devtools.cloudbuild.v1.BuildOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildOptions} message BuildOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.sourceProvenanceHash != null && message.sourceProvenanceHash.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.sourceProvenanceHash.length; ++i)
                                    writer.int32(message.sourceProvenanceHash[i]);
                                writer.ldelim();
                            }
                            if (message.requestedVerifyOption != null && Object.hasOwnProperty.call(message, "requestedVerifyOption"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.requestedVerifyOption);
                            if (message.machineType != null && Object.hasOwnProperty.call(message, "machineType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.machineType);
                            if (message.substitutionOption != null && Object.hasOwnProperty.call(message, "substitutionOption"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.substitutionOption);
                            if (message.logStreamingOption != null && Object.hasOwnProperty.call(message, "logStreamingOption"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.logStreamingOption);
                            if (message.diskSizeGb != null && Object.hasOwnProperty.call(message, "diskSizeGb"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int64(message.diskSizeGb);
                            if (message.workerPool != null && Object.hasOwnProperty.call(message, "workerPool"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.workerPool);
                            if (message.logging != null && Object.hasOwnProperty.call(message, "logging"))
                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.logging);
                            if (message.env != null && message.env.length)
                                for (var i = 0; i < message.env.length; ++i)
                                    writer.uint32(/* id 12, wireType 2 =*/98).string(message.env[i]);
                            if (message.secretEnv != null && message.secretEnv.length)
                                for (var i = 0; i < message.secretEnv.length; ++i)
                                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.secretEnv[i]);
                            if (message.volumes != null && message.volumes.length)
                                for (var i = 0; i < message.volumes.length; ++i)
                                    $root.google.devtools.cloudbuild.v1.Volume.encode(message.volumes[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.dynamicSubstitutions != null && Object.hasOwnProperty.call(message, "dynamicSubstitutions"))
                                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.dynamicSubstitutions);
                            if (message.pool != null && Object.hasOwnProperty.call(message, "pool"))
                                $root.google.devtools.cloudbuild.v1.BuildOptions.PoolOption.encode(message.pool, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.defaultLogsBucketBehavior != null && Object.hasOwnProperty.call(message, "defaultLogsBucketBehavior"))
                                writer.uint32(/* id 21, wireType 0 =*/168).int32(message.defaultLogsBucketBehavior);
                            if (message.automapSubstitutions != null && Object.hasOwnProperty.call(message, "automapSubstitutions"))
                                writer.uint32(/* id 22, wireType 0 =*/176).bool(message.automapSubstitutions);
                            if (message.enableStructuredLogging != null && Object.hasOwnProperty.call(message, "enableStructuredLogging"))
                                writer.uint32(/* id 23, wireType 0 =*/184).bool(message.enableStructuredLogging);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BuildOptions message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.BuildOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IBuildOptions} message BuildOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BuildOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.BuildOptions} BuildOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildOptions.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.BuildOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.sourceProvenanceHash && message.sourceProvenanceHash.length))
                                            message.sourceProvenanceHash = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.sourceProvenanceHash.push(reader.int32());
                                        } else
                                            message.sourceProvenanceHash.push(reader.int32());
                                        break;
                                    }
                                case 2: {
                                        message.requestedVerifyOption = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.machineType = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.diskSizeGb = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.substitutionOption = reader.int32();
                                        break;
                                    }
                                case 17: {
                                        message.dynamicSubstitutions = reader.bool();
                                        break;
                                    }
                                case 22: {
                                        message.automapSubstitutions = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.logStreamingOption = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.workerPool = reader.string();
                                        break;
                                    }
                                case 19: {
                                        message.pool = $root.google.devtools.cloudbuild.v1.BuildOptions.PoolOption.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.logging = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        if (!(message.env && message.env.length))
                                            message.env = [];
                                        message.env.push(reader.string());
                                        break;
                                    }
                                case 13: {
                                        if (!(message.secretEnv && message.secretEnv.length))
                                            message.secretEnv = [];
                                        message.secretEnv.push(reader.string());
                                        break;
                                    }
                                case 14: {
                                        if (!(message.volumes && message.volumes.length))
                                            message.volumes = [];
                                        message.volumes.push($root.google.devtools.cloudbuild.v1.Volume.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 21: {
                                        message.defaultLogsBucketBehavior = reader.int32();
                                        break;
                                    }
                                case 23: {
                                        message.enableStructuredLogging = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BuildOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.BuildOptions} BuildOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BuildOptions message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BuildOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.sourceProvenanceHash != null && message.hasOwnProperty("sourceProvenanceHash")) {
                                if (!Array.isArray(message.sourceProvenanceHash))
                                    return "sourceProvenanceHash: array expected";
                                for (var i = 0; i < message.sourceProvenanceHash.length; ++i)
                                    switch (message.sourceProvenanceHash[i]) {
                                    default:
                                        return "sourceProvenanceHash: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                        break;
                                    }
                            }
                            if (message.requestedVerifyOption != null && message.hasOwnProperty("requestedVerifyOption"))
                                switch (message.requestedVerifyOption) {
                                default:
                                    return "requestedVerifyOption: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                switch (message.machineType) {
                                default:
                                    return "machineType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                if (!$util.isInteger(message.diskSizeGb) && !(message.diskSizeGb && $util.isInteger(message.diskSizeGb.low) && $util.isInteger(message.diskSizeGb.high)))
                                    return "diskSizeGb: integer|Long expected";
                            if (message.substitutionOption != null && message.hasOwnProperty("substitutionOption"))
                                switch (message.substitutionOption) {
                                default:
                                    return "substitutionOption: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.dynamicSubstitutions != null && message.hasOwnProperty("dynamicSubstitutions"))
                                if (typeof message.dynamicSubstitutions !== "boolean")
                                    return "dynamicSubstitutions: boolean expected";
                            if (message.automapSubstitutions != null && message.hasOwnProperty("automapSubstitutions"))
                                if (typeof message.automapSubstitutions !== "boolean")
                                    return "automapSubstitutions: boolean expected";
                            if (message.logStreamingOption != null && message.hasOwnProperty("logStreamingOption"))
                                switch (message.logStreamingOption) {
                                default:
                                    return "logStreamingOption: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.workerPool != null && message.hasOwnProperty("workerPool"))
                                if (!$util.isString(message.workerPool))
                                    return "workerPool: string expected";
                            if (message.pool != null && message.hasOwnProperty("pool")) {
                                var error = $root.google.devtools.cloudbuild.v1.BuildOptions.PoolOption.verify(message.pool);
                                if (error)
                                    return "pool." + error;
                            }
                            if (message.logging != null && message.hasOwnProperty("logging"))
                                switch (message.logging) {
                                default:
                                    return "logging: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 5:
                                case 4:
                                    break;
                                }
                            if (message.env != null && message.hasOwnProperty("env")) {
                                if (!Array.isArray(message.env))
                                    return "env: array expected";
                                for (var i = 0; i < message.env.length; ++i)
                                    if (!$util.isString(message.env[i]))
                                        return "env: string[] expected";
                            }
                            if (message.secretEnv != null && message.hasOwnProperty("secretEnv")) {
                                if (!Array.isArray(message.secretEnv))
                                    return "secretEnv: array expected";
                                for (var i = 0; i < message.secretEnv.length; ++i)
                                    if (!$util.isString(message.secretEnv[i]))
                                        return "secretEnv: string[] expected";
                            }
                            if (message.volumes != null && message.hasOwnProperty("volumes")) {
                                if (!Array.isArray(message.volumes))
                                    return "volumes: array expected";
                                for (var i = 0; i < message.volumes.length; ++i) {
                                    var error = $root.google.devtools.cloudbuild.v1.Volume.verify(message.volumes[i]);
                                    if (error)
                                        return "volumes." + error;
                                }
                            }
                            if (message.defaultLogsBucketBehavior != null && message.hasOwnProperty("defaultLogsBucketBehavior"))
                                switch (message.defaultLogsBucketBehavior) {
                                default:
                                    return "defaultLogsBucketBehavior: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.enableStructuredLogging != null && message.hasOwnProperty("enableStructuredLogging"))
                                if (typeof message.enableStructuredLogging !== "boolean")
                                    return "enableStructuredLogging: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a BuildOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.BuildOptions} BuildOptions
                         */
                        BuildOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.BuildOptions)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.BuildOptions();
                            if (object.sourceProvenanceHash) {
                                if (!Array.isArray(object.sourceProvenanceHash))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildOptions.sourceProvenanceHash: array expected");
                                message.sourceProvenanceHash = [];
                                for (var i = 0; i < object.sourceProvenanceHash.length; ++i)
                                    switch (object.sourceProvenanceHash[i]) {
                                    default:
                                        if (typeof object.sourceProvenanceHash[i] === "number") {
                                            message.sourceProvenanceHash[i] = object.sourceProvenanceHash[i];
                                            break;
                                        }
                                    case "NONE":
                                    case 0:
                                        message.sourceProvenanceHash[i] = 0;
                                        break;
                                    case "SHA256":
                                    case 1:
                                        message.sourceProvenanceHash[i] = 1;
                                        break;
                                    case "MD5":
                                    case 2:
                                        message.sourceProvenanceHash[i] = 2;
                                        break;
                                    case "GO_MODULE_H1":
                                    case 3:
                                        message.sourceProvenanceHash[i] = 3;
                                        break;
                                    case "SHA512":
                                    case 4:
                                        message.sourceProvenanceHash[i] = 4;
                                        break;
                                    }
                            }
                            switch (object.requestedVerifyOption) {
                            default:
                                if (typeof object.requestedVerifyOption === "number") {
                                    message.requestedVerifyOption = object.requestedVerifyOption;
                                    break;
                                }
                                break;
                            case "NOT_VERIFIED":
                            case 0:
                                message.requestedVerifyOption = 0;
                                break;
                            case "VERIFIED":
                            case 1:
                                message.requestedVerifyOption = 1;
                                break;
                            }
                            switch (object.machineType) {
                            default:
                                if (typeof object.machineType === "number") {
                                    message.machineType = object.machineType;
                                    break;
                                }
                                break;
                            case "UNSPECIFIED":
                            case 0:
                                message.machineType = 0;
                                break;
                            case "N1_HIGHCPU_8":
                            case 1:
                                message.machineType = 1;
                                break;
                            case "N1_HIGHCPU_32":
                            case 2:
                                message.machineType = 2;
                                break;
                            case "E2_HIGHCPU_8":
                            case 5:
                                message.machineType = 5;
                                break;
                            case "E2_HIGHCPU_32":
                            case 6:
                                message.machineType = 6;
                                break;
                            case "E2_MEDIUM":
                            case 7:
                                message.machineType = 7;
                                break;
                            }
                            if (object.diskSizeGb != null)
                                if ($util.Long)
                                    (message.diskSizeGb = $util.Long.fromValue(object.diskSizeGb)).unsigned = false;
                                else if (typeof object.diskSizeGb === "string")
                                    message.diskSizeGb = parseInt(object.diskSizeGb, 10);
                                else if (typeof object.diskSizeGb === "number")
                                    message.diskSizeGb = object.diskSizeGb;
                                else if (typeof object.diskSizeGb === "object")
                                    message.diskSizeGb = new $util.LongBits(object.diskSizeGb.low >>> 0, object.diskSizeGb.high >>> 0).toNumber();
                            switch (object.substitutionOption) {
                            default:
                                if (typeof object.substitutionOption === "number") {
                                    message.substitutionOption = object.substitutionOption;
                                    break;
                                }
                                break;
                            case "MUST_MATCH":
                            case 0:
                                message.substitutionOption = 0;
                                break;
                            case "ALLOW_LOOSE":
                            case 1:
                                message.substitutionOption = 1;
                                break;
                            }
                            if (object.dynamicSubstitutions != null)
                                message.dynamicSubstitutions = Boolean(object.dynamicSubstitutions);
                            if (object.automapSubstitutions != null)
                                message.automapSubstitutions = Boolean(object.automapSubstitutions);
                            switch (object.logStreamingOption) {
                            default:
                                if (typeof object.logStreamingOption === "number") {
                                    message.logStreamingOption = object.logStreamingOption;
                                    break;
                                }
                                break;
                            case "STREAM_DEFAULT":
                            case 0:
                                message.logStreamingOption = 0;
                                break;
                            case "STREAM_ON":
                            case 1:
                                message.logStreamingOption = 1;
                                break;
                            case "STREAM_OFF":
                            case 2:
                                message.logStreamingOption = 2;
                                break;
                            }
                            if (object.workerPool != null)
                                message.workerPool = String(object.workerPool);
                            if (object.pool != null) {
                                if (typeof object.pool !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildOptions.pool: object expected");
                                message.pool = $root.google.devtools.cloudbuild.v1.BuildOptions.PoolOption.fromObject(object.pool);
                            }
                            switch (object.logging) {
                            default:
                                if (typeof object.logging === "number") {
                                    message.logging = object.logging;
                                    break;
                                }
                                break;
                            case "LOGGING_UNSPECIFIED":
                            case 0:
                                message.logging = 0;
                                break;
                            case "LEGACY":
                            case 1:
                                message.logging = 1;
                                break;
                            case "GCS_ONLY":
                            case 2:
                                message.logging = 2;
                                break;
                            case "STACKDRIVER_ONLY":
                            case 3:
                                message.logging = 3;
                                break;
                            case "CLOUD_LOGGING_ONLY":
                            case 5:
                                message.logging = 5;
                                break;
                            case "NONE":
                            case 4:
                                message.logging = 4;
                                break;
                            }
                            if (object.env) {
                                if (!Array.isArray(object.env))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildOptions.env: array expected");
                                message.env = [];
                                for (var i = 0; i < object.env.length; ++i)
                                    message.env[i] = String(object.env[i]);
                            }
                            if (object.secretEnv) {
                                if (!Array.isArray(object.secretEnv))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildOptions.secretEnv: array expected");
                                message.secretEnv = [];
                                for (var i = 0; i < object.secretEnv.length; ++i)
                                    message.secretEnv[i] = String(object.secretEnv[i]);
                            }
                            if (object.volumes) {
                                if (!Array.isArray(object.volumes))
                                    throw TypeError(".google.devtools.cloudbuild.v1.BuildOptions.volumes: array expected");
                                message.volumes = [];
                                for (var i = 0; i < object.volumes.length; ++i) {
                                    if (typeof object.volumes[i] !== "object")
                                        throw TypeError(".google.devtools.cloudbuild.v1.BuildOptions.volumes: object expected");
                                    message.volumes[i] = $root.google.devtools.cloudbuild.v1.Volume.fromObject(object.volumes[i]);
                                }
                            }
                            switch (object.defaultLogsBucketBehavior) {
                            default:
                                if (typeof object.defaultLogsBucketBehavior === "number") {
                                    message.defaultLogsBucketBehavior = object.defaultLogsBucketBehavior;
                                    break;
                                }
                                break;
                            case "DEFAULT_LOGS_BUCKET_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message.defaultLogsBucketBehavior = 0;
                                break;
                            case "REGIONAL_USER_OWNED_BUCKET":
                            case 1:
                                message.defaultLogsBucketBehavior = 1;
                                break;
                            case "LEGACY_BUCKET":
                            case 2:
                                message.defaultLogsBucketBehavior = 2;
                                break;
                            }
                            if (object.enableStructuredLogging != null)
                                message.enableStructuredLogging = Boolean(object.enableStructuredLogging);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BuildOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @static
                         * @param {google.devtools.cloudbuild.v1.BuildOptions} message BuildOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BuildOptions.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.sourceProvenanceHash = [];
                                object.env = [];
                                object.secretEnv = [];
                                object.volumes = [];
                            }
                            if (options.defaults) {
                                object.requestedVerifyOption = options.enums === String ? "NOT_VERIFIED" : 0;
                                object.machineType = options.enums === String ? "UNSPECIFIED" : 0;
                                object.substitutionOption = options.enums === String ? "MUST_MATCH" : 0;
                                object.logStreamingOption = options.enums === String ? "STREAM_DEFAULT" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.diskSizeGb = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.diskSizeGb = options.longs === String ? "0" : 0;
                                object.workerPool = "";
                                object.logging = options.enums === String ? "LOGGING_UNSPECIFIED" : 0;
                                object.dynamicSubstitutions = false;
                                object.pool = null;
                                object.defaultLogsBucketBehavior = options.enums === String ? "DEFAULT_LOGS_BUCKET_BEHAVIOR_UNSPECIFIED" : 0;
                                object.automapSubstitutions = false;
                                object.enableStructuredLogging = false;
                            }
                            if (message.sourceProvenanceHash && message.sourceProvenanceHash.length) {
                                object.sourceProvenanceHash = [];
                                for (var j = 0; j < message.sourceProvenanceHash.length; ++j)
                                    object.sourceProvenanceHash[j] = options.enums === String ? $root.google.devtools.cloudbuild.v1.Hash.HashType[message.sourceProvenanceHash[j]] === undefined ? message.sourceProvenanceHash[j] : $root.google.devtools.cloudbuild.v1.Hash.HashType[message.sourceProvenanceHash[j]] : message.sourceProvenanceHash[j];
                            }
                            if (message.requestedVerifyOption != null && message.hasOwnProperty("requestedVerifyOption"))
                                object.requestedVerifyOption = options.enums === String ? $root.google.devtools.cloudbuild.v1.BuildOptions.VerifyOption[message.requestedVerifyOption] === undefined ? message.requestedVerifyOption : $root.google.devtools.cloudbuild.v1.BuildOptions.VerifyOption[message.requestedVerifyOption] : message.requestedVerifyOption;
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                object.machineType = options.enums === String ? $root.google.devtools.cloudbuild.v1.BuildOptions.MachineType[message.machineType] === undefined ? message.machineType : $root.google.devtools.cloudbuild.v1.BuildOptions.MachineType[message.machineType] : message.machineType;
                            if (message.substitutionOption != null && message.hasOwnProperty("substitutionOption"))
                                object.substitutionOption = options.enums === String ? $root.google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption[message.substitutionOption] === undefined ? message.substitutionOption : $root.google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption[message.substitutionOption] : message.substitutionOption;
                            if (message.logStreamingOption != null && message.hasOwnProperty("logStreamingOption"))
                                object.logStreamingOption = options.enums === String ? $root.google.devtools.cloudbuild.v1.BuildOptions.LogStreamingOption[message.logStreamingOption] === undefined ? message.logStreamingOption : $root.google.devtools.cloudbuild.v1.BuildOptions.LogStreamingOption[message.logStreamingOption] : message.logStreamingOption;
                            if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                if (typeof message.diskSizeGb === "number")
                                    object.diskSizeGb = options.longs === String ? String(message.diskSizeGb) : message.diskSizeGb;
                                else
                                    object.diskSizeGb = options.longs === String ? $util.Long.prototype.toString.call(message.diskSizeGb) : options.longs === Number ? new $util.LongBits(message.diskSizeGb.low >>> 0, message.diskSizeGb.high >>> 0).toNumber() : message.diskSizeGb;
                            if (message.workerPool != null && message.hasOwnProperty("workerPool"))
                                object.workerPool = message.workerPool;
                            if (message.logging != null && message.hasOwnProperty("logging"))
                                object.logging = options.enums === String ? $root.google.devtools.cloudbuild.v1.BuildOptions.LoggingMode[message.logging] === undefined ? message.logging : $root.google.devtools.cloudbuild.v1.BuildOptions.LoggingMode[message.logging] : message.logging;
                            if (message.env && message.env.length) {
                                object.env = [];
                                for (var j = 0; j < message.env.length; ++j)
                                    object.env[j] = message.env[j];
                            }
                            if (message.secretEnv && message.secretEnv.length) {
                                object.secretEnv = [];
                                for (var j = 0; j < message.secretEnv.length; ++j)
                                    object.secretEnv[j] = message.secretEnv[j];
                            }
                            if (message.volumes && message.volumes.length) {
                                object.volumes = [];
                                for (var j = 0; j < message.volumes.length; ++j)
                                    object.volumes[j] = $root.google.devtools.cloudbuild.v1.Volume.toObject(message.volumes[j], options);
                            }
                            if (message.dynamicSubstitutions != null && message.hasOwnProperty("dynamicSubstitutions"))
                                object.dynamicSubstitutions = message.dynamicSubstitutions;
                            if (message.pool != null && message.hasOwnProperty("pool"))
                                object.pool = $root.google.devtools.cloudbuild.v1.BuildOptions.PoolOption.toObject(message.pool, options);
                            if (message.defaultLogsBucketBehavior != null && message.hasOwnProperty("defaultLogsBucketBehavior"))
                                object.defaultLogsBucketBehavior = options.enums === String ? $root.google.devtools.cloudbuild.v1.BuildOptions.DefaultLogsBucketBehavior[message.defaultLogsBucketBehavior] === undefined ? message.defaultLogsBucketBehavior : $root.google.devtools.cloudbuild.v1.BuildOptions.DefaultLogsBucketBehavior[message.defaultLogsBucketBehavior] : message.defaultLogsBucketBehavior;
                            if (message.automapSubstitutions != null && message.hasOwnProperty("automapSubstitutions"))
                                object.automapSubstitutions = message.automapSubstitutions;
                            if (message.enableStructuredLogging != null && message.hasOwnProperty("enableStructuredLogging"))
                                object.enableStructuredLogging = message.enableStructuredLogging;
                            return object;
                        };
    
                        /**
                         * Converts this BuildOptions to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BuildOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BuildOptions
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.BuildOptions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BuildOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.BuildOptions";
                        };
    
                        /**
                         * VerifyOption enum.
                         * @name google.devtools.cloudbuild.v1.BuildOptions.VerifyOption
                         * @enum {number}
                         * @property {number} NOT_VERIFIED=0 NOT_VERIFIED value
                         * @property {number} VERIFIED=1 VERIFIED value
                         */
                        BuildOptions.VerifyOption = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "NOT_VERIFIED"] = 0;
                            values[valuesById[1] = "VERIFIED"] = 1;
                            return values;
                        })();
    
                        /**
                         * MachineType enum.
                         * @name google.devtools.cloudbuild.v1.BuildOptions.MachineType
                         * @enum {number}
                         * @property {number} UNSPECIFIED=0 UNSPECIFIED value
                         * @property {number} N1_HIGHCPU_8=1 N1_HIGHCPU_8 value
                         * @property {number} N1_HIGHCPU_32=2 N1_HIGHCPU_32 value
                         * @property {number} E2_HIGHCPU_8=5 E2_HIGHCPU_8 value
                         * @property {number} E2_HIGHCPU_32=6 E2_HIGHCPU_32 value
                         * @property {number} E2_MEDIUM=7 E2_MEDIUM value
                         */
                        BuildOptions.MachineType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNSPECIFIED"] = 0;
                            values[valuesById[1] = "N1_HIGHCPU_8"] = 1;
                            values[valuesById[2] = "N1_HIGHCPU_32"] = 2;
                            values[valuesById[5] = "E2_HIGHCPU_8"] = 5;
                            values[valuesById[6] = "E2_HIGHCPU_32"] = 6;
                            values[valuesById[7] = "E2_MEDIUM"] = 7;
                            return values;
                        })();
    
                        /**
                         * SubstitutionOption enum.
                         * @name google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption
                         * @enum {number}
                         * @property {number} MUST_MATCH=0 MUST_MATCH value
                         * @property {number} ALLOW_LOOSE=1 ALLOW_LOOSE value
                         */
                        BuildOptions.SubstitutionOption = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "MUST_MATCH"] = 0;
                            values[valuesById[1] = "ALLOW_LOOSE"] = 1;
                            return values;
                        })();
    
                        /**
                         * LogStreamingOption enum.
                         * @name google.devtools.cloudbuild.v1.BuildOptions.LogStreamingOption
                         * @enum {number}
                         * @property {number} STREAM_DEFAULT=0 STREAM_DEFAULT value
                         * @property {number} STREAM_ON=1 STREAM_ON value
                         * @property {number} STREAM_OFF=2 STREAM_OFF value
                         */
                        BuildOptions.LogStreamingOption = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STREAM_DEFAULT"] = 0;
                            values[valuesById[1] = "STREAM_ON"] = 1;
                            values[valuesById[2] = "STREAM_OFF"] = 2;
                            return values;
                        })();
    
                        BuildOptions.PoolOption = (function() {
    
                            /**
                             * Properties of a PoolOption.
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions
                             * @interface IPoolOption
                             * @property {string|null} [name] PoolOption name
                             */
    
                            /**
                             * Constructs a new PoolOption.
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions
                             * @classdesc Represents a PoolOption.
                             * @implements IPoolOption
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.BuildOptions.IPoolOption=} [properties] Properties to set
                             */
                            function PoolOption(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PoolOption name.
                             * @member {string} name
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions.PoolOption
                             * @instance
                             */
                            PoolOption.prototype.name = "";
    
                            /**
                             * Creates a new PoolOption instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions.PoolOption
                             * @static
                             * @param {google.devtools.cloudbuild.v1.BuildOptions.IPoolOption=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.BuildOptions.PoolOption} PoolOption instance
                             */
                            PoolOption.create = function create(properties) {
                                return new PoolOption(properties);
                            };
    
                            /**
                             * Encodes the specified PoolOption message. Does not implicitly {@link google.devtools.cloudbuild.v1.BuildOptions.PoolOption.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions.PoolOption
                             * @static
                             * @param {google.devtools.cloudbuild.v1.BuildOptions.IPoolOption} message PoolOption message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PoolOption.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PoolOption message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.BuildOptions.PoolOption.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions.PoolOption
                             * @static
                             * @param {google.devtools.cloudbuild.v1.BuildOptions.IPoolOption} message PoolOption message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PoolOption.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PoolOption message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions.PoolOption
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.BuildOptions.PoolOption} PoolOption
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PoolOption.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.BuildOptions.PoolOption();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PoolOption message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions.PoolOption
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.BuildOptions.PoolOption} PoolOption
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PoolOption.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PoolOption message.
                             * @function verify
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions.PoolOption
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PoolOption.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a PoolOption message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions.PoolOption
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.cloudbuild.v1.BuildOptions.PoolOption} PoolOption
                             */
                            PoolOption.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.cloudbuild.v1.BuildOptions.PoolOption)
                                    return object;
                                var message = new $root.google.devtools.cloudbuild.v1.BuildOptions.PoolOption();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PoolOption message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions.PoolOption
                             * @static
                             * @param {google.devtools.cloudbuild.v1.BuildOptions.PoolOption} message PoolOption
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PoolOption.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this PoolOption to JSON.
                             * @function toJSON
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions.PoolOption
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PoolOption.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PoolOption
                             * @function getTypeUrl
                             * @memberof google.devtools.cloudbuild.v1.BuildOptions.PoolOption
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PoolOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.cloudbuild.v1.BuildOptions.PoolOption";
                            };
    
                            return PoolOption;
                        })();
    
                        /**
                         * LoggingMode enum.
                         * @name google.devtools.cloudbuild.v1.BuildOptions.LoggingMode
                         * @enum {number}
                         * @property {number} LOGGING_UNSPECIFIED=0 LOGGING_UNSPECIFIED value
                         * @property {number} LEGACY=1 LEGACY value
                         * @property {number} GCS_ONLY=2 GCS_ONLY value
                         * @property {number} STACKDRIVER_ONLY=3 STACKDRIVER_ONLY value
                         * @property {number} CLOUD_LOGGING_ONLY=5 CLOUD_LOGGING_ONLY value
                         * @property {number} NONE=4 NONE value
                         */
                        BuildOptions.LoggingMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "LOGGING_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "LEGACY"] = 1;
                            values[valuesById[2] = "GCS_ONLY"] = 2;
                            values[valuesById[3] = "STACKDRIVER_ONLY"] = 3;
                            values[valuesById[5] = "CLOUD_LOGGING_ONLY"] = 5;
                            values[valuesById[4] = "NONE"] = 4;
                            return values;
                        })();
    
                        /**
                         * DefaultLogsBucketBehavior enum.
                         * @name google.devtools.cloudbuild.v1.BuildOptions.DefaultLogsBucketBehavior
                         * @enum {number}
                         * @property {number} DEFAULT_LOGS_BUCKET_BEHAVIOR_UNSPECIFIED=0 DEFAULT_LOGS_BUCKET_BEHAVIOR_UNSPECIFIED value
                         * @property {number} REGIONAL_USER_OWNED_BUCKET=1 REGIONAL_USER_OWNED_BUCKET value
                         * @property {number} LEGACY_BUCKET=2 LEGACY_BUCKET value
                         */
                        BuildOptions.DefaultLogsBucketBehavior = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DEFAULT_LOGS_BUCKET_BEHAVIOR_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "REGIONAL_USER_OWNED_BUCKET"] = 1;
                            values[valuesById[2] = "LEGACY_BUCKET"] = 2;
                            return values;
                        })();
    
                        return BuildOptions;
                    })();
    
                    v1.ReceiveTriggerWebhookRequest = (function() {
    
                        /**
                         * Properties of a ReceiveTriggerWebhookRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IReceiveTriggerWebhookRequest
                         * @property {string|null} [name] ReceiveTriggerWebhookRequest name
                         * @property {google.api.IHttpBody|null} [body] ReceiveTriggerWebhookRequest body
                         * @property {string|null} [projectId] ReceiveTriggerWebhookRequest projectId
                         * @property {string|null} [trigger] ReceiveTriggerWebhookRequest trigger
                         * @property {string|null} [secret] ReceiveTriggerWebhookRequest secret
                         */
    
                        /**
                         * Constructs a new ReceiveTriggerWebhookRequest.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a ReceiveTriggerWebhookRequest.
                         * @implements IReceiveTriggerWebhookRequest
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IReceiveTriggerWebhookRequest=} [properties] Properties to set
                         */
                        function ReceiveTriggerWebhookRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReceiveTriggerWebhookRequest name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @instance
                         */
                        ReceiveTriggerWebhookRequest.prototype.name = "";
    
                        /**
                         * ReceiveTriggerWebhookRequest body.
                         * @member {google.api.IHttpBody|null|undefined} body
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @instance
                         */
                        ReceiveTriggerWebhookRequest.prototype.body = null;
    
                        /**
                         * ReceiveTriggerWebhookRequest projectId.
                         * @member {string} projectId
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @instance
                         */
                        ReceiveTriggerWebhookRequest.prototype.projectId = "";
    
                        /**
                         * ReceiveTriggerWebhookRequest trigger.
                         * @member {string} trigger
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @instance
                         */
                        ReceiveTriggerWebhookRequest.prototype.trigger = "";
    
                        /**
                         * ReceiveTriggerWebhookRequest secret.
                         * @member {string} secret
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @instance
                         */
                        ReceiveTriggerWebhookRequest.prototype.secret = "";
    
                        /**
                         * Creates a new ReceiveTriggerWebhookRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IReceiveTriggerWebhookRequest=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest} ReceiveTriggerWebhookRequest instance
                         */
                        ReceiveTriggerWebhookRequest.create = function create(properties) {
                            return new ReceiveTriggerWebhookRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ReceiveTriggerWebhookRequest message. Does not implicitly {@link google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IReceiveTriggerWebhookRequest} message ReceiveTriggerWebhookRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReceiveTriggerWebhookRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.api.HttpBody.encode(message.body, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.projectId);
                            if (message.trigger != null && Object.hasOwnProperty.call(message, "trigger"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.trigger);
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.secret);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReceiveTriggerWebhookRequest message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IReceiveTriggerWebhookRequest} message ReceiveTriggerWebhookRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReceiveTriggerWebhookRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReceiveTriggerWebhookRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest} ReceiveTriggerWebhookRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReceiveTriggerWebhookRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 5: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.body = $root.google.api.HttpBody.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.trigger = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.secret = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReceiveTriggerWebhookRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest} ReceiveTriggerWebhookRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReceiveTriggerWebhookRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReceiveTriggerWebhookRequest message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReceiveTriggerWebhookRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.api.HttpBody.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.trigger != null && message.hasOwnProperty("trigger"))
                                if (!$util.isString(message.trigger))
                                    return "trigger: string expected";
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                if (!$util.isString(message.secret))
                                    return "secret: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ReceiveTriggerWebhookRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest} ReceiveTriggerWebhookRequest
                         */
                        ReceiveTriggerWebhookRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest.body: object expected");
                                message.body = $root.google.api.HttpBody.fromObject(object.body);
                            }
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.trigger != null)
                                message.trigger = String(object.trigger);
                            if (object.secret != null)
                                message.secret = String(object.secret);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReceiveTriggerWebhookRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest} message ReceiveTriggerWebhookRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReceiveTriggerWebhookRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.body = null;
                                object.projectId = "";
                                object.trigger = "";
                                object.secret = "";
                                object.name = "";
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.api.HttpBody.toObject(message.body, options);
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.trigger != null && message.hasOwnProperty("trigger"))
                                object.trigger = message.trigger;
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                object.secret = message.secret;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ReceiveTriggerWebhookRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReceiveTriggerWebhookRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReceiveTriggerWebhookRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReceiveTriggerWebhookRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.ReceiveTriggerWebhookRequest";
                        };
    
                        return ReceiveTriggerWebhookRequest;
                    })();
    
                    v1.ReceiveTriggerWebhookResponse = (function() {
    
                        /**
                         * Properties of a ReceiveTriggerWebhookResponse.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IReceiveTriggerWebhookResponse
                         */
    
                        /**
                         * Constructs a new ReceiveTriggerWebhookResponse.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a ReceiveTriggerWebhookResponse.
                         * @implements IReceiveTriggerWebhookResponse
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IReceiveTriggerWebhookResponse=} [properties] Properties to set
                         */
                        function ReceiveTriggerWebhookResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new ReceiveTriggerWebhookResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IReceiveTriggerWebhookResponse=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse} ReceiveTriggerWebhookResponse instance
                         */
                        ReceiveTriggerWebhookResponse.create = function create(properties) {
                            return new ReceiveTriggerWebhookResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ReceiveTriggerWebhookResponse message. Does not implicitly {@link google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IReceiveTriggerWebhookResponse} message ReceiveTriggerWebhookResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReceiveTriggerWebhookResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReceiveTriggerWebhookResponse message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IReceiveTriggerWebhookResponse} message ReceiveTriggerWebhookResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReceiveTriggerWebhookResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReceiveTriggerWebhookResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse} ReceiveTriggerWebhookResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReceiveTriggerWebhookResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReceiveTriggerWebhookResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse} ReceiveTriggerWebhookResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReceiveTriggerWebhookResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReceiveTriggerWebhookResponse message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReceiveTriggerWebhookResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a ReceiveTriggerWebhookResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse} ReceiveTriggerWebhookResponse
                         */
                        ReceiveTriggerWebhookResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse)
                                return object;
                            return new $root.google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse();
                        };
    
                        /**
                         * Creates a plain object from a ReceiveTriggerWebhookResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse
                         * @static
                         * @param {google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse} message ReceiveTriggerWebhookResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReceiveTriggerWebhookResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this ReceiveTriggerWebhookResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReceiveTriggerWebhookResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReceiveTriggerWebhookResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReceiveTriggerWebhookResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.ReceiveTriggerWebhookResponse";
                        };
    
                        return ReceiveTriggerWebhookResponse;
                    })();
    
                    v1.GitHubEnterpriseConfig = (function() {
    
                        /**
                         * Properties of a GitHubEnterpriseConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IGitHubEnterpriseConfig
                         * @property {string|null} [name] GitHubEnterpriseConfig name
                         * @property {string|null} [hostUrl] GitHubEnterpriseConfig hostUrl
                         * @property {number|Long|null} [appId] GitHubEnterpriseConfig appId
                         * @property {google.protobuf.ITimestamp|null} [createTime] GitHubEnterpriseConfig createTime
                         * @property {string|null} [webhookKey] GitHubEnterpriseConfig webhookKey
                         * @property {string|null} [peeredNetwork] GitHubEnterpriseConfig peeredNetwork
                         * @property {google.devtools.cloudbuild.v1.IGitHubEnterpriseSecrets|null} [secrets] GitHubEnterpriseConfig secrets
                         * @property {string|null} [displayName] GitHubEnterpriseConfig displayName
                         * @property {string|null} [sslCa] GitHubEnterpriseConfig sslCa
                         */
    
                        /**
                         * Constructs a new GitHubEnterpriseConfig.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a GitHubEnterpriseConfig.
                         * @implements IGitHubEnterpriseConfig
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IGitHubEnterpriseConfig=} [properties] Properties to set
                         */
                        function GitHubEnterpriseConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GitHubEnterpriseConfig name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @instance
                         */
                        GitHubEnterpriseConfig.prototype.name = "";
    
                        /**
                         * GitHubEnterpriseConfig hostUrl.
                         * @member {string} hostUrl
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @instance
                         */
                        GitHubEnterpriseConfig.prototype.hostUrl = "";
    
                        /**
                         * GitHubEnterpriseConfig appId.
                         * @member {number|Long} appId
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @instance
                         */
                        GitHubEnterpriseConfig.prototype.appId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * GitHubEnterpriseConfig createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @instance
                         */
                        GitHubEnterpriseConfig.prototype.createTime = null;
    
                        /**
                         * GitHubEnterpriseConfig webhookKey.
                         * @member {string} webhookKey
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @instance
                         */
                        GitHubEnterpriseConfig.prototype.webhookKey = "";
    
                        /**
                         * GitHubEnterpriseConfig peeredNetwork.
                         * @member {string} peeredNetwork
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @instance
                         */
                        GitHubEnterpriseConfig.prototype.peeredNetwork = "";
    
                        /**
                         * GitHubEnterpriseConfig secrets.
                         * @member {google.devtools.cloudbuild.v1.IGitHubEnterpriseSecrets|null|undefined} secrets
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @instance
                         */
                        GitHubEnterpriseConfig.prototype.secrets = null;
    
                        /**
                         * GitHubEnterpriseConfig displayName.
                         * @member {string} displayName
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @instance
                         */
                        GitHubEnterpriseConfig.prototype.displayName = "";
    
                        /**
                         * GitHubEnterpriseConfig sslCa.
                         * @member {string} sslCa
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @instance
                         */
                        GitHubEnterpriseConfig.prototype.sslCa = "";
    
                        /**
                         * Creates a new GitHubEnterpriseConfig instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitHubEnterpriseConfig=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.GitHubEnterpriseConfig} GitHubEnterpriseConfig instance
                         */
                        GitHubEnterpriseConfig.create = function create(properties) {
                            return new GitHubEnterpriseConfig(properties);
                        };
    
                        /**
                         * Encodes the specified GitHubEnterpriseConfig message. Does not implicitly {@link google.devtools.cloudbuild.v1.GitHubEnterpriseConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitHubEnterpriseConfig} message GitHubEnterpriseConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitHubEnterpriseConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hostUrl != null && Object.hasOwnProperty.call(message, "hostUrl"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.hostUrl);
                            if (message.appId != null && Object.hasOwnProperty.call(message, "appId"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.appId);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.name);
                            if (message.webhookKey != null && Object.hasOwnProperty.call(message, "webhookKey"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.webhookKey);
                            if (message.peeredNetwork != null && Object.hasOwnProperty.call(message, "peeredNetwork"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.peeredNetwork);
                            if (message.secrets != null && Object.hasOwnProperty.call(message, "secrets"))
                                $root.google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets.encode(message.secrets, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.displayName);
                            if (message.sslCa != null && Object.hasOwnProperty.call(message, "sslCa"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.sslCa);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GitHubEnterpriseConfig message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.GitHubEnterpriseConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitHubEnterpriseConfig} message GitHubEnterpriseConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitHubEnterpriseConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GitHubEnterpriseConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.GitHubEnterpriseConfig} GitHubEnterpriseConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitHubEnterpriseConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.GitHubEnterpriseConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 7: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.hostUrl = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.appId = reader.int64();
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.webhookKey = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.peeredNetwork = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.secrets = $root.google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.sslCa = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GitHubEnterpriseConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.GitHubEnterpriseConfig} GitHubEnterpriseConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitHubEnterpriseConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GitHubEnterpriseConfig message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GitHubEnterpriseConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.hostUrl != null && message.hasOwnProperty("hostUrl"))
                                if (!$util.isString(message.hostUrl))
                                    return "hostUrl: string expected";
                            if (message.appId != null && message.hasOwnProperty("appId"))
                                if (!$util.isInteger(message.appId) && !(message.appId && $util.isInteger(message.appId.low) && $util.isInteger(message.appId.high)))
                                    return "appId: integer|Long expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.webhookKey != null && message.hasOwnProperty("webhookKey"))
                                if (!$util.isString(message.webhookKey))
                                    return "webhookKey: string expected";
                            if (message.peeredNetwork != null && message.hasOwnProperty("peeredNetwork"))
                                if (!$util.isString(message.peeredNetwork))
                                    return "peeredNetwork: string expected";
                            if (message.secrets != null && message.hasOwnProperty("secrets")) {
                                var error = $root.google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets.verify(message.secrets);
                                if (error)
                                    return "secrets." + error;
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.sslCa != null && message.hasOwnProperty("sslCa"))
                                if (!$util.isString(message.sslCa))
                                    return "sslCa: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GitHubEnterpriseConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.GitHubEnterpriseConfig} GitHubEnterpriseConfig
                         */
                        GitHubEnterpriseConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.GitHubEnterpriseConfig)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.GitHubEnterpriseConfig();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.hostUrl != null)
                                message.hostUrl = String(object.hostUrl);
                            if (object.appId != null)
                                if ($util.Long)
                                    (message.appId = $util.Long.fromValue(object.appId)).unsigned = false;
                                else if (typeof object.appId === "string")
                                    message.appId = parseInt(object.appId, 10);
                                else if (typeof object.appId === "number")
                                    message.appId = object.appId;
                                else if (typeof object.appId === "object")
                                    message.appId = new $util.LongBits(object.appId.low >>> 0, object.appId.high >>> 0).toNumber();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.GitHubEnterpriseConfig.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.webhookKey != null)
                                message.webhookKey = String(object.webhookKey);
                            if (object.peeredNetwork != null)
                                message.peeredNetwork = String(object.peeredNetwork);
                            if (object.secrets != null) {
                                if (typeof object.secrets !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.GitHubEnterpriseConfig.secrets: object expected");
                                message.secrets = $root.google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets.fromObject(object.secrets);
                            }
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.sslCa != null)
                                message.sslCa = String(object.sslCa);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GitHubEnterpriseConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @static
                         * @param {google.devtools.cloudbuild.v1.GitHubEnterpriseConfig} message GitHubEnterpriseConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GitHubEnterpriseConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.hostUrl = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.appId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.appId = options.longs === String ? "0" : 0;
                                object.createTime = null;
                                object.name = "";
                                object.webhookKey = "";
                                object.peeredNetwork = "";
                                object.secrets = null;
                                object.displayName = "";
                                object.sslCa = "";
                            }
                            if (message.hostUrl != null && message.hasOwnProperty("hostUrl"))
                                object.hostUrl = message.hostUrl;
                            if (message.appId != null && message.hasOwnProperty("appId"))
                                if (typeof message.appId === "number")
                                    object.appId = options.longs === String ? String(message.appId) : message.appId;
                                else
                                    object.appId = options.longs === String ? $util.Long.prototype.toString.call(message.appId) : options.longs === Number ? new $util.LongBits(message.appId.low >>> 0, message.appId.high >>> 0).toNumber() : message.appId;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.webhookKey != null && message.hasOwnProperty("webhookKey"))
                                object.webhookKey = message.webhookKey;
                            if (message.peeredNetwork != null && message.hasOwnProperty("peeredNetwork"))
                                object.peeredNetwork = message.peeredNetwork;
                            if (message.secrets != null && message.hasOwnProperty("secrets"))
                                object.secrets = $root.google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets.toObject(message.secrets, options);
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.sslCa != null && message.hasOwnProperty("sslCa"))
                                object.sslCa = message.sslCa;
                            return object;
                        };
    
                        /**
                         * Converts this GitHubEnterpriseConfig to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GitHubEnterpriseConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GitHubEnterpriseConfig
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GitHubEnterpriseConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.GitHubEnterpriseConfig";
                        };
    
                        return GitHubEnterpriseConfig;
                    })();
    
                    v1.GitHubEnterpriseSecrets = (function() {
    
                        /**
                         * Properties of a GitHubEnterpriseSecrets.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IGitHubEnterpriseSecrets
                         * @property {string|null} [privateKeyVersionName] GitHubEnterpriseSecrets privateKeyVersionName
                         * @property {string|null} [webhookSecretVersionName] GitHubEnterpriseSecrets webhookSecretVersionName
                         * @property {string|null} [oauthSecretVersionName] GitHubEnterpriseSecrets oauthSecretVersionName
                         * @property {string|null} [oauthClientIdVersionName] GitHubEnterpriseSecrets oauthClientIdVersionName
                         */
    
                        /**
                         * Constructs a new GitHubEnterpriseSecrets.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a GitHubEnterpriseSecrets.
                         * @implements IGitHubEnterpriseSecrets
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IGitHubEnterpriseSecrets=} [properties] Properties to set
                         */
                        function GitHubEnterpriseSecrets(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GitHubEnterpriseSecrets privateKeyVersionName.
                         * @member {string} privateKeyVersionName
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @instance
                         */
                        GitHubEnterpriseSecrets.prototype.privateKeyVersionName = "";
    
                        /**
                         * GitHubEnterpriseSecrets webhookSecretVersionName.
                         * @member {string} webhookSecretVersionName
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @instance
                         */
                        GitHubEnterpriseSecrets.prototype.webhookSecretVersionName = "";
    
                        /**
                         * GitHubEnterpriseSecrets oauthSecretVersionName.
                         * @member {string} oauthSecretVersionName
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @instance
                         */
                        GitHubEnterpriseSecrets.prototype.oauthSecretVersionName = "";
    
                        /**
                         * GitHubEnterpriseSecrets oauthClientIdVersionName.
                         * @member {string} oauthClientIdVersionName
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @instance
                         */
                        GitHubEnterpriseSecrets.prototype.oauthClientIdVersionName = "";
    
                        /**
                         * Creates a new GitHubEnterpriseSecrets instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitHubEnterpriseSecrets=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets} GitHubEnterpriseSecrets instance
                         */
                        GitHubEnterpriseSecrets.create = function create(properties) {
                            return new GitHubEnterpriseSecrets(properties);
                        };
    
                        /**
                         * Encodes the specified GitHubEnterpriseSecrets message. Does not implicitly {@link google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitHubEnterpriseSecrets} message GitHubEnterpriseSecrets message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitHubEnterpriseSecrets.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateKeyVersionName != null && Object.hasOwnProperty.call(message, "privateKeyVersionName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.privateKeyVersionName);
                            if (message.webhookSecretVersionName != null && Object.hasOwnProperty.call(message, "webhookSecretVersionName"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.webhookSecretVersionName);
                            if (message.oauthSecretVersionName != null && Object.hasOwnProperty.call(message, "oauthSecretVersionName"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.oauthSecretVersionName);
                            if (message.oauthClientIdVersionName != null && Object.hasOwnProperty.call(message, "oauthClientIdVersionName"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.oauthClientIdVersionName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GitHubEnterpriseSecrets message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IGitHubEnterpriseSecrets} message GitHubEnterpriseSecrets message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GitHubEnterpriseSecrets.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GitHubEnterpriseSecrets message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets} GitHubEnterpriseSecrets
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitHubEnterpriseSecrets.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 5: {
                                        message.privateKeyVersionName = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.webhookSecretVersionName = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.oauthSecretVersionName = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.oauthClientIdVersionName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GitHubEnterpriseSecrets message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets} GitHubEnterpriseSecrets
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GitHubEnterpriseSecrets.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GitHubEnterpriseSecrets message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GitHubEnterpriseSecrets.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateKeyVersionName != null && message.hasOwnProperty("privateKeyVersionName"))
                                if (!$util.isString(message.privateKeyVersionName))
                                    return "privateKeyVersionName: string expected";
                            if (message.webhookSecretVersionName != null && message.hasOwnProperty("webhookSecretVersionName"))
                                if (!$util.isString(message.webhookSecretVersionName))
                                    return "webhookSecretVersionName: string expected";
                            if (message.oauthSecretVersionName != null && message.hasOwnProperty("oauthSecretVersionName"))
                                if (!$util.isString(message.oauthSecretVersionName))
                                    return "oauthSecretVersionName: string expected";
                            if (message.oauthClientIdVersionName != null && message.hasOwnProperty("oauthClientIdVersionName"))
                                if (!$util.isString(message.oauthClientIdVersionName))
                                    return "oauthClientIdVersionName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GitHubEnterpriseSecrets message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets} GitHubEnterpriseSecrets
                         */
                        GitHubEnterpriseSecrets.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets();
                            if (object.privateKeyVersionName != null)
                                message.privateKeyVersionName = String(object.privateKeyVersionName);
                            if (object.webhookSecretVersionName != null)
                                message.webhookSecretVersionName = String(object.webhookSecretVersionName);
                            if (object.oauthSecretVersionName != null)
                                message.oauthSecretVersionName = String(object.oauthSecretVersionName);
                            if (object.oauthClientIdVersionName != null)
                                message.oauthClientIdVersionName = String(object.oauthClientIdVersionName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GitHubEnterpriseSecrets message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @static
                         * @param {google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets} message GitHubEnterpriseSecrets
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GitHubEnterpriseSecrets.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.privateKeyVersionName = "";
                                object.webhookSecretVersionName = "";
                                object.oauthSecretVersionName = "";
                                object.oauthClientIdVersionName = "";
                            }
                            if (message.privateKeyVersionName != null && message.hasOwnProperty("privateKeyVersionName"))
                                object.privateKeyVersionName = message.privateKeyVersionName;
                            if (message.webhookSecretVersionName != null && message.hasOwnProperty("webhookSecretVersionName"))
                                object.webhookSecretVersionName = message.webhookSecretVersionName;
                            if (message.oauthSecretVersionName != null && message.hasOwnProperty("oauthSecretVersionName"))
                                object.oauthSecretVersionName = message.oauthSecretVersionName;
                            if (message.oauthClientIdVersionName != null && message.hasOwnProperty("oauthClientIdVersionName"))
                                object.oauthClientIdVersionName = message.oauthClientIdVersionName;
                            return object;
                        };
    
                        /**
                         * Converts this GitHubEnterpriseSecrets to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GitHubEnterpriseSecrets.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GitHubEnterpriseSecrets
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GitHubEnterpriseSecrets.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets";
                        };
    
                        return GitHubEnterpriseSecrets;
                    })();
    
                    v1.WorkerPool = (function() {
    
                        /**
                         * Properties of a WorkerPool.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IWorkerPool
                         * @property {string|null} [name] WorkerPool name
                         * @property {string|null} [displayName] WorkerPool displayName
                         * @property {string|null} [uid] WorkerPool uid
                         * @property {Object.<string,string>|null} [annotations] WorkerPool annotations
                         * @property {google.protobuf.ITimestamp|null} [createTime] WorkerPool createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] WorkerPool updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] WorkerPool deleteTime
                         * @property {google.devtools.cloudbuild.v1.WorkerPool.State|null} [state] WorkerPool state
                         * @property {google.devtools.cloudbuild.v1.IPrivatePoolV1Config|null} [privatePoolV1Config] WorkerPool privatePoolV1Config
                         * @property {string|null} [etag] WorkerPool etag
                         */
    
                        /**
                         * Constructs a new WorkerPool.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a WorkerPool.
                         * @implements IWorkerPool
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IWorkerPool=} [properties] Properties to set
                         */
                        function WorkerPool(properties) {
                            this.annotations = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * WorkerPool name.
                         * @member {string} name
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @instance
                         */
                        WorkerPool.prototype.name = "";
    
                        /**
                         * WorkerPool displayName.
                         * @member {string} displayName
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @instance
                         */
                        WorkerPool.prototype.displayName = "";
    
                        /**
                         * WorkerPool uid.
                         * @member {string} uid
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @instance
                         */
                        WorkerPool.prototype.uid = "";
    
                        /**
                         * WorkerPool annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @instance
                         */
                        WorkerPool.prototype.annotations = $util.emptyObject;
    
                        /**
                         * WorkerPool createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @instance
                         */
                        WorkerPool.prototype.createTime = null;
    
                        /**
                         * WorkerPool updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @instance
                         */
                        WorkerPool.prototype.updateTime = null;
    
                        /**
                         * WorkerPool deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @instance
                         */
                        WorkerPool.prototype.deleteTime = null;
    
                        /**
                         * WorkerPool state.
                         * @member {google.devtools.cloudbuild.v1.WorkerPool.State} state
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @instance
                         */
                        WorkerPool.prototype.state = 0;
    
                        /**
                         * WorkerPool privatePoolV1Config.
                         * @member {google.devtools.cloudbuild.v1.IPrivatePoolV1Config|null|undefined} privatePoolV1Config
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @instance
                         */
                        WorkerPool.prototype.privatePoolV1Config = null;
    
                        /**
                         * WorkerPool etag.
                         * @member {string} etag
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @instance
                         */
                        WorkerPool.prototype.etag = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * WorkerPool config.
                         * @member {"privatePoolV1Config"|undefined} config
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @instance
                         */
                        Object.defineProperty(WorkerPool.prototype, "config", {
                            get: $util.oneOfGetter($oneOfFields = ["privatePoolV1Config"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new WorkerPool instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IWorkerPool=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.WorkerPool} WorkerPool instance
                         */
                        WorkerPool.create = function create(properties) {
                            return new WorkerPool(properties);
                        };
    
                        /**
                         * Encodes the specified WorkerPool message. Does not implicitly {@link google.devtools.cloudbuild.v1.WorkerPool.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IWorkerPool} message WorkerPool message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkerPool.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uid);
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.state);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.etag);
                            if (message.privatePoolV1Config != null && Object.hasOwnProperty.call(message, "privatePoolV1Config"))
                                $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.encode(message.privatePoolV1Config, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified WorkerPool message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.WorkerPool.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IWorkerPool} message WorkerPool message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkerPool.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a WorkerPool message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.WorkerPool} WorkerPool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkerPool.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.WorkerPool(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        message.privatePoolV1Config = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a WorkerPool message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.WorkerPool} WorkerPool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkerPool.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a WorkerPool message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        WorkerPool.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.privatePoolV1Config != null && message.hasOwnProperty("privatePoolV1Config")) {
                                properties.config = 1;
                                {
                                    var error = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.verify(message.privatePoolV1Config);
                                    if (error)
                                        return "privatePoolV1Config." + error;
                                }
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a WorkerPool message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.WorkerPool} WorkerPool
                         */
                        WorkerPool.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.WorkerPool)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.WorkerPool();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.WorkerPool.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.WorkerPool.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.WorkerPool.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.WorkerPool.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "RUNNING":
                            case 2:
                                message.state = 2;
                                break;
                            case "DELETING":
                            case 3:
                                message.state = 3;
                                break;
                            case "DELETED":
                            case 4:
                                message.state = 4;
                                break;
                            case "UPDATING":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.privatePoolV1Config != null) {
                                if (typeof object.privatePoolV1Config !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.WorkerPool.privatePoolV1Config: object expected");
                                message.privatePoolV1Config = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.fromObject(object.privatePoolV1Config);
                            }
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a WorkerPool message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @static
                         * @param {google.devtools.cloudbuild.v1.WorkerPool} message WorkerPool
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        WorkerPool.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.annotations = {};
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                                object.uid = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            var keys2;
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.devtools.cloudbuild.v1.WorkerPool.State[message.state] === undefined ? message.state : $root.google.devtools.cloudbuild.v1.WorkerPool.State[message.state] : message.state;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.privatePoolV1Config != null && message.hasOwnProperty("privatePoolV1Config")) {
                                object.privatePoolV1Config = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.toObject(message.privatePoolV1Config, options);
                                if (options.oneofs)
                                    object.config = "privatePoolV1Config";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this WorkerPool to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        WorkerPool.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for WorkerPool
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.WorkerPool
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        WorkerPool.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.WorkerPool";
                        };
    
                        /**
                         * State enum.
                         * @name google.devtools.cloudbuild.v1.WorkerPool.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} RUNNING=2 RUNNING value
                         * @property {number} DELETING=3 DELETING value
                         * @property {number} DELETED=4 DELETED value
                         * @property {number} UPDATING=5 UPDATING value
                         */
                        WorkerPool.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "RUNNING"] = 2;
                            values[valuesById[3] = "DELETING"] = 3;
                            values[valuesById[4] = "DELETED"] = 4;
                            values[valuesById[5] = "UPDATING"] = 5;
                            return values;
                        })();
    
                        return WorkerPool;
                    })();
    
                    v1.PrivatePoolV1Config = (function() {
    
                        /**
                         * Properties of a PrivatePoolV1Config.
                         * @memberof google.devtools.cloudbuild.v1
                         * @interface IPrivatePoolV1Config
                         * @property {google.devtools.cloudbuild.v1.PrivatePoolV1Config.IWorkerConfig|null} [workerConfig] PrivatePoolV1Config workerConfig
                         * @property {google.devtools.cloudbuild.v1.PrivatePoolV1Config.INetworkConfig|null} [networkConfig] PrivatePoolV1Config networkConfig
                         * @property {google.devtools.cloudbuild.v1.PrivatePoolV1Config.IPrivateServiceConnect|null} [privateServiceConnect] PrivatePoolV1Config privateServiceConnect
                         */
    
                        /**
                         * Constructs a new PrivatePoolV1Config.
                         * @memberof google.devtools.cloudbuild.v1
                         * @classdesc Represents a PrivatePoolV1Config.
                         * @implements IPrivatePoolV1Config
                         * @constructor
                         * @param {google.devtools.cloudbuild.v1.IPrivatePoolV1Config=} [properties] Properties to set
                         */
                        function PrivatePoolV1Config(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PrivatePoolV1Config workerConfig.
                         * @member {google.devtools.cloudbuild.v1.PrivatePoolV1Config.IWorkerConfig|null|undefined} workerConfig
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @instance
                         */
                        PrivatePoolV1Config.prototype.workerConfig = null;
    
                        /**
                         * PrivatePoolV1Config networkConfig.
                         * @member {google.devtools.cloudbuild.v1.PrivatePoolV1Config.INetworkConfig|null|undefined} networkConfig
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @instance
                         */
                        PrivatePoolV1Config.prototype.networkConfig = null;
    
                        /**
                         * PrivatePoolV1Config privateServiceConnect.
                         * @member {google.devtools.cloudbuild.v1.PrivatePoolV1Config.IPrivateServiceConnect|null|undefined} privateServiceConnect
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @instance
                         */
                        PrivatePoolV1Config.prototype.privateServiceConnect = null;
    
                        /**
                         * Creates a new PrivatePoolV1Config instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IPrivatePoolV1Config=} [properties] Properties to set
                         * @returns {google.devtools.cloudbuild.v1.PrivatePoolV1Config} PrivatePoolV1Config instance
                         */
                        PrivatePoolV1Config.create = function create(properties) {
                            return new PrivatePoolV1Config(properties);
                        };
    
                        /**
                         * Encodes the specified PrivatePoolV1Config message. Does not implicitly {@link google.devtools.cloudbuild.v1.PrivatePoolV1Config.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IPrivatePoolV1Config} message PrivatePoolV1Config message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivatePoolV1Config.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.workerConfig != null && Object.hasOwnProperty.call(message, "workerConfig"))
                                $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig.encode(message.workerConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.networkConfig != null && Object.hasOwnProperty.call(message, "networkConfig"))
                                $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.encode(message.networkConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.privateServiceConnect != null && Object.hasOwnProperty.call(message, "privateServiceConnect"))
                                $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.PrivateServiceConnect.encode(message.privateServiceConnect, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PrivatePoolV1Config message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.PrivatePoolV1Config.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @static
                         * @param {google.devtools.cloudbuild.v1.IPrivatePoolV1Config} message PrivatePoolV1Config message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivatePoolV1Config.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PrivatePoolV1Config message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.cloudbuild.v1.PrivatePoolV1Config} PrivatePoolV1Config
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivatePoolV1Config.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.workerConfig = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.networkConfig = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.privateServiceConnect = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.PrivateServiceConnect.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PrivatePoolV1Config message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.cloudbuild.v1.PrivatePoolV1Config} PrivatePoolV1Config
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivatePoolV1Config.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PrivatePoolV1Config message.
                         * @function verify
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PrivatePoolV1Config.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.workerConfig != null && message.hasOwnProperty("workerConfig")) {
                                var error = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig.verify(message.workerConfig);
                                if (error)
                                    return "workerConfig." + error;
                            }
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig")) {
                                var error = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.verify(message.networkConfig);
                                if (error)
                                    return "networkConfig." + error;
                            }
                            if (message.privateServiceConnect != null && message.hasOwnProperty("privateServiceConnect")) {
                                var error = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.PrivateServiceConnect.verify(message.privateServiceConnect);
                                if (error)
                                    return "privateServiceConnect." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PrivatePoolV1Config message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.cloudbuild.v1.PrivatePoolV1Config} PrivatePoolV1Config
                         */
                        PrivatePoolV1Config.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config)
                                return object;
                            var message = new $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config();
                            if (object.workerConfig != null) {
                                if (typeof object.workerConfig !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.PrivatePoolV1Config.workerConfig: object expected");
                                message.workerConfig = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig.fromObject(object.workerConfig);
                            }
                            if (object.networkConfig != null) {
                                if (typeof object.networkConfig !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.PrivatePoolV1Config.networkConfig: object expected");
                                message.networkConfig = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.fromObject(object.networkConfig);
                            }
                            if (object.privateServiceConnect != null) {
                                if (typeof object.privateServiceConnect !== "object")
                                    throw TypeError(".google.devtools.cloudbuild.v1.PrivatePoolV1Config.privateServiceConnect: object expected");
                                message.privateServiceConnect = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.PrivateServiceConnect.fromObject(object.privateServiceConnect);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PrivatePoolV1Config message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @static
                         * @param {google.devtools.cloudbuild.v1.PrivatePoolV1Config} message PrivatePoolV1Config
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PrivatePoolV1Config.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.workerConfig = null;
                                object.networkConfig = null;
                                object.privateServiceConnect = null;
                            }
                            if (message.workerConfig != null && message.hasOwnProperty("workerConfig"))
                                object.workerConfig = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig.toObject(message.workerConfig, options);
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig"))
                                object.networkConfig = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.toObject(message.networkConfig, options);
                            if (message.privateServiceConnect != null && message.hasOwnProperty("privateServiceConnect"))
                                object.privateServiceConnect = $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.PrivateServiceConnect.toObject(message.privateServiceConnect, options);
                            return object;
                        };
    
                        /**
                         * Converts this PrivatePoolV1Config to JSON.
                         * @function toJSON
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PrivatePoolV1Config.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PrivatePoolV1Config
                         * @function getTypeUrl
                         * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PrivatePoolV1Config.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.cloudbuild.v1.PrivatePoolV1Config";
                        };
    
                        PrivatePoolV1Config.WorkerConfig = (function() {
    
                            /**
                             * Properties of a WorkerConfig.
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                             * @interface IWorkerConfig
                             * @property {string|null} [machineType] WorkerConfig machineType
                             * @property {number|Long|null} [diskSizeGb] WorkerConfig diskSizeGb
                             * @property {boolean|null} [enableNestedVirtualization] WorkerConfig enableNestedVirtualization
                             */
    
                            /**
                             * Constructs a new WorkerConfig.
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                             * @classdesc Represents a WorkerConfig.
                             * @implements IWorkerConfig
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.PrivatePoolV1Config.IWorkerConfig=} [properties] Properties to set
                             */
                            function WorkerConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * WorkerConfig machineType.
                             * @member {string} machineType
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @instance
                             */
                            WorkerConfig.prototype.machineType = "";
    
                            /**
                             * WorkerConfig diskSizeGb.
                             * @member {number|Long} diskSizeGb
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @instance
                             */
                            WorkerConfig.prototype.diskSizeGb = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * WorkerConfig enableNestedVirtualization.
                             * @member {boolean|null|undefined} enableNestedVirtualization
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @instance
                             */
                            WorkerConfig.prototype.enableNestedVirtualization = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            // Virtual OneOf for proto3 optional field
                            Object.defineProperty(WorkerConfig.prototype, "_enableNestedVirtualization", {
                                get: $util.oneOfGetter($oneOfFields = ["enableNestedVirtualization"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new WorkerConfig instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @static
                             * @param {google.devtools.cloudbuild.v1.PrivatePoolV1Config.IWorkerConfig=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig} WorkerConfig instance
                             */
                            WorkerConfig.create = function create(properties) {
                                return new WorkerConfig(properties);
                            };
    
                            /**
                             * Encodes the specified WorkerConfig message. Does not implicitly {@link google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @static
                             * @param {google.devtools.cloudbuild.v1.PrivatePoolV1Config.IWorkerConfig} message WorkerConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            WorkerConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.machineType != null && Object.hasOwnProperty.call(message, "machineType"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.machineType);
                                if (message.diskSizeGb != null && Object.hasOwnProperty.call(message, "diskSizeGb"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.diskSizeGb);
                                if (message.enableNestedVirtualization != null && Object.hasOwnProperty.call(message, "enableNestedVirtualization"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableNestedVirtualization);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified WorkerConfig message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @static
                             * @param {google.devtools.cloudbuild.v1.PrivatePoolV1Config.IWorkerConfig} message WorkerConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            WorkerConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a WorkerConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig} WorkerConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            WorkerConfig.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.machineType = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.diskSizeGb = reader.int64();
                                            break;
                                        }
                                    case 3: {
                                            message.enableNestedVirtualization = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a WorkerConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig} WorkerConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            WorkerConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a WorkerConfig message.
                             * @function verify
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            WorkerConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.machineType != null && message.hasOwnProperty("machineType"))
                                    if (!$util.isString(message.machineType))
                                        return "machineType: string expected";
                                if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                    if (!$util.isInteger(message.diskSizeGb) && !(message.diskSizeGb && $util.isInteger(message.diskSizeGb.low) && $util.isInteger(message.diskSizeGb.high)))
                                        return "diskSizeGb: integer|Long expected";
                                if (message.enableNestedVirtualization != null && message.hasOwnProperty("enableNestedVirtualization")) {
                                    properties._enableNestedVirtualization = 1;
                                    if (typeof message.enableNestedVirtualization !== "boolean")
                                        return "enableNestedVirtualization: boolean expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a WorkerConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig} WorkerConfig
                             */
                            WorkerConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig)
                                    return object;
                                var message = new $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig();
                                if (object.machineType != null)
                                    message.machineType = String(object.machineType);
                                if (object.diskSizeGb != null)
                                    if ($util.Long)
                                        (message.diskSizeGb = $util.Long.fromValue(object.diskSizeGb)).unsigned = false;
                                    else if (typeof object.diskSizeGb === "string")
                                        message.diskSizeGb = parseInt(object.diskSizeGb, 10);
                                    else if (typeof object.diskSizeGb === "number")
                                        message.diskSizeGb = object.diskSizeGb;
                                    else if (typeof object.diskSizeGb === "object")
                                        message.diskSizeGb = new $util.LongBits(object.diskSizeGb.low >>> 0, object.diskSizeGb.high >>> 0).toNumber();
                                if (object.enableNestedVirtualization != null)
                                    message.enableNestedVirtualization = Boolean(object.enableNestedVirtualization);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a WorkerConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @static
                             * @param {google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig} message WorkerConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            WorkerConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.machineType = "";
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.diskSizeGb = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.diskSizeGb = options.longs === String ? "0" : 0;
                                }
                                if (message.machineType != null && message.hasOwnProperty("machineType"))
                                    object.machineType = message.machineType;
                                if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                    if (typeof message.diskSizeGb === "number")
                                        object.diskSizeGb = options.longs === String ? String(message.diskSizeGb) : message.diskSizeGb;
                                    else
                                        object.diskSizeGb = options.longs === String ? $util.Long.prototype.toString.call(message.diskSizeGb) : options.longs === Number ? new $util.LongBits(message.diskSizeGb.low >>> 0, message.diskSizeGb.high >>> 0).toNumber() : message.diskSizeGb;
                                if (message.enableNestedVirtualization != null && message.hasOwnProperty("enableNestedVirtualization")) {
                                    object.enableNestedVirtualization = message.enableNestedVirtualization;
                                    if (options.oneofs)
                                        object._enableNestedVirtualization = "enableNestedVirtualization";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this WorkerConfig to JSON.
                             * @function toJSON
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            WorkerConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for WorkerConfig
                             * @function getTypeUrl
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            WorkerConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.cloudbuild.v1.PrivatePoolV1Config.WorkerConfig";
                            };
    
                            return WorkerConfig;
                        })();
    
                        PrivatePoolV1Config.NetworkConfig = (function() {
    
                            /**
                             * Properties of a NetworkConfig.
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                             * @interface INetworkConfig
                             * @property {string|null} [peeredNetwork] NetworkConfig peeredNetwork
                             * @property {google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.EgressOption|null} [egressOption] NetworkConfig egressOption
                             * @property {string|null} [peeredNetworkIpRange] NetworkConfig peeredNetworkIpRange
                             */
    
                            /**
                             * Constructs a new NetworkConfig.
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config
                             * @classdesc Represents a NetworkConfig.
                             * @implements INetworkConfig
                             * @constructor
                             * @param {google.devtools.cloudbuild.v1.PrivatePoolV1Config.INetworkConfig=} [properties] Properties to set
                             */
                            function NetworkConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * NetworkConfig peeredNetwork.
                             * @member {string} peeredNetwork
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig
                             * @instance
                             */
                            NetworkConfig.prototype.peeredNetwork = "";
    
                            /**
                             * NetworkConfig egressOption.
                             * @member {google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.EgressOption} egressOption
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig
                             * @instance
                             */
                            NetworkConfig.prototype.egressOption = 0;
    
                            /**
                             * NetworkConfig peeredNetworkIpRange.
                             * @member {string} peeredNetworkIpRange
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig
                             * @instance
                             */
                            NetworkConfig.prototype.peeredNetworkIpRange = "";
    
                            /**
                             * Creates a new NetworkConfig instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig
                             * @static
                             * @param {google.devtools.cloudbuild.v1.PrivatePoolV1Config.INetworkConfig=} [properties] Properties to set
                             * @returns {google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig} NetworkConfig instance
                             */
                            NetworkConfig.create = function create(properties) {
                                return new NetworkConfig(properties);
                            };
    
                            /**
                             * Encodes the specified NetworkConfig message. Does not implicitly {@link google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig
                             * @static
                             * @param {google.devtools.cloudbuild.v1.PrivatePoolV1Config.INetworkConfig} message NetworkConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            NetworkConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.peeredNetwork != null && Object.hasOwnProperty.call(message, "peeredNetwork"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.peeredNetwork);
                                if (message.egressOption != null && Object.hasOwnProperty.call(message, "egressOption"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.egressOption);
                                if (message.peeredNetworkIpRange != null && Object.hasOwnProperty.call(message, "peeredNetworkIpRange"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.peeredNetworkIpRange);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified NetworkConfig message, length delimited. Does not implicitly {@link google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig
                             * @static
                             * @param {google.devtools.cloudbuild.v1.PrivatePoolV1Config.INetworkConfig} message NetworkConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            NetworkConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a NetworkConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig} NetworkConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            NetworkConfig.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.peeredNetwork = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.egressOption = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.peeredNetworkIpRange = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a NetworkConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.cloudbuild.v1.PrivatePoolV1Config.NetworkConfig} NetworkConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
         