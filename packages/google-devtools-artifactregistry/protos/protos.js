// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_artifact_registry_protos || ($protobuf.roots._google_cloud_artifact_registry_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.devtools = (function() {
    
            /**
             * Namespace devtools.
             * @memberof google
             * @namespace
             */
            var devtools = {};
    
            devtools.artifactregistry = (function() {
    
                /**
                 * Namespace artifactregistry.
                 * @memberof google.devtools
                 * @namespace
                 */
                var artifactregistry = {};
    
                artifactregistry.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.devtools.artifactregistry
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.AptArtifact = (function() {
    
                        /**
                         * Properties of an AptArtifact.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IAptArtifact
                         * @property {string|null} [name] AptArtifact name
                         * @property {string|null} [packageName] AptArtifact packageName
                         * @property {google.devtools.artifactregistry.v1.AptArtifact.PackageType|null} [packageType] AptArtifact packageType
                         * @property {string|null} [architecture] AptArtifact architecture
                         * @property {string|null} [component] AptArtifact component
                         * @property {Uint8Array|null} [controlFile] AptArtifact controlFile
                         */
    
                        /**
                         * Constructs a new AptArtifact.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an AptArtifact.
                         * @implements IAptArtifact
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IAptArtifact=} [properties] Properties to set
                         */
                        function AptArtifact(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AptArtifact name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @instance
                         */
                        AptArtifact.prototype.name = "";
    
                        /**
                         * AptArtifact packageName.
                         * @member {string} packageName
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @instance
                         */
                        AptArtifact.prototype.packageName = "";
    
                        /**
                         * AptArtifact packageType.
                         * @member {google.devtools.artifactregistry.v1.AptArtifact.PackageType} packageType
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @instance
                         */
                        AptArtifact.prototype.packageType = 0;
    
                        /**
                         * AptArtifact architecture.
                         * @member {string} architecture
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @instance
                         */
                        AptArtifact.prototype.architecture = "";
    
                        /**
                         * AptArtifact component.
                         * @member {string} component
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @instance
                         */
                        AptArtifact.prototype.component = "";
    
                        /**
                         * AptArtifact controlFile.
                         * @member {Uint8Array} controlFile
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @instance
                         */
                        AptArtifact.prototype.controlFile = $util.newBuffer([]);
    
                        /**
                         * Creates a new AptArtifact instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IAptArtifact=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.AptArtifact} AptArtifact instance
                         */
                        AptArtifact.create = function create(properties) {
                            return new AptArtifact(properties);
                        };
    
                        /**
                         * Encodes the specified AptArtifact message. Does not implicitly {@link google.devtools.artifactregistry.v1.AptArtifact.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IAptArtifact} message AptArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AptArtifact.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.packageName != null && Object.hasOwnProperty.call(message, "packageName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.packageName);
                            if (message.packageType != null && Object.hasOwnProperty.call(message, "packageType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.packageType);
                            if (message.architecture != null && Object.hasOwnProperty.call(message, "architecture"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.architecture);
                            if (message.component != null && Object.hasOwnProperty.call(message, "component"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.component);
                            if (message.controlFile != null && Object.hasOwnProperty.call(message, "controlFile"))
                                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.controlFile);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AptArtifact message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.AptArtifact.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IAptArtifact} message AptArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AptArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AptArtifact message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.AptArtifact} AptArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AptArtifact.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.AptArtifact();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.packageName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.packageType = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.architecture = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.component = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.controlFile = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AptArtifact message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.AptArtifact} AptArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AptArtifact.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AptArtifact message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AptArtifact.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.packageName != null && message.hasOwnProperty("packageName"))
                                if (!$util.isString(message.packageName))
                                    return "packageName: string expected";
                            if (message.packageType != null && message.hasOwnProperty("packageType"))
                                switch (message.packageType) {
                                default:
                                    return "packageType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.architecture != null && message.hasOwnProperty("architecture"))
                                if (!$util.isString(message.architecture))
                                    return "architecture: string expected";
                            if (message.component != null && message.hasOwnProperty("component"))
                                if (!$util.isString(message.component))
                                    return "component: string expected";
                            if (message.controlFile != null && message.hasOwnProperty("controlFile"))
                                if (!(message.controlFile && typeof message.controlFile.length === "number" || $util.isString(message.controlFile)))
                                    return "controlFile: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates an AptArtifact message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.AptArtifact} AptArtifact
                         */
                        AptArtifact.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.AptArtifact)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.AptArtifact();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.packageName != null)
                                message.packageName = String(object.packageName);
                            switch (object.packageType) {
                            default:
                                if (typeof object.packageType === "number") {
                                    message.packageType = object.packageType;
                                    break;
                                }
                                break;
                            case "PACKAGE_TYPE_UNSPECIFIED":
                            case 0:
                                message.packageType = 0;
                                break;
                            case "BINARY":
                            case 1:
                                message.packageType = 1;
                                break;
                            case "SOURCE":
                            case 2:
                                message.packageType = 2;
                                break;
                            }
                            if (object.architecture != null)
                                message.architecture = String(object.architecture);
                            if (object.component != null)
                                message.component = String(object.component);
                            if (object.controlFile != null)
                                if (typeof object.controlFile === "string")
                                    $util.base64.decode(object.controlFile, message.controlFile = $util.newBuffer($util.base64.length(object.controlFile)), 0);
                                else if (object.controlFile.length >= 0)
                                    message.controlFile = object.controlFile;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AptArtifact message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.AptArtifact} message AptArtifact
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AptArtifact.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.packageName = "";
                                object.packageType = options.enums === String ? "PACKAGE_TYPE_UNSPECIFIED" : 0;
                                object.architecture = "";
                                object.component = "";
                                if (options.bytes === String)
                                    object.controlFile = "";
                                else {
                                    object.controlFile = [];
                                    if (options.bytes !== Array)
                                        object.controlFile = $util.newBuffer(object.controlFile);
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.packageName != null && message.hasOwnProperty("packageName"))
                                object.packageName = message.packageName;
                            if (message.packageType != null && message.hasOwnProperty("packageType"))
                                object.packageType = options.enums === String ? $root.google.devtools.artifactregistry.v1.AptArtifact.PackageType[message.packageType] === undefined ? message.packageType : $root.google.devtools.artifactregistry.v1.AptArtifact.PackageType[message.packageType] : message.packageType;
                            if (message.architecture != null && message.hasOwnProperty("architecture"))
                                object.architecture = message.architecture;
                            if (message.component != null && message.hasOwnProperty("component"))
                                object.component = message.component;
                            if (message.controlFile != null && message.hasOwnProperty("controlFile"))
                                object.controlFile = options.bytes === String ? $util.base64.encode(message.controlFile, 0, message.controlFile.length) : options.bytes === Array ? Array.prototype.slice.call(message.controlFile) : message.controlFile;
                            return object;
                        };
    
                        /**
                         * Converts this AptArtifact to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AptArtifact.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AptArtifact
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.AptArtifact
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AptArtifact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.AptArtifact";
                        };
    
                        /**
                         * PackageType enum.
                         * @name google.devtools.artifactregistry.v1.AptArtifact.PackageType
                         * @enum {number}
                         * @property {number} PACKAGE_TYPE_UNSPECIFIED=0 PACKAGE_TYPE_UNSPECIFIED value
                         * @property {number} BINARY=1 BINARY value
                         * @property {number} SOURCE=2 SOURCE value
                         */
                        AptArtifact.PackageType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "PACKAGE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BINARY"] = 1;
                            values[valuesById[2] = "SOURCE"] = 2;
                            return values;
                        })();
    
                        return AptArtifact;
                    })();
    
                    v1.ImportAptArtifactsGcsSource = (function() {
    
                        /**
                         * Properties of an ImportAptArtifactsGcsSource.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IImportAptArtifactsGcsSource
                         * @property {Array.<string>|null} [uris] ImportAptArtifactsGcsSource uris
                         * @property {boolean|null} [useWildcards] ImportAptArtifactsGcsSource useWildcards
                         */
    
                        /**
                         * Constructs a new ImportAptArtifactsGcsSource.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an ImportAptArtifactsGcsSource.
                         * @implements IImportAptArtifactsGcsSource
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsGcsSource=} [properties] Properties to set
                         */
                        function ImportAptArtifactsGcsSource(properties) {
                            this.uris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportAptArtifactsGcsSource uris.
                         * @member {Array.<string>} uris
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource
                         * @instance
                         */
                        ImportAptArtifactsGcsSource.prototype.uris = $util.emptyArray;
    
                        /**
                         * ImportAptArtifactsGcsSource useWildcards.
                         * @member {boolean} useWildcards
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource
                         * @instance
                         */
                        ImportAptArtifactsGcsSource.prototype.useWildcards = false;
    
                        /**
                         * Creates a new ImportAptArtifactsGcsSource instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsGcsSource=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource} ImportAptArtifactsGcsSource instance
                         */
                        ImportAptArtifactsGcsSource.create = function create(properties) {
                            return new ImportAptArtifactsGcsSource(properties);
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsGcsSource message. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsGcsSource} message ImportAptArtifactsGcsSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsGcsSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uris != null && message.uris.length)
                                for (var i = 0; i < message.uris.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.uris[i]);
                            if (message.useWildcards != null && Object.hasOwnProperty.call(message, "useWildcards"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.useWildcards);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsGcsSource message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsGcsSource} message ImportAptArtifactsGcsSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsGcsSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsGcsSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource} ImportAptArtifactsGcsSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsGcsSource.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.uris && message.uris.length))
                                            message.uris = [];
                                        message.uris.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        message.useWildcards = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsGcsSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource} ImportAptArtifactsGcsSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsGcsSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportAptArtifactsGcsSource message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportAptArtifactsGcsSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uris != null && message.hasOwnProperty("uris")) {
                                if (!Array.isArray(message.uris))
                                    return "uris: array expected";
                                for (var i = 0; i < message.uris.length; ++i)
                                    if (!$util.isString(message.uris[i]))
                                        return "uris: string[] expected";
                            }
                            if (message.useWildcards != null && message.hasOwnProperty("useWildcards"))
                                if (typeof message.useWildcards !== "boolean")
                                    return "useWildcards: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportAptArtifactsGcsSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource} ImportAptArtifactsGcsSource
                         */
                        ImportAptArtifactsGcsSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource();
                            if (object.uris) {
                                if (!Array.isArray(object.uris))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.uris: array expected");
                                message.uris = [];
                                for (var i = 0; i < object.uris.length; ++i)
                                    message.uris[i] = String(object.uris[i]);
                            }
                            if (object.useWildcards != null)
                                message.useWildcards = Boolean(object.useWildcards);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportAptArtifactsGcsSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource} message ImportAptArtifactsGcsSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportAptArtifactsGcsSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.uris = [];
                            if (options.defaults)
                                object.useWildcards = false;
                            if (message.uris && message.uris.length) {
                                object.uris = [];
                                for (var j = 0; j < message.uris.length; ++j)
                                    object.uris[j] = message.uris[j];
                            }
                            if (message.useWildcards != null && message.hasOwnProperty("useWildcards"))
                                object.useWildcards = message.useWildcards;
                            return object;
                        };
    
                        /**
                         * Converts this ImportAptArtifactsGcsSource to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportAptArtifactsGcsSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportAptArtifactsGcsSource
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportAptArtifactsGcsSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource";
                        };
    
                        return ImportAptArtifactsGcsSource;
                    })();
    
                    v1.ImportAptArtifactsRequest = (function() {
    
                        /**
                         * Properties of an ImportAptArtifactsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IImportAptArtifactsRequest
                         * @property {google.devtools.artifactregistry.v1.IImportAptArtifactsGcsSource|null} [gcsSource] ImportAptArtifactsRequest gcsSource
                         * @property {string|null} [parent] ImportAptArtifactsRequest parent
                         */
    
                        /**
                         * Constructs a new ImportAptArtifactsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an ImportAptArtifactsRequest.
                         * @implements IImportAptArtifactsRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsRequest=} [properties] Properties to set
                         */
                        function ImportAptArtifactsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportAptArtifactsRequest gcsSource.
                         * @member {google.devtools.artifactregistry.v1.IImportAptArtifactsGcsSource|null|undefined} gcsSource
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @instance
                         */
                        ImportAptArtifactsRequest.prototype.gcsSource = null;
    
                        /**
                         * ImportAptArtifactsRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @instance
                         */
                        ImportAptArtifactsRequest.prototype.parent = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportAptArtifactsRequest source.
                         * @member {"gcsSource"|undefined} source
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @instance
                         */
                        Object.defineProperty(ImportAptArtifactsRequest.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsSource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportAptArtifactsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsRequest} ImportAptArtifactsRequest instance
                         */
                        ImportAptArtifactsRequest.create = function create(properties) {
                            return new ImportAptArtifactsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportAptArtifactsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsRequest} message ImportAptArtifactsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.gcsSource != null && Object.hasOwnProperty.call(message, "gcsSource"))
                                $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.encode(message.gcsSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportAptArtifactsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsRequest} message ImportAptArtifactsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsRequest} ImportAptArtifactsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ImportAptArtifactsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.gcsSource = $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsRequest} ImportAptArtifactsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportAptArtifactsRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportAptArtifactsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.verify(message.gcsSource);
                                    if (error)
                                        return "gcsSource." + error;
                                }
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportAptArtifactsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsRequest} ImportAptArtifactsRequest
                         */
                        ImportAptArtifactsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ImportAptArtifactsRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ImportAptArtifactsRequest();
                            if (object.gcsSource != null) {
                                if (typeof object.gcsSource !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.ImportAptArtifactsRequest.gcsSource: object expected");
                                message.gcsSource = $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.fromObject(object.gcsSource);
                            }
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportAptArtifactsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ImportAptArtifactsRequest} message ImportAptArtifactsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportAptArtifactsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.parent = "";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                object.gcsSource = $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.toObject(message.gcsSource, options);
                                if (options.oneofs)
                                    object.source = "gcsSource";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ImportAptArtifactsRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportAptArtifactsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportAptArtifactsRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportAptArtifactsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ImportAptArtifactsRequest";
                        };
    
                        return ImportAptArtifactsRequest;
                    })();
    
                    v1.ImportAptArtifactsErrorInfo = (function() {
    
                        /**
                         * Properties of an ImportAptArtifactsErrorInfo.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IImportAptArtifactsErrorInfo
                         * @property {google.devtools.artifactregistry.v1.IImportAptArtifactsGcsSource|null} [gcsSource] ImportAptArtifactsErrorInfo gcsSource
                         * @property {google.rpc.IStatus|null} [error] ImportAptArtifactsErrorInfo error
                         */
    
                        /**
                         * Constructs a new ImportAptArtifactsErrorInfo.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an ImportAptArtifactsErrorInfo.
                         * @implements IImportAptArtifactsErrorInfo
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsErrorInfo=} [properties] Properties to set
                         */
                        function ImportAptArtifactsErrorInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportAptArtifactsErrorInfo gcsSource.
                         * @member {google.devtools.artifactregistry.v1.IImportAptArtifactsGcsSource|null|undefined} gcsSource
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @instance
                         */
                        ImportAptArtifactsErrorInfo.prototype.gcsSource = null;
    
                        /**
                         * ImportAptArtifactsErrorInfo error.
                         * @member {google.rpc.IStatus|null|undefined} error
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @instance
                         */
                        ImportAptArtifactsErrorInfo.prototype.error = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportAptArtifactsErrorInfo source.
                         * @member {"gcsSource"|undefined} source
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @instance
                         */
                        Object.defineProperty(ImportAptArtifactsErrorInfo.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsSource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportAptArtifactsErrorInfo instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsErrorInfo=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo} ImportAptArtifactsErrorInfo instance
                         */
                        ImportAptArtifactsErrorInfo.create = function create(properties) {
                            return new ImportAptArtifactsErrorInfo(properties);
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsErrorInfo message. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsErrorInfo} message ImportAptArtifactsErrorInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsErrorInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsSource != null && Object.hasOwnProperty.call(message, "gcsSource"))
                                $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.encode(message.gcsSource, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsErrorInfo message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsErrorInfo} message ImportAptArtifactsErrorInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsErrorInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsErrorInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo} ImportAptArtifactsErrorInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsErrorInfo.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsSource = $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsErrorInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo} ImportAptArtifactsErrorInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsErrorInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportAptArtifactsErrorInfo message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportAptArtifactsErrorInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.verify(message.gcsSource);
                                    if (error)
                                        return "gcsSource." + error;
                                }
                            }
                            if (message.error != null && message.hasOwnProperty("error")) {
                                var error = $root.google.rpc.Status.verify(message.error);
                                if (error)
                                    return "error." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportAptArtifactsErrorInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo} ImportAptArtifactsErrorInfo
                         */
                        ImportAptArtifactsErrorInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo();
                            if (object.gcsSource != null) {
                                if (typeof object.gcsSource !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo.gcsSource: object expected");
                                message.gcsSource = $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.fromObject(object.gcsSource);
                            }
                            if (object.error != null) {
                                if (typeof object.error !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo.error: object expected");
                                message.error = $root.google.rpc.Status.fromObject(object.error);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportAptArtifactsErrorInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo} message ImportAptArtifactsErrorInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportAptArtifactsErrorInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.error = null;
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                object.gcsSource = $root.google.devtools.artifactregistry.v1.ImportAptArtifactsGcsSource.toObject(message.gcsSource, options);
                                if (options.oneofs)
                                    object.source = "gcsSource";
                            }
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = $root.google.rpc.Status.toObject(message.error, options);
                            return object;
                        };
    
                        /**
                         * Converts this ImportAptArtifactsErrorInfo to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportAptArtifactsErrorInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportAptArtifactsErrorInfo
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportAptArtifactsErrorInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo";
                        };
    
                        return ImportAptArtifactsErrorInfo;
                    })();
    
                    v1.ImportAptArtifactsResponse = (function() {
    
                        /**
                         * Properties of an ImportAptArtifactsResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IImportAptArtifactsResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.IAptArtifact>|null} [aptArtifacts] ImportAptArtifactsResponse aptArtifacts
                         * @property {Array.<google.devtools.artifactregistry.v1.IImportAptArtifactsErrorInfo>|null} [errors] ImportAptArtifactsResponse errors
                         */
    
                        /**
                         * Constructs a new ImportAptArtifactsResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an ImportAptArtifactsResponse.
                         * @implements IImportAptArtifactsResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsResponse=} [properties] Properties to set
                         */
                        function ImportAptArtifactsResponse(properties) {
                            this.aptArtifacts = [];
                            this.errors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportAptArtifactsResponse aptArtifacts.
                         * @member {Array.<google.devtools.artifactregistry.v1.IAptArtifact>} aptArtifacts
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsResponse
                         * @instance
                         */
                        ImportAptArtifactsResponse.prototype.aptArtifacts = $util.emptyArray;
    
                        /**
                         * ImportAptArtifactsResponse errors.
                         * @member {Array.<google.devtools.artifactregistry.v1.IImportAptArtifactsErrorInfo>} errors
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsResponse
                         * @instance
                         */
                        ImportAptArtifactsResponse.prototype.errors = $util.emptyArray;
    
                        /**
                         * Creates a new ImportAptArtifactsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsResponse} ImportAptArtifactsResponse instance
                         */
                        ImportAptArtifactsResponse.create = function create(properties) {
                            return new ImportAptArtifactsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportAptArtifactsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsResponse} message ImportAptArtifactsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.aptArtifacts != null && message.aptArtifacts.length)
                                for (var i = 0; i < message.aptArtifacts.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.AptArtifact.encode(message.aptArtifacts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.errors != null && message.errors.length)
                                for (var i = 0; i < message.errors.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo.encode(message.errors[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportAptArtifactsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsResponse} message ImportAptArtifactsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsResponse} ImportAptArtifactsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ImportAptArtifactsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.aptArtifacts && message.aptArtifacts.length))
                                            message.aptArtifacts = [];
                                        message.aptArtifacts.push($root.google.devtools.artifactregistry.v1.AptArtifact.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsResponse} ImportAptArtifactsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportAptArtifactsResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportAptArtifactsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.aptArtifacts != null && message.hasOwnProperty("aptArtifacts")) {
                                if (!Array.isArray(message.aptArtifacts))
                                    return "aptArtifacts: array expected";
                                for (var i = 0; i < message.aptArtifacts.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.AptArtifact.verify(message.aptArtifacts[i]);
                                    if (error)
                                        return "aptArtifacts." + error;
                                }
                            }
                            if (message.errors != null && message.hasOwnProperty("errors")) {
                                if (!Array.isArray(message.errors))
                                    return "errors: array expected";
                                for (var i = 0; i < message.errors.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo.verify(message.errors[i]);
                                    if (error)
                                        return "errors." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportAptArtifactsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsResponse} ImportAptArtifactsResponse
                         */
                        ImportAptArtifactsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ImportAptArtifactsResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ImportAptArtifactsResponse();
                            if (object.aptArtifacts) {
                                if (!Array.isArray(object.aptArtifacts))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ImportAptArtifactsResponse.aptArtifacts: array expected");
                                message.aptArtifacts = [];
                                for (var i = 0; i < object.aptArtifacts.length; ++i) {
                                    if (typeof object.aptArtifacts[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ImportAptArtifactsResponse.aptArtifacts: object expected");
                                    message.aptArtifacts[i] = $root.google.devtools.artifactregistry.v1.AptArtifact.fromObject(object.aptArtifacts[i]);
                                }
                            }
                            if (object.errors) {
                                if (!Array.isArray(object.errors))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ImportAptArtifactsResponse.errors: array expected");
                                message.errors = [];
                                for (var i = 0; i < object.errors.length; ++i) {
                                    if (typeof object.errors[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ImportAptArtifactsResponse.errors: object expected");
                                    message.errors[i] = $root.google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo.fromObject(object.errors[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportAptArtifactsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ImportAptArtifactsResponse} message ImportAptArtifactsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportAptArtifactsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.aptArtifacts = [];
                                object.errors = [];
                            }
                            if (message.aptArtifacts && message.aptArtifacts.length) {
                                object.aptArtifacts = [];
                                for (var j = 0; j < message.aptArtifacts.length; ++j)
                                    object.aptArtifacts[j] = $root.google.devtools.artifactregistry.v1.AptArtifact.toObject(message.aptArtifacts[j], options);
                            }
                            if (message.errors && message.errors.length) {
                                object.errors = [];
                                for (var j = 0; j < message.errors.length; ++j)
                                    object.errors[j] = $root.google.devtools.artifactregistry.v1.ImportAptArtifactsErrorInfo.toObject(message.errors[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ImportAptArtifactsResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportAptArtifactsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportAptArtifactsResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportAptArtifactsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ImportAptArtifactsResponse";
                        };
    
                        return ImportAptArtifactsResponse;
                    })();
    
                    v1.ImportAptArtifactsMetadata = (function() {
    
                        /**
                         * Properties of an ImportAptArtifactsMetadata.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IImportAptArtifactsMetadata
                         */
    
                        /**
                         * Constructs a new ImportAptArtifactsMetadata.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an ImportAptArtifactsMetadata.
                         * @implements IImportAptArtifactsMetadata
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsMetadata=} [properties] Properties to set
                         */
                        function ImportAptArtifactsMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new ImportAptArtifactsMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsMetadata=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata} ImportAptArtifactsMetadata instance
                         */
                        ImportAptArtifactsMetadata.create = function create(properties) {
                            return new ImportAptArtifactsMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsMetadata message. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsMetadata} message ImportAptArtifactsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsMetadata message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsMetadata} message ImportAptArtifactsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata} ImportAptArtifactsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata} ImportAptArtifactsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportAptArtifactsMetadata message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportAptArtifactsMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportAptArtifactsMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata} ImportAptArtifactsMetadata
                         */
                        ImportAptArtifactsMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata)
                                return object;
                            return new $root.google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata();
                        };
    
                        /**
                         * Creates a plain object from an ImportAptArtifactsMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata} message ImportAptArtifactsMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportAptArtifactsMetadata.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this ImportAptArtifactsMetadata to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportAptArtifactsMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportAptArtifactsMetadata
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportAptArtifactsMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ImportAptArtifactsMetadata";
                        };
    
                        return ImportAptArtifactsMetadata;
                    })();
    
                    v1.DockerImage = (function() {
    
                        /**
                         * Properties of a DockerImage.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IDockerImage
                         * @property {string|null} [name] DockerImage name
                         * @property {string|null} [uri] DockerImage uri
                         * @property {Array.<string>|null} [tags] DockerImage tags
                         * @property {number|Long|null} [imageSizeBytes] DockerImage imageSizeBytes
                         * @property {google.protobuf.ITimestamp|null} [uploadTime] DockerImage uploadTime
                         * @property {string|null} [mediaType] DockerImage mediaType
                         * @property {google.protobuf.ITimestamp|null} [buildTime] DockerImage buildTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] DockerImage updateTime
                         */
    
                        /**
                         * Constructs a new DockerImage.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a DockerImage.
                         * @implements IDockerImage
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IDockerImage=} [properties] Properties to set
                         */
                        function DockerImage(properties) {
                            this.tags = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DockerImage name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @instance
                         */
                        DockerImage.prototype.name = "";
    
                        /**
                         * DockerImage uri.
                         * @member {string} uri
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @instance
                         */
                        DockerImage.prototype.uri = "";
    
                        /**
                         * DockerImage tags.
                         * @member {Array.<string>} tags
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @instance
                         */
                        DockerImage.prototype.tags = $util.emptyArray;
    
                        /**
                         * DockerImage imageSizeBytes.
                         * @member {number|Long} imageSizeBytes
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @instance
                         */
                        DockerImage.prototype.imageSizeBytes = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * DockerImage uploadTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} uploadTime
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @instance
                         */
                        DockerImage.prototype.uploadTime = null;
    
                        /**
                         * DockerImage mediaType.
                         * @member {string} mediaType
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @instance
                         */
                        DockerImage.prototype.mediaType = "";
    
                        /**
                         * DockerImage buildTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} buildTime
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @instance
                         */
                        DockerImage.prototype.buildTime = null;
    
                        /**
                         * DockerImage updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @instance
                         */
                        DockerImage.prototype.updateTime = null;
    
                        /**
                         * Creates a new DockerImage instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDockerImage=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.DockerImage} DockerImage instance
                         */
                        DockerImage.create = function create(properties) {
                            return new DockerImage(properties);
                        };
    
                        /**
                         * Encodes the specified DockerImage message. Does not implicitly {@link google.devtools.artifactregistry.v1.DockerImage.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDockerImage} message DockerImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DockerImage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uri);
                            if (message.tags != null && message.tags.length)
                                for (var i = 0; i < message.tags.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.tags[i]);
                            if (message.imageSizeBytes != null && Object.hasOwnProperty.call(message, "imageSizeBytes"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.imageSizeBytes);
                            if (message.uploadTime != null && Object.hasOwnProperty.call(message, "uploadTime"))
                                $root.google.protobuf.Timestamp.encode(message.uploadTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.mediaType != null && Object.hasOwnProperty.call(message, "mediaType"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.mediaType);
                            if (message.buildTime != null && Object.hasOwnProperty.call(message, "buildTime"))
                                $root.google.protobuf.Timestamp.encode(message.buildTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DockerImage message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.DockerImage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDockerImage} message DockerImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DockerImage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DockerImage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.DockerImage} DockerImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DockerImage.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.DockerImage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.tags && message.tags.length))
                                            message.tags = [];
                                        message.tags.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        message.imageSizeBytes = reader.int64();
                                        break;
                                    }
                                case 5: {
                                        message.uploadTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.mediaType = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.buildTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DockerImage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.DockerImage} DockerImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DockerImage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DockerImage message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DockerImage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.tags != null && message.hasOwnProperty("tags")) {
                                if (!Array.isArray(message.tags))
                                    return "tags: array expected";
                                for (var i = 0; i < message.tags.length; ++i)
                                    if (!$util.isString(message.tags[i]))
                                        return "tags: string[] expected";
                            }
                            if (message.imageSizeBytes != null && message.hasOwnProperty("imageSizeBytes"))
                                if (!$util.isInteger(message.imageSizeBytes) && !(message.imageSizeBytes && $util.isInteger(message.imageSizeBytes.low) && $util.isInteger(message.imageSizeBytes.high)))
                                    return "imageSizeBytes: integer|Long expected";
                            if (message.uploadTime != null && message.hasOwnProperty("uploadTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.uploadTime);
                                if (error)
                                    return "uploadTime." + error;
                            }
                            if (message.mediaType != null && message.hasOwnProperty("mediaType"))
                                if (!$util.isString(message.mediaType))
                                    return "mediaType: string expected";
                            if (message.buildTime != null && message.hasOwnProperty("buildTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.buildTime);
                                if (error)
                                    return "buildTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DockerImage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.DockerImage} DockerImage
                         */
                        DockerImage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.DockerImage)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.DockerImage();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.tags) {
                                if (!Array.isArray(object.tags))
                                    throw TypeError(".google.devtools.artifactregistry.v1.DockerImage.tags: array expected");
                                message.tags = [];
                                for (var i = 0; i < object.tags.length; ++i)
                                    message.tags[i] = String(object.tags[i]);
                            }
                            if (object.imageSizeBytes != null)
                                if ($util.Long)
                                    (message.imageSizeBytes = $util.Long.fromValue(object.imageSizeBytes)).unsigned = false;
                                else if (typeof object.imageSizeBytes === "string")
                                    message.imageSizeBytes = parseInt(object.imageSizeBytes, 10);
                                else if (typeof object.imageSizeBytes === "number")
                                    message.imageSizeBytes = object.imageSizeBytes;
                                else if (typeof object.imageSizeBytes === "object")
                                    message.imageSizeBytes = new $util.LongBits(object.imageSizeBytes.low >>> 0, object.imageSizeBytes.high >>> 0).toNumber();
                            if (object.uploadTime != null) {
                                if (typeof object.uploadTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.DockerImage.uploadTime: object expected");
                                message.uploadTime = $root.google.protobuf.Timestamp.fromObject(object.uploadTime);
                            }
                            if (object.mediaType != null)
                                message.mediaType = String(object.mediaType);
                            if (object.buildTime != null) {
                                if (typeof object.buildTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.DockerImage.buildTime: object expected");
                                message.buildTime = $root.google.protobuf.Timestamp.fromObject(object.buildTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.DockerImage.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DockerImage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @static
                         * @param {google.devtools.artifactregistry.v1.DockerImage} message DockerImage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DockerImage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tags = [];
                            if (options.defaults) {
                                object.name = "";
                                object.uri = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.imageSizeBytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.imageSizeBytes = options.longs === String ? "0" : 0;
                                object.uploadTime = null;
                                object.mediaType = "";
                                object.buildTime = null;
                                object.updateTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.tags && message.tags.length) {
                                object.tags = [];
                                for (var j = 0; j < message.tags.length; ++j)
                                    object.tags[j] = message.tags[j];
                            }
                            if (message.imageSizeBytes != null && message.hasOwnProperty("imageSizeBytes"))
                                if (typeof message.imageSizeBytes === "number")
                                    object.imageSizeBytes = options.longs === String ? String(message.imageSizeBytes) : message.imageSizeBytes;
                                else
                                    object.imageSizeBytes = options.longs === String ? $util.Long.prototype.toString.call(message.imageSizeBytes) : options.longs === Number ? new $util.LongBits(message.imageSizeBytes.low >>> 0, message.imageSizeBytes.high >>> 0).toNumber() : message.imageSizeBytes;
                            if (message.uploadTime != null && message.hasOwnProperty("uploadTime"))
                                object.uploadTime = $root.google.protobuf.Timestamp.toObject(message.uploadTime, options);
                            if (message.mediaType != null && message.hasOwnProperty("mediaType"))
                                object.mediaType = message.mediaType;
                            if (message.buildTime != null && message.hasOwnProperty("buildTime"))
                                object.buildTime = $root.google.protobuf.Timestamp.toObject(message.buildTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this DockerImage to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DockerImage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DockerImage
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.DockerImage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DockerImage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.DockerImage";
                        };
    
                        return DockerImage;
                    })();
    
                    v1.ListDockerImagesRequest = (function() {
    
                        /**
                         * Properties of a ListDockerImagesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListDockerImagesRequest
                         * @property {string|null} [parent] ListDockerImagesRequest parent
                         * @property {number|null} [pageSize] ListDockerImagesRequest pageSize
                         * @property {string|null} [pageToken] ListDockerImagesRequest pageToken
                         * @property {string|null} [orderBy] ListDockerImagesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListDockerImagesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListDockerImagesRequest.
                         * @implements IListDockerImagesRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListDockerImagesRequest=} [properties] Properties to set
                         */
                        function ListDockerImagesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListDockerImagesRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @instance
                         */
                        ListDockerImagesRequest.prototype.parent = "";
    
                        /**
                         * ListDockerImagesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @instance
                         */
                        ListDockerImagesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListDockerImagesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @instance
                         */
                        ListDockerImagesRequest.prototype.pageToken = "";
    
                        /**
                         * ListDockerImagesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @instance
                         */
                        ListDockerImagesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListDockerImagesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListDockerImagesRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListDockerImagesRequest} ListDockerImagesRequest instance
                         */
                        ListDockerImagesRequest.create = function create(properties) {
                            return new ListDockerImagesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListDockerImagesRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListDockerImagesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListDockerImagesRequest} message ListDockerImagesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDockerImagesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListDockerImagesRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListDockerImagesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListDockerImagesRequest} message ListDockerImagesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDockerImagesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListDockerImagesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListDockerImagesRequest} ListDockerImagesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDockerImagesRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListDockerImagesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListDockerImagesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListDockerImagesRequest} ListDockerImagesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDockerImagesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListDockerImagesRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListDockerImagesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListDockerImagesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListDockerImagesRequest} ListDockerImagesRequest
                         */
                        ListDockerImagesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListDockerImagesRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListDockerImagesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListDockerImagesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListDockerImagesRequest} message ListDockerImagesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListDockerImagesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListDockerImagesRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListDockerImagesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListDockerImagesRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListDockerImagesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListDockerImagesRequest";
                        };
    
                        return ListDockerImagesRequest;
                    })();
    
                    v1.ListDockerImagesResponse = (function() {
    
                        /**
                         * Properties of a ListDockerImagesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListDockerImagesResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.IDockerImage>|null} [dockerImages] ListDockerImagesResponse dockerImages
                         * @property {string|null} [nextPageToken] ListDockerImagesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListDockerImagesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListDockerImagesResponse.
                         * @implements IListDockerImagesResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListDockerImagesResponse=} [properties] Properties to set
                         */
                        function ListDockerImagesResponse(properties) {
                            this.dockerImages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListDockerImagesResponse dockerImages.
                         * @member {Array.<google.devtools.artifactregistry.v1.IDockerImage>} dockerImages
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesResponse
                         * @instance
                         */
                        ListDockerImagesResponse.prototype.dockerImages = $util.emptyArray;
    
                        /**
                         * ListDockerImagesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesResponse
                         * @instance
                         */
                        ListDockerImagesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListDockerImagesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListDockerImagesResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListDockerImagesResponse} ListDockerImagesResponse instance
                         */
                        ListDockerImagesResponse.create = function create(properties) {
                            return new ListDockerImagesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListDockerImagesResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListDockerImagesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListDockerImagesResponse} message ListDockerImagesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDockerImagesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dockerImages != null && message.dockerImages.length)
                                for (var i = 0; i < message.dockerImages.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.DockerImage.encode(message.dockerImages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListDockerImagesResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListDockerImagesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListDockerImagesResponse} message ListDockerImagesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDockerImagesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListDockerImagesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListDockerImagesResponse} ListDockerImagesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDockerImagesResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListDockerImagesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.dockerImages && message.dockerImages.length))
                                            message.dockerImages = [];
                                        message.dockerImages.push($root.google.devtools.artifactregistry.v1.DockerImage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListDockerImagesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListDockerImagesResponse} ListDockerImagesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDockerImagesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListDockerImagesResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListDockerImagesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dockerImages != null && message.hasOwnProperty("dockerImages")) {
                                if (!Array.isArray(message.dockerImages))
                                    return "dockerImages: array expected";
                                for (var i = 0; i < message.dockerImages.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.DockerImage.verify(message.dockerImages[i]);
                                    if (error)
                                        return "dockerImages." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListDockerImagesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListDockerImagesResponse} ListDockerImagesResponse
                         */
                        ListDockerImagesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListDockerImagesResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListDockerImagesResponse();
                            if (object.dockerImages) {
                                if (!Array.isArray(object.dockerImages))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ListDockerImagesResponse.dockerImages: array expected");
                                message.dockerImages = [];
                                for (var i = 0; i < object.dockerImages.length; ++i) {
                                    if (typeof object.dockerImages[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ListDockerImagesResponse.dockerImages: object expected");
                                    message.dockerImages[i] = $root.google.devtools.artifactregistry.v1.DockerImage.fromObject(object.dockerImages[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListDockerImagesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListDockerImagesResponse} message ListDockerImagesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListDockerImagesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.dockerImages = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.dockerImages && message.dockerImages.length) {
                                object.dockerImages = [];
                                for (var j = 0; j < message.dockerImages.length; ++j)
                                    object.dockerImages[j] = $root.google.devtools.artifactregistry.v1.DockerImage.toObject(message.dockerImages[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListDockerImagesResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListDockerImagesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListDockerImagesResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListDockerImagesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListDockerImagesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListDockerImagesResponse";
                        };
    
                        return ListDockerImagesResponse;
                    })();
    
                    v1.GetDockerImageRequest = (function() {
    
                        /**
                         * Properties of a GetDockerImageRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetDockerImageRequest
                         * @property {string|null} [name] GetDockerImageRequest name
                         */
    
                        /**
                         * Constructs a new GetDockerImageRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetDockerImageRequest.
                         * @implements IGetDockerImageRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetDockerImageRequest=} [properties] Properties to set
                         */
                        function GetDockerImageRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetDockerImageRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetDockerImageRequest
                         * @instance
                         */
                        GetDockerImageRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetDockerImageRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetDockerImageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetDockerImageRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetDockerImageRequest} GetDockerImageRequest instance
                         */
                        GetDockerImageRequest.create = function create(properties) {
                            return new GetDockerImageRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetDockerImageRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetDockerImageRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetDockerImageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetDockerImageRequest} message GetDockerImageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetDockerImageRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetDockerImageRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetDockerImageRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetDockerImageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetDockerImageRequest} message GetDockerImageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetDockerImageRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetDockerImageRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetDockerImageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetDockerImageRequest} GetDockerImageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetDockerImageRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetDockerImageRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetDockerImageRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetDockerImageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetDockerImageRequest} GetDockerImageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetDockerImageRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetDockerImageRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetDockerImageRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetDockerImageRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetDockerImageRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetDockerImageRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetDockerImageRequest} GetDockerImageRequest
                         */
                        GetDockerImageRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetDockerImageRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetDockerImageRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetDockerImageRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetDockerImageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetDockerImageRequest} message GetDockerImageRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetDockerImageRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetDockerImageRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetDockerImageRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetDockerImageRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetDockerImageRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetDockerImageRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetDockerImageRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetDockerImageRequest";
                        };
    
                        return GetDockerImageRequest;
                    })();
    
                    v1.MavenArtifact = (function() {
    
                        /**
                         * Properties of a MavenArtifact.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IMavenArtifact
                         * @property {string|null} [name] MavenArtifact name
                         * @property {string|null} [pomUri] MavenArtifact pomUri
                         * @property {string|null} [groupId] MavenArtifact groupId
                         * @property {string|null} [artifactId] MavenArtifact artifactId
                         * @property {string|null} [version] MavenArtifact version
                         * @property {google.protobuf.ITimestamp|null} [createTime] MavenArtifact createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] MavenArtifact updateTime
                         */
    
                        /**
                         * Constructs a new MavenArtifact.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a MavenArtifact.
                         * @implements IMavenArtifact
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IMavenArtifact=} [properties] Properties to set
                         */
                        function MavenArtifact(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MavenArtifact name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @instance
                         */
                        MavenArtifact.prototype.name = "";
    
                        /**
                         * MavenArtifact pomUri.
                         * @member {string} pomUri
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @instance
                         */
                        MavenArtifact.prototype.pomUri = "";
    
                        /**
                         * MavenArtifact groupId.
                         * @member {string} groupId
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @instance
                         */
                        MavenArtifact.prototype.groupId = "";
    
                        /**
                         * MavenArtifact artifactId.
                         * @member {string} artifactId
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @instance
                         */
                        MavenArtifact.prototype.artifactId = "";
    
                        /**
                         * MavenArtifact version.
                         * @member {string} version
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @instance
                         */
                        MavenArtifact.prototype.version = "";
    
                        /**
                         * MavenArtifact createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @instance
                         */
                        MavenArtifact.prototype.createTime = null;
    
                        /**
                         * MavenArtifact updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @instance
                         */
                        MavenArtifact.prototype.updateTime = null;
    
                        /**
                         * Creates a new MavenArtifact instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IMavenArtifact=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.MavenArtifact} MavenArtifact instance
                         */
                        MavenArtifact.create = function create(properties) {
                            return new MavenArtifact(properties);
                        };
    
                        /**
                         * Encodes the specified MavenArtifact message. Does not implicitly {@link google.devtools.artifactregistry.v1.MavenArtifact.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IMavenArtifact} message MavenArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MavenArtifact.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.pomUri != null && Object.hasOwnProperty.call(message, "pomUri"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.pomUri);
                            if (message.groupId != null && Object.hasOwnProperty.call(message, "groupId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.groupId);
                            if (message.artifactId != null && Object.hasOwnProperty.call(message, "artifactId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.artifactId);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.version);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MavenArtifact message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.MavenArtifact.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IMavenArtifact} message MavenArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MavenArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MavenArtifact message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.MavenArtifact} MavenArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MavenArtifact.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.MavenArtifact();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pomUri = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.groupId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.artifactId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MavenArtifact message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.MavenArtifact} MavenArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MavenArtifact.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MavenArtifact message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MavenArtifact.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.pomUri != null && message.hasOwnProperty("pomUri"))
                                if (!$util.isString(message.pomUri))
                                    return "pomUri: string expected";
                            if (message.groupId != null && message.hasOwnProperty("groupId"))
                                if (!$util.isString(message.groupId))
                                    return "groupId: string expected";
                            if (message.artifactId != null && message.hasOwnProperty("artifactId"))
                                if (!$util.isString(message.artifactId))
                                    return "artifactId: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MavenArtifact message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.MavenArtifact} MavenArtifact
                         */
                        MavenArtifact.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.MavenArtifact)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.MavenArtifact();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.pomUri != null)
                                message.pomUri = String(object.pomUri);
                            if (object.groupId != null)
                                message.groupId = String(object.groupId);
                            if (object.artifactId != null)
                                message.artifactId = String(object.artifactId);
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.MavenArtifact.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.MavenArtifact.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MavenArtifact message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.MavenArtifact} message MavenArtifact
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MavenArtifact.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.pomUri = "";
                                object.groupId = "";
                                object.artifactId = "";
                                object.version = "";
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.pomUri != null && message.hasOwnProperty("pomUri"))
                                object.pomUri = message.pomUri;
                            if (message.groupId != null && message.hasOwnProperty("groupId"))
                                object.groupId = message.groupId;
                            if (message.artifactId != null && message.hasOwnProperty("artifactId"))
                                object.artifactId = message.artifactId;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this MavenArtifact to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MavenArtifact.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MavenArtifact
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.MavenArtifact
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MavenArtifact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.MavenArtifact";
                        };
    
                        return MavenArtifact;
                    })();
    
                    v1.ListMavenArtifactsRequest = (function() {
    
                        /**
                         * Properties of a ListMavenArtifactsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListMavenArtifactsRequest
                         * @property {string|null} [parent] ListMavenArtifactsRequest parent
                         * @property {number|null} [pageSize] ListMavenArtifactsRequest pageSize
                         * @property {string|null} [pageToken] ListMavenArtifactsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListMavenArtifactsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListMavenArtifactsRequest.
                         * @implements IListMavenArtifactsRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListMavenArtifactsRequest=} [properties] Properties to set
                         */
                        function ListMavenArtifactsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMavenArtifactsRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @instance
                         */
                        ListMavenArtifactsRequest.prototype.parent = "";
    
                        /**
                         * ListMavenArtifactsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @instance
                         */
                        ListMavenArtifactsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListMavenArtifactsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @instance
                         */
                        ListMavenArtifactsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListMavenArtifactsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListMavenArtifactsRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListMavenArtifactsRequest} ListMavenArtifactsRequest instance
                         */
                        ListMavenArtifactsRequest.create = function create(properties) {
                            return new ListMavenArtifactsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListMavenArtifactsRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListMavenArtifactsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListMavenArtifactsRequest} message ListMavenArtifactsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMavenArtifactsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMavenArtifactsRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListMavenArtifactsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListMavenArtifactsRequest} message ListMavenArtifactsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMavenArtifactsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMavenArtifactsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListMavenArtifactsRequest} ListMavenArtifactsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMavenArtifactsRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListMavenArtifactsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMavenArtifactsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListMavenArtifactsRequest} ListMavenArtifactsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMavenArtifactsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMavenArtifactsRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMavenArtifactsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListMavenArtifactsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListMavenArtifactsRequest} ListMavenArtifactsRequest
                         */
                        ListMavenArtifactsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListMavenArtifactsRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListMavenArtifactsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMavenArtifactsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListMavenArtifactsRequest} message ListMavenArtifactsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMavenArtifactsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListMavenArtifactsRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMavenArtifactsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListMavenArtifactsRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListMavenArtifactsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListMavenArtifactsRequest";
                        };
    
                        return ListMavenArtifactsRequest;
                    })();
    
                    v1.ListMavenArtifactsResponse = (function() {
    
                        /**
                         * Properties of a ListMavenArtifactsResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListMavenArtifactsResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.IMavenArtifact>|null} [mavenArtifacts] ListMavenArtifactsResponse mavenArtifacts
                         * @property {string|null} [nextPageToken] ListMavenArtifactsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListMavenArtifactsResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListMavenArtifactsResponse.
                         * @implements IListMavenArtifactsResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListMavenArtifactsResponse=} [properties] Properties to set
                         */
                        function ListMavenArtifactsResponse(properties) {
                            this.mavenArtifacts = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMavenArtifactsResponse mavenArtifacts.
                         * @member {Array.<google.devtools.artifactregistry.v1.IMavenArtifact>} mavenArtifacts
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsResponse
                         * @instance
                         */
                        ListMavenArtifactsResponse.prototype.mavenArtifacts = $util.emptyArray;
    
                        /**
                         * ListMavenArtifactsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsResponse
                         * @instance
                         */
                        ListMavenArtifactsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListMavenArtifactsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListMavenArtifactsResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListMavenArtifactsResponse} ListMavenArtifactsResponse instance
                         */
                        ListMavenArtifactsResponse.create = function create(properties) {
                            return new ListMavenArtifactsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListMavenArtifactsResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListMavenArtifactsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListMavenArtifactsResponse} message ListMavenArtifactsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMavenArtifactsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mavenArtifacts != null && message.mavenArtifacts.length)
                                for (var i = 0; i < message.mavenArtifacts.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.MavenArtifact.encode(message.mavenArtifacts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMavenArtifactsResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListMavenArtifactsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListMavenArtifactsResponse} message ListMavenArtifactsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMavenArtifactsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMavenArtifactsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListMavenArtifactsResponse} ListMavenArtifactsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMavenArtifactsResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListMavenArtifactsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.mavenArtifacts && message.mavenArtifacts.length))
                                            message.mavenArtifacts = [];
                                        message.mavenArtifacts.push($root.google.devtools.artifactregistry.v1.MavenArtifact.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMavenArtifactsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListMavenArtifactsResponse} ListMavenArtifactsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMavenArtifactsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMavenArtifactsResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMavenArtifactsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mavenArtifacts != null && message.hasOwnProperty("mavenArtifacts")) {
                                if (!Array.isArray(message.mavenArtifacts))
                                    return "mavenArtifacts: array expected";
                                for (var i = 0; i < message.mavenArtifacts.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.MavenArtifact.verify(message.mavenArtifacts[i]);
                                    if (error)
                                        return "mavenArtifacts." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListMavenArtifactsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListMavenArtifactsResponse} ListMavenArtifactsResponse
                         */
                        ListMavenArtifactsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListMavenArtifactsResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListMavenArtifactsResponse();
                            if (object.mavenArtifacts) {
                                if (!Array.isArray(object.mavenArtifacts))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ListMavenArtifactsResponse.mavenArtifacts: array expected");
                                message.mavenArtifacts = [];
                                for (var i = 0; i < object.mavenArtifacts.length; ++i) {
                                    if (typeof object.mavenArtifacts[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ListMavenArtifactsResponse.mavenArtifacts: object expected");
                                    message.mavenArtifacts[i] = $root.google.devtools.artifactregistry.v1.MavenArtifact.fromObject(object.mavenArtifacts[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMavenArtifactsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListMavenArtifactsResponse} message ListMavenArtifactsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMavenArtifactsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.mavenArtifacts = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.mavenArtifacts && message.mavenArtifacts.length) {
                                object.mavenArtifacts = [];
                                for (var j = 0; j < message.mavenArtifacts.length; ++j)
                                    object.mavenArtifacts[j] = $root.google.devtools.artifactregistry.v1.MavenArtifact.toObject(message.mavenArtifacts[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListMavenArtifactsResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMavenArtifactsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListMavenArtifactsResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListMavenArtifactsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListMavenArtifactsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListMavenArtifactsResponse";
                        };
    
                        return ListMavenArtifactsResponse;
                    })();
    
                    v1.GetMavenArtifactRequest = (function() {
    
                        /**
                         * Properties of a GetMavenArtifactRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetMavenArtifactRequest
                         * @property {string|null} [name] GetMavenArtifactRequest name
                         */
    
                        /**
                         * Constructs a new GetMavenArtifactRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetMavenArtifactRequest.
                         * @implements IGetMavenArtifactRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetMavenArtifactRequest=} [properties] Properties to set
                         */
                        function GetMavenArtifactRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetMavenArtifactRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetMavenArtifactRequest
                         * @instance
                         */
                        GetMavenArtifactRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetMavenArtifactRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetMavenArtifactRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetMavenArtifactRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetMavenArtifactRequest} GetMavenArtifactRequest instance
                         */
                        GetMavenArtifactRequest.create = function create(properties) {
                            return new GetMavenArtifactRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetMavenArtifactRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetMavenArtifactRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetMavenArtifactRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetMavenArtifactRequest} message GetMavenArtifactRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMavenArtifactRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetMavenArtifactRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetMavenArtifactRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetMavenArtifactRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetMavenArtifactRequest} message GetMavenArtifactRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMavenArtifactRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetMavenArtifactRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetMavenArtifactRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetMavenArtifactRequest} GetMavenArtifactRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMavenArtifactRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetMavenArtifactRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetMavenArtifactRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetMavenArtifactRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetMavenArtifactRequest} GetMavenArtifactRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMavenArtifactRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetMavenArtifactRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetMavenArtifactRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetMavenArtifactRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetMavenArtifactRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetMavenArtifactRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetMavenArtifactRequest} GetMavenArtifactRequest
                         */
                        GetMavenArtifactRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetMavenArtifactRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetMavenArtifactRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetMavenArtifactRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetMavenArtifactRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetMavenArtifactRequest} message GetMavenArtifactRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetMavenArtifactRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetMavenArtifactRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetMavenArtifactRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetMavenArtifactRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetMavenArtifactRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetMavenArtifactRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetMavenArtifactRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetMavenArtifactRequest";
                        };
    
                        return GetMavenArtifactRequest;
                    })();
    
                    v1.NpmPackage = (function() {
    
                        /**
                         * Properties of a NpmPackage.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface INpmPackage
                         * @property {string|null} [name] NpmPackage name
                         * @property {string|null} [packageName] NpmPackage packageName
                         * @property {string|null} [version] NpmPackage version
                         * @property {Array.<string>|null} [tags] NpmPackage tags
                         * @property {google.protobuf.ITimestamp|null} [createTime] NpmPackage createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] NpmPackage updateTime
                         */
    
                        /**
                         * Constructs a new NpmPackage.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a NpmPackage.
                         * @implements INpmPackage
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.INpmPackage=} [properties] Properties to set
                         */
                        function NpmPackage(properties) {
                            this.tags = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NpmPackage name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @instance
                         */
                        NpmPackage.prototype.name = "";
    
                        /**
                         * NpmPackage packageName.
                         * @member {string} packageName
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @instance
                         */
                        NpmPackage.prototype.packageName = "";
    
                        /**
                         * NpmPackage version.
                         * @member {string} version
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @instance
                         */
                        NpmPackage.prototype.version = "";
    
                        /**
                         * NpmPackage tags.
                         * @member {Array.<string>} tags
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @instance
                         */
                        NpmPackage.prototype.tags = $util.emptyArray;
    
                        /**
                         * NpmPackage createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @instance
                         */
                        NpmPackage.prototype.createTime = null;
    
                        /**
                         * NpmPackage updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @instance
                         */
                        NpmPackage.prototype.updateTime = null;
    
                        /**
                         * Creates a new NpmPackage instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @static
                         * @param {google.devtools.artifactregistry.v1.INpmPackage=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.NpmPackage} NpmPackage instance
                         */
                        NpmPackage.create = function create(properties) {
                            return new NpmPackage(properties);
                        };
    
                        /**
                         * Encodes the specified NpmPackage message. Does not implicitly {@link google.devtools.artifactregistry.v1.NpmPackage.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @static
                         * @param {google.devtools.artifactregistry.v1.INpmPackage} message NpmPackage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NpmPackage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.packageName != null && Object.hasOwnProperty.call(message, "packageName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.packageName);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.version);
                            if (message.tags != null && message.tags.length)
                                for (var i = 0; i < message.tags.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.tags[i]);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NpmPackage message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.NpmPackage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @static
                         * @param {google.devtools.artifactregistry.v1.INpmPackage} message NpmPackage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NpmPackage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NpmPackage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.NpmPackage} NpmPackage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NpmPackage.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.NpmPackage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.packageName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.tags && message.tags.length))
                                            message.tags = [];
                                        message.tags.push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NpmPackage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.NpmPackage} NpmPackage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NpmPackage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NpmPackage message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NpmPackage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.packageName != null && message.hasOwnProperty("packageName"))
                                if (!$util.isString(message.packageName))
                                    return "packageName: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.tags != null && message.hasOwnProperty("tags")) {
                                if (!Array.isArray(message.tags))
                                    return "tags: array expected";
                                for (var i = 0; i < message.tags.length; ++i)
                                    if (!$util.isString(message.tags[i]))
                                        return "tags: string[] expected";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a NpmPackage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.NpmPackage} NpmPackage
                         */
                        NpmPackage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.NpmPackage)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.NpmPackage();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.packageName != null)
                                message.packageName = String(object.packageName);
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.tags) {
                                if (!Array.isArray(object.tags))
                                    throw TypeError(".google.devtools.artifactregistry.v1.NpmPackage.tags: array expected");
                                message.tags = [];
                                for (var i = 0; i < object.tags.length; ++i)
                                    message.tags[i] = String(object.tags[i]);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.NpmPackage.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.NpmPackage.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NpmPackage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @static
                         * @param {google.devtools.artifactregistry.v1.NpmPackage} message NpmPackage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NpmPackage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tags = [];
                            if (options.defaults) {
                                object.name = "";
                                object.packageName = "";
                                object.version = "";
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.packageName != null && message.hasOwnProperty("packageName"))
                                object.packageName = message.packageName;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.tags && message.tags.length) {
                                object.tags = [];
                                for (var j = 0; j < message.tags.length; ++j)
                                    object.tags[j] = message.tags[j];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this NpmPackage to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NpmPackage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NpmPackage
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.NpmPackage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NpmPackage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.NpmPackage";
                        };
    
                        return NpmPackage;
                    })();
    
                    v1.ListNpmPackagesRequest = (function() {
    
                        /**
                         * Properties of a ListNpmPackagesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListNpmPackagesRequest
                         * @property {string|null} [parent] ListNpmPackagesRequest parent
                         * @property {number|null} [pageSize] ListNpmPackagesRequest pageSize
                         * @property {string|null} [pageToken] ListNpmPackagesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListNpmPackagesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListNpmPackagesRequest.
                         * @implements IListNpmPackagesRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListNpmPackagesRequest=} [properties] Properties to set
                         */
                        function ListNpmPackagesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListNpmPackagesRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @instance
                         */
                        ListNpmPackagesRequest.prototype.parent = "";
    
                        /**
                         * ListNpmPackagesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @instance
                         */
                        ListNpmPackagesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListNpmPackagesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @instance
                         */
                        ListNpmPackagesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListNpmPackagesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListNpmPackagesRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListNpmPackagesRequest} ListNpmPackagesRequest instance
                         */
                        ListNpmPackagesRequest.create = function create(properties) {
                            return new ListNpmPackagesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListNpmPackagesRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListNpmPackagesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListNpmPackagesRequest} message ListNpmPackagesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListNpmPackagesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListNpmPackagesRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListNpmPackagesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListNpmPackagesRequest} message ListNpmPackagesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListNpmPackagesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListNpmPackagesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListNpmPackagesRequest} ListNpmPackagesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListNpmPackagesRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListNpmPackagesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListNpmPackagesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListNpmPackagesRequest} ListNpmPackagesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListNpmPackagesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListNpmPackagesRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListNpmPackagesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListNpmPackagesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListNpmPackagesRequest} ListNpmPackagesRequest
                         */
                        ListNpmPackagesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListNpmPackagesRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListNpmPackagesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListNpmPackagesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListNpmPackagesRequest} message ListNpmPackagesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListNpmPackagesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListNpmPackagesRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListNpmPackagesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListNpmPackagesRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListNpmPackagesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListNpmPackagesRequest";
                        };
    
                        return ListNpmPackagesRequest;
                    })();
    
                    v1.ListNpmPackagesResponse = (function() {
    
                        /**
                         * Properties of a ListNpmPackagesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListNpmPackagesResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.INpmPackage>|null} [npmPackages] ListNpmPackagesResponse npmPackages
                         * @property {string|null} [nextPageToken] ListNpmPackagesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListNpmPackagesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListNpmPackagesResponse.
                         * @implements IListNpmPackagesResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListNpmPackagesResponse=} [properties] Properties to set
                         */
                        function ListNpmPackagesResponse(properties) {
                            this.npmPackages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListNpmPackagesResponse npmPackages.
                         * @member {Array.<google.devtools.artifactregistry.v1.INpmPackage>} npmPackages
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesResponse
                         * @instance
                         */
                        ListNpmPackagesResponse.prototype.npmPackages = $util.emptyArray;
    
                        /**
                         * ListNpmPackagesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesResponse
                         * @instance
                         */
                        ListNpmPackagesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListNpmPackagesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListNpmPackagesResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListNpmPackagesResponse} ListNpmPackagesResponse instance
                         */
                        ListNpmPackagesResponse.create = function create(properties) {
                            return new ListNpmPackagesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListNpmPackagesResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListNpmPackagesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListNpmPackagesResponse} message ListNpmPackagesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListNpmPackagesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.npmPackages != null && message.npmPackages.length)
                                for (var i = 0; i < message.npmPackages.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.NpmPackage.encode(message.npmPackages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListNpmPackagesResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListNpmPackagesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListNpmPackagesResponse} message ListNpmPackagesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListNpmPackagesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListNpmPackagesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListNpmPackagesResponse} ListNpmPackagesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListNpmPackagesResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListNpmPackagesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.npmPackages && message.npmPackages.length))
                                            message.npmPackages = [];
                                        message.npmPackages.push($root.google.devtools.artifactregistry.v1.NpmPackage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListNpmPackagesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListNpmPackagesResponse} ListNpmPackagesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListNpmPackagesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListNpmPackagesResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListNpmPackagesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.npmPackages != null && message.hasOwnProperty("npmPackages")) {
                                if (!Array.isArray(message.npmPackages))
                                    return "npmPackages: array expected";
                                for (var i = 0; i < message.npmPackages.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.NpmPackage.verify(message.npmPackages[i]);
                                    if (error)
                                        return "npmPackages." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListNpmPackagesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListNpmPackagesResponse} ListNpmPackagesResponse
                         */
                        ListNpmPackagesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListNpmPackagesResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListNpmPackagesResponse();
                            if (object.npmPackages) {
                                if (!Array.isArray(object.npmPackages))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ListNpmPackagesResponse.npmPackages: array expected");
                                message.npmPackages = [];
                                for (var i = 0; i < object.npmPackages.length; ++i) {
                                    if (typeof object.npmPackages[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ListNpmPackagesResponse.npmPackages: object expected");
                                    message.npmPackages[i] = $root.google.devtools.artifactregistry.v1.NpmPackage.fromObject(object.npmPackages[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListNpmPackagesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListNpmPackagesResponse} message ListNpmPackagesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListNpmPackagesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.npmPackages = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.npmPackages && message.npmPackages.length) {
                                object.npmPackages = [];
                                for (var j = 0; j < message.npmPackages.length; ++j)
                                    object.npmPackages[j] = $root.google.devtools.artifactregistry.v1.NpmPackage.toObject(message.npmPackages[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListNpmPackagesResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListNpmPackagesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListNpmPackagesResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListNpmPackagesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListNpmPackagesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListNpmPackagesResponse";
                        };
    
                        return ListNpmPackagesResponse;
                    })();
    
                    v1.GetNpmPackageRequest = (function() {
    
                        /**
                         * Properties of a GetNpmPackageRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetNpmPackageRequest
                         * @property {string|null} [name] GetNpmPackageRequest name
                         */
    
                        /**
                         * Constructs a new GetNpmPackageRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetNpmPackageRequest.
                         * @implements IGetNpmPackageRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetNpmPackageRequest=} [properties] Properties to set
                         */
                        function GetNpmPackageRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetNpmPackageRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetNpmPackageRequest
                         * @instance
                         */
                        GetNpmPackageRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetNpmPackageRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetNpmPackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetNpmPackageRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetNpmPackageRequest} GetNpmPackageRequest instance
                         */
                        GetNpmPackageRequest.create = function create(properties) {
                            return new GetNpmPackageRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetNpmPackageRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetNpmPackageRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetNpmPackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetNpmPackageRequest} message GetNpmPackageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetNpmPackageRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetNpmPackageRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetNpmPackageRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetNpmPackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetNpmPackageRequest} message GetNpmPackageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetNpmPackageRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetNpmPackageRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetNpmPackageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetNpmPackageRequest} GetNpmPackageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetNpmPackageRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetNpmPackageRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetNpmPackageRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetNpmPackageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetNpmPackageRequest} GetNpmPackageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetNpmPackageRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetNpmPackageRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetNpmPackageRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetNpmPackageRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetNpmPackageRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetNpmPackageRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetNpmPackageRequest} GetNpmPackageRequest
                         */
                        GetNpmPackageRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetNpmPackageRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetNpmPackageRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetNpmPackageRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetNpmPackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetNpmPackageRequest} message GetNpmPackageRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetNpmPackageRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetNpmPackageRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetNpmPackageRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetNpmPackageRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetNpmPackageRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetNpmPackageRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetNpmPackageRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetNpmPackageRequest";
                        };
    
                        return GetNpmPackageRequest;
                    })();
    
                    v1.PythonPackage = (function() {
    
                        /**
                         * Properties of a PythonPackage.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IPythonPackage
                         * @property {string|null} [name] PythonPackage name
                         * @property {string|null} [uri] PythonPackage uri
                         * @property {string|null} [packageName] PythonPackage packageName
                         * @property {string|null} [version] PythonPackage version
                         * @property {google.protobuf.ITimestamp|null} [createTime] PythonPackage createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] PythonPackage updateTime
                         */
    
                        /**
                         * Constructs a new PythonPackage.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a PythonPackage.
                         * @implements IPythonPackage
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IPythonPackage=} [properties] Properties to set
                         */
                        function PythonPackage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PythonPackage name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @instance
                         */
                        PythonPackage.prototype.name = "";
    
                        /**
                         * PythonPackage uri.
                         * @member {string} uri
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @instance
                         */
                        PythonPackage.prototype.uri = "";
    
                        /**
                         * PythonPackage packageName.
                         * @member {string} packageName
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @instance
                         */
                        PythonPackage.prototype.packageName = "";
    
                        /**
                         * PythonPackage version.
                         * @member {string} version
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @instance
                         */
                        PythonPackage.prototype.version = "";
    
                        /**
                         * PythonPackage createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @instance
                         */
                        PythonPackage.prototype.createTime = null;
    
                        /**
                         * PythonPackage updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @instance
                         */
                        PythonPackage.prototype.updateTime = null;
    
                        /**
                         * Creates a new PythonPackage instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IPythonPackage=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.PythonPackage} PythonPackage instance
                         */
                        PythonPackage.create = function create(properties) {
                            return new PythonPackage(properties);
                        };
    
                        /**
                         * Encodes the specified PythonPackage message. Does not implicitly {@link google.devtools.artifactregistry.v1.PythonPackage.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IPythonPackage} message PythonPackage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PythonPackage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uri);
                            if (message.packageName != null && Object.hasOwnProperty.call(message, "packageName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.packageName);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.version);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PythonPackage message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.PythonPackage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IPythonPackage} message PythonPackage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PythonPackage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PythonPackage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.PythonPackage} PythonPackage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PythonPackage.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.PythonPackage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.packageName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PythonPackage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.PythonPackage} PythonPackage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PythonPackage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PythonPackage message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PythonPackage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.packageName != null && message.hasOwnProperty("packageName"))
                                if (!$util.isString(message.packageName))
                                    return "packageName: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PythonPackage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.PythonPackage} PythonPackage
                         */
                        PythonPackage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.PythonPackage)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.PythonPackage();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.packageName != null)
                                message.packageName = String(object.packageName);
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.PythonPackage.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.PythonPackage.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PythonPackage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @static
                         * @param {google.devtools.artifactregistry.v1.PythonPackage} message PythonPackage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PythonPackage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.uri = "";
                                object.packageName = "";
                                object.version = "";
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.packageName != null && message.hasOwnProperty("packageName"))
                                object.packageName = message.packageName;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this PythonPackage to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PythonPackage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PythonPackage
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.PythonPackage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PythonPackage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.PythonPackage";
                        };
    
                        return PythonPackage;
                    })();
    
                    v1.ListPythonPackagesRequest = (function() {
    
                        /**
                         * Properties of a ListPythonPackagesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListPythonPackagesRequest
                         * @property {string|null} [parent] ListPythonPackagesRequest parent
                         * @property {number|null} [pageSize] ListPythonPackagesRequest pageSize
                         * @property {string|null} [pageToken] ListPythonPackagesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListPythonPackagesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListPythonPackagesRequest.
                         * @implements IListPythonPackagesRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListPythonPackagesRequest=} [properties] Properties to set
                         */
                        function ListPythonPackagesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPythonPackagesRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @instance
                         */
                        ListPythonPackagesRequest.prototype.parent = "";
    
                        /**
                         * ListPythonPackagesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @instance
                         */
                        ListPythonPackagesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListPythonPackagesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @instance
                         */
                        ListPythonPackagesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListPythonPackagesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListPythonPackagesRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListPythonPackagesRequest} ListPythonPackagesRequest instance
                         */
                        ListPythonPackagesRequest.create = function create(properties) {
                            return new ListPythonPackagesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListPythonPackagesRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListPythonPackagesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListPythonPackagesRequest} message ListPythonPackagesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPythonPackagesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPythonPackagesRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListPythonPackagesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListPythonPackagesRequest} message ListPythonPackagesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPythonPackagesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPythonPackagesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListPythonPackagesRequest} ListPythonPackagesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPythonPackagesRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListPythonPackagesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPythonPackagesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListPythonPackagesRequest} ListPythonPackagesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPythonPackagesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPythonPackagesRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPythonPackagesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPythonPackagesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListPythonPackagesRequest} ListPythonPackagesRequest
                         */
                        ListPythonPackagesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListPythonPackagesRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListPythonPackagesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPythonPackagesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListPythonPackagesRequest} message ListPythonPackagesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPythonPackagesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListPythonPackagesRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPythonPackagesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPythonPackagesRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPythonPackagesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListPythonPackagesRequest";
                        };
    
                        return ListPythonPackagesRequest;
                    })();
    
                    v1.ListPythonPackagesResponse = (function() {
    
                        /**
                         * Properties of a ListPythonPackagesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListPythonPackagesResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.IPythonPackage>|null} [pythonPackages] ListPythonPackagesResponse pythonPackages
                         * @property {string|null} [nextPageToken] ListPythonPackagesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListPythonPackagesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListPythonPackagesResponse.
                         * @implements IListPythonPackagesResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListPythonPackagesResponse=} [properties] Properties to set
                         */
                        function ListPythonPackagesResponse(properties) {
                            this.pythonPackages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPythonPackagesResponse pythonPackages.
                         * @member {Array.<google.devtools.artifactregistry.v1.IPythonPackage>} pythonPackages
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesResponse
                         * @instance
                         */
                        ListPythonPackagesResponse.prototype.pythonPackages = $util.emptyArray;
    
                        /**
                         * ListPythonPackagesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesResponse
                         * @instance
                         */
                        ListPythonPackagesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListPythonPackagesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListPythonPackagesResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListPythonPackagesResponse} ListPythonPackagesResponse instance
                         */
                        ListPythonPackagesResponse.create = function create(properties) {
                            return new ListPythonPackagesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListPythonPackagesResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListPythonPackagesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListPythonPackagesResponse} message ListPythonPackagesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPythonPackagesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.pythonPackages != null && message.pythonPackages.length)
                                for (var i = 0; i < message.pythonPackages.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.PythonPackage.encode(message.pythonPackages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPythonPackagesResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListPythonPackagesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListPythonPackagesResponse} message ListPythonPackagesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPythonPackagesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPythonPackagesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListPythonPackagesResponse} ListPythonPackagesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPythonPackagesResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListPythonPackagesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.pythonPackages && message.pythonPackages.length))
                                            message.pythonPackages = [];
                                        message.pythonPackages.push($root.google.devtools.artifactregistry.v1.PythonPackage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPythonPackagesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListPythonPackagesResponse} ListPythonPackagesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPythonPackagesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPythonPackagesResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPythonPackagesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.pythonPackages != null && message.hasOwnProperty("pythonPackages")) {
                                if (!Array.isArray(message.pythonPackages))
                                    return "pythonPackages: array expected";
                                for (var i = 0; i < message.pythonPackages.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.PythonPackage.verify(message.pythonPackages[i]);
                                    if (error)
                                        return "pythonPackages." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPythonPackagesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListPythonPackagesResponse} ListPythonPackagesResponse
                         */
                        ListPythonPackagesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListPythonPackagesResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListPythonPackagesResponse();
                            if (object.pythonPackages) {
                                if (!Array.isArray(object.pythonPackages))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ListPythonPackagesResponse.pythonPackages: array expected");
                                message.pythonPackages = [];
                                for (var i = 0; i < object.pythonPackages.length; ++i) {
                                    if (typeof object.pythonPackages[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ListPythonPackagesResponse.pythonPackages: object expected");
                                    message.pythonPackages[i] = $root.google.devtools.artifactregistry.v1.PythonPackage.fromObject(object.pythonPackages[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPythonPackagesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListPythonPackagesResponse} message ListPythonPackagesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPythonPackagesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.pythonPackages = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.pythonPackages && message.pythonPackages.length) {
                                object.pythonPackages = [];
                                for (var j = 0; j < message.pythonPackages.length; ++j)
                                    object.pythonPackages[j] = $root.google.devtools.artifactregistry.v1.PythonPackage.toObject(message.pythonPackages[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListPythonPackagesResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPythonPackagesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPythonPackagesResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListPythonPackagesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPythonPackagesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListPythonPackagesResponse";
                        };
    
                        return ListPythonPackagesResponse;
                    })();
    
                    v1.GetPythonPackageRequest = (function() {
    
                        /**
                         * Properties of a GetPythonPackageRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetPythonPackageRequest
                         * @property {string|null} [name] GetPythonPackageRequest name
                         */
    
                        /**
                         * Constructs a new GetPythonPackageRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetPythonPackageRequest.
                         * @implements IGetPythonPackageRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetPythonPackageRequest=} [properties] Properties to set
                         */
                        function GetPythonPackageRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetPythonPackageRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetPythonPackageRequest
                         * @instance
                         */
                        GetPythonPackageRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetPythonPackageRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetPythonPackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetPythonPackageRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetPythonPackageRequest} GetPythonPackageRequest instance
                         */
                        GetPythonPackageRequest.create = function create(properties) {
                            return new GetPythonPackageRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetPythonPackageRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetPythonPackageRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetPythonPackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetPythonPackageRequest} message GetPythonPackageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPythonPackageRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetPythonPackageRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetPythonPackageRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetPythonPackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetPythonPackageRequest} message GetPythonPackageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPythonPackageRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetPythonPackageRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetPythonPackageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetPythonPackageRequest} GetPythonPackageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPythonPackageRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetPythonPackageRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetPythonPackageRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetPythonPackageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetPythonPackageRequest} GetPythonPackageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPythonPackageRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetPythonPackageRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetPythonPackageRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetPythonPackageRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetPythonPackageRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetPythonPackageRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetPythonPackageRequest} GetPythonPackageRequest
                         */
                        GetPythonPackageRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetPythonPackageRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetPythonPackageRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetPythonPackageRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetPythonPackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetPythonPackageRequest} message GetPythonPackageRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetPythonPackageRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetPythonPackageRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetPythonPackageRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetPythonPackageRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetPythonPackageRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetPythonPackageRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetPythonPackageRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetPythonPackageRequest";
                        };
    
                        return GetPythonPackageRequest;
                    })();
    
                    v1.Attachment = (function() {
    
                        /**
                         * Properties of an Attachment.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IAttachment
                         * @property {string|null} [name] Attachment name
                         * @property {string|null} [target] Attachment target
                         * @property {string|null} [type] Attachment type
                         * @property {string|null} [attachmentNamespace] Attachment attachmentNamespace
                         * @property {Object.<string,string>|null} [annotations] Attachment annotations
                         * @property {google.protobuf.ITimestamp|null} [createTime] Attachment createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Attachment updateTime
                         * @property {Array.<string>|null} [files] Attachment files
                         * @property {string|null} [ociVersionName] Attachment ociVersionName
                         */
    
                        /**
                         * Constructs a new Attachment.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an Attachment.
                         * @implements IAttachment
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IAttachment=} [properties] Properties to set
                         */
                        function Attachment(properties) {
                            this.annotations = {};
                            this.files = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Attachment name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @instance
                         */
                        Attachment.prototype.name = "";
    
                        /**
                         * Attachment target.
                         * @member {string} target
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @instance
                         */
                        Attachment.prototype.target = "";
    
                        /**
                         * Attachment type.
                         * @member {string} type
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @instance
                         */
                        Attachment.prototype.type = "";
    
                        /**
                         * Attachment attachmentNamespace.
                         * @member {string} attachmentNamespace
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @instance
                         */
                        Attachment.prototype.attachmentNamespace = "";
    
                        /**
                         * Attachment annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @instance
                         */
                        Attachment.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Attachment createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @instance
                         */
                        Attachment.prototype.createTime = null;
    
                        /**
                         * Attachment updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @instance
                         */
                        Attachment.prototype.updateTime = null;
    
                        /**
                         * Attachment files.
                         * @member {Array.<string>} files
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @instance
                         */
                        Attachment.prototype.files = $util.emptyArray;
    
                        /**
                         * Attachment ociVersionName.
                         * @member {string} ociVersionName
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @instance
                         */
                        Attachment.prototype.ociVersionName = "";
    
                        /**
                         * Creates a new Attachment instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IAttachment=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.Attachment} Attachment instance
                         */
                        Attachment.create = function create(properties) {
                            return new Attachment(properties);
                        };
    
                        /**
                         * Encodes the specified Attachment message. Does not implicitly {@link google.devtools.artifactregistry.v1.Attachment.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IAttachment} message Attachment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Attachment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.target);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.type);
                            if (message.attachmentNamespace != null && Object.hasOwnProperty.call(message, "attachmentNamespace"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.attachmentNamespace);
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.files != null && message.files.length)
                                for (var i = 0; i < message.files.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.files[i]);
                            if (message.ociVersionName != null && Object.hasOwnProperty.call(message, "ociVersionName"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.ociVersionName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Attachment message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.Attachment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IAttachment} message Attachment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Attachment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Attachment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.Attachment} Attachment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Attachment.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.Attachment(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.type = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.attachmentNamespace = reader.string();
                                        break;
                                    }
                                case 5: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        if (!(message.files && message.files.length))
                                            message.files = [];
                                        message.files.push(reader.string());
                                        break;
                                    }
                                case 9: {
                                        message.ociVersionName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Attachment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.Attachment} Attachment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Attachment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Attachment message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Attachment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                if (!$util.isString(message.type))
                                    return "type: string expected";
                            if (message.attachmentNamespace != null && message.hasOwnProperty("attachmentNamespace"))
                                if (!$util.isString(message.attachmentNamespace))
                                    return "attachmentNamespace: string expected";
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.files != null && message.hasOwnProperty("files")) {
                                if (!Array.isArray(message.files))
                                    return "files: array expected";
                                for (var i = 0; i < message.files.length; ++i)
                                    if (!$util.isString(message.files[i]))
                                        return "files: string[] expected";
                            }
                            if (message.ociVersionName != null && message.hasOwnProperty("ociVersionName"))
                                if (!$util.isString(message.ociVersionName))
                                    return "ociVersionName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an Attachment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.Attachment} Attachment
                         */
                        Attachment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.Attachment)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.Attachment();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.type != null)
                                message.type = String(object.type);
                            if (object.attachmentNamespace != null)
                                message.attachmentNamespace = String(object.attachmentNamespace);
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Attachment.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Attachment.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Attachment.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.files) {
                                if (!Array.isArray(object.files))
                                    throw TypeError(".google.devtools.artifactregistry.v1.Attachment.files: array expected");
                                message.files = [];
                                for (var i = 0; i < object.files.length; ++i)
                                    message.files[i] = String(object.files[i]);
                            }
                            if (object.ociVersionName != null)
                                message.ociVersionName = String(object.ociVersionName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Attachment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @static
                         * @param {google.devtools.artifactregistry.v1.Attachment} message Attachment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Attachment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.files = [];
                            if (options.objects || options.defaults)
                                object.annotations = {};
                            if (options.defaults) {
                                object.name = "";
                                object.target = "";
                                object.type = "";
                                object.attachmentNamespace = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.ociVersionName = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = message.type;
                            if (message.attachmentNamespace != null && message.hasOwnProperty("attachmentNamespace"))
                                object.attachmentNamespace = message.attachmentNamespace;
                            var keys2;
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.files && message.files.length) {
                                object.files = [];
                                for (var j = 0; j < message.files.length; ++j)
                                    object.files[j] = message.files[j];
                            }
                            if (message.ociVersionName != null && message.hasOwnProperty("ociVersionName"))
                                object.ociVersionName = message.ociVersionName;
                            return object;
                        };
    
                        /**
                         * Converts this Attachment to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Attachment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Attachment
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.Attachment
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Attachment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.Attachment";
                        };
    
                        return Attachment;
                    })();
    
                    v1.ListAttachmentsRequest = (function() {
    
                        /**
                         * Properties of a ListAttachmentsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListAttachmentsRequest
                         * @property {string|null} [parent] ListAttachmentsRequest parent
                         * @property {string|null} [filter] ListAttachmentsRequest filter
                         * @property {number|null} [pageSize] ListAttachmentsRequest pageSize
                         * @property {string|null} [pageToken] ListAttachmentsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListAttachmentsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListAttachmentsRequest.
                         * @implements IListAttachmentsRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListAttachmentsRequest=} [properties] Properties to set
                         */
                        function ListAttachmentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListAttachmentsRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @instance
                         */
                        ListAttachmentsRequest.prototype.parent = "";
    
                        /**
                         * ListAttachmentsRequest filter.
                         * @member {string} filter
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @instance
                         */
                        ListAttachmentsRequest.prototype.filter = "";
    
                        /**
                         * ListAttachmentsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @instance
                         */
                        ListAttachmentsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListAttachmentsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @instance
                         */
                        ListAttachmentsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListAttachmentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListAttachmentsRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListAttachmentsRequest} ListAttachmentsRequest instance
                         */
                        ListAttachmentsRequest.create = function create(properties) {
                            return new ListAttachmentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListAttachmentsRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListAttachmentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListAttachmentsRequest} message ListAttachmentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAttachmentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListAttachmentsRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListAttachmentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListAttachmentsRequest} message ListAttachmentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAttachmentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListAttachmentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListAttachmentsRequest} ListAttachmentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAttachmentsRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListAttachmentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListAttachmentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListAttachmentsRequest} ListAttachmentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAttachmentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListAttachmentsRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListAttachmentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListAttachmentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListAttachmentsRequest} ListAttachmentsRequest
                         */
                        ListAttachmentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListAttachmentsRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListAttachmentsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListAttachmentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListAttachmentsRequest} message ListAttachmentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListAttachmentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListAttachmentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListAttachmentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListAttachmentsRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListAttachmentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListAttachmentsRequest";
                        };
    
                        return ListAttachmentsRequest;
                    })();
    
                    v1.ListAttachmentsResponse = (function() {
    
                        /**
                         * Properties of a ListAttachmentsResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListAttachmentsResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.IAttachment>|null} [attachments] ListAttachmentsResponse attachments
                         * @property {string|null} [nextPageToken] ListAttachmentsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListAttachmentsResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListAttachmentsResponse.
                         * @implements IListAttachmentsResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListAttachmentsResponse=} [properties] Properties to set
                         */
                        function ListAttachmentsResponse(properties) {
                            this.attachments = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListAttachmentsResponse attachments.
                         * @member {Array.<google.devtools.artifactregistry.v1.IAttachment>} attachments
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsResponse
                         * @instance
                         */
                        ListAttachmentsResponse.prototype.attachments = $util.emptyArray;
    
                        /**
                         * ListAttachmentsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsResponse
                         * @instance
                         */
                        ListAttachmentsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListAttachmentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListAttachmentsResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListAttachmentsResponse} ListAttachmentsResponse instance
                         */
                        ListAttachmentsResponse.create = function create(properties) {
                            return new ListAttachmentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListAttachmentsResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListAttachmentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListAttachmentsResponse} message ListAttachmentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAttachmentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.attachments != null && message.attachments.length)
                                for (var i = 0; i < message.attachments.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.Attachment.encode(message.attachments[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListAttachmentsResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListAttachmentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListAttachmentsResponse} message ListAttachmentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAttachmentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListAttachmentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListAttachmentsResponse} ListAttachmentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAttachmentsResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListAttachmentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.attachments && message.attachments.length))
                                            message.attachments = [];
                                        message.attachments.push($root.google.devtools.artifactregistry.v1.Attachment.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListAttachmentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListAttachmentsResponse} ListAttachmentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAttachmentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListAttachmentsResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListAttachmentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.attachments != null && message.hasOwnProperty("attachments")) {
                                if (!Array.isArray(message.attachments))
                                    return "attachments: array expected";
                                for (var i = 0; i < message.attachments.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.Attachment.verify(message.attachments[i]);
                                    if (error)
                                        return "attachments." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListAttachmentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListAttachmentsResponse} ListAttachmentsResponse
                         */
                        ListAttachmentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListAttachmentsResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListAttachmentsResponse();
                            if (object.attachments) {
                                if (!Array.isArray(object.attachments))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ListAttachmentsResponse.attachments: array expected");
                                message.attachments = [];
                                for (var i = 0; i < object.attachments.length; ++i) {
                                    if (typeof object.attachments[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ListAttachmentsResponse.attachments: object expected");
                                    message.attachments[i] = $root.google.devtools.artifactregistry.v1.Attachment.fromObject(object.attachments[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListAttachmentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListAttachmentsResponse} message ListAttachmentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListAttachmentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.attachments = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.attachments && message.attachments.length) {
                                object.attachments = [];
                                for (var j = 0; j < message.attachments.length; ++j)
                                    object.attachments[j] = $root.google.devtools.artifactregistry.v1.Attachment.toObject(message.attachments[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListAttachmentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListAttachmentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListAttachmentsResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListAttachmentsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListAttachmentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListAttachmentsResponse";
                        };
    
                        return ListAttachmentsResponse;
                    })();
    
                    v1.GetAttachmentRequest = (function() {
    
                        /**
                         * Properties of a GetAttachmentRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetAttachmentRequest
                         * @property {string|null} [name] GetAttachmentRequest name
                         */
    
                        /**
                         * Constructs a new GetAttachmentRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetAttachmentRequest.
                         * @implements IGetAttachmentRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetAttachmentRequest=} [properties] Properties to set
                         */
                        function GetAttachmentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetAttachmentRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetAttachmentRequest
                         * @instance
                         */
                        GetAttachmentRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetAttachmentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetAttachmentRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetAttachmentRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetAttachmentRequest} GetAttachmentRequest instance
                         */
                        GetAttachmentRequest.create = function create(properties) {
                            return new GetAttachmentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetAttachmentRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetAttachmentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetAttachmentRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetAttachmentRequest} message GetAttachmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetAttachmentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetAttachmentRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetAttachmentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetAttachmentRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetAttachmentRequest} message GetAttachmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetAttachmentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetAttachmentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetAttachmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetAttachmentRequest} GetAttachmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetAttachmentRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetAttachmentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetAttachmentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetAttachmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetAttachmentRequest} GetAttachmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetAttachmentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetAttachmentRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetAttachmentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetAttachmentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetAttachmentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetAttachmentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetAttachmentRequest} GetAttachmentRequest
                         */
                        GetAttachmentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetAttachmentRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetAttachmentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetAttachmentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetAttachmentRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetAttachmentRequest} message GetAttachmentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetAttachmentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetAttachmentRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetAttachmentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetAttachmentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetAttachmentRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetAttachmentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetAttachmentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetAttachmentRequest";
                        };
    
                        return GetAttachmentRequest;
                    })();
    
                    v1.CreateAttachmentRequest = (function() {
    
                        /**
                         * Properties of a CreateAttachmentRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface ICreateAttachmentRequest
                         * @property {string|null} [parent] CreateAttachmentRequest parent
                         * @property {string|null} [attachmentId] CreateAttachmentRequest attachmentId
                         * @property {google.devtools.artifactregistry.v1.IAttachment|null} [attachment] CreateAttachmentRequest attachment
                         */
    
                        /**
                         * Constructs a new CreateAttachmentRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a CreateAttachmentRequest.
                         * @implements ICreateAttachmentRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.ICreateAttachmentRequest=} [properties] Properties to set
                         */
                        function CreateAttachmentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateAttachmentRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @instance
                         */
                        CreateAttachmentRequest.prototype.parent = "";
    
                        /**
                         * CreateAttachmentRequest attachmentId.
                         * @member {string} attachmentId
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @instance
                         */
                        CreateAttachmentRequest.prototype.attachmentId = "";
    
                        /**
                         * CreateAttachmentRequest attachment.
                         * @member {google.devtools.artifactregistry.v1.IAttachment|null|undefined} attachment
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @instance
                         */
                        CreateAttachmentRequest.prototype.attachment = null;
    
                        /**
                         * Creates a new CreateAttachmentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICreateAttachmentRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.CreateAttachmentRequest} CreateAttachmentRequest instance
                         */
                        CreateAttachmentRequest.create = function create(properties) {
                            return new CreateAttachmentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateAttachmentRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.CreateAttachmentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICreateAttachmentRequest} message CreateAttachmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateAttachmentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.attachmentId != null && Object.hasOwnProperty.call(message, "attachmentId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.attachmentId);
                            if (message.attachment != null && Object.hasOwnProperty.call(message, "attachment"))
                                $root.google.devtools.artifactregistry.v1.Attachment.encode(message.attachment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateAttachmentRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.CreateAttachmentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICreateAttachmentRequest} message CreateAttachmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateAttachmentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateAttachmentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.CreateAttachmentRequest} CreateAttachmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateAttachmentRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.CreateAttachmentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.attachmentId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.attachment = $root.google.devtools.artifactregistry.v1.Attachment.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateAttachmentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.CreateAttachmentRequest} CreateAttachmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateAttachmentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateAttachmentRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateAttachmentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.attachmentId != null && message.hasOwnProperty("attachmentId"))
                                if (!$util.isString(message.attachmentId))
                                    return "attachmentId: string expected";
                            if (message.attachment != null && message.hasOwnProperty("attachment")) {
                                var error = $root.google.devtools.artifactregistry.v1.Attachment.verify(message.attachment);
                                if (error)
                                    return "attachment." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateAttachmentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.CreateAttachmentRequest} CreateAttachmentRequest
                         */
                        CreateAttachmentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.CreateAttachmentRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.CreateAttachmentRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.attachmentId != null)
                                message.attachmentId = String(object.attachmentId);
                            if (object.attachment != null) {
                                if (typeof object.attachment !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.CreateAttachmentRequest.attachment: object expected");
                                message.attachment = $root.google.devtools.artifactregistry.v1.Attachment.fromObject(object.attachment);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateAttachmentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.CreateAttachmentRequest} message CreateAttachmentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateAttachmentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.attachmentId = "";
                                object.attachment = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.attachmentId != null && message.hasOwnProperty("attachmentId"))
                                object.attachmentId = message.attachmentId;
                            if (message.attachment != null && message.hasOwnProperty("attachment"))
                                object.attachment = $root.google.devtools.artifactregistry.v1.Attachment.toObject(message.attachment, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateAttachmentRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateAttachmentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateAttachmentRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.CreateAttachmentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateAttachmentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.CreateAttachmentRequest";
                        };
    
                        return CreateAttachmentRequest;
                    })();
    
                    v1.DeleteAttachmentRequest = (function() {
    
                        /**
                         * Properties of a DeleteAttachmentRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IDeleteAttachmentRequest
                         * @property {string|null} [name] DeleteAttachmentRequest name
                         */
    
                        /**
                         * Constructs a new DeleteAttachmentRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a DeleteAttachmentRequest.
                         * @implements IDeleteAttachmentRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IDeleteAttachmentRequest=} [properties] Properties to set
                         */
                        function DeleteAttachmentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteAttachmentRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.DeleteAttachmentRequest
                         * @instance
                         */
                        DeleteAttachmentRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteAttachmentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.DeleteAttachmentRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteAttachmentRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.DeleteAttachmentRequest} DeleteAttachmentRequest instance
                         */
                        DeleteAttachmentRequest.create = function create(properties) {
                            return new DeleteAttachmentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteAttachmentRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.DeleteAttachmentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.DeleteAttachmentRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteAttachmentRequest} message DeleteAttachmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteAttachmentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteAttachmentRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.DeleteAttachmentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeleteAttachmentRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteAttachmentRequest} message DeleteAttachmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteAttachmentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteAttachmentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.DeleteAttachmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.DeleteAttachmentRequest} DeleteAttachmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteAttachmentRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.DeleteAttachmentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteAttachmentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeleteAttachmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.DeleteAttachmentRequest} DeleteAttachmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteAttachmentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteAttachmentRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.DeleteAttachmentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteAttachmentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteAttachmentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.DeleteAttachmentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.DeleteAttachmentRequest} DeleteAttachmentRequest
                         */
                        DeleteAttachmentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.DeleteAttachmentRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.DeleteAttachmentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteAttachmentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.DeleteAttachmentRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.DeleteAttachmentRequest} message DeleteAttachmentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteAttachmentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteAttachmentRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.DeleteAttachmentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteAttachmentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteAttachmentRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.DeleteAttachmentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteAttachmentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.DeleteAttachmentRequest";
                        };
    
                        return DeleteAttachmentRequest;
                    })();
    
                    v1.Hash = (function() {
    
                        /**
                         * Properties of a Hash.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IHash
                         * @property {google.devtools.artifactregistry.v1.Hash.HashType|null} [type] Hash type
                         * @property {Uint8Array|null} [value] Hash value
                         */
    
                        /**
                         * Constructs a new Hash.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a Hash.
                         * @implements IHash
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IHash=} [properties] Properties to set
                         */
                        function Hash(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Hash type.
                         * @member {google.devtools.artifactregistry.v1.Hash.HashType} type
                         * @memberof google.devtools.artifactregistry.v1.Hash
                         * @instance
                         */
                        Hash.prototype.type = 0;
    
                        /**
                         * Hash value.
                         * @member {Uint8Array} value
                         * @memberof google.devtools.artifactregistry.v1.Hash
                         * @instance
                         */
                        Hash.prototype.value = $util.newBuffer([]);
    
                        /**
                         * Creates a new Hash instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.Hash
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IHash=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.Hash} Hash instance
                         */
                        Hash.create = function create(properties) {
                            return new Hash(properties);
                        };
    
                        /**
                         * Encodes the specified Hash message. Does not implicitly {@link google.devtools.artifactregistry.v1.Hash.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.Hash
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IHash} message Hash message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Hash.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Hash message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.Hash.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Hash
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IHash} message Hash message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Hash.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Hash message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.Hash
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.Hash} Hash
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Hash.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.Hash();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.value = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Hash message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Hash
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.Hash} Hash
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Hash.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Hash message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.Hash
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Hash.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.value != null && message.hasOwnProperty("value"))
                                if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                                    return "value: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates a Hash message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.Hash
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.Hash} Hash
                         */
                        Hash.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.Hash)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.Hash();
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "HASH_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "SHA256":
                            case 1:
                                message.type = 1;
                                break;
                            case "MD5":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.value != null)
                                if (typeof object.value === "string")
                                    $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                                else if (object.value.length >= 0)
                                    message.value = object.value;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Hash message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.Hash
                         * @static
                         * @param {google.devtools.artifactregistry.v1.Hash} message Hash
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Hash.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = options.enums === String ? "HASH_TYPE_UNSPECIFIED" : 0;
                                if (options.bytes === String)
                                    object.value = "";
                                else {
                                    object.value = [];
                                    if (options.bytes !== Array)
                                        object.value = $util.newBuffer(object.value);
                                }
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.devtools.artifactregistry.v1.Hash.HashType[message.type] === undefined ? message.type : $root.google.devtools.artifactregistry.v1.Hash.HashType[message.type] : message.type;
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                            return object;
                        };
    
                        /**
                         * Converts this Hash to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.Hash
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Hash.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Hash
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.Hash
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Hash.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.Hash";
                        };
    
                        /**
                         * HashType enum.
                         * @name google.devtools.artifactregistry.v1.Hash.HashType
                         * @enum {number}
                         * @property {number} HASH_TYPE_UNSPECIFIED=0 HASH_TYPE_UNSPECIFIED value
                         * @property {number} SHA256=1 SHA256 value
                         * @property {number} MD5=2 MD5 value
                         */
                        Hash.HashType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "HASH_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SHA256"] = 1;
                            values[valuesById[2] = "MD5"] = 2;
                            return values;
                        })();
    
                        return Hash;
                    })();
    
                    v1.File = (function() {
    
                        /**
                         * Properties of a File.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IFile
                         * @property {string|null} [name] File name
                         * @property {number|Long|null} [sizeBytes] File sizeBytes
                         * @property {Array.<google.devtools.artifactregistry.v1.IHash>|null} [hashes] File hashes
                         * @property {google.protobuf.ITimestamp|null} [createTime] File createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] File updateTime
                         * @property {string|null} [owner] File owner
                         * @property {google.protobuf.ITimestamp|null} [fetchTime] File fetchTime
                         * @property {Object.<string,string>|null} [annotations] File annotations
                         */
    
                        /**
                         * Constructs a new File.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a File.
                         * @implements IFile
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IFile=} [properties] Properties to set
                         */
                        function File(properties) {
                            this.hashes = [];
                            this.annotations = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * File name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @instance
                         */
                        File.prototype.name = "";
    
                        /**
                         * File sizeBytes.
                         * @member {number|Long} sizeBytes
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @instance
                         */
                        File.prototype.sizeBytes = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * File hashes.
                         * @member {Array.<google.devtools.artifactregistry.v1.IHash>} hashes
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @instance
                         */
                        File.prototype.hashes = $util.emptyArray;
    
                        /**
                         * File createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @instance
                         */
                        File.prototype.createTime = null;
    
                        /**
                         * File updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @instance
                         */
                        File.prototype.updateTime = null;
    
                        /**
                         * File owner.
                         * @member {string} owner
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @instance
                         */
                        File.prototype.owner = "";
    
                        /**
                         * File fetchTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} fetchTime
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @instance
                         */
                        File.prototype.fetchTime = null;
    
                        /**
                         * File annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @instance
                         */
                        File.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Creates a new File instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IFile=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.File} File instance
                         */
                        File.create = function create(properties) {
                            return new File(properties);
                        };
    
                        /**
                         * Encodes the specified File message. Does not implicitly {@link google.devtools.artifactregistry.v1.File.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IFile} message File message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        File.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.sizeBytes != null && Object.hasOwnProperty.call(message, "sizeBytes"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.sizeBytes);
                            if (message.hashes != null && message.hashes.length)
                                for (var i = 0; i < message.hashes.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.Hash.encode(message.hashes[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.owner != null && Object.hasOwnProperty.call(message, "owner"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.owner);
                            if (message.fetchTime != null && Object.hasOwnProperty.call(message, "fetchTime"))
                                $root.google.protobuf.Timestamp.encode(message.fetchTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 9, wireType 2 =*/74).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified File message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.File.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IFile} message File message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        File.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a File message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.File} File
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        File.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.File(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.sizeBytes = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.hashes && message.hashes.length))
                                            message.hashes = [];
                                        message.hashes.push($root.google.devtools.artifactregistry.v1.Hash.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.owner = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.fetchTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a File message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.File} File
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        File.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a File message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        File.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.sizeBytes != null && message.hasOwnProperty("sizeBytes"))
                                if (!$util.isInteger(message.sizeBytes) && !(message.sizeBytes && $util.isInteger(message.sizeBytes.low) && $util.isInteger(message.sizeBytes.high)))
                                    return "sizeBytes: integer|Long expected";
                            if (message.hashes != null && message.hasOwnProperty("hashes")) {
                                if (!Array.isArray(message.hashes))
                                    return "hashes: array expected";
                                for (var i = 0; i < message.hashes.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.Hash.verify(message.hashes[i]);
                                    if (error)
                                        return "hashes." + error;
                                }
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.owner != null && message.hasOwnProperty("owner"))
                                if (!$util.isString(message.owner))
                                    return "owner: string expected";
                            if (message.fetchTime != null && message.hasOwnProperty("fetchTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.fetchTime);
                                if (error)
                                    return "fetchTime." + error;
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a File message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.File} File
                         */
                        File.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.File)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.File();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.sizeBytes != null)
                                if ($util.Long)
                                    (message.sizeBytes = $util.Long.fromValue(object.sizeBytes)).unsigned = false;
                                else if (typeof object.sizeBytes === "string")
                                    message.sizeBytes = parseInt(object.sizeBytes, 10);
                                else if (typeof object.sizeBytes === "number")
                                    message.sizeBytes = object.sizeBytes;
                                else if (typeof object.sizeBytes === "object")
                                    message.sizeBytes = new $util.LongBits(object.sizeBytes.low >>> 0, object.sizeBytes.high >>> 0).toNumber();
                            if (object.hashes) {
                                if (!Array.isArray(object.hashes))
                                    throw TypeError(".google.devtools.artifactregistry.v1.File.hashes: array expected");
                                message.hashes = [];
                                for (var i = 0; i < object.hashes.length; ++i) {
                                    if (typeof object.hashes[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.File.hashes: object expected");
                                    message.hashes[i] = $root.google.devtools.artifactregistry.v1.Hash.fromObject(object.hashes[i]);
                                }
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.File.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.File.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.owner != null)
                                message.owner = String(object.owner);
                            if (object.fetchTime != null) {
                                if (typeof object.fetchTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.File.fetchTime: object expected");
                                message.fetchTime = $root.google.protobuf.Timestamp.fromObject(object.fetchTime);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.File.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a File message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @static
                         * @param {google.devtools.artifactregistry.v1.File} message File
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        File.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.hashes = [];
                            if (options.objects || options.defaults)
                                object.annotations = {};
                            if (options.defaults) {
                                object.name = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.sizeBytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.sizeBytes = options.longs === String ? "0" : 0;
                                object.createTime = null;
                                object.updateTime = null;
                                object.owner = "";
                                object.fetchTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.sizeBytes != null && message.hasOwnProperty("sizeBytes"))
                                if (typeof message.sizeBytes === "number")
                                    object.sizeBytes = options.longs === String ? String(message.sizeBytes) : message.sizeBytes;
                                else
                                    object.sizeBytes = options.longs === String ? $util.Long.prototype.toString.call(message.sizeBytes) : options.longs === Number ? new $util.LongBits(message.sizeBytes.low >>> 0, message.sizeBytes.high >>> 0).toNumber() : message.sizeBytes;
                            if (message.hashes && message.hashes.length) {
                                object.hashes = [];
                                for (var j = 0; j < message.hashes.length; ++j)
                                    object.hashes[j] = $root.google.devtools.artifactregistry.v1.Hash.toObject(message.hashes[j], options);
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.owner != null && message.hasOwnProperty("owner"))
                                object.owner = message.owner;
                            if (message.fetchTime != null && message.hasOwnProperty("fetchTime"))
                                object.fetchTime = $root.google.protobuf.Timestamp.toObject(message.fetchTime, options);
                            var keys2;
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this File to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        File.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for File
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.File
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        File.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.File";
                        };
    
                        return File;
                    })();
    
                    v1.ListFilesRequest = (function() {
    
                        /**
                         * Properties of a ListFilesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListFilesRequest
                         * @property {string|null} [parent] ListFilesRequest parent
                         * @property {string|null} [filter] ListFilesRequest filter
                         * @property {number|null} [pageSize] ListFilesRequest pageSize
                         * @property {string|null} [pageToken] ListFilesRequest pageToken
                         * @property {string|null} [orderBy] ListFilesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListFilesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListFilesRequest.
                         * @implements IListFilesRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListFilesRequest=} [properties] Properties to set
                         */
                        function ListFilesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFilesRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @instance
                         */
                        ListFilesRequest.prototype.parent = "";
    
                        /**
                         * ListFilesRequest filter.
                         * @member {string} filter
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @instance
                         */
                        ListFilesRequest.prototype.filter = "";
    
                        /**
                         * ListFilesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @instance
                         */
                        ListFilesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListFilesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @instance
                         */
                        ListFilesRequest.prototype.pageToken = "";
    
                        /**
                         * ListFilesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @instance
                         */
                        ListFilesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListFilesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListFilesRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListFilesRequest} ListFilesRequest instance
                         */
                        ListFilesRequest.create = function create(properties) {
                            return new ListFilesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListFilesRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListFilesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListFilesRequest} message ListFilesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFilesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFilesRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListFilesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListFilesRequest} message ListFilesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFilesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFilesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListFilesRequest} ListFilesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFilesRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListFilesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFilesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListFilesRequest} ListFilesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFilesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFilesRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFilesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFilesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListFilesRequest} ListFilesRequest
                         */
                        ListFilesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListFilesRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListFilesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFilesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListFilesRequest} message ListFilesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFilesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListFilesRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFilesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFilesRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListFilesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFilesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListFilesRequest";
                        };
    
                        return ListFilesRequest;
                    })();
    
                    v1.ListFilesResponse = (function() {
    
                        /**
                         * Properties of a ListFilesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListFilesResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.IFile>|null} [files] ListFilesResponse files
                         * @property {string|null} [nextPageToken] ListFilesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListFilesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListFilesResponse.
                         * @implements IListFilesResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListFilesResponse=} [properties] Properties to set
                         */
                        function ListFilesResponse(properties) {
                            this.files = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFilesResponse files.
                         * @member {Array.<google.devtools.artifactregistry.v1.IFile>} files
                         * @memberof google.devtools.artifactregistry.v1.ListFilesResponse
                         * @instance
                         */
                        ListFilesResponse.prototype.files = $util.emptyArray;
    
                        /**
                         * ListFilesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.artifactregistry.v1.ListFilesResponse
                         * @instance
                         */
                        ListFilesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListFilesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListFilesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListFilesResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListFilesResponse} ListFilesResponse instance
                         */
                        ListFilesResponse.create = function create(properties) {
                            return new ListFilesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListFilesResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListFilesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListFilesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListFilesResponse} message ListFilesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFilesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.files != null && message.files.length)
                                for (var i = 0; i < message.files.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.File.encode(message.files[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFilesResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListFilesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListFilesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListFilesResponse} message ListFilesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFilesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFilesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListFilesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListFilesResponse} ListFilesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFilesResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListFilesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.files && message.files.length))
                                            message.files = [];
                                        message.files.push($root.google.devtools.artifactregistry.v1.File.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFilesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListFilesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListFilesResponse} ListFilesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFilesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFilesResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListFilesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFilesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.files != null && message.hasOwnProperty("files")) {
                                if (!Array.isArray(message.files))
                                    return "files: array expected";
                                for (var i = 0; i < message.files.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.File.verify(message.files[i]);
                                    if (error)
                                        return "files." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFilesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListFilesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListFilesResponse} ListFilesResponse
                         */
                        ListFilesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListFilesResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListFilesResponse();
                            if (object.files) {
                                if (!Array.isArray(object.files))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ListFilesResponse.files: array expected");
                                message.files = [];
                                for (var i = 0; i < object.files.length; ++i) {
                                    if (typeof object.files[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ListFilesResponse.files: object expected");
                                    message.files[i] = $root.google.devtools.artifactregistry.v1.File.fromObject(object.files[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFilesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListFilesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListFilesResponse} message ListFilesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFilesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.files = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.files && message.files.length) {
                                object.files = [];
                                for (var j = 0; j < message.files.length; ++j)
                                    object.files[j] = $root.google.devtools.artifactregistry.v1.File.toObject(message.files[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListFilesResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListFilesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFilesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFilesResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListFilesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFilesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListFilesResponse";
                        };
    
                        return ListFilesResponse;
                    })();
    
                    v1.GetFileRequest = (function() {
    
                        /**
                         * Properties of a GetFileRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetFileRequest
                         * @property {string|null} [name] GetFileRequest name
                         */
    
                        /**
                         * Constructs a new GetFileRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetFileRequest.
                         * @implements IGetFileRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetFileRequest=} [properties] Properties to set
                         */
                        function GetFileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetFileRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetFileRequest
                         * @instance
                         */
                        GetFileRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetFileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetFileRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetFileRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetFileRequest} GetFileRequest instance
                         */
                        GetFileRequest.create = function create(properties) {
                            return new GetFileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetFileRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetFileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetFileRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetFileRequest} message GetFileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetFileRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetFileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetFileRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetFileRequest} message GetFileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetFileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetFileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetFileRequest} GetFileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFileRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetFileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetFileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetFileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetFileRequest} GetFileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetFileRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetFileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetFileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetFileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetFileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetFileRequest} GetFileRequest
                         */
                        GetFileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetFileRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetFileRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetFileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetFileRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetFileRequest} message GetFileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetFileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetFileRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetFileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetFileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetFileRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetFileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetFileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetFileRequest";
                        };
    
                        return GetFileRequest;
                    })();
    
                    v1.DeleteFileRequest = (function() {
    
                        /**
                         * Properties of a DeleteFileRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IDeleteFileRequest
                         * @property {string|null} [name] DeleteFileRequest name
                         */
    
                        /**
                         * Constructs a new DeleteFileRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a DeleteFileRequest.
                         * @implements IDeleteFileRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IDeleteFileRequest=} [properties] Properties to set
                         */
                        function DeleteFileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteFileRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.DeleteFileRequest
                         * @instance
                         */
                        DeleteFileRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteFileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.DeleteFileRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteFileRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.DeleteFileRequest} DeleteFileRequest instance
                         */
                        DeleteFileRequest.create = function create(properties) {
                            return new DeleteFileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteFileRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.DeleteFileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.DeleteFileRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteFileRequest} message DeleteFileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteFileRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.DeleteFileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeleteFileRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteFileRequest} message DeleteFileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteFileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.DeleteFileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.DeleteFileRequest} DeleteFileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFileRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.DeleteFileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteFileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeleteFileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.DeleteFileRequest} DeleteFileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteFileRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.DeleteFileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteFileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteFileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.DeleteFileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.DeleteFileRequest} DeleteFileRequest
                         */
                        DeleteFileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.DeleteFileRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.DeleteFileRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteFileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.DeleteFileRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.DeleteFileRequest} message DeleteFileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteFileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteFileRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.DeleteFileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteFileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteFileRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.DeleteFileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteFileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.DeleteFileRequest";
                        };
    
                        return DeleteFileRequest;
                    })();
    
                    v1.UpdateFileRequest = (function() {
    
                        /**
                         * Properties of an UpdateFileRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IUpdateFileRequest
                         * @property {google.devtools.artifactregistry.v1.IFile|null} [file] UpdateFileRequest file
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateFileRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateFileRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an UpdateFileRequest.
                         * @implements IUpdateFileRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IUpdateFileRequest=} [properties] Properties to set
                         */
                        function UpdateFileRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateFileRequest file.
                         * @member {google.devtools.artifactregistry.v1.IFile|null|undefined} file
                         * @memberof google.devtools.artifactregistry.v1.UpdateFileRequest
                         * @instance
                         */
                        UpdateFileRequest.prototype.file = null;
    
                        /**
                         * UpdateFileRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.devtools.artifactregistry.v1.UpdateFileRequest
                         * @instance
                         */
                        UpdateFileRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateFileRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.UpdateFileRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateFileRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.UpdateFileRequest} UpdateFileRequest instance
                         */
                        UpdateFileRequest.create = function create(properties) {
                            return new UpdateFileRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateFileRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateFileRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.UpdateFileRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateFileRequest} message UpdateFileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFileRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.file != null && Object.hasOwnProperty.call(message, "file"))
                                $root.google.devtools.artifactregistry.v1.File.encode(message.file, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateFileRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateFileRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateFileRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateFileRequest} message UpdateFileRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateFileRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.UpdateFileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.UpdateFileRequest} UpdateFileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFileRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.UpdateFileRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.file = $root.google.devtools.artifactregistry.v1.File.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateFileRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateFileRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.UpdateFileRequest} UpdateFileRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFileRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateFileRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.UpdateFileRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateFileRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.file != null && message.hasOwnProperty("file")) {
                                var error = $root.google.devtools.artifactregistry.v1.File.verify(message.file);
                                if (error)
                                    return "file." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateFileRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateFileRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.UpdateFileRequest} UpdateFileRequest
                         */
                        UpdateFileRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.UpdateFileRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.UpdateFileRequest();
                            if (object.file != null) {
                                if (typeof object.file !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateFileRequest.file: object expected");
                                message.file = $root.google.devtools.artifactregistry.v1.File.fromObject(object.file);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateFileRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateFileRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateFileRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.UpdateFileRequest} message UpdateFileRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateFileRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.file = null;
                                object.updateMask = null;
                            }
                            if (message.file != null && message.hasOwnProperty("file"))
                                object.file = $root.google.devtools.artifactregistry.v1.File.toObject(message.file, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateFileRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.UpdateFileRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateFileRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateFileRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.UpdateFileRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateFileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.UpdateFileRequest";
                        };
    
                        return UpdateFileRequest;
                    })();
    
                    v1.GenericArtifact = (function() {
    
                        /**
                         * Properties of a GenericArtifact.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGenericArtifact
                         * @property {string|null} [name] GenericArtifact name
                         * @property {string|null} [version] GenericArtifact version
                         * @property {google.protobuf.ITimestamp|null} [createTime] GenericArtifact createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] GenericArtifact updateTime
                         */
    
                        /**
                         * Constructs a new GenericArtifact.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GenericArtifact.
                         * @implements IGenericArtifact
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGenericArtifact=} [properties] Properties to set
                         */
                        function GenericArtifact(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenericArtifact name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @instance
                         */
                        GenericArtifact.prototype.name = "";
    
                        /**
                         * GenericArtifact version.
                         * @member {string} version
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @instance
                         */
                        GenericArtifact.prototype.version = "";
    
                        /**
                         * GenericArtifact createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @instance
                         */
                        GenericArtifact.prototype.createTime = null;
    
                        /**
                         * GenericArtifact updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @instance
                         */
                        GenericArtifact.prototype.updateTime = null;
    
                        /**
                         * Creates a new GenericArtifact instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGenericArtifact=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GenericArtifact} GenericArtifact instance
                         */
                        GenericArtifact.create = function create(properties) {
                            return new GenericArtifact(properties);
                        };
    
                        /**
                         * Encodes the specified GenericArtifact message. Does not implicitly {@link google.devtools.artifactregistry.v1.GenericArtifact.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGenericArtifact} message GenericArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenericArtifact.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenericArtifact message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GenericArtifact.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGenericArtifact} message GenericArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenericArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenericArtifact message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GenericArtifact} GenericArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenericArtifact.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GenericArtifact();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenericArtifact message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GenericArtifact} GenericArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenericArtifact.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenericArtifact message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenericArtifact.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GenericArtifact message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GenericArtifact} GenericArtifact
                         */
                        GenericArtifact.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GenericArtifact)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GenericArtifact();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.GenericArtifact.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.GenericArtifact.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenericArtifact message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GenericArtifact} message GenericArtifact
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenericArtifact.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.version = "";
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this GenericArtifact to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenericArtifact.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenericArtifact
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GenericArtifact
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenericArtifact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GenericArtifact";
                        };
    
                        return GenericArtifact;
                    })();
    
                    v1.GoModule = (function() {
    
                        /**
                         * Properties of a GoModule.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGoModule
                         * @property {string|null} [name] GoModule name
                         * @property {string|null} [version] GoModule version
                         * @property {google.protobuf.ITimestamp|null} [createTime] GoModule createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] GoModule updateTime
                         */
    
                        /**
                         * Constructs a new GoModule.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GoModule.
                         * @implements IGoModule
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGoModule=} [properties] Properties to set
                         */
                        function GoModule(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GoModule name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @instance
                         */
                        GoModule.prototype.name = "";
    
                        /**
                         * GoModule version.
                         * @member {string} version
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @instance
                         */
                        GoModule.prototype.version = "";
    
                        /**
                         * GoModule createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @instance
                         */
                        GoModule.prototype.createTime = null;
    
                        /**
                         * GoModule updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @instance
                         */
                        GoModule.prototype.updateTime = null;
    
                        /**
                         * Creates a new GoModule instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGoModule=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GoModule} GoModule instance
                         */
                        GoModule.create = function create(properties) {
                            return new GoModule(properties);
                        };
    
                        /**
                         * Encodes the specified GoModule message. Does not implicitly {@link google.devtools.artifactregistry.v1.GoModule.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGoModule} message GoModule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GoModule.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GoModule message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GoModule.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGoModule} message GoModule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GoModule.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GoModule message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GoModule} GoModule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GoModule.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GoModule();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GoModule message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GoModule} GoModule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GoModule.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GoModule message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GoModule.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GoModule message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GoModule} GoModule
                         */
                        GoModule.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GoModule)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GoModule();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.GoModule.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.GoModule.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GoModule message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GoModule} message GoModule
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GoModule.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.version = "";
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this GoModule to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GoModule.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GoModule
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GoModule
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GoModule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GoModule";
                        };
    
                        return GoModule;
                    })();
    
                    v1.KfpArtifact = (function() {
    
                        /**
                         * Properties of a KfpArtifact.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IKfpArtifact
                         * @property {string|null} [name] KfpArtifact name
                         * @property {string|null} [version] KfpArtifact version
                         */
    
                        /**
                         * Constructs a new KfpArtifact.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a KfpArtifact.
                         * @implements IKfpArtifact
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IKfpArtifact=} [properties] Properties to set
                         */
                        function KfpArtifact(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KfpArtifact name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.KfpArtifact
                         * @instance
                         */
                        KfpArtifact.prototype.name = "";
    
                        /**
                         * KfpArtifact version.
                         * @member {string} version
                         * @memberof google.devtools.artifactregistry.v1.KfpArtifact
                         * @instance
                         */
                        KfpArtifact.prototype.version = "";
    
                        /**
                         * Creates a new KfpArtifact instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.KfpArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IKfpArtifact=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.KfpArtifact} KfpArtifact instance
                         */
                        KfpArtifact.create = function create(properties) {
                            return new KfpArtifact(properties);
                        };
    
                        /**
                         * Encodes the specified KfpArtifact message. Does not implicitly {@link google.devtools.artifactregistry.v1.KfpArtifact.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.KfpArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IKfpArtifact} message KfpArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KfpArtifact.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KfpArtifact message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.KfpArtifact.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.KfpArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IKfpArtifact} message KfpArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KfpArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KfpArtifact message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.KfpArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.KfpArtifact} KfpArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KfpArtifact.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.KfpArtifact();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KfpArtifact message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.KfpArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.KfpArtifact} KfpArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KfpArtifact.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KfpArtifact message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.KfpArtifact
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KfpArtifact.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a KfpArtifact message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.KfpArtifact
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.KfpArtifact} KfpArtifact
                         */
                        KfpArtifact.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.KfpArtifact)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.KfpArtifact();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.version != null)
                                message.version = String(object.version);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KfpArtifact message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.KfpArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.KfpArtifact} message KfpArtifact
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KfpArtifact.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.version = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            return object;
                        };
    
                        /**
                         * Converts this KfpArtifact to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.KfpArtifact
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KfpArtifact.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for KfpArtifact
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.KfpArtifact
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        KfpArtifact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.KfpArtifact";
                        };
    
                        return KfpArtifact;
                    })();
    
                    v1.Package = (function() {
    
                        /**
                         * Properties of a Package.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IPackage
                         * @property {string|null} [name] Package name
                         * @property {string|null} [displayName] Package displayName
                         * @property {google.protobuf.ITimestamp|null} [createTime] Package createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Package updateTime
                         * @property {Object.<string,string>|null} [annotations] Package annotations
                         */
    
                        /**
                         * Constructs a new Package.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a Package.
                         * @implements IPackage
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IPackage=} [properties] Properties to set
                         */
                        function Package(properties) {
                            this.annotations = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Package name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @instance
                         */
                        Package.prototype.name = "";
    
                        /**
                         * Package displayName.
                         * @member {string} displayName
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @instance
                         */
                        Package.prototype.displayName = "";
    
                        /**
                         * Package createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @instance
                         */
                        Package.prototype.createTime = null;
    
                        /**
                         * Package updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @instance
                         */
                        Package.prototype.updateTime = null;
    
                        /**
                         * Package annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @instance
                         */
                        Package.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Creates a new Package instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IPackage=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.Package} Package instance
                         */
                        Package.create = function create(properties) {
                            return new Package(properties);
                        };
    
                        /**
                         * Encodes the specified Package message. Does not implicitly {@link google.devtools.artifactregistry.v1.Package.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IPackage} message Package message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Package.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 7, wireType 2 =*/58).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Package message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.Package.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IPackage} message Package message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Package.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Package message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.Package} Package
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Package.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.Package(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Package message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.Package} Package
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Package.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Package message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Package.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Package message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.Package} Package
                         */
                        Package.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.Package)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.Package();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Package.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Package.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Package.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Package message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @static
                         * @param {google.devtools.artifactregistry.v1.Package} message Package
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Package.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.annotations = {};
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Package to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Package.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Package
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.Package
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Package.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.Package";
                        };
    
                        return Package;
                    })();
    
                    v1.ListPackagesRequest = (function() {
    
                        /**
                         * Properties of a ListPackagesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListPackagesRequest
                         * @property {string|null} [parent] ListPackagesRequest parent
                         * @property {number|null} [pageSize] ListPackagesRequest pageSize
                         * @property {string|null} [pageToken] ListPackagesRequest pageToken
                         * @property {string|null} [filter] ListPackagesRequest filter
                         * @property {string|null} [orderBy] ListPackagesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListPackagesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListPackagesRequest.
                         * @implements IListPackagesRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListPackagesRequest=} [properties] Properties to set
                         */
                        function ListPackagesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPackagesRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @instance
                         */
                        ListPackagesRequest.prototype.parent = "";
    
                        /**
                         * ListPackagesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @instance
                         */
                        ListPackagesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListPackagesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @instance
                         */
                        ListPackagesRequest.prototype.pageToken = "";
    
                        /**
                         * ListPackagesRequest filter.
                         * @member {string} filter
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @instance
                         */
                        ListPackagesRequest.prototype.filter = "";
    
                        /**
                         * ListPackagesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @instance
                         */
                        ListPackagesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListPackagesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListPackagesRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListPackagesRequest} ListPackagesRequest instance
                         */
                        ListPackagesRequest.create = function create(properties) {
                            return new ListPackagesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListPackagesRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListPackagesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListPackagesRequest} message ListPackagesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPackagesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPackagesRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListPackagesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListPackagesRequest} message ListPackagesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPackagesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPackagesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListPackagesRequest} ListPackagesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPackagesRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListPackagesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPackagesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListPackagesRequest} ListPackagesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPackagesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPackagesRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPackagesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPackagesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListPackagesRequest} ListPackagesRequest
                         */
                        ListPackagesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListPackagesRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListPackagesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPackagesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListPackagesRequest} message ListPackagesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPackagesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListPackagesRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPackagesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPackagesRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPackagesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListPackagesRequest";
                        };
    
                        return ListPackagesRequest;
                    })();
    
                    v1.ListPackagesResponse = (function() {
    
                        /**
                         * Properties of a ListPackagesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListPackagesResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.IPackage>|null} [packages] ListPackagesResponse packages
                         * @property {string|null} [nextPageToken] ListPackagesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListPackagesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListPackagesResponse.
                         * @implements IListPackagesResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListPackagesResponse=} [properties] Properties to set
                         */
                        function ListPackagesResponse(properties) {
                            this.packages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPackagesResponse packages.
                         * @member {Array.<google.devtools.artifactregistry.v1.IPackage>} packages
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesResponse
                         * @instance
                         */
                        ListPackagesResponse.prototype.packages = $util.emptyArray;
    
                        /**
                         * ListPackagesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesResponse
                         * @instance
                         */
                        ListPackagesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListPackagesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListPackagesResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListPackagesResponse} ListPackagesResponse instance
                         */
                        ListPackagesResponse.create = function create(properties) {
                            return new ListPackagesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListPackagesResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListPackagesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListPackagesResponse} message ListPackagesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPackagesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.packages != null && message.packages.length)
                                for (var i = 0; i < message.packages.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.Package.encode(message.packages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPackagesResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListPackagesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListPackagesResponse} message ListPackagesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPackagesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPackagesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListPackagesResponse} ListPackagesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPackagesResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListPackagesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.packages && message.packages.length))
                                            message.packages = [];
                                        message.packages.push($root.google.devtools.artifactregistry.v1.Package.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPackagesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListPackagesResponse} ListPackagesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPackagesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPackagesResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPackagesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.packages != null && message.hasOwnProperty("packages")) {
                                if (!Array.isArray(message.packages))
                                    return "packages: array expected";
                                for (var i = 0; i < message.packages.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.Package.verify(message.packages[i]);
                                    if (error)
                                        return "packages." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPackagesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListPackagesResponse} ListPackagesResponse
                         */
                        ListPackagesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListPackagesResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListPackagesResponse();
                            if (object.packages) {
                                if (!Array.isArray(object.packages))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ListPackagesResponse.packages: array expected");
                                message.packages = [];
                                for (var i = 0; i < object.packages.length; ++i) {
                                    if (typeof object.packages[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ListPackagesResponse.packages: object expected");
                                    message.packages[i] = $root.google.devtools.artifactregistry.v1.Package.fromObject(object.packages[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPackagesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListPackagesResponse} message ListPackagesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPackagesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.packages = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.packages && message.packages.length) {
                                object.packages = [];
                                for (var j = 0; j < message.packages.length; ++j)
                                    object.packages[j] = $root.google.devtools.artifactregistry.v1.Package.toObject(message.packages[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListPackagesResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPackagesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPackagesResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListPackagesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPackagesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListPackagesResponse";
                        };
    
                        return ListPackagesResponse;
                    })();
    
                    v1.GetPackageRequest = (function() {
    
                        /**
                         * Properties of a GetPackageRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetPackageRequest
                         * @property {string|null} [name] GetPackageRequest name
                         */
    
                        /**
                         * Constructs a new GetPackageRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetPackageRequest.
                         * @implements IGetPackageRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetPackageRequest=} [properties] Properties to set
                         */
                        function GetPackageRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetPackageRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetPackageRequest
                         * @instance
                         */
                        GetPackageRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetPackageRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetPackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetPackageRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetPackageRequest} GetPackageRequest instance
                         */
                        GetPackageRequest.create = function create(properties) {
                            return new GetPackageRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetPackageRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetPackageRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetPackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetPackageRequest} message GetPackageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPackageRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetPackageRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetPackageRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetPackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetPackageRequest} message GetPackageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPackageRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetPackageRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetPackageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetPackageRequest} GetPackageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPackageRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetPackageRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetPackageRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetPackageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetPackageRequest} GetPackageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPackageRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetPackageRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetPackageRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetPackageRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetPackageRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetPackageRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetPackageRequest} GetPackageRequest
                         */
                        GetPackageRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetPackageRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetPackageRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetPackageRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetPackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetPackageRequest} message GetPackageRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetPackageRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetPackageRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetPackageRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetPackageRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetPackageRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetPackageRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetPackageRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetPackageRequest";
                        };
    
                        return GetPackageRequest;
                    })();
    
                    v1.DeletePackageRequest = (function() {
    
                        /**
                         * Properties of a DeletePackageRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IDeletePackageRequest
                         * @property {string|null} [name] DeletePackageRequest name
                         */
    
                        /**
                         * Constructs a new DeletePackageRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a DeletePackageRequest.
                         * @implements IDeletePackageRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IDeletePackageRequest=} [properties] Properties to set
                         */
                        function DeletePackageRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeletePackageRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.DeletePackageRequest
                         * @instance
                         */
                        DeletePackageRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeletePackageRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.DeletePackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeletePackageRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.DeletePackageRequest} DeletePackageRequest instance
                         */
                        DeletePackageRequest.create = function create(properties) {
                            return new DeletePackageRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeletePackageRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.DeletePackageRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.DeletePackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeletePackageRequest} message DeletePackageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeletePackageRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeletePackageRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.DeletePackageRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeletePackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeletePackageRequest} message DeletePackageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeletePackageRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeletePackageRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.DeletePackageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.DeletePackageRequest} DeletePackageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeletePackageRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.DeletePackageRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeletePackageRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeletePackageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.DeletePackageRequest} DeletePackageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeletePackageRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeletePackageRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.DeletePackageRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeletePackageRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeletePackageRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.DeletePackageRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.DeletePackageRequest} DeletePackageRequest
                         */
                        DeletePackageRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.DeletePackageRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.DeletePackageRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeletePackageRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.DeletePackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.DeletePackageRequest} message DeletePackageRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeletePackageRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeletePackageRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.DeletePackageRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeletePackageRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeletePackageRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.DeletePackageRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeletePackageRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.DeletePackageRequest";
                        };
    
                        return DeletePackageRequest;
                    })();
    
                    v1.UpdatePackageRequest = (function() {
    
                        /**
                         * Properties of an UpdatePackageRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IUpdatePackageRequest
                         * @property {google.devtools.artifactregistry.v1.IPackage|null} ["package"] UpdatePackageRequest package
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdatePackageRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdatePackageRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an UpdatePackageRequest.
                         * @implements IUpdatePackageRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IUpdatePackageRequest=} [properties] Properties to set
                         */
                        function UpdatePackageRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdatePackageRequest package.
                         * @member {google.devtools.artifactregistry.v1.IPackage|null|undefined} package
                         * @memberof google.devtools.artifactregistry.v1.UpdatePackageRequest
                         * @instance
                         */
                        UpdatePackageRequest.prototype["package"] = null;
    
                        /**
                         * UpdatePackageRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.devtools.artifactregistry.v1.UpdatePackageRequest
                         * @instance
                         */
                        UpdatePackageRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdatePackageRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.UpdatePackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdatePackageRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.UpdatePackageRequest} UpdatePackageRequest instance
                         */
                        UpdatePackageRequest.create = function create(properties) {
                            return new UpdatePackageRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdatePackageRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdatePackageRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.UpdatePackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdatePackageRequest} message UpdatePackageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdatePackageRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                                $root.google.devtools.artifactregistry.v1.Package.encode(message["package"], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdatePackageRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdatePackageRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdatePackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdatePackageRequest} message UpdatePackageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdatePackageRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdatePackageRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.UpdatePackageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.UpdatePackageRequest} UpdatePackageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdatePackageRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.UpdatePackageRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message["package"] = $root.google.devtools.artifactregistry.v1.Package.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdatePackageRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdatePackageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.UpdatePackageRequest} UpdatePackageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdatePackageRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdatePackageRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.UpdatePackageRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdatePackageRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message["package"] != null && message.hasOwnProperty("package")) {
                                var error = $root.google.devtools.artifactregistry.v1.Package.verify(message["package"]);
                                if (error)
                                    return "package." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdatePackageRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.UpdatePackageRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.UpdatePackageRequest} UpdatePackageRequest
                         */
                        UpdatePackageRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.UpdatePackageRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.UpdatePackageRequest();
                            if (object["package"] != null) {
                                if (typeof object["package"] !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdatePackageRequest.package: object expected");
                                message["package"] = $root.google.devtools.artifactregistry.v1.Package.fromObject(object["package"]);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdatePackageRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdatePackageRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.UpdatePackageRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.UpdatePackageRequest} message UpdatePackageRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdatePackageRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object["package"] = null;
                                object.updateMask = null;
                            }
                            if (message["package"] != null && message.hasOwnProperty("package"))
                                object["package"] = $root.google.devtools.artifactregistry.v1.Package.toObject(message["package"], options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdatePackageRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.UpdatePackageRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdatePackageRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdatePackageRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.UpdatePackageRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdatePackageRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.UpdatePackageRequest";
                        };
    
                        return UpdatePackageRequest;
                    })();
    
                    v1.UpstreamPolicy = (function() {
    
                        /**
                         * Properties of an UpstreamPolicy.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IUpstreamPolicy
                         * @property {string|null} [id] UpstreamPolicy id
                         * @property {string|null} [repository] UpstreamPolicy repository
                         * @property {number|null} [priority] UpstreamPolicy priority
                         */
    
                        /**
                         * Constructs a new UpstreamPolicy.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an UpstreamPolicy.
                         * @implements IUpstreamPolicy
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IUpstreamPolicy=} [properties] Properties to set
                         */
                        function UpstreamPolicy(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpstreamPolicy id.
                         * @member {string} id
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @instance
                         */
                        UpstreamPolicy.prototype.id = "";
    
                        /**
                         * UpstreamPolicy repository.
                         * @member {string} repository
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @instance
                         */
                        UpstreamPolicy.prototype.repository = "";
    
                        /**
                         * UpstreamPolicy priority.
                         * @member {number} priority
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @instance
                         */
                        UpstreamPolicy.prototype.priority = 0;
    
                        /**
                         * Creates a new UpstreamPolicy instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpstreamPolicy=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.UpstreamPolicy} UpstreamPolicy instance
                         */
                        UpstreamPolicy.create = function create(properties) {
                            return new UpstreamPolicy(properties);
                        };
    
                        /**
                         * Encodes the specified UpstreamPolicy message. Does not implicitly {@link google.devtools.artifactregistry.v1.UpstreamPolicy.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpstreamPolicy} message UpstreamPolicy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpstreamPolicy.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                            if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.repository);
                            if (message.priority != null && Object.hasOwnProperty.call(message, "priority"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.priority);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpstreamPolicy message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.UpstreamPolicy.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpstreamPolicy} message UpstreamPolicy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpstreamPolicy.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpstreamPolicy message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.UpstreamPolicy} UpstreamPolicy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpstreamPolicy.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.UpstreamPolicy();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.repository = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.priority = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpstreamPolicy message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.UpstreamPolicy} UpstreamPolicy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpstreamPolicy.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpstreamPolicy message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpstreamPolicy.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.repository != null && message.hasOwnProperty("repository"))
                                if (!$util.isString(message.repository))
                                    return "repository: string expected";
                            if (message.priority != null && message.hasOwnProperty("priority"))
                                if (!$util.isInteger(message.priority))
                                    return "priority: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpstreamPolicy message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.UpstreamPolicy} UpstreamPolicy
                         */
                        UpstreamPolicy.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.UpstreamPolicy)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.UpstreamPolicy();
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.repository != null)
                                message.repository = String(object.repository);
                            if (object.priority != null)
                                message.priority = object.priority | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpstreamPolicy message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @static
                         * @param {google.devtools.artifactregistry.v1.UpstreamPolicy} message UpstreamPolicy
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpstreamPolicy.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.id = "";
                                object.repository = "";
                                object.priority = 0;
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.repository != null && message.hasOwnProperty("repository"))
                                object.repository = message.repository;
                            if (message.priority != null && message.hasOwnProperty("priority"))
                                object.priority = message.priority;
                            return object;
                        };
    
                        /**
                         * Converts this UpstreamPolicy to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpstreamPolicy.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpstreamPolicy
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.UpstreamPolicy
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpstreamPolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.UpstreamPolicy";
                        };
    
                        return UpstreamPolicy;
                    })();
    
                    v1.CleanupPolicyCondition = (function() {
    
                        /**
                         * Properties of a CleanupPolicyCondition.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface ICleanupPolicyCondition
                         * @property {google.devtools.artifactregistry.v1.CleanupPolicyCondition.TagState|null} [tagState] CleanupPolicyCondition tagState
                         * @property {Array.<string>|null} [tagPrefixes] CleanupPolicyCondition tagPrefixes
                         * @property {Array.<string>|null} [versionNamePrefixes] CleanupPolicyCondition versionNamePrefixes
                         * @property {Array.<string>|null} [packageNamePrefixes] CleanupPolicyCondition packageNamePrefixes
                         * @property {google.protobuf.IDuration|null} [olderThan] CleanupPolicyCondition olderThan
                         * @property {google.protobuf.IDuration|null} [newerThan] CleanupPolicyCondition newerThan
                         */
    
                        /**
                         * Constructs a new CleanupPolicyCondition.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a CleanupPolicyCondition.
                         * @implements ICleanupPolicyCondition
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.ICleanupPolicyCondition=} [properties] Properties to set
                         */
                        function CleanupPolicyCondition(properties) {
                            this.tagPrefixes = [];
                            this.versionNamePrefixes = [];
                            this.packageNamePrefixes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CleanupPolicyCondition tagState.
                         * @member {google.devtools.artifactregistry.v1.CleanupPolicyCondition.TagState|null|undefined} tagState
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @instance
                         */
                        CleanupPolicyCondition.prototype.tagState = null;
    
                        /**
                         * CleanupPolicyCondition tagPrefixes.
                         * @member {Array.<string>} tagPrefixes
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @instance
                         */
                        CleanupPolicyCondition.prototype.tagPrefixes = $util.emptyArray;
    
                        /**
                         * CleanupPolicyCondition versionNamePrefixes.
                         * @member {Array.<string>} versionNamePrefixes
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @instance
                         */
                        CleanupPolicyCondition.prototype.versionNamePrefixes = $util.emptyArray;
    
                        /**
                         * CleanupPolicyCondition packageNamePrefixes.
                         * @member {Array.<string>} packageNamePrefixes
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @instance
                         */
                        CleanupPolicyCondition.prototype.packageNamePrefixes = $util.emptyArray;
    
                        /**
                         * CleanupPolicyCondition olderThan.
                         * @member {google.protobuf.IDuration|null|undefined} olderThan
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @instance
                         */
                        CleanupPolicyCondition.prototype.olderThan = null;
    
                        /**
                         * CleanupPolicyCondition newerThan.
                         * @member {google.protobuf.IDuration|null|undefined} newerThan
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @instance
                         */
                        CleanupPolicyCondition.prototype.newerThan = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        // Virtual OneOf for proto3 optional field
                        Object.defineProperty(CleanupPolicyCondition.prototype, "_tagState", {
                            get: $util.oneOfGetter($oneOfFields = ["tagState"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        // Virtual OneOf for proto3 optional field
                        Object.defineProperty(CleanupPolicyCondition.prototype, "_olderThan", {
                            get: $util.oneOfGetter($oneOfFields = ["olderThan"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        // Virtual OneOf for proto3 optional field
                        Object.defineProperty(CleanupPolicyCondition.prototype, "_newerThan", {
                            get: $util.oneOfGetter($oneOfFields = ["newerThan"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CleanupPolicyCondition instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICleanupPolicyCondition=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.CleanupPolicyCondition} CleanupPolicyCondition instance
                         */
                        CleanupPolicyCondition.create = function create(properties) {
                            return new CleanupPolicyCondition(properties);
                        };
    
                        /**
                         * Encodes the specified CleanupPolicyCondition message. Does not implicitly {@link google.devtools.artifactregistry.v1.CleanupPolicyCondition.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICleanupPolicyCondition} message CleanupPolicyCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CleanupPolicyCondition.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tagState != null && Object.hasOwnProperty.call(message, "tagState"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.tagState);
                            if (message.tagPrefixes != null && message.tagPrefixes.length)
                                for (var i = 0; i < message.tagPrefixes.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.tagPrefixes[i]);
                            if (message.versionNamePrefixes != null && message.versionNamePrefixes.length)
                                for (var i = 0; i < message.versionNamePrefixes.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.versionNamePrefixes[i]);
                            if (message.packageNamePrefixes != null && message.packageNamePrefixes.length)
                                for (var i = 0; i < message.packageNamePrefixes.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.packageNamePrefixes[i]);
                            if (message.olderThan != null && Object.hasOwnProperty.call(message, "olderThan"))
                                $root.google.protobuf.Duration.encode(message.olderThan, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.newerThan != null && Object.hasOwnProperty.call(message, "newerThan"))
                                $root.google.protobuf.Duration.encode(message.newerThan, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CleanupPolicyCondition message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.CleanupPolicyCondition.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICleanupPolicyCondition} message CleanupPolicyCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CleanupPolicyCondition.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CleanupPolicyCondition message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.CleanupPolicyCondition} CleanupPolicyCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CleanupPolicyCondition.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.CleanupPolicyCondition();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.tagState = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.tagPrefixes && message.tagPrefixes.length))
                                            message.tagPrefixes = [];
                                        message.tagPrefixes.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.versionNamePrefixes && message.versionNamePrefixes.length))
                                            message.versionNamePrefixes = [];
                                        message.versionNamePrefixes.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.packageNamePrefixes && message.packageNamePrefixes.length))
                                            message.packageNamePrefixes = [];
                                        message.packageNamePrefixes.push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        message.olderThan = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.newerThan = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CleanupPolicyCondition message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.CleanupPolicyCondition} CleanupPolicyCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CleanupPolicyCondition.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CleanupPolicyCondition message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CleanupPolicyCondition.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.tagState != null && message.hasOwnProperty("tagState")) {
                                properties._tagState = 1;
                                switch (message.tagState) {
                                default:
                                    return "tagState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            }
                            if (message.tagPrefixes != null && message.hasOwnProperty("tagPrefixes")) {
                                if (!Array.isArray(message.tagPrefixes))
                                    return "tagPrefixes: array expected";
                                for (var i = 0; i < message.tagPrefixes.length; ++i)
                                    if (!$util.isString(message.tagPrefixes[i]))
                                        return "tagPrefixes: string[] expected";
                            }
                            if (message.versionNamePrefixes != null && message.hasOwnProperty("versionNamePrefixes")) {
                                if (!Array.isArray(message.versionNamePrefixes))
                                    return "versionNamePrefixes: array expected";
                                for (var i = 0; i < message.versionNamePrefixes.length; ++i)
                                    if (!$util.isString(message.versionNamePrefixes[i]))
                                        return "versionNamePrefixes: string[] expected";
                            }
                            if (message.packageNamePrefixes != null && message.hasOwnProperty("packageNamePrefixes")) {
                                if (!Array.isArray(message.packageNamePrefixes))
                                    return "packageNamePrefixes: array expected";
                                for (var i = 0; i < message.packageNamePrefixes.length; ++i)
                                    if (!$util.isString(message.packageNamePrefixes[i]))
                                        return "packageNamePrefixes: string[] expected";
                            }
                            if (message.olderThan != null && message.hasOwnProperty("olderThan")) {
                                properties._olderThan = 1;
                                {
                                    var error = $root.google.protobuf.Duration.verify(message.olderThan);
                                    if (error)
                                        return "olderThan." + error;
                                }
                            }
                            if (message.newerThan != null && message.hasOwnProperty("newerThan")) {
                                properties._newerThan = 1;
                                {
                                    var error = $root.google.protobuf.Duration.verify(message.newerThan);
                                    if (error)
                                        return "newerThan." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CleanupPolicyCondition message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.CleanupPolicyCondition} CleanupPolicyCondition
                         */
                        CleanupPolicyCondition.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.CleanupPolicyCondition)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.CleanupPolicyCondition();
                            switch (object.tagState) {
                            default:
                                if (typeof object.tagState === "number") {
                                    message.tagState = object.tagState;
                                    break;
                                }
                                break;
                            case "TAG_STATE_UNSPECIFIED":
                            case 0:
                                message.tagState = 0;
                                break;
                            case "TAGGED":
                            case 1:
                                message.tagState = 1;
                                break;
                            case "UNTAGGED":
                            case 2:
                                message.tagState = 2;
                                break;
                            case "ANY":
                            case 3:
                                message.tagState = 3;
                                break;
                            }
                            if (object.tagPrefixes) {
                                if (!Array.isArray(object.tagPrefixes))
                                    throw TypeError(".google.devtools.artifactregistry.v1.CleanupPolicyCondition.tagPrefixes: array expected");
                                message.tagPrefixes = [];
                                for (var i = 0; i < object.tagPrefixes.length; ++i)
                                    message.tagPrefixes[i] = String(object.tagPrefixes[i]);
                            }
                            if (object.versionNamePrefixes) {
                                if (!Array.isArray(object.versionNamePrefixes))
                                    throw TypeError(".google.devtools.artifactregistry.v1.CleanupPolicyCondition.versionNamePrefixes: array expected");
                                message.versionNamePrefixes = [];
                                for (var i = 0; i < object.versionNamePrefixes.length; ++i)
                                    message.versionNamePrefixes[i] = String(object.versionNamePrefixes[i]);
                            }
                            if (object.packageNamePrefixes) {
                                if (!Array.isArray(object.packageNamePrefixes))
                                    throw TypeError(".google.devtools.artifactregistry.v1.CleanupPolicyCondition.packageNamePrefixes: array expected");
                                message.packageNamePrefixes = [];
                                for (var i = 0; i < object.packageNamePrefixes.length; ++i)
                                    message.packageNamePrefixes[i] = String(object.packageNamePrefixes[i]);
                            }
                            if (object.olderThan != null) {
                                if (typeof object.olderThan !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.CleanupPolicyCondition.olderThan: object expected");
                                message.olderThan = $root.google.protobuf.Duration.fromObject(object.olderThan);
                            }
                            if (object.newerThan != null) {
                                if (typeof object.newerThan !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.CleanupPolicyCondition.newerThan: object expected");
                                message.newerThan = $root.google.protobuf.Duration.fromObject(object.newerThan);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CleanupPolicyCondition message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @static
                         * @param {google.devtools.artifactregistry.v1.CleanupPolicyCondition} message CleanupPolicyCondition
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CleanupPolicyCondition.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.tagPrefixes = [];
                                object.versionNamePrefixes = [];
                                object.packageNamePrefixes = [];
                            }
                            if (message.tagState != null && message.hasOwnProperty("tagState")) {
                                object.tagState = options.enums === String ? $root.google.devtools.artifactregistry.v1.CleanupPolicyCondition.TagState[message.tagState] === undefined ? message.tagState : $root.google.devtools.artifactregistry.v1.CleanupPolicyCondition.TagState[message.tagState] : message.tagState;
                                if (options.oneofs)
                                    object._tagState = "tagState";
                            }
                            if (message.tagPrefixes && message.tagPrefixes.length) {
                                object.tagPrefixes = [];
                                for (var j = 0; j < message.tagPrefixes.length; ++j)
                                    object.tagPrefixes[j] = message.tagPrefixes[j];
                            }
                            if (message.versionNamePrefixes && message.versionNamePrefixes.length) {
                                object.versionNamePrefixes = [];
                                for (var j = 0; j < message.versionNamePrefixes.length; ++j)
                                    object.versionNamePrefixes[j] = message.versionNamePrefixes[j];
                            }
                            if (message.packageNamePrefixes && message.packageNamePrefixes.length) {
                                object.packageNamePrefixes = [];
                                for (var j = 0; j < message.packageNamePrefixes.length; ++j)
                                    object.packageNamePrefixes[j] = message.packageNamePrefixes[j];
                            }
                            if (message.olderThan != null && message.hasOwnProperty("olderThan")) {
                                object.olderThan = $root.google.protobuf.Duration.toObject(message.olderThan, options);
                                if (options.oneofs)
                                    object._olderThan = "olderThan";
                            }
                            if (message.newerThan != null && message.hasOwnProperty("newerThan")) {
                                object.newerThan = $root.google.protobuf.Duration.toObject(message.newerThan, options);
                                if (options.oneofs)
                                    object._newerThan = "newerThan";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CleanupPolicyCondition to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CleanupPolicyCondition.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CleanupPolicyCondition
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyCondition
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CleanupPolicyCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.CleanupPolicyCondition";
                        };
    
                        /**
                         * TagState enum.
                         * @name google.devtools.artifactregistry.v1.CleanupPolicyCondition.TagState
                         * @enum {number}
                         * @property {number} TAG_STATE_UNSPECIFIED=0 TAG_STATE_UNSPECIFIED value
                         * @property {number} TAGGED=1 TAGGED value
                         * @property {number} UNTAGGED=2 UNTAGGED value
                         * @property {number} ANY=3 ANY value
                         */
                        CleanupPolicyCondition.TagState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TAG_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "TAGGED"] = 1;
                            values[valuesById[2] = "UNTAGGED"] = 2;
                            values[valuesById[3] = "ANY"] = 3;
                            return values;
                        })();
    
                        return CleanupPolicyCondition;
                    })();
    
                    v1.CleanupPolicyMostRecentVersions = (function() {
    
                        /**
                         * Properties of a CleanupPolicyMostRecentVersions.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface ICleanupPolicyMostRecentVersions
                         * @property {Array.<string>|null} [packageNamePrefixes] CleanupPolicyMostRecentVersions packageNamePrefixes
                         * @property {number|null} [keepCount] CleanupPolicyMostRecentVersions keepCount
                         */
    
                        /**
                         * Constructs a new CleanupPolicyMostRecentVersions.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a CleanupPolicyMostRecentVersions.
                         * @implements ICleanupPolicyMostRecentVersions
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.ICleanupPolicyMostRecentVersions=} [properties] Properties to set
                         */
                        function CleanupPolicyMostRecentVersions(properties) {
                            this.packageNamePrefixes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CleanupPolicyMostRecentVersions packageNamePrefixes.
                         * @member {Array.<string>} packageNamePrefixes
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
                         * @instance
                         */
                        CleanupPolicyMostRecentVersions.prototype.packageNamePrefixes = $util.emptyArray;
    
                        /**
                         * CleanupPolicyMostRecentVersions keepCount.
                         * @member {number|null|undefined} keepCount
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
                         * @instance
                         */
                        CleanupPolicyMostRecentVersions.prototype.keepCount = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        // Virtual OneOf for proto3 optional field
                        Object.defineProperty(CleanupPolicyMostRecentVersions.prototype, "_keepCount", {
                            get: $util.oneOfGetter($oneOfFields = ["keepCount"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CleanupPolicyMostRecentVersions instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICleanupPolicyMostRecentVersions=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions} CleanupPolicyMostRecentVersions instance
                         */
                        CleanupPolicyMostRecentVersions.create = function create(properties) {
                            return new CleanupPolicyMostRecentVersions(properties);
                        };
    
                        /**
                         * Encodes the specified CleanupPolicyMostRecentVersions message. Does not implicitly {@link google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICleanupPolicyMostRecentVersions} message CleanupPolicyMostRecentVersions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CleanupPolicyMostRecentVersions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.packageNamePrefixes != null && message.packageNamePrefixes.length)
                                for (var i = 0; i < message.packageNamePrefixes.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.packageNamePrefixes[i]);
                            if (message.keepCount != null && Object.hasOwnProperty.call(message, "keepCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.keepCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CleanupPolicyMostRecentVersions message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICleanupPolicyMostRecentVersions} message CleanupPolicyMostRecentVersions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CleanupPolicyMostRecentVersions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CleanupPolicyMostRecentVersions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions} CleanupPolicyMostRecentVersions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CleanupPolicyMostRecentVersions.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.packageNamePrefixes && message.packageNamePrefixes.length))
                                            message.packageNamePrefixes = [];
                                        message.packageNamePrefixes.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        message.keepCount = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CleanupPolicyMostRecentVersions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions} CleanupPolicyMostRecentVersions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CleanupPolicyMostRecentVersions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CleanupPolicyMostRecentVersions message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CleanupPolicyMostRecentVersions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.packageNamePrefixes != null && message.hasOwnProperty("packageNamePrefixes")) {
                                if (!Array.isArray(message.packageNamePrefixes))
                                    return "packageNamePrefixes: array expected";
                                for (var i = 0; i < message.packageNamePrefixes.length; ++i)
                                    if (!$util.isString(message.packageNamePrefixes[i]))
                                        return "packageNamePrefixes: string[] expected";
                            }
                            if (message.keepCount != null && message.hasOwnProperty("keepCount")) {
                                properties._keepCount = 1;
                                if (!$util.isInteger(message.keepCount))
                                    return "keepCount: integer expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CleanupPolicyMostRecentVersions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions} CleanupPolicyMostRecentVersions
                         */
                        CleanupPolicyMostRecentVersions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions();
                            if (object.packageNamePrefixes) {
                                if (!Array.isArray(object.packageNamePrefixes))
                                    throw TypeError(".google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions.packageNamePrefixes: array expected");
                                message.packageNamePrefixes = [];
                                for (var i = 0; i < object.packageNamePrefixes.length; ++i)
                                    message.packageNamePrefixes[i] = String(object.packageNamePrefixes[i]);
                            }
                            if (object.keepCount != null)
                                message.keepCount = object.keepCount | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CleanupPolicyMostRecentVersions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
                         * @static
                         * @param {google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions} message CleanupPolicyMostRecentVersions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CleanupPolicyMostRecentVersions.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.packageNamePrefixes = [];
                            if (message.packageNamePrefixes && message.packageNamePrefixes.length) {
                                object.packageNamePrefixes = [];
                                for (var j = 0; j < message.packageNamePrefixes.length; ++j)
                                    object.packageNamePrefixes[j] = message.packageNamePrefixes[j];
                            }
                            if (message.keepCount != null && message.hasOwnProperty("keepCount")) {
                                object.keepCount = message.keepCount;
                                if (options.oneofs)
                                    object._keepCount = "keepCount";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CleanupPolicyMostRecentVersions to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CleanupPolicyMostRecentVersions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CleanupPolicyMostRecentVersions
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CleanupPolicyMostRecentVersions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions";
                        };
    
                        return CleanupPolicyMostRecentVersions;
                    })();
    
                    v1.CleanupPolicy = (function() {
    
                        /**
                         * Properties of a CleanupPolicy.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface ICleanupPolicy
                         * @property {google.devtools.artifactregistry.v1.ICleanupPolicyCondition|null} [condition] CleanupPolicy condition
                         * @property {google.devtools.artifactregistry.v1.ICleanupPolicyMostRecentVersions|null} [mostRecentVersions] CleanupPolicy mostRecentVersions
                         * @property {string|null} [id] CleanupPolicy id
                         * @property {google.devtools.artifactregistry.v1.CleanupPolicy.Action|null} [action] CleanupPolicy action
                         */
    
                        /**
                         * Constructs a new CleanupPolicy.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a CleanupPolicy.
                         * @implements ICleanupPolicy
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.ICleanupPolicy=} [properties] Properties to set
                         */
                        function CleanupPolicy(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CleanupPolicy condition.
                         * @member {google.devtools.artifactregistry.v1.ICleanupPolicyCondition|null|undefined} condition
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @instance
                         */
                        CleanupPolicy.prototype.condition = null;
    
                        /**
                         * CleanupPolicy mostRecentVersions.
                         * @member {google.devtools.artifactregistry.v1.ICleanupPolicyMostRecentVersions|null|undefined} mostRecentVersions
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @instance
                         */
                        CleanupPolicy.prototype.mostRecentVersions = null;
    
                        /**
                         * CleanupPolicy id.
                         * @member {string} id
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @instance
                         */
                        CleanupPolicy.prototype.id = "";
    
                        /**
                         * CleanupPolicy action.
                         * @member {google.devtools.artifactregistry.v1.CleanupPolicy.Action} action
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @instance
                         */
                        CleanupPolicy.prototype.action = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CleanupPolicy conditionType.
                         * @member {"condition"|"mostRecentVersions"|undefined} conditionType
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @instance
                         */
                        Object.defineProperty(CleanupPolicy.prototype, "conditionType", {
                            get: $util.oneOfGetter($oneOfFields = ["condition", "mostRecentVersions"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CleanupPolicy instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICleanupPolicy=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.CleanupPolicy} CleanupPolicy instance
                         */
                        CleanupPolicy.create = function create(properties) {
                            return new CleanupPolicy(properties);
                        };
    
                        /**
                         * Encodes the specified CleanupPolicy message. Does not implicitly {@link google.devtools.artifactregistry.v1.CleanupPolicy.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICleanupPolicy} message CleanupPolicy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CleanupPolicy.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                            if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                                $root.google.devtools.artifactregistry.v1.CleanupPolicyCondition.encode(message.condition, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.action);
                            if (message.mostRecentVersions != null && Object.hasOwnProperty.call(message, "mostRecentVersions"))
                                $root.google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions.encode(message.mostRecentVersions, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CleanupPolicy message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.CleanupPolicy.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICleanupPolicy} message CleanupPolicy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CleanupPolicy.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CleanupPolicy message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.CleanupPolicy} CleanupPolicy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CleanupPolicy.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.CleanupPolicy();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.condition = $root.google.devtools.artifactregistry.v1.CleanupPolicyCondition.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.mostRecentVersions = $root.google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.action = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CleanupPolicy message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.CleanupPolicy} CleanupPolicy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CleanupPolicy.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CleanupPolicy message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CleanupPolicy.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.condition != null && message.hasOwnProperty("condition")) {
                                properties.conditionType = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.CleanupPolicyCondition.verify(message.condition);
                                    if (error)
                                        return "condition." + error;
                                }
                            }
                            if (message.mostRecentVersions != null && message.hasOwnProperty("mostRecentVersions")) {
                                if (properties.conditionType === 1)
                                    return "conditionType: multiple values";
                                properties.conditionType = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions.verify(message.mostRecentVersions);
                                    if (error)
                                        return "mostRecentVersions." + error;
                                }
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.action != null && message.hasOwnProperty("action"))
                                switch (message.action) {
                                default:
                                    return "action: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CleanupPolicy message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.CleanupPolicy} CleanupPolicy
                         */
                        CleanupPolicy.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.CleanupPolicy)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.CleanupPolicy();
                            if (object.condition != null) {
                                if (typeof object.condition !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.CleanupPolicy.condition: object expected");
                                message.condition = $root.google.devtools.artifactregistry.v1.CleanupPolicyCondition.fromObject(object.condition);
                            }
                            if (object.mostRecentVersions != null) {
                                if (typeof object.mostRecentVersions !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.CleanupPolicy.mostRecentVersions: object expected");
                                message.mostRecentVersions = $root.google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions.fromObject(object.mostRecentVersions);
                            }
                            if (object.id != null)
                                message.id = String(object.id);
                            switch (object.action) {
                            default:
                                if (typeof object.action === "number") {
                                    message.action = object.action;
                                    break;
                                }
                                break;
                            case "ACTION_UNSPECIFIED":
                            case 0:
                                message.action = 0;
                                break;
                            case "DELETE":
                            case 1:
                                message.action = 1;
                                break;
                            case "KEEP":
                            case 2:
                                message.action = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CleanupPolicy message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @static
                         * @param {google.devtools.artifactregistry.v1.CleanupPolicy} message CleanupPolicy
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CleanupPolicy.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.id = "";
                                object.action = options.enums === String ? "ACTION_UNSPECIFIED" : 0;
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.condition != null && message.hasOwnProperty("condition")) {
                                object.condition = $root.google.devtools.artifactregistry.v1.CleanupPolicyCondition.toObject(message.condition, options);
                                if (options.oneofs)
                                    object.conditionType = "condition";
                            }
                            if (message.action != null && message.hasOwnProperty("action"))
                                object.action = options.enums === String ? $root.google.devtools.artifactregistry.v1.CleanupPolicy.Action[message.action] === undefined ? message.action : $root.google.devtools.artifactregistry.v1.CleanupPolicy.Action[message.action] : message.action;
                            if (message.mostRecentVersions != null && message.hasOwnProperty("mostRecentVersions")) {
                                object.mostRecentVersions = $root.google.devtools.artifactregistry.v1.CleanupPolicyMostRecentVersions.toObject(message.mostRecentVersions, options);
                                if (options.oneofs)
                                    object.conditionType = "mostRecentVersions";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CleanupPolicy to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CleanupPolicy.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CleanupPolicy
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.CleanupPolicy
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CleanupPolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.CleanupPolicy";
                        };
    
                        /**
                         * Action enum.
                         * @name google.devtools.artifactregistry.v1.CleanupPolicy.Action
                         * @enum {number}
                         * @property {number} ACTION_UNSPECIFIED=0 ACTION_UNSPECIFIED value
                         * @property {number} DELETE=1 DELETE value
                         * @property {number} KEEP=2 KEEP value
                         */
                        CleanupPolicy.Action = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ACTION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DELETE"] = 1;
                            values[valuesById[2] = "KEEP"] = 2;
                            return values;
                        })();
    
                        return CleanupPolicy;
                    })();
    
                    v1.VirtualRepositoryConfig = (function() {
    
                        /**
                         * Properties of a VirtualRepositoryConfig.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IVirtualRepositoryConfig
                         * @property {Array.<google.devtools.artifactregistry.v1.IUpstreamPolicy>|null} [upstreamPolicies] VirtualRepositoryConfig upstreamPolicies
                         */
    
                        /**
                         * Constructs a new VirtualRepositoryConfig.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a VirtualRepositoryConfig.
                         * @implements IVirtualRepositoryConfig
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IVirtualRepositoryConfig=} [properties] Properties to set
                         */
                        function VirtualRepositoryConfig(properties) {
                            this.upstreamPolicies = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VirtualRepositoryConfig upstreamPolicies.
                         * @member {Array.<google.devtools.artifactregistry.v1.IUpstreamPolicy>} upstreamPolicies
                         * @memberof google.devtools.artifactregistry.v1.VirtualRepositoryConfig
                         * @instance
                         */
                        VirtualRepositoryConfig.prototype.upstreamPolicies = $util.emptyArray;
    
                        /**
                         * Creates a new VirtualRepositoryConfig instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.VirtualRepositoryConfig
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IVirtualRepositoryConfig=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.VirtualRepositoryConfig} VirtualRepositoryConfig instance
                         */
                        VirtualRepositoryConfig.create = function create(properties) {
                            return new VirtualRepositoryConfig(properties);
                        };
    
                        /**
                         * Encodes the specified VirtualRepositoryConfig message. Does not implicitly {@link google.devtools.artifactregistry.v1.VirtualRepositoryConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.VirtualRepositoryConfig
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IVirtualRepositoryConfig} message VirtualRepositoryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VirtualRepositoryConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.upstreamPolicies != null && message.upstreamPolicies.length)
                                for (var i = 0; i < message.upstreamPolicies.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.UpstreamPolicy.encode(message.upstreamPolicies[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VirtualRepositoryConfig message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.VirtualRepositoryConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.VirtualRepositoryConfig
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IVirtualRepositoryConfig} message VirtualRepositoryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VirtualRepositoryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VirtualRepositoryConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.VirtualRepositoryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.VirtualRepositoryConfig} VirtualRepositoryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VirtualRepositoryConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.VirtualRepositoryConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.upstreamPolicies && message.upstreamPolicies.length))
                                            message.upstreamPolicies = [];
                                        message.upstreamPolicies.push($root.google.devtools.artifactregistry.v1.UpstreamPolicy.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VirtualRepositoryConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.VirtualRepositoryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.VirtualRepositoryConfig} VirtualRepositoryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VirtualRepositoryConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VirtualRepositoryConfig message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.VirtualRepositoryConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VirtualRepositoryConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.upstreamPolicies != null && message.hasOwnProperty("upstreamPolicies")) {
                                if (!Array.isArray(message.upstreamPolicies))
                                    return "upstreamPolicies: array expected";
                                for (var i = 0; i < message.upstreamPolicies.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.UpstreamPolicy.verify(message.upstreamPolicies[i]);
                                    if (error)
                                        return "upstreamPolicies." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a VirtualRepositoryConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.VirtualRepositoryConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.VirtualRepositoryConfig} VirtualRepositoryConfig
                         */
                        VirtualRepositoryConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.VirtualRepositoryConfig)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.VirtualRepositoryConfig();
                            if (object.upstreamPolicies) {
                                if (!Array.isArray(object.upstreamPolicies))
                                    throw TypeError(".google.devtools.artifactregistry.v1.VirtualRepositoryConfig.upstreamPolicies: array expected");
                                message.upstreamPolicies = [];
                                for (var i = 0; i < object.upstreamPolicies.length; ++i) {
                                    if (typeof object.upstreamPolicies[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.VirtualRepositoryConfig.upstreamPolicies: object expected");
                                    message.upstreamPolicies[i] = $root.google.devtools.artifactregistry.v1.UpstreamPolicy.fromObject(object.upstreamPolicies[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VirtualRepositoryConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.VirtualRepositoryConfig
                         * @static
                         * @param {google.devtools.artifactregistry.v1.VirtualRepositoryConfig} message VirtualRepositoryConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VirtualRepositoryConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.upstreamPolicies = [];
                            if (message.upstreamPolicies && message.upstreamPolicies.length) {
                                object.upstreamPolicies = [];
                                for (var j = 0; j < message.upstreamPolicies.length; ++j)
                                    object.upstreamPolicies[j] = $root.google.devtools.artifactregistry.v1.UpstreamPolicy.toObject(message.upstreamPolicies[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this VirtualRepositoryConfig to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.VirtualRepositoryConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VirtualRepositoryConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VirtualRepositoryConfig
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.VirtualRepositoryConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VirtualRepositoryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.VirtualRepositoryConfig";
                        };
    
                        return VirtualRepositoryConfig;
                    })();
    
                    v1.RemoteRepositoryConfig = (function() {
    
                        /**
                         * Properties of a RemoteRepositoryConfig.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IRemoteRepositoryConfig
                         * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IDockerRepository|null} [dockerRepository] RemoteRepositoryConfig dockerRepository
                         * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IMavenRepository|null} [mavenRepository] RemoteRepositoryConfig mavenRepository
                         * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.INpmRepository|null} [npmRepository] RemoteRepositoryConfig npmRepository
                         * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IPythonRepository|null} [pythonRepository] RemoteRepositoryConfig pythonRepository
                         * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IAptRepository|null} [aptRepository] RemoteRepositoryConfig aptRepository
                         * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IYumRepository|null} [yumRepository] RemoteRepositoryConfig yumRepository
                         * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.ICommonRemoteRepository|null} [commonRepository] RemoteRepositoryConfig commonRepository
                         * @property {string|null} [description] RemoteRepositoryConfig description
                         * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IUpstreamCredentials|null} [upstreamCredentials] RemoteRepositoryConfig upstreamCredentials
                         * @property {boolean|null} [disableUpstreamValidation] RemoteRepositoryConfig disableUpstreamValidation
                         */
    
                        /**
                         * Constructs a new RemoteRepositoryConfig.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a RemoteRepositoryConfig.
                         * @implements IRemoteRepositoryConfig
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IRemoteRepositoryConfig=} [properties] Properties to set
                         */
                        function RemoteRepositoryConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RemoteRepositoryConfig dockerRepository.
                         * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IDockerRepository|null|undefined} dockerRepository
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @instance
                         */
                        RemoteRepositoryConfig.prototype.dockerRepository = null;
    
                        /**
                         * RemoteRepositoryConfig mavenRepository.
                         * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IMavenRepository|null|undefined} mavenRepository
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @instance
                         */
                        RemoteRepositoryConfig.prototype.mavenRepository = null;
    
                        /**
                         * RemoteRepositoryConfig npmRepository.
                         * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.INpmRepository|null|undefined} npmRepository
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @instance
                         */
                        RemoteRepositoryConfig.prototype.npmRepository = null;
    
                        /**
                         * RemoteRepositoryConfig pythonRepository.
                         * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IPythonRepository|null|undefined} pythonRepository
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @instance
                         */
                        RemoteRepositoryConfig.prototype.pythonRepository = null;
    
                        /**
                         * RemoteRepositoryConfig aptRepository.
                         * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IAptRepository|null|undefined} aptRepository
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @instance
                         */
                        RemoteRepositoryConfig.prototype.aptRepository = null;
    
                        /**
                         * RemoteRepositoryConfig yumRepository.
                         * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IYumRepository|null|undefined} yumRepository
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @instance
                         */
                        RemoteRepositoryConfig.prototype.yumRepository = null;
    
                        /**
                         * RemoteRepositoryConfig commonRepository.
                         * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.ICommonRemoteRepository|null|undefined} commonRepository
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @instance
                         */
                        RemoteRepositoryConfig.prototype.commonRepository = null;
    
                        /**
                         * RemoteRepositoryConfig description.
                         * @member {string} description
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @instance
                         */
                        RemoteRepositoryConfig.prototype.description = "";
    
                        /**
                         * RemoteRepositoryConfig upstreamCredentials.
                         * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IUpstreamCredentials|null|undefined} upstreamCredentials
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @instance
                         */
                        RemoteRepositoryConfig.prototype.upstreamCredentials = null;
    
                        /**
                         * RemoteRepositoryConfig disableUpstreamValidation.
                         * @member {boolean} disableUpstreamValidation
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @instance
                         */
                        RemoteRepositoryConfig.prototype.disableUpstreamValidation = false;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RemoteRepositoryConfig remoteSource.
                         * @member {"dockerRepository"|"mavenRepository"|"npmRepository"|"pythonRepository"|"aptRepository"|"yumRepository"|"commonRepository"|undefined} remoteSource
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @instance
                         */
                        Object.defineProperty(RemoteRepositoryConfig.prototype, "remoteSource", {
                            get: $util.oneOfGetter($oneOfFields = ["dockerRepository", "mavenRepository", "npmRepository", "pythonRepository", "aptRepository", "yumRepository", "commonRepository"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RemoteRepositoryConfig instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IRemoteRepositoryConfig=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig} RemoteRepositoryConfig instance
                         */
                        RemoteRepositoryConfig.create = function create(properties) {
                            return new RemoteRepositoryConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RemoteRepositoryConfig message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IRemoteRepositoryConfig} message RemoteRepositoryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RemoteRepositoryConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.description);
                            if (message.dockerRepository != null && Object.hasOwnProperty.call(message, "dockerRepository"))
                                $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.encode(message.dockerRepository, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.mavenRepository != null && Object.hasOwnProperty.call(message, "mavenRepository"))
                                $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.encode(message.mavenRepository, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.npmRepository != null && Object.hasOwnProperty.call(message, "npmRepository"))
                                $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.encode(message.npmRepository, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.pythonRepository != null && Object.hasOwnProperty.call(message, "pythonRepository"))
                                $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.encode(message.pythonRepository, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.aptRepository != null && Object.hasOwnProperty.call(message, "aptRepository"))
                                $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.encode(message.aptRepository, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.yumRepository != null && Object.hasOwnProperty.call(message, "yumRepository"))
                                $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.encode(message.yumRepository, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.upstreamCredentials != null && Object.hasOwnProperty.call(message, "upstreamCredentials"))
                                $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.encode(message.upstreamCredentials, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.disableUpstreamValidation != null && Object.hasOwnProperty.call(message, "disableUpstreamValidation"))
                                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.disableUpstreamValidation);
                            if (message.commonRepository != null && Object.hasOwnProperty.call(message, "commonRepository"))
                                $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository.encode(message.commonRepository, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RemoteRepositoryConfig message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IRemoteRepositoryConfig} message RemoteRepositoryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RemoteRepositoryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RemoteRepositoryConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig} RemoteRepositoryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RemoteRepositoryConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.dockerRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.mavenRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.npmRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.pythonRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.aptRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.yumRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.commonRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.upstreamCredentials = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.disableUpstreamValidation = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RemoteRepositoryConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig} RemoteRepositoryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RemoteRepositoryConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RemoteRepositoryConfig message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RemoteRepositoryConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.dockerRepository != null && message.hasOwnProperty("dockerRepository")) {
                                properties.remoteSource = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.verify(message.dockerRepository);
                                    if (error)
                                        return "dockerRepository." + error;
                                }
                            }
                            if (message.mavenRepository != null && message.hasOwnProperty("mavenRepository")) {
                                if (properties.remoteSource === 1)
                                    return "remoteSource: multiple values";
                                properties.remoteSource = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.verify(message.mavenRepository);
                                    if (error)
                                        return "mavenRepository." + error;
                                }
                            }
                            if (message.npmRepository != null && message.hasOwnProperty("npmRepository")) {
                                if (properties.remoteSource === 1)
                                    return "remoteSource: multiple values";
                                properties.remoteSource = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.verify(message.npmRepository);
                                    if (error)
                                        return "npmRepository." + error;
                                }
                            }
                            if (message.pythonRepository != null && message.hasOwnProperty("pythonRepository")) {
                                if (properties.remoteSource === 1)
                                    return "remoteSource: multiple values";
                                properties.remoteSource = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.verify(message.pythonRepository);
                                    if (error)
                                        return "pythonRepository." + error;
                                }
                            }
                            if (message.aptRepository != null && message.hasOwnProperty("aptRepository")) {
                                if (properties.remoteSource === 1)
                                    return "remoteSource: multiple values";
                                properties.remoteSource = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.verify(message.aptRepository);
                                    if (error)
                                        return "aptRepository." + error;
                                }
                            }
                            if (message.yumRepository != null && message.hasOwnProperty("yumRepository")) {
                                if (properties.remoteSource === 1)
                                    return "remoteSource: multiple values";
                                properties.remoteSource = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.verify(message.yumRepository);
                                    if (error)
                                        return "yumRepository." + error;
                                }
                            }
                            if (message.commonRepository != null && message.hasOwnProperty("commonRepository")) {
                                if (properties.remoteSource === 1)
                                    return "remoteSource: multiple values";
                                properties.remoteSource = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository.verify(message.commonRepository);
                                    if (error)
                                        return "commonRepository." + error;
                                }
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.upstreamCredentials != null && message.hasOwnProperty("upstreamCredentials")) {
                                var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.verify(message.upstreamCredentials);
                                if (error)
                                    return "upstreamCredentials." + error;
                            }
                            if (message.disableUpstreamValidation != null && message.hasOwnProperty("disableUpstreamValidation"))
                                if (typeof message.disableUpstreamValidation !== "boolean")
                                    return "disableUpstreamValidation: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RemoteRepositoryConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig} RemoteRepositoryConfig
                         */
                        RemoteRepositoryConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig();
                            if (object.dockerRepository != null) {
                                if (typeof object.dockerRepository !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.dockerRepository: object expected");
                                message.dockerRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.fromObject(object.dockerRepository);
                            }
                            if (object.mavenRepository != null) {
                                if (typeof object.mavenRepository !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.mavenRepository: object expected");
                                message.mavenRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.fromObject(object.mavenRepository);
                            }
                            if (object.npmRepository != null) {
                                if (typeof object.npmRepository !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.npmRepository: object expected");
                                message.npmRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.fromObject(object.npmRepository);
                            }
                            if (object.pythonRepository != null) {
                                if (typeof object.pythonRepository !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.pythonRepository: object expected");
                                message.pythonRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.fromObject(object.pythonRepository);
                            }
                            if (object.aptRepository != null) {
                                if (typeof object.aptRepository !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.aptRepository: object expected");
                                message.aptRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.fromObject(object.aptRepository);
                            }
                            if (object.yumRepository != null) {
                                if (typeof object.yumRepository !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.yumRepository: object expected");
                                message.yumRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.fromObject(object.yumRepository);
                            }
                            if (object.commonRepository != null) {
                                if (typeof object.commonRepository !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.commonRepository: object expected");
                                message.commonRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository.fromObject(object.commonRepository);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.upstreamCredentials != null) {
                                if (typeof object.upstreamCredentials !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.upstreamCredentials: object expected");
                                message.upstreamCredentials = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.fromObject(object.upstreamCredentials);
                            }
                            if (object.disableUpstreamValidation != null)
                                message.disableUpstreamValidation = Boolean(object.disableUpstreamValidation);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RemoteRepositoryConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @static
                         * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig} message RemoteRepositoryConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RemoteRepositoryConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.description = "";
                                object.upstreamCredentials = null;
                                object.disableUpstreamValidation = false;
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.dockerRepository != null && message.hasOwnProperty("dockerRepository")) {
                                object.dockerRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.toObject(message.dockerRepository, options);
                                if (options.oneofs)
                                    object.remoteSource = "dockerRepository";
                            }
                            if (message.mavenRepository != null && message.hasOwnProperty("mavenRepository")) {
                                object.mavenRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.toObject(message.mavenRepository, options);
                                if (options.oneofs)
                                    object.remoteSource = "mavenRepository";
                            }
                            if (message.npmRepository != null && message.hasOwnProperty("npmRepository")) {
                                object.npmRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.toObject(message.npmRepository, options);
                                if (options.oneofs)
                                    object.remoteSource = "npmRepository";
                            }
                            if (message.pythonRepository != null && message.hasOwnProperty("pythonRepository")) {
                                object.pythonRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.toObject(message.pythonRepository, options);
                                if (options.oneofs)
                                    object.remoteSource = "pythonRepository";
                            }
                            if (message.aptRepository != null && message.hasOwnProperty("aptRepository")) {
                                object.aptRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.toObject(message.aptRepository, options);
                                if (options.oneofs)
                                    object.remoteSource = "aptRepository";
                            }
                            if (message.yumRepository != null && message.hasOwnProperty("yumRepository")) {
                                object.yumRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.toObject(message.yumRepository, options);
                                if (options.oneofs)
                                    object.remoteSource = "yumRepository";
                            }
                            if (message.upstreamCredentials != null && message.hasOwnProperty("upstreamCredentials"))
                                object.upstreamCredentials = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.toObject(message.upstreamCredentials, options);
                            if (message.disableUpstreamValidation != null && message.hasOwnProperty("disableUpstreamValidation"))
                                object.disableUpstreamValidation = message.disableUpstreamValidation;
                            if (message.commonRepository != null && message.hasOwnProperty("commonRepository")) {
                                object.commonRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository.toObject(message.commonRepository, options);
                                if (options.oneofs)
                                    object.remoteSource = "commonRepository";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RemoteRepositoryConfig to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RemoteRepositoryConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RemoteRepositoryConfig
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RemoteRepositoryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig";
                        };
    
                        RemoteRepositoryConfig.UpstreamCredentials = (function() {
    
                            /**
                             * Properties of an UpstreamCredentials.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @interface IUpstreamCredentials
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.IUsernamePasswordCredentials|null} [usernamePasswordCredentials] UpstreamCredentials usernamePasswordCredentials
                             */
    
                            /**
                             * Constructs a new UpstreamCredentials.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @classdesc Represents an UpstreamCredentials.
                             * @implements IUpstreamCredentials
                             * @constructor
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IUpstreamCredentials=} [properties] Properties to set
                             */
                            function UpstreamCredentials(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UpstreamCredentials usernamePasswordCredentials.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.IUsernamePasswordCredentials|null|undefined} usernamePasswordCredentials
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                             * @instance
                             */
                            UpstreamCredentials.prototype.usernamePasswordCredentials = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * UpstreamCredentials credentials.
                             * @member {"usernamePasswordCredentials"|undefined} credentials
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                             * @instance
                             */
                            Object.defineProperty(UpstreamCredentials.prototype, "credentials", {
                                get: $util.oneOfGetter($oneOfFields = ["usernamePasswordCredentials"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new UpstreamCredentials instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IUpstreamCredentials=} [properties] Properties to set
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials} UpstreamCredentials instance
                             */
                            UpstreamCredentials.create = function create(properties) {
                                return new UpstreamCredentials(properties);
                            };
    
                            /**
                             * Encodes the specified UpstreamCredentials message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IUpstreamCredentials} message UpstreamCredentials message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpstreamCredentials.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.usernamePasswordCredentials != null && Object.hasOwnProperty.call(message, "usernamePasswordCredentials"))
                                    $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials.encode(message.usernamePasswordCredentials, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UpstreamCredentials message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IUpstreamCredentials} message UpstreamCredentials message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpstreamCredentials.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an UpstreamCredentials message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials} UpstreamCredentials
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpstreamCredentials.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.usernamePasswordCredentials = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an UpstreamCredentials message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials} UpstreamCredentials
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpstreamCredentials.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an UpstreamCredentials message.
                             * @function verify
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UpstreamCredentials.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.usernamePasswordCredentials != null && message.hasOwnProperty("usernamePasswordCredentials")) {
                                    properties.credentials = 1;
                                    {
                                        var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials.verify(message.usernamePasswordCredentials);
                                        if (error)
                                            return "usernamePasswordCredentials." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates an UpstreamCredentials message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials} UpstreamCredentials
                             */
                            UpstreamCredentials.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials)
                                    return object;
                                var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials();
                                if (object.usernamePasswordCredentials != null) {
                                    if (typeof object.usernamePasswordCredentials !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.usernamePasswordCredentials: object expected");
                                    message.usernamePasswordCredentials = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials.fromObject(object.usernamePasswordCredentials);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an UpstreamCredentials message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials} message UpstreamCredentials
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UpstreamCredentials.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.usernamePasswordCredentials != null && message.hasOwnProperty("usernamePasswordCredentials")) {
                                    object.usernamePasswordCredentials = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials.toObject(message.usernamePasswordCredentials, options);
                                    if (options.oneofs)
                                        object.credentials = "usernamePasswordCredentials";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this UpstreamCredentials to JSON.
                             * @function toJSON
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UpstreamCredentials.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UpstreamCredentials
                             * @function getTypeUrl
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UpstreamCredentials.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials";
                            };
    
                            UpstreamCredentials.UsernamePasswordCredentials = (function() {
    
                                /**
                                 * Properties of a UsernamePasswordCredentials.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                                 * @interface IUsernamePasswordCredentials
                                 * @property {string|null} [username] UsernamePasswordCredentials username
                                 * @property {string|null} [passwordSecretVersion] UsernamePasswordCredentials passwordSecretVersion
                                 */
    
                                /**
                                 * Constructs a new UsernamePasswordCredentials.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
                                 * @classdesc Represents a UsernamePasswordCredentials.
                                 * @implements IUsernamePasswordCredentials
                                 * @constructor
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.IUsernamePasswordCredentials=} [properties] Properties to set
                                 */
                                function UsernamePasswordCredentials(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * UsernamePasswordCredentials username.
                                 * @member {string} username
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
                                 * @instance
                                 */
                                UsernamePasswordCredentials.prototype.username = "";
    
                                /**
                                 * UsernamePasswordCredentials passwordSecretVersion.
                                 * @member {string} passwordSecretVersion
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
                                 * @instance
                                 */
                                UsernamePasswordCredentials.prototype.passwordSecretVersion = "";
    
                                /**
                                 * Creates a new UsernamePasswordCredentials instance using the specified properties.
                                 * @function create
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.IUsernamePasswordCredentials=} [properties] Properties to set
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials} UsernamePasswordCredentials instance
                                 */
                                UsernamePasswordCredentials.create = function create(properties) {
                                    return new UsernamePasswordCredentials(properties);
                                };
    
                                /**
                                 * Encodes the specified UsernamePasswordCredentials message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.IUsernamePasswordCredentials} message UsernamePasswordCredentials message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                UsernamePasswordCredentials.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.username);
                                    if (message.passwordSecretVersion != null && Object.hasOwnProperty.call(message, "passwordSecretVersion"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.passwordSecretVersion);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified UsernamePasswordCredentials message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.IUsernamePasswordCredentials} message UsernamePasswordCredentials message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                UsernamePasswordCredentials.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a UsernamePasswordCredentials message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials} UsernamePasswordCredentials
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                UsernamePasswordCredentials.decode = function decode(reader, length, error) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        if (tag === error)
                                            break;
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.username = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.passwordSecretVersion = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a UsernamePasswordCredentials message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials} UsernamePasswordCredentials
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                UsernamePasswordCredentials.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a UsernamePasswordCredentials message.
                                 * @function verify
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                UsernamePasswordCredentials.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.username != null && message.hasOwnProperty("username"))
                                        if (!$util.isString(message.username))
                                            return "username: string expected";
                                    if (message.passwordSecretVersion != null && message.hasOwnProperty("passwordSecretVersion"))
                                        if (!$util.isString(message.passwordSecretVersion))
                                            return "passwordSecretVersion: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a UsernamePasswordCredentials message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials} UsernamePasswordCredentials
                                 */
                                UsernamePasswordCredentials.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials)
                                        return object;
                                    var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials();
                                    if (object.username != null)
                                        message.username = String(object.username);
                                    if (object.passwordSecretVersion != null)
                                        message.passwordSecretVersion = String(object.passwordSecretVersion);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a UsernamePasswordCredentials message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials} message UsernamePasswordCredentials
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                UsernamePasswordCredentials.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.username = "";
                                        object.passwordSecretVersion = "";
                                    }
                                    if (message.username != null && message.hasOwnProperty("username"))
                                        object.username = message.username;
                                    if (message.passwordSecretVersion != null && message.hasOwnProperty("passwordSecretVersion"))
                                        object.passwordSecretVersion = message.passwordSecretVersion;
                                    return object;
                                };
    
                                /**
                                 * Converts this UsernamePasswordCredentials to JSON.
                                 * @function toJSON
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                UsernamePasswordCredentials.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for UsernamePasswordCredentials
                                 * @function getTypeUrl
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                UsernamePasswordCredentials.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials.UsernamePasswordCredentials";
                                };
    
                                return UsernamePasswordCredentials;
                            })();
    
                            return UpstreamCredentials;
                        })();
    
                        RemoteRepositoryConfig.DockerRepository = (function() {
    
                            /**
                             * Properties of a DockerRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @interface IDockerRepository
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.PublicRepository|null} [publicRepository] DockerRepository publicRepository
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.ICustomRepository|null} [customRepository] DockerRepository customRepository
                             */
    
                            /**
                             * Constructs a new DockerRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @classdesc Represents a DockerRepository.
                             * @implements IDockerRepository
                             * @constructor
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IDockerRepository=} [properties] Properties to set
                             */
                            function DockerRepository(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DockerRepository publicRepository.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.PublicRepository|null|undefined} publicRepository
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @instance
                             */
                            DockerRepository.prototype.publicRepository = null;
    
                            /**
                             * DockerRepository customRepository.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.ICustomRepository|null|undefined} customRepository
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @instance
                             */
                            DockerRepository.prototype.customRepository = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * DockerRepository upstream.
                             * @member {"publicRepository"|"customRepository"|undefined} upstream
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @instance
                             */
                            Object.defineProperty(DockerRepository.prototype, "upstream", {
                                get: $util.oneOfGetter($oneOfFields = ["publicRepository", "customRepository"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new DockerRepository instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IDockerRepository=} [properties] Properties to set
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository} DockerRepository instance
                             */
                            DockerRepository.create = function create(properties) {
                                return new DockerRepository(properties);
                            };
    
                            /**
                             * Encodes the specified DockerRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IDockerRepository} message DockerRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DockerRepository.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.publicRepository != null && Object.hasOwnProperty.call(message, "publicRepository"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.publicRepository);
                                if (message.customRepository != null && Object.hasOwnProperty.call(message, "customRepository"))
                                    $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository.encode(message.customRepository, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DockerRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IDockerRepository} message DockerRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DockerRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DockerRepository message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository} DockerRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DockerRepository.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.publicRepository = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DockerRepository message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository} DockerRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DockerRepository.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DockerRepository message.
                             * @function verify
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DockerRepository.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.publicRepository != null && message.hasOwnProperty("publicRepository")) {
                                    properties.upstream = 1;
                                    switch (message.publicRepository) {
                                    default:
                                        return "publicRepository: enum value expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                                }
                                if (message.customRepository != null && message.hasOwnProperty("customRepository")) {
                                    if (properties.upstream === 1)
                                        return "upstream: multiple values";
                                    properties.upstream = 1;
                                    {
                                        var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository.verify(message.customRepository);
                                        if (error)
                                            return "customRepository." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a DockerRepository message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository} DockerRepository
                             */
                            DockerRepository.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository)
                                    return object;
                                var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository();
                                switch (object.publicRepository) {
                                default:
                                    if (typeof object.publicRepository === "number") {
                                        message.publicRepository = object.publicRepository;
                                        break;
                                    }
                                    break;
                                case "PUBLIC_REPOSITORY_UNSPECIFIED":
                                case 0:
                                    message.publicRepository = 0;
                                    break;
                                case "DOCKER_HUB":
                                case 1:
                                    message.publicRepository = 1;
                                    break;
                                }
                                if (object.customRepository != null) {
                                    if (typeof object.customRepository !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.customRepository: object expected");
                                    message.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository.fromObject(object.customRepository);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DockerRepository message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository} message DockerRepository
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DockerRepository.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.publicRepository != null && message.hasOwnProperty("publicRepository")) {
                                    object.publicRepository = options.enums === String ? $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.PublicRepository[message.publicRepository] === undefined ? message.publicRepository : $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.PublicRepository[message.publicRepository] : message.publicRepository;
                                    if (options.oneofs)
                                        object.upstream = "publicRepository";
                                }
                                if (message.customRepository != null && message.hasOwnProperty("customRepository")) {
                                    object.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository.toObject(message.customRepository, options);
                                    if (options.oneofs)
                                        object.upstream = "customRepository";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this DockerRepository to JSON.
                             * @function toJSON
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DockerRepository.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DockerRepository
                             * @function getTypeUrl
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DockerRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository";
                            };
    
                            DockerRepository.CustomRepository = (function() {
    
                                /**
                                 * Properties of a CustomRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                                 * @interface ICustomRepository
                                 * @property {string|null} [uri] CustomRepository uri
                                 */
    
                                /**
                                 * Constructs a new CustomRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
                                 * @classdesc Represents a CustomRepository.
                                 * @implements ICustomRepository
                                 * @constructor
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.ICustomRepository=} [properties] Properties to set
                                 */
                                function CustomRepository(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * CustomRepository uri.
                                 * @member {string} uri
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository
                                 * @instance
                                 */
                                CustomRepository.prototype.uri = "";
    
                                /**
                                 * Creates a new CustomRepository instance using the specified properties.
                                 * @function create
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.ICustomRepository=} [properties] Properties to set
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository} CustomRepository instance
                                 */
                                CustomRepository.create = function create(properties) {
                                    return new CustomRepository(properties);
                                };
    
                                /**
                                 * Encodes the specified CustomRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.ICustomRepository} message CustomRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CustomRepository.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified CustomRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.ICustomRepository} message CustomRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CustomRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a CustomRepository message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository} CustomRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CustomRepository.decode = function decode(reader, length, error) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        if (tag === error)
                                            break;
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.uri = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a CustomRepository message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository} CustomRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CustomRepository.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a CustomRepository message.
                                 * @function verify
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                CustomRepository.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.uri != null && message.hasOwnProperty("uri"))
                                        if (!$util.isString(message.uri))
                                            return "uri: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a CustomRepository message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository} CustomRepository
                                 */
                                CustomRepository.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository)
                                        return object;
                                    var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository();
                                    if (object.uri != null)
                                        message.uri = String(object.uri);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a CustomRepository message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository} message CustomRepository
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                CustomRepository.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.uri = "";
                                    if (message.uri != null && message.hasOwnProperty("uri"))
                                        object.uri = message.uri;
                                    return object;
                                };
    
                                /**
                                 * Converts this CustomRepository to JSON.
                                 * @function toJSON
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                CustomRepository.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for CustomRepository
                                 * @function getTypeUrl
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                CustomRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.CustomRepository";
                                };
    
                                return CustomRepository;
                            })();
    
                            /**
                             * PublicRepository enum.
                             * @name google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository.PublicRepository
                             * @enum {number}
                             * @property {number} PUBLIC_REPOSITORY_UNSPECIFIED=0 PUBLIC_REPOSITORY_UNSPECIFIED value
                             * @property {number} DOCKER_HUB=1 DOCKER_HUB value
                             */
                            DockerRepository.PublicRepository = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "PUBLIC_REPOSITORY_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "DOCKER_HUB"] = 1;
                                return values;
                            })();
    
                            return DockerRepository;
                        })();
    
                        RemoteRepositoryConfig.MavenRepository = (function() {
    
                            /**
                             * Properties of a MavenRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @interface IMavenRepository
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.PublicRepository|null} [publicRepository] MavenRepository publicRepository
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.ICustomRepository|null} [customRepository] MavenRepository customRepository
                             */
    
                            /**
                             * Constructs a new MavenRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @classdesc Represents a MavenRepository.
                             * @implements IMavenRepository
                             * @constructor
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IMavenRepository=} [properties] Properties to set
                             */
                            function MavenRepository(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MavenRepository publicRepository.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.PublicRepository|null|undefined} publicRepository
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @instance
                             */
                            MavenRepository.prototype.publicRepository = null;
    
                            /**
                             * MavenRepository customRepository.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.ICustomRepository|null|undefined} customRepository
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @instance
                             */
                            MavenRepository.prototype.customRepository = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * MavenRepository upstream.
                             * @member {"publicRepository"|"customRepository"|undefined} upstream
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @instance
                             */
                            Object.defineProperty(MavenRepository.prototype, "upstream", {
                                get: $util.oneOfGetter($oneOfFields = ["publicRepository", "customRepository"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new MavenRepository instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IMavenRepository=} [properties] Properties to set
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository} MavenRepository instance
                             */
                            MavenRepository.create = function create(properties) {
                                return new MavenRepository(properties);
                            };
    
                            /**
                             * Encodes the specified MavenRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IMavenRepository} message MavenRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MavenRepository.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.publicRepository != null && Object.hasOwnProperty.call(message, "publicRepository"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.publicRepository);
                                if (message.customRepository != null && Object.hasOwnProperty.call(message, "customRepository"))
                                    $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository.encode(message.customRepository, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MavenRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IMavenRepository} message MavenRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MavenRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MavenRepository message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository} MavenRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MavenRepository.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.publicRepository = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MavenRepository message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository} MavenRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MavenRepository.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MavenRepository message.
                             * @function verify
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MavenRepository.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.publicRepository != null && message.hasOwnProperty("publicRepository")) {
                                    properties.upstream = 1;
                                    switch (message.publicRepository) {
                                    default:
                                        return "publicRepository: enum value expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                                }
                                if (message.customRepository != null && message.hasOwnProperty("customRepository")) {
                                    if (properties.upstream === 1)
                                        return "upstream: multiple values";
                                    properties.upstream = 1;
                                    {
                                        var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository.verify(message.customRepository);
                                        if (error)
                                            return "customRepository." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a MavenRepository message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository} MavenRepository
                             */
                            MavenRepository.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository)
                                    return object;
                                var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository();
                                switch (object.publicRepository) {
                                default:
                                    if (typeof object.publicRepository === "number") {
                                        message.publicRepository = object.publicRepository;
                                        break;
                                    }
                                    break;
                                case "PUBLIC_REPOSITORY_UNSPECIFIED":
                                case 0:
                                    message.publicRepository = 0;
                                    break;
                                case "MAVEN_CENTRAL":
                                case 1:
                                    message.publicRepository = 1;
                                    break;
                                }
                                if (object.customRepository != null) {
                                    if (typeof object.customRepository !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.customRepository: object expected");
                                    message.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository.fromObject(object.customRepository);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MavenRepository message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository} message MavenRepository
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MavenRepository.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.publicRepository != null && message.hasOwnProperty("publicRepository")) {
                                    object.publicRepository = options.enums === String ? $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.PublicRepository[message.publicRepository] === undefined ? message.publicRepository : $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.PublicRepository[message.publicRepository] : message.publicRepository;
                                    if (options.oneofs)
                                        object.upstream = "publicRepository";
                                }
                                if (message.customRepository != null && message.hasOwnProperty("customRepository")) {
                                    object.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository.toObject(message.customRepository, options);
                                    if (options.oneofs)
                                        object.upstream = "customRepository";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this MavenRepository to JSON.
                             * @function toJSON
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MavenRepository.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for MavenRepository
                             * @function getTypeUrl
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            MavenRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository";
                            };
    
                            MavenRepository.CustomRepository = (function() {
    
                                /**
                                 * Properties of a CustomRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                                 * @interface ICustomRepository
                                 * @property {string|null} [uri] CustomRepository uri
                                 */
    
                                /**
                                 * Constructs a new CustomRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
                                 * @classdesc Represents a CustomRepository.
                                 * @implements ICustomRepository
                                 * @constructor
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.ICustomRepository=} [properties] Properties to set
                                 */
                                function CustomRepository(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * CustomRepository uri.
                                 * @member {string} uri
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository
                                 * @instance
                                 */
                                CustomRepository.prototype.uri = "";
    
                                /**
                                 * Creates a new CustomRepository instance using the specified properties.
                                 * @function create
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.ICustomRepository=} [properties] Properties to set
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository} CustomRepository instance
                                 */
                                CustomRepository.create = function create(properties) {
                                    return new CustomRepository(properties);
                                };
    
                                /**
                                 * Encodes the specified CustomRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.ICustomRepository} message CustomRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CustomRepository.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified CustomRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.ICustomRepository} message CustomRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CustomRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a CustomRepository message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository} CustomRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CustomRepository.decode = function decode(reader, length, error) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        if (tag === error)
                                            break;
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.uri = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a CustomRepository message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository} CustomRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CustomRepository.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a CustomRepository message.
                                 * @function verify
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                CustomRepository.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.uri != null && message.hasOwnProperty("uri"))
                                        if (!$util.isString(message.uri))
                                            return "uri: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a CustomRepository message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository} CustomRepository
                                 */
                                CustomRepository.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository)
                                        return object;
                                    var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository();
                                    if (object.uri != null)
                                        message.uri = String(object.uri);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a CustomRepository message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository} message CustomRepository
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                CustomRepository.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.uri = "";
                                    if (message.uri != null && message.hasOwnProperty("uri"))
                                        object.uri = message.uri;
                                    return object;
                                };
    
                                /**
                                 * Converts this CustomRepository to JSON.
                                 * @function toJSON
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                CustomRepository.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for CustomRepository
                                 * @function getTypeUrl
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                CustomRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.CustomRepository";
                                };
    
                                return CustomRepository;
                            })();
    
                            /**
                             * PublicRepository enum.
                             * @name google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository.PublicRepository
                             * @enum {number}
                             * @property {number} PUBLIC_REPOSITORY_UNSPECIFIED=0 PUBLIC_REPOSITORY_UNSPECIFIED value
                             * @property {number} MAVEN_CENTRAL=1 MAVEN_CENTRAL value
                             */
                            MavenRepository.PublicRepository = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "PUBLIC_REPOSITORY_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "MAVEN_CENTRAL"] = 1;
                                return values;
                            })();
    
                            return MavenRepository;
                        })();
    
                        RemoteRepositoryConfig.NpmRepository = (function() {
    
                            /**
                             * Properties of a NpmRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @interface INpmRepository
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.PublicRepository|null} [publicRepository] NpmRepository publicRepository
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.ICustomRepository|null} [customRepository] NpmRepository customRepository
                             */
    
                            /**
                             * Constructs a new NpmRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @classdesc Represents a NpmRepository.
                             * @implements INpmRepository
                             * @constructor
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.INpmRepository=} [properties] Properties to set
                             */
                            function NpmRepository(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * NpmRepository publicRepository.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.PublicRepository|null|undefined} publicRepository
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @instance
                             */
                            NpmRepository.prototype.publicRepository = null;
    
                            /**
                             * NpmRepository customRepository.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.ICustomRepository|null|undefined} customRepository
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @instance
                             */
                            NpmRepository.prototype.customRepository = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * NpmRepository upstream.
                             * @member {"publicRepository"|"customRepository"|undefined} upstream
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @instance
                             */
                            Object.defineProperty(NpmRepository.prototype, "upstream", {
                                get: $util.oneOfGetter($oneOfFields = ["publicRepository", "customRepository"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new NpmRepository instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.INpmRepository=} [properties] Properties to set
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository} NpmRepository instance
                             */
                            NpmRepository.create = function create(properties) {
                                return new NpmRepository(properties);
                            };
    
                            /**
                             * Encodes the specified NpmRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.INpmRepository} message NpmRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            NpmRepository.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.publicRepository != null && Object.hasOwnProperty.call(message, "publicRepository"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.publicRepository);
                                if (message.customRepository != null && Object.hasOwnProperty.call(message, "customRepository"))
                                    $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository.encode(message.customRepository, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified NpmRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.INpmRepository} message NpmRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            NpmRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a NpmRepository message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository} NpmRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            NpmRepository.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.publicRepository = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a NpmRepository message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository} NpmRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            NpmRepository.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a NpmRepository message.
                             * @function verify
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            NpmRepository.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.publicRepository != null && message.hasOwnProperty("publicRepository")) {
                                    properties.upstream = 1;
                                    switch (message.publicRepository) {
                                    default:
                                        return "publicRepository: enum value expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                                }
                                if (message.customRepository != null && message.hasOwnProperty("customRepository")) {
                                    if (properties.upstream === 1)
                                        return "upstream: multiple values";
                                    properties.upstream = 1;
                                    {
                                        var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository.verify(message.customRepository);
                                        if (error)
                                            return "customRepository." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a NpmRepository message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository} NpmRepository
                             */
                            NpmRepository.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository)
                                    return object;
                                var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository();
                                switch (object.publicRepository) {
                                default:
                                    if (typeof object.publicRepository === "number") {
                                        message.publicRepository = object.publicRepository;
                                        break;
                                    }
                                    break;
                                case "PUBLIC_REPOSITORY_UNSPECIFIED":
                                case 0:
                                    message.publicRepository = 0;
                                    break;
                                case "NPMJS":
                                case 1:
                                    message.publicRepository = 1;
                                    break;
                                }
                                if (object.customRepository != null) {
                                    if (typeof object.customRepository !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.customRepository: object expected");
                                    message.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository.fromObject(object.customRepository);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a NpmRepository message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository} message NpmRepository
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            NpmRepository.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.publicRepository != null && message.hasOwnProperty("publicRepository")) {
                                    object.publicRepository = options.enums === String ? $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.PublicRepository[message.publicRepository] === undefined ? message.publicRepository : $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.PublicRepository[message.publicRepository] : message.publicRepository;
                                    if (options.oneofs)
                                        object.upstream = "publicRepository";
                                }
                                if (message.customRepository != null && message.hasOwnProperty("customRepository")) {
                                    object.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository.toObject(message.customRepository, options);
                                    if (options.oneofs)
                                        object.upstream = "customRepository";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this NpmRepository to JSON.
                             * @function toJSON
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            NpmRepository.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for NpmRepository
                             * @function getTypeUrl
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            NpmRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository";
                            };
    
                            NpmRepository.CustomRepository = (function() {
    
                                /**
                                 * Properties of a CustomRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                                 * @interface ICustomRepository
                                 * @property {string|null} [uri] CustomRepository uri
                                 */
    
                                /**
                                 * Constructs a new CustomRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository
                                 * @classdesc Represents a CustomRepository.
                                 * @implements ICustomRepository
                                 * @constructor
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.ICustomRepository=} [properties] Properties to set
                                 */
                                function CustomRepository(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * CustomRepository uri.
                                 * @member {string} uri
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository
                                 * @instance
                                 */
                                CustomRepository.prototype.uri = "";
    
                                /**
                                 * Creates a new CustomRepository instance using the specified properties.
                                 * @function create
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.ICustomRepository=} [properties] Properties to set
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository} CustomRepository instance
                                 */
                                CustomRepository.create = function create(properties) {
                                    return new CustomRepository(properties);
                                };
    
                                /**
                                 * Encodes the specified CustomRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.ICustomRepository} message CustomRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CustomRepository.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified CustomRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.ICustomRepository} message CustomRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CustomRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a CustomRepository message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository} CustomRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CustomRepository.decode = function decode(reader, length, error) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        if (tag === error)
                                            break;
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.uri = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a CustomRepository message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository} CustomRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CustomRepository.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a CustomRepository message.
                                 * @function verify
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                CustomRepository.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.uri != null && message.hasOwnProperty("uri"))
                                        if (!$util.isString(message.uri))
                                            return "uri: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a CustomRepository message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository} CustomRepository
                                 */
                                CustomRepository.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository)
                                        return object;
                                    var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository();
                                    if (object.uri != null)
                                        message.uri = String(object.uri);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a CustomRepository message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository} message CustomRepository
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                CustomRepository.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.uri = "";
                                    if (message.uri != null && message.hasOwnProperty("uri"))
                                        object.uri = message.uri;
                                    return object;
                                };
    
                                /**
                                 * Converts this CustomRepository to JSON.
                                 * @function toJSON
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                CustomRepository.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for CustomRepository
                                 * @function getTypeUrl
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                CustomRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.CustomRepository";
                                };
    
                                return CustomRepository;
                            })();
    
                            /**
                             * PublicRepository enum.
                             * @name google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository.PublicRepository
                             * @enum {number}
                             * @property {number} PUBLIC_REPOSITORY_UNSPECIFIED=0 PUBLIC_REPOSITORY_UNSPECIFIED value
                             * @property {number} NPMJS=1 NPMJS value
                             */
                            NpmRepository.PublicRepository = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "PUBLIC_REPOSITORY_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "NPMJS"] = 1;
                                return values;
                            })();
    
                            return NpmRepository;
                        })();
    
                        RemoteRepositoryConfig.PythonRepository = (function() {
    
                            /**
                             * Properties of a PythonRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @interface IPythonRepository
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.PublicRepository|null} [publicRepository] PythonRepository publicRepository
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.ICustomRepository|null} [customRepository] PythonRepository customRepository
                             */
    
                            /**
                             * Constructs a new PythonRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @classdesc Represents a PythonRepository.
                             * @implements IPythonRepository
                             * @constructor
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IPythonRepository=} [properties] Properties to set
                             */
                            function PythonRepository(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PythonRepository publicRepository.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.PublicRepository|null|undefined} publicRepository
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @instance
                             */
                            PythonRepository.prototype.publicRepository = null;
    
                            /**
                             * PythonRepository customRepository.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.ICustomRepository|null|undefined} customRepository
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @instance
                             */
                            PythonRepository.prototype.customRepository = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * PythonRepository upstream.
                             * @member {"publicRepository"|"customRepository"|undefined} upstream
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @instance
                             */
                            Object.defineProperty(PythonRepository.prototype, "upstream", {
                                get: $util.oneOfGetter($oneOfFields = ["publicRepository", "customRepository"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new PythonRepository instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IPythonRepository=} [properties] Properties to set
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository} PythonRepository instance
                             */
                            PythonRepository.create = function create(properties) {
                                return new PythonRepository(properties);
                            };
    
                            /**
                             * Encodes the specified PythonRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IPythonRepository} message PythonRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PythonRepository.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.publicRepository != null && Object.hasOwnProperty.call(message, "publicRepository"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.publicRepository);
                                if (message.customRepository != null && Object.hasOwnProperty.call(message, "customRepository"))
                                    $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository.encode(message.customRepository, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PythonRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IPythonRepository} message PythonRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PythonRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PythonRepository message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository} PythonRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PythonRepository.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.publicRepository = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PythonRepository message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository} PythonRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PythonRepository.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PythonRepository message.
                             * @function verify
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PythonRepository.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.publicRepository != null && message.hasOwnProperty("publicRepository")) {
                                    properties.upstream = 1;
                                    switch (message.publicRepository) {
                                    default:
                                        return "publicRepository: enum value expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                                }
                                if (message.customRepository != null && message.hasOwnProperty("customRepository")) {
                                    if (properties.upstream === 1)
                                        return "upstream: multiple values";
                                    properties.upstream = 1;
                                    {
                                        var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository.verify(message.customRepository);
                                        if (error)
                                            return "customRepository." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a PythonRepository message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository} PythonRepository
                             */
                            PythonRepository.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository)
                                    return object;
                                var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository();
                                switch (object.publicRepository) {
                                default:
                                    if (typeof object.publicRepository === "number") {
                                        message.publicRepository = object.publicRepository;
                                        break;
                                    }
                                    break;
                                case "PUBLIC_REPOSITORY_UNSPECIFIED":
                                case 0:
                                    message.publicRepository = 0;
                                    break;
                                case "PYPI":
                                case 1:
                                    message.publicRepository = 1;
                                    break;
                                }
                                if (object.customRepository != null) {
                                    if (typeof object.customRepository !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.customRepository: object expected");
                                    message.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository.fromObject(object.customRepository);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PythonRepository message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository} message PythonRepository
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PythonRepository.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.publicRepository != null && message.hasOwnProperty("publicRepository")) {
                                    object.publicRepository = options.enums === String ? $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.PublicRepository[message.publicRepository] === undefined ? message.publicRepository : $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.PublicRepository[message.publicRepository] : message.publicRepository;
                                    if (options.oneofs)
                                        object.upstream = "publicRepository";
                                }
                                if (message.customRepository != null && message.hasOwnProperty("customRepository")) {
                                    object.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository.toObject(message.customRepository, options);
                                    if (options.oneofs)
                                        object.upstream = "customRepository";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this PythonRepository to JSON.
                             * @function toJSON
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PythonRepository.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PythonRepository
                             * @function getTypeUrl
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PythonRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository";
                            };
    
                            PythonRepository.CustomRepository = (function() {
    
                                /**
                                 * Properties of a CustomRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                                 * @interface ICustomRepository
                                 * @property {string|null} [uri] CustomRepository uri
                                 */
    
                                /**
                                 * Constructs a new CustomRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
                                 * @classdesc Represents a CustomRepository.
                                 * @implements ICustomRepository
                                 * @constructor
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.ICustomRepository=} [properties] Properties to set
                                 */
                                function CustomRepository(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * CustomRepository uri.
                                 * @member {string} uri
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository
                                 * @instance
                                 */
                                CustomRepository.prototype.uri = "";
    
                                /**
                                 * Creates a new CustomRepository instance using the specified properties.
                                 * @function create
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.ICustomRepository=} [properties] Properties to set
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository} CustomRepository instance
                                 */
                                CustomRepository.create = function create(properties) {
                                    return new CustomRepository(properties);
                                };
    
                                /**
                                 * Encodes the specified CustomRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.ICustomRepository} message CustomRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CustomRepository.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified CustomRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.ICustomRepository} message CustomRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CustomRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a CustomRepository message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository} CustomRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CustomRepository.decode = function decode(reader, length, error) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        if (tag === error)
                                            break;
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.uri = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a CustomRepository message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository} CustomRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CustomRepository.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a CustomRepository message.
                                 * @function verify
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                CustomRepository.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.uri != null && message.hasOwnProperty("uri"))
                                        if (!$util.isString(message.uri))
                                            return "uri: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a CustomRepository message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository} CustomRepository
                                 */
                                CustomRepository.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository)
                                        return object;
                                    var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository();
                                    if (object.uri != null)
                                        message.uri = String(object.uri);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a CustomRepository message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository} message CustomRepository
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                CustomRepository.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.uri = "";
                                    if (message.uri != null && message.hasOwnProperty("uri"))
                                        object.uri = message.uri;
                                    return object;
                                };
    
                                /**
                                 * Converts this CustomRepository to JSON.
                                 * @function toJSON
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                CustomRepository.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for CustomRepository
                                 * @function getTypeUrl
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                CustomRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.CustomRepository";
                                };
    
                                return CustomRepository;
                            })();
    
                            /**
                             * PublicRepository enum.
                             * @name google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository.PublicRepository
                             * @enum {number}
                             * @property {number} PUBLIC_REPOSITORY_UNSPECIFIED=0 PUBLIC_REPOSITORY_UNSPECIFIED value
                             * @property {number} PYPI=1 PYPI value
                             */
                            PythonRepository.PublicRepository = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "PUBLIC_REPOSITORY_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "PYPI"] = 1;
                                return values;
                            })();
    
                            return PythonRepository;
                        })();
    
                        RemoteRepositoryConfig.AptRepository = (function() {
    
                            /**
                             * Properties of an AptRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @interface IAptRepository
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.IPublicRepository|null} [publicRepository] AptRepository publicRepository
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.ICustomRepository|null} [customRepository] AptRepository customRepository
                             */
    
                            /**
                             * Constructs a new AptRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @classdesc Represents an AptRepository.
                             * @implements IAptRepository
                             * @constructor
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IAptRepository=} [properties] Properties to set
                             */
                            function AptRepository(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AptRepository publicRepository.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.IPublicRepository|null|undefined} publicRepository
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @instance
                             */
                            AptRepository.prototype.publicRepository = null;
    
                            /**
                             * AptRepository customRepository.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.ICustomRepository|null|undefined} customRepository
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @instance
                             */
                            AptRepository.prototype.customRepository = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * AptRepository upstream.
                             * @member {"publicRepository"|"customRepository"|undefined} upstream
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @instance
                             */
                            Object.defineProperty(AptRepository.prototype, "upstream", {
                                get: $util.oneOfGetter($oneOfFields = ["publicRepository", "customRepository"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new AptRepository instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IAptRepository=} [properties] Properties to set
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository} AptRepository instance
                             */
                            AptRepository.create = function create(properties) {
                                return new AptRepository(properties);
                            };
    
                            /**
                             * Encodes the specified AptRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IAptRepository} message AptRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AptRepository.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.publicRepository != null && Object.hasOwnProperty.call(message, "publicRepository"))
                                    $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.encode(message.publicRepository, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.customRepository != null && Object.hasOwnProperty.call(message, "customRepository"))
                                    $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository.encode(message.customRepository, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AptRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IAptRepository} message AptRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AptRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AptRepository message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository} AptRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AptRepository.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.publicRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AptRepository message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository} AptRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AptRepository.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AptRepository message.
                             * @function verify
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AptRepository.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.publicRepository != null && message.hasOwnProperty("publicRepository")) {
                                    properties.upstream = 1;
                                    {
                                        var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.verify(message.publicRepository);
                                        if (error)
                                            return "publicRepository." + error;
                                    }
                                }
                                if (message.customRepository != null && message.hasOwnProperty("customRepository")) {
                                    if (properties.upstream === 1)
                                        return "upstream: multiple values";
                                    properties.upstream = 1;
                                    {
                                        var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository.verify(message.customRepository);
                                        if (error)
                                            return "customRepository." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates an AptRepository message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository} AptRepository
                             */
                            AptRepository.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository)
                                    return object;
                                var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository();
                                if (object.publicRepository != null) {
                                    if (typeof object.publicRepository !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.publicRepository: object expected");
                                    message.publicRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.fromObject(object.publicRepository);
                                }
                                if (object.customRepository != null) {
                                    if (typeof object.customRepository !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.customRepository: object expected");
                                    message.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository.fromObject(object.customRepository);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AptRepository message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository} message AptRepository
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AptRepository.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.publicRepository != null && message.hasOwnProperty("publicRepository")) {
                                    object.publicRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.toObject(message.publicRepository, options);
                                    if (options.oneofs)
                                        object.upstream = "publicRepository";
                                }
                                if (message.customRepository != null && message.hasOwnProperty("customRepository")) {
                                    object.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository.toObject(message.customRepository, options);
                                    if (options.oneofs)
                                        object.upstream = "customRepository";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this AptRepository to JSON.
                             * @function toJSON
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AptRepository.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AptRepository
                             * @function getTypeUrl
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AptRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository";
                            };
    
                            AptRepository.PublicRepository = (function() {
    
                                /**
                                 * Properties of a PublicRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                                 * @interface IPublicRepository
                                 * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.RepositoryBase|null} [repositoryBase] PublicRepository repositoryBase
                                 * @property {string|null} [repositoryPath] PublicRepository repositoryPath
                                 */
    
                                /**
                                 * Constructs a new PublicRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                                 * @classdesc Represents a PublicRepository.
                                 * @implements IPublicRepository
                                 * @constructor
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.IPublicRepository=} [properties] Properties to set
                                 */
                                function PublicRepository(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * PublicRepository repositoryBase.
                                 * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.RepositoryBase} repositoryBase
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
                                 * @instance
                                 */
                                PublicRepository.prototype.repositoryBase = 0;
    
                                /**
                                 * PublicRepository repositoryPath.
                                 * @member {string} repositoryPath
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
                                 * @instance
                                 */
                                PublicRepository.prototype.repositoryPath = "";
    
                                /**
                                 * Creates a new PublicRepository instance using the specified properties.
                                 * @function create
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.IPublicRepository=} [properties] Properties to set
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository} PublicRepository instance
                                 */
                                PublicRepository.create = function create(properties) {
                                    return new PublicRepository(properties);
                                };
    
                                /**
                                 * Encodes the specified PublicRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.IPublicRepository} message PublicRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                PublicRepository.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.repositoryBase != null && Object.hasOwnProperty.call(message, "repositoryBase"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.repositoryBase);
                                    if (message.repositoryPath != null && Object.hasOwnProperty.call(message, "repositoryPath"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.repositoryPath);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified PublicRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.IPublicRepository} message PublicRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                PublicRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a PublicRepository message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository} PublicRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                PublicRepository.decode = function decode(reader, length, error) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        if (tag === error)
                                            break;
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.repositoryBase = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.repositoryPath = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a PublicRepository message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository} PublicRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                PublicRepository.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a PublicRepository message.
                                 * @function verify
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                PublicRepository.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.repositoryBase != null && message.hasOwnProperty("repositoryBase"))
                                        switch (message.repositoryBase) {
                                        default:
                                            return "repositoryBase: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                            break;
                                        }
                                    if (message.repositoryPath != null && message.hasOwnProperty("repositoryPath"))
                                        if (!$util.isString(message.repositoryPath))
                                            return "repositoryPath: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a PublicRepository message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository} PublicRepository
                                 */
                                PublicRepository.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository)
                                        return object;
                                    var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository();
                                    switch (object.repositoryBase) {
                                    default:
                                        if (typeof object.repositoryBase === "number") {
                                            message.repositoryBase = object.repositoryBase;
                                            break;
                                        }
                                        break;
                                    case "REPOSITORY_BASE_UNSPECIFIED":
                                    case 0:
                                        message.repositoryBase = 0;
                                        break;
                                    case "DEBIAN":
                                    case 1:
                                        message.repositoryBase = 1;
                                        break;
                                    case "UBUNTU":
                                    case 2:
                                        message.repositoryBase = 2;
                                        break;
                                    case "DEBIAN_SNAPSHOT":
                                    case 3:
                                        message.repositoryBase = 3;
                                        break;
                                    }
                                    if (object.repositoryPath != null)
                                        message.repositoryPath = String(object.repositoryPath);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a PublicRepository message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository} message PublicRepository
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                PublicRepository.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.repositoryBase = options.enums === String ? "REPOSITORY_BASE_UNSPECIFIED" : 0;
                                        object.repositoryPath = "";
                                    }
                                    if (message.repositoryBase != null && message.hasOwnProperty("repositoryBase"))
                                        object.repositoryBase = options.enums === String ? $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.RepositoryBase[message.repositoryBase] === undefined ? message.repositoryBase : $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.RepositoryBase[message.repositoryBase] : message.repositoryBase;
                                    if (message.repositoryPath != null && message.hasOwnProperty("repositoryPath"))
                                        object.repositoryPath = message.repositoryPath;
                                    return object;
                                };
    
                                /**
                                 * Converts this PublicRepository to JSON.
                                 * @function toJSON
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                PublicRepository.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for PublicRepository
                                 * @function getTypeUrl
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                PublicRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository";
                                };
    
                                /**
                                 * RepositoryBase enum.
                                 * @name google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.PublicRepository.RepositoryBase
                                 * @enum {number}
                                 * @property {number} REPOSITORY_BASE_UNSPECIFIED=0 REPOSITORY_BASE_UNSPECIFIED value
                                 * @property {number} DEBIAN=1 DEBIAN value
                                 * @property {number} UBUNTU=2 UBUNTU value
                                 * @property {number} DEBIAN_SNAPSHOT=3 DEBIAN_SNAPSHOT value
                                 */
                                PublicRepository.RepositoryBase = (function() {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "REPOSITORY_BASE_UNSPECIFIED"] = 0;
                                    values[valuesById[1] = "DEBIAN"] = 1;
                                    values[valuesById[2] = "UBUNTU"] = 2;
                                    values[valuesById[3] = "DEBIAN_SNAPSHOT"] = 3;
                                    return values;
                                })();
    
                                return PublicRepository;
                            })();
    
                            AptRepository.CustomRepository = (function() {
    
                                /**
                                 * Properties of a CustomRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                                 * @interface ICustomRepository
                                 * @property {string|null} [uri] CustomRepository uri
                                 */
    
                                /**
                                 * Constructs a new CustomRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository
                                 * @classdesc Represents a CustomRepository.
                                 * @implements ICustomRepository
                                 * @constructor
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.ICustomRepository=} [properties] Properties to set
                                 */
                                function CustomRepository(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * CustomRepository uri.
                                 * @member {string} uri
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository
                                 * @instance
                                 */
                                CustomRepository.prototype.uri = "";
    
                                /**
                                 * Creates a new CustomRepository instance using the specified properties.
                                 * @function create
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.ICustomRepository=} [properties] Properties to set
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository} CustomRepository instance
                                 */
                                CustomRepository.create = function create(properties) {
                                    return new CustomRepository(properties);
                                };
    
                                /**
                                 * Encodes the specified CustomRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.ICustomRepository} message CustomRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CustomRepository.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified CustomRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.ICustomRepository} message CustomRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CustomRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a CustomRepository message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository} CustomRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CustomRepository.decode = function decode(reader, length, error) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        if (tag === error)
                                            break;
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.uri = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a CustomRepository message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository} CustomRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CustomRepository.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a CustomRepository message.
                                 * @function verify
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                CustomRepository.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.uri != null && message.hasOwnProperty("uri"))
                                        if (!$util.isString(message.uri))
                                            return "uri: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a CustomRepository message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository} CustomRepository
                                 */
                                CustomRepository.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository)
                                        return object;
                                    var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository();
                                    if (object.uri != null)
                                        message.uri = String(object.uri);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a CustomRepository message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository} message CustomRepository
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                CustomRepository.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.uri = "";
                                    if (message.uri != null && message.hasOwnProperty("uri"))
                                        object.uri = message.uri;
                                    return object;
                                };
    
                                /**
                                 * Converts this CustomRepository to JSON.
                                 * @function toJSON
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                CustomRepository.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for CustomRepository
                                 * @function getTypeUrl
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                CustomRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository.CustomRepository";
                                };
    
                                return CustomRepository;
                            })();
    
                            return AptRepository;
                        })();
    
                        RemoteRepositoryConfig.YumRepository = (function() {
    
                            /**
                             * Properties of a YumRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @interface IYumRepository
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.IPublicRepository|null} [publicRepository] YumRepository publicRepository
                             * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.ICustomRepository|null} [customRepository] YumRepository customRepository
                             */
    
                            /**
                             * Constructs a new YumRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @classdesc Represents a YumRepository.
                             * @implements IYumRepository
                             * @constructor
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IYumRepository=} [properties] Properties to set
                             */
                            function YumRepository(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * YumRepository publicRepository.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.IPublicRepository|null|undefined} publicRepository
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @instance
                             */
                            YumRepository.prototype.publicRepository = null;
    
                            /**
                             * YumRepository customRepository.
                             * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.ICustomRepository|null|undefined} customRepository
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @instance
                             */
                            YumRepository.prototype.customRepository = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * YumRepository upstream.
                             * @member {"publicRepository"|"customRepository"|undefined} upstream
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @instance
                             */
                            Object.defineProperty(YumRepository.prototype, "upstream", {
                                get: $util.oneOfGetter($oneOfFields = ["publicRepository", "customRepository"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new YumRepository instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IYumRepository=} [properties] Properties to set
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository} YumRepository instance
                             */
                            YumRepository.create = function create(properties) {
                                return new YumRepository(properties);
                            };
    
                            /**
                             * Encodes the specified YumRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IYumRepository} message YumRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            YumRepository.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.publicRepository != null && Object.hasOwnProperty.call(message, "publicRepository"))
                                    $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.encode(message.publicRepository, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.customRepository != null && Object.hasOwnProperty.call(message, "customRepository"))
                                    $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository.encode(message.customRepository, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified YumRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.IYumRepository} message YumRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            YumRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a YumRepository message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository} YumRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            YumRepository.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.publicRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a YumRepository message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository} YumRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            YumRepository.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a YumRepository message.
                             * @function verify
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            YumRepository.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.publicRepository != null && message.hasOwnProperty("publicRepository")) {
                                    properties.upstream = 1;
                                    {
                                        var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.verify(message.publicRepository);
                                        if (error)
                                            return "publicRepository." + error;
                                    }
                                }
                                if (message.customRepository != null && message.hasOwnProperty("customRepository")) {
                                    if (properties.upstream === 1)
                                        return "upstream: multiple values";
                                    properties.upstream = 1;
                                    {
                                        var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository.verify(message.customRepository);
                                        if (error)
                                            return "customRepository." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a YumRepository message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository} YumRepository
                             */
                            YumRepository.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository)
                                    return object;
                                var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository();
                                if (object.publicRepository != null) {
                                    if (typeof object.publicRepository !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.publicRepository: object expected");
                                    message.publicRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.fromObject(object.publicRepository);
                                }
                                if (object.customRepository != null) {
                                    if (typeof object.customRepository !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.customRepository: object expected");
                                    message.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository.fromObject(object.customRepository);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a YumRepository message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository} message YumRepository
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            YumRepository.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.publicRepository != null && message.hasOwnProperty("publicRepository")) {
                                    object.publicRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.toObject(message.publicRepository, options);
                                    if (options.oneofs)
                                        object.upstream = "publicRepository";
                                }
                                if (message.customRepository != null && message.hasOwnProperty("customRepository")) {
                                    object.customRepository = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository.toObject(message.customRepository, options);
                                    if (options.oneofs)
                                        object.upstream = "customRepository";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this YumRepository to JSON.
                             * @function toJSON
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            YumRepository.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for YumRepository
                             * @function getTypeUrl
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            YumRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository";
                            };
    
                            YumRepository.PublicRepository = (function() {
    
                                /**
                                 * Properties of a PublicRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                                 * @interface IPublicRepository
                                 * @property {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.RepositoryBase|null} [repositoryBase] PublicRepository repositoryBase
                                 * @property {string|null} [repositoryPath] PublicRepository repositoryPath
                                 */
    
                                /**
                                 * Constructs a new PublicRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                                 * @classdesc Represents a PublicRepository.
                                 * @implements IPublicRepository
                                 * @constructor
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.IPublicRepository=} [properties] Properties to set
                                 */
                                function PublicRepository(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * PublicRepository repositoryBase.
                                 * @member {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.RepositoryBase} repositoryBase
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
                                 * @instance
                                 */
                                PublicRepository.prototype.repositoryBase = 0;
    
                                /**
                                 * PublicRepository repositoryPath.
                                 * @member {string} repositoryPath
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
                                 * @instance
                                 */
                                PublicRepository.prototype.repositoryPath = "";
    
                                /**
                                 * Creates a new PublicRepository instance using the specified properties.
                                 * @function create
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.IPublicRepository=} [properties] Properties to set
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository} PublicRepository instance
                                 */
                                PublicRepository.create = function create(properties) {
                                    return new PublicRepository(properties);
                                };
    
                                /**
                                 * Encodes the specified PublicRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.IPublicRepository} message PublicRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                PublicRepository.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.repositoryBase != null && Object.hasOwnProperty.call(message, "repositoryBase"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.repositoryBase);
                                    if (message.repositoryPath != null && Object.hasOwnProperty.call(message, "repositoryPath"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.repositoryPath);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified PublicRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.IPublicRepository} message PublicRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                PublicRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a PublicRepository message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository} PublicRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                PublicRepository.decode = function decode(reader, length, error) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        if (tag === error)
                                            break;
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.repositoryBase = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.repositoryPath = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a PublicRepository message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository} PublicRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                PublicRepository.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a PublicRepository message.
                                 * @function verify
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                PublicRepository.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.repositoryBase != null && message.hasOwnProperty("repositoryBase"))
                                        switch (message.repositoryBase) {
                                        default:
                                            return "repositoryBase: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 6:
                                            break;
                                        }
                                    if (message.repositoryPath != null && message.hasOwnProperty("repositoryPath"))
                                        if (!$util.isString(message.repositoryPath))
                                            return "repositoryPath: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a PublicRepository message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository} PublicRepository
                                 */
                                PublicRepository.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository)
                                        return object;
                                    var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository();
                                    switch (object.repositoryBase) {
                                    default:
                                        if (typeof object.repositoryBase === "number") {
                                            message.repositoryBase = object.repositoryBase;
                                            break;
                                        }
                                        break;
                                    case "REPOSITORY_BASE_UNSPECIFIED":
                                    case 0:
                                        message.repositoryBase = 0;
                                        break;
                                    case "CENTOS":
                                    case 1:
                                        message.repositoryBase = 1;
                                        break;
                                    case "CENTOS_DEBUG":
                                    case 2:
                                        message.repositoryBase = 2;
                                        break;
                                    case "CENTOS_VAULT":
                                    case 3:
                                        message.repositoryBase = 3;
                                        break;
                                    case "CENTOS_STREAM":
                                    case 4:
                                        message.repositoryBase = 4;
                                        break;
                                    case "ROCKY":
                                    case 5:
                                        message.repositoryBase = 5;
                                        break;
                                    case "EPEL":
                                    case 6:
                                        message.repositoryBase = 6;
                                        break;
                                    }
                                    if (object.repositoryPath != null)
                                        message.repositoryPath = String(object.repositoryPath);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a PublicRepository message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository} message PublicRepository
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                PublicRepository.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.repositoryBase = options.enums === String ? "REPOSITORY_BASE_UNSPECIFIED" : 0;
                                        object.repositoryPath = "";
                                    }
                                    if (message.repositoryBase != null && message.hasOwnProperty("repositoryBase"))
                                        object.repositoryBase = options.enums === String ? $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.RepositoryBase[message.repositoryBase] === undefined ? message.repositoryBase : $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.RepositoryBase[message.repositoryBase] : message.repositoryBase;
                                    if (message.repositoryPath != null && message.hasOwnProperty("repositoryPath"))
                                        object.repositoryPath = message.repositoryPath;
                                    return object;
                                };
    
                                /**
                                 * Converts this PublicRepository to JSON.
                                 * @function toJSON
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                PublicRepository.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for PublicRepository
                                 * @function getTypeUrl
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                PublicRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository";
                                };
    
                                /**
                                 * RepositoryBase enum.
                                 * @name google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.RepositoryBase
                                 * @enum {number}
                                 * @property {number} REPOSITORY_BASE_UNSPECIFIED=0 REPOSITORY_BASE_UNSPECIFIED value
                                 * @property {number} CENTOS=1 CENTOS value
                                 * @property {number} CENTOS_DEBUG=2 CENTOS_DEBUG value
                                 * @property {number} CENTOS_VAULT=3 CENTOS_VAULT value
                                 * @property {number} CENTOS_STREAM=4 CENTOS_STREAM value
                                 * @property {number} ROCKY=5 ROCKY value
                                 * @property {number} EPEL=6 EPEL value
                                 */
                                PublicRepository.RepositoryBase = (function() {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "REPOSITORY_BASE_UNSPECIFIED"] = 0;
                                    values[valuesById[1] = "CENTOS"] = 1;
                                    values[valuesById[2] = "CENTOS_DEBUG"] = 2;
                                    values[valuesById[3] = "CENTOS_VAULT"] = 3;
                                    values[valuesById[4] = "CENTOS_STREAM"] = 4;
                                    values[valuesById[5] = "ROCKY"] = 5;
                                    values[valuesById[6] = "EPEL"] = 6;
                                    return values;
                                })();
    
                                return PublicRepository;
                            })();
    
                            YumRepository.CustomRepository = (function() {
    
                                /**
                                 * Properties of a CustomRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                                 * @interface ICustomRepository
                                 * @property {string|null} [uri] CustomRepository uri
                                 */
    
                                /**
                                 * Constructs a new CustomRepository.
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository
                                 * @classdesc Represents a CustomRepository.
                                 * @implements ICustomRepository
                                 * @constructor
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.ICustomRepository=} [properties] Properties to set
                                 */
                                function CustomRepository(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * CustomRepository uri.
                                 * @member {string} uri
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository
                                 * @instance
                                 */
                                CustomRepository.prototype.uri = "";
    
                                /**
                                 * Creates a new CustomRepository instance using the specified properties.
                                 * @function create
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.ICustomRepository=} [properties] Properties to set
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository} CustomRepository instance
                                 */
                                CustomRepository.create = function create(properties) {
                                    return new CustomRepository(properties);
                                };
    
                                /**
                                 * Encodes the specified CustomRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.ICustomRepository} message CustomRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CustomRepository.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified CustomRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.ICustomRepository} message CustomRepository message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CustomRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a CustomRepository message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository} CustomRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CustomRepository.decode = function decode(reader, length, error) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        if (tag === error)
                                            break;
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.uri = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a CustomRepository message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository} CustomRepository
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CustomRepository.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a CustomRepository message.
                                 * @function verify
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                CustomRepository.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.uri != null && message.hasOwnProperty("uri"))
                                        if (!$util.isString(message.uri))
                                            return "uri: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a CustomRepository message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository} CustomRepository
                                 */
                                CustomRepository.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository)
                                        return object;
                                    var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository();
                                    if (object.uri != null)
                                        message.uri = String(object.uri);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a CustomRepository message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository
                                 * @static
                                 * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository} message CustomRepository
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                CustomRepository.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.uri = "";
                                    if (message.uri != null && message.hasOwnProperty("uri"))
                                        object.uri = message.uri;
                                    return object;
                                };
    
                                /**
                                 * Converts this CustomRepository to JSON.
                                 * @function toJSON
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                CustomRepository.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for CustomRepository
                                 * @function getTypeUrl
                                 * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                CustomRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.CustomRepository";
                                };
    
                                return CustomRepository;
                            })();
    
                            return YumRepository;
                        })();
    
                        RemoteRepositoryConfig.CommonRemoteRepository = (function() {
    
                            /**
                             * Properties of a CommonRemoteRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @interface ICommonRemoteRepository
                             * @property {string|null} [uri] CommonRemoteRepository uri
                             */
    
                            /**
                             * Constructs a new CommonRemoteRepository.
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig
                             * @classdesc Represents a CommonRemoteRepository.
                             * @implements ICommonRemoteRepository
                             * @constructor
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.ICommonRemoteRepository=} [properties] Properties to set
                             */
                            function CommonRemoteRepository(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CommonRemoteRepository uri.
                             * @member {string} uri
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository
                             * @instance
                             */
                            CommonRemoteRepository.prototype.uri = "";
    
                            /**
                             * Creates a new CommonRemoteRepository instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.ICommonRemoteRepository=} [properties] Properties to set
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository} CommonRemoteRepository instance
                             */
                            CommonRemoteRepository.create = function create(properties) {
                                return new CommonRemoteRepository(properties);
                            };
    
                            /**
                             * Encodes the specified CommonRemoteRepository message. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.ICommonRemoteRepository} message CommonRemoteRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CommonRemoteRepository.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CommonRemoteRepository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.ICommonRemoteRepository} message CommonRemoteRepository message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CommonRemoteRepository.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CommonRemoteRepository message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository} CommonRemoteRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CommonRemoteRepository.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.uri = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CommonRemoteRepository message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository} CommonRemoteRepository
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CommonRemoteRepository.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CommonRemoteRepository message.
                             * @function verify
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CommonRemoteRepository.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.uri != null && message.hasOwnProperty("uri"))
                                    if (!$util.isString(message.uri))
                                        return "uri: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CommonRemoteRepository message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository} CommonRemoteRepository
                             */
                            CommonRemoteRepository.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository)
                                    return object;
                                var message = new $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository();
                                if (object.uri != null)
                                    message.uri = String(object.uri);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CommonRemoteRepository message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository
                             * @static
                             * @param {google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository} message CommonRemoteRepository
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CommonRemoteRepository.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.uri = "";
                                if (message.uri != null && message.hasOwnProperty("uri"))
                                    object.uri = message.uri;
                                return object;
                            };
    
                            /**
                             * Converts this CommonRemoteRepository to JSON.
                             * @function toJSON
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CommonRemoteRepository.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CommonRemoteRepository
                             * @function getTypeUrl
                             * @memberof google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CommonRemoteRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository";
                            };
    
                            return CommonRemoteRepository;
                        })();
    
                        return RemoteRepositoryConfig;
                    })();
    
                    v1.Repository = (function() {
    
                        /**
                         * Properties of a Repository.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IRepository
                         * @property {google.devtools.artifactregistry.v1.Repository.IMavenRepositoryConfig|null} [mavenConfig] Repository mavenConfig
                         * @property {google.devtools.artifactregistry.v1.Repository.IDockerRepositoryConfig|null} [dockerConfig] Repository dockerConfig
                         * @property {google.devtools.artifactregistry.v1.IVirtualRepositoryConfig|null} [virtualRepositoryConfig] Repository virtualRepositoryConfig
                         * @property {google.devtools.artifactregistry.v1.IRemoteRepositoryConfig|null} [remoteRepositoryConfig] Repository remoteRepositoryConfig
                         * @property {string|null} [name] Repository name
                         * @property {google.devtools.artifactregistry.v1.Repository.Format|null} [format] Repository format
                         * @property {string|null} [description] Repository description
                         * @property {Object.<string,string>|null} [labels] Repository labels
                         * @property {google.protobuf.ITimestamp|null} [createTime] Repository createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Repository updateTime
                         * @property {string|null} [kmsKeyName] Repository kmsKeyName
                         * @property {google.devtools.artifactregistry.v1.Repository.Mode|null} [mode] Repository mode
                         * @property {Object.<string,google.devtools.artifactregistry.v1.ICleanupPolicy>|null} [cleanupPolicies] Repository cleanupPolicies
                         * @property {number|Long|null} [sizeBytes] Repository sizeBytes
                         * @property {boolean|null} [satisfiesPzs] Repository satisfiesPzs
                         * @property {boolean|null} [cleanupPolicyDryRun] Repository cleanupPolicyDryRun
                         * @property {google.devtools.artifactregistry.v1.Repository.IVulnerabilityScanningConfig|null} [vulnerabilityScanningConfig] Repository vulnerabilityScanningConfig
                         * @property {boolean|null} [disallowUnspecifiedMode] Repository disallowUnspecifiedMode
                         * @property {boolean|null} [satisfiesPzi] Repository satisfiesPzi
                         * @property {string|null} [registryUri] Repository registryUri
                         */
    
                        /**
                         * Constructs a new Repository.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a Repository.
                         * @implements IRepository
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IRepository=} [properties] Properties to set
                         */
                        function Repository(properties) {
                            this.labels = {};
                            this.cleanupPolicies = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Repository mavenConfig.
                         * @member {google.devtools.artifactregistry.v1.Repository.IMavenRepositoryConfig|null|undefined} mavenConfig
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.mavenConfig = null;
    
                        /**
                         * Repository dockerConfig.
                         * @member {google.devtools.artifactregistry.v1.Repository.IDockerRepositoryConfig|null|undefined} dockerConfig
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.dockerConfig = null;
    
                        /**
                         * Repository virtualRepositoryConfig.
                         * @member {google.devtools.artifactregistry.v1.IVirtualRepositoryConfig|null|undefined} virtualRepositoryConfig
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.virtualRepositoryConfig = null;
    
                        /**
                         * Repository remoteRepositoryConfig.
                         * @member {google.devtools.artifactregistry.v1.IRemoteRepositoryConfig|null|undefined} remoteRepositoryConfig
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.remoteRepositoryConfig = null;
    
                        /**
                         * Repository name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.name = "";
    
                        /**
                         * Repository format.
                         * @member {google.devtools.artifactregistry.v1.Repository.Format} format
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.format = 0;
    
                        /**
                         * Repository description.
                         * @member {string} description
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.description = "";
    
                        /**
                         * Repository labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.labels = $util.emptyObject;
    
                        /**
                         * Repository createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.createTime = null;
    
                        /**
                         * Repository updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.updateTime = null;
    
                        /**
                         * Repository kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.kmsKeyName = "";
    
                        /**
                         * Repository mode.
                         * @member {google.devtools.artifactregistry.v1.Repository.Mode} mode
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.mode = 0;
    
                        /**
                         * Repository cleanupPolicies.
                         * @member {Object.<string,google.devtools.artifactregistry.v1.ICleanupPolicy>} cleanupPolicies
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.cleanupPolicies = $util.emptyObject;
    
                        /**
                         * Repository sizeBytes.
                         * @member {number|Long} sizeBytes
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.sizeBytes = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Repository satisfiesPzs.
                         * @member {boolean} satisfiesPzs
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.satisfiesPzs = false;
    
                        /**
                         * Repository cleanupPolicyDryRun.
                         * @member {boolean} cleanupPolicyDryRun
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.cleanupPolicyDryRun = false;
    
                        /**
                         * Repository vulnerabilityScanningConfig.
                         * @member {google.devtools.artifactregistry.v1.Repository.IVulnerabilityScanningConfig|null|undefined} vulnerabilityScanningConfig
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.vulnerabilityScanningConfig = null;
    
                        /**
                         * Repository disallowUnspecifiedMode.
                         * @member {boolean} disallowUnspecifiedMode
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.disallowUnspecifiedMode = false;
    
                        /**
                         * Repository satisfiesPzi.
                         * @member {boolean} satisfiesPzi
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.satisfiesPzi = false;
    
                        /**
                         * Repository registryUri.
                         * @member {string} registryUri
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Repository.prototype.registryUri = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Repository formatConfig.
                         * @member {"mavenConfig"|"dockerConfig"|undefined} formatConfig
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Object.defineProperty(Repository.prototype, "formatConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["mavenConfig", "dockerConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Repository modeConfig.
                         * @member {"virtualRepositoryConfig"|"remoteRepositoryConfig"|undefined} modeConfig
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         */
                        Object.defineProperty(Repository.prototype, "modeConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["virtualRepositoryConfig", "remoteRepositoryConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Repository instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IRepository=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.Repository} Repository instance
                         */
                        Repository.create = function create(properties) {
                            return new Repository(properties);
                        };
    
                        /**
                         * Encodes the specified Repository message. Does not implicitly {@link google.devtools.artifactregistry.v1.Repository.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IRepository} message Repository message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Repository.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.format != null && Object.hasOwnProperty.call(message, "format"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.format);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.kmsKeyName);
                            if (message.mavenConfig != null && Object.hasOwnProperty.call(message, "mavenConfig"))
                                $root.google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.encode(message.mavenConfig, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.mode);
                            if (message.cleanupPolicies != null && Object.hasOwnProperty.call(message, "cleanupPolicies"))
                                for (var keys = Object.keys(message.cleanupPolicies), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 12, wireType 2 =*/98).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.devtools.artifactregistry.v1.CleanupPolicy.encode(message.cleanupPolicies[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.sizeBytes != null && Object.hasOwnProperty.call(message, "sizeBytes"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int64(message.sizeBytes);
                            if (message.virtualRepositoryConfig != null && Object.hasOwnProperty.call(message, "virtualRepositoryConfig"))
                                $root.google.devtools.artifactregistry.v1.VirtualRepositoryConfig.encode(message.virtualRepositoryConfig, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.remoteRepositoryConfig != null && Object.hasOwnProperty.call(message, "remoteRepositoryConfig"))
                                $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.encode(message.remoteRepositoryConfig, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.satisfiesPzs != null && Object.hasOwnProperty.call(message, "satisfiesPzs"))
                                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.satisfiesPzs);
                            if (message.dockerConfig != null && Object.hasOwnProperty.call(message, "dockerConfig"))
                                $root.google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig.encode(message.dockerConfig, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.cleanupPolicyDryRun != null && Object.hasOwnProperty.call(message, "cleanupPolicyDryRun"))
                                writer.uint32(/* id 18, wireType 0 =*/144).bool(message.cleanupPolicyDryRun);
                            if (message.vulnerabilityScanningConfig != null && Object.hasOwnProperty.call(message, "vulnerabilityScanningConfig"))
                                $root.google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.encode(message.vulnerabilityScanningConfig, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.disallowUnspecifiedMode != null && Object.hasOwnProperty.call(message, "disallowUnspecifiedMode"))
                                writer.uint32(/* id 21, wireType 0 =*/168).bool(message.disallowUnspecifiedMode);
                            if (message.satisfiesPzi != null && Object.hasOwnProperty.call(message, "satisfiesPzi"))
                                writer.uint32(/* id 22, wireType 0 =*/176).bool(message.satisfiesPzi);
                            if (message.registryUri != null && Object.hasOwnProperty.call(message, "registryUri"))
                                writer.uint32(/* id 26, wireType 2 =*/210).string(message.registryUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Repository message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.Repository.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IRepository} message Repository message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Repository.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Repository message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.Repository} Repository
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Repository.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.Repository(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 9: {
                                        message.mavenConfig = $root.google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 17: {
                                        message.dockerConfig = $root.google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.virtualRepositoryConfig = $root.google.devtools.artifactregistry.v1.VirtualRepositoryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.remoteRepositoryConfig = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.format = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.mode = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        if (message.cleanupPolicies === $util.emptyObject)
                                            message.cleanupPolicies = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.devtools.artifactregistry.v1.CleanupPolicy.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.cleanupPolicies[key] = value;
                                        break;
                                    }
                                case 13: {
                                        message.sizeBytes = reader.int64();
                                        break;
                                    }
                                case 16: {
                                        message.satisfiesPzs = reader.bool();
                                        break;
                                    }
                                case 18: {
                                        message.cleanupPolicyDryRun = reader.bool();
                                        break;
                                    }
                                case 19: {
                                        message.vulnerabilityScanningConfig = $root.google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 21: {
                                        message.disallowUnspecifiedMode = reader.bool();
                                        break;
                                    }
                                case 22: {
                                        message.satisfiesPzi = reader.bool();
                                        break;
                                    }
                                case 26: {
                                        message.registryUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Repository message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.Repository} Repository
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Repository.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Repository message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Repository.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.mavenConfig != null && message.hasOwnProperty("mavenConfig")) {
                                properties.formatConfig = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.verify(message.mavenConfig);
                                    if (error)
                                        return "mavenConfig." + error;
                                }
                            }
                            if (message.dockerConfig != null && message.hasOwnProperty("dockerConfig")) {
                                if (properties.formatConfig === 1)
                                    return "formatConfig: multiple values";
                                properties.formatConfig = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig.verify(message.dockerConfig);
                                    if (error)
                                        return "dockerConfig." + error;
                                }
                            }
                            if (message.virtualRepositoryConfig != null && message.hasOwnProperty("virtualRepositoryConfig")) {
                                properties.modeConfig = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.VirtualRepositoryConfig.verify(message.virtualRepositoryConfig);
                                    if (error)
                                        return "virtualRepositoryConfig." + error;
                                }
                            }
                            if (message.remoteRepositoryConfig != null && message.hasOwnProperty("remoteRepositoryConfig")) {
                                if (properties.modeConfig === 1)
                                    return "modeConfig: multiple values";
                                properties.modeConfig = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.verify(message.remoteRepositoryConfig);
                                    if (error)
                                        return "remoteRepositoryConfig." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.format != null && message.hasOwnProperty("format"))
                                switch (message.format) {
                                default:
                                    return "format: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 5:
                                case 6:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                    break;
                                }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                switch (message.mode) {
                                default:
                                    return "mode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.cleanupPolicies != null && message.hasOwnProperty("cleanupPolicies")) {
                                if (!$util.isObject(message.cleanupPolicies))
                                    return "cleanupPolicies: object expected";
                                var key = Object.keys(message.cleanupPolicies);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.CleanupPolicy.verify(message.cleanupPolicies[key[i]]);
                                    if (error)
                                        return "cleanupPolicies." + error;
                                }
                            }
                            if (message.sizeBytes != null && message.hasOwnProperty("sizeBytes"))
                                if (!$util.isInteger(message.sizeBytes) && !(message.sizeBytes && $util.isInteger(message.sizeBytes.low) && $util.isInteger(message.sizeBytes.high)))
                                    return "sizeBytes: integer|Long expected";
                            if (message.satisfiesPzs != null && message.hasOwnProperty("satisfiesPzs"))
                                if (typeof message.satisfiesPzs !== "boolean")
                                    return "satisfiesPzs: boolean expected";
                            if (message.cleanupPolicyDryRun != null && message.hasOwnProperty("cleanupPolicyDryRun"))
                                if (typeof message.cleanupPolicyDryRun !== "boolean")
                                    return "cleanupPolicyDryRun: boolean expected";
                            if (message.vulnerabilityScanningConfig != null && message.hasOwnProperty("vulnerabilityScanningConfig")) {
                                var error = $root.google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.verify(message.vulnerabilityScanningConfig);
                                if (error)
                                    return "vulnerabilityScanningConfig." + error;
                            }
                            if (message.disallowUnspecifiedMode != null && message.hasOwnProperty("disallowUnspecifiedMode"))
                                if (typeof message.disallowUnspecifiedMode !== "boolean")
                                    return "disallowUnspecifiedMode: boolean expected";
                            if (message.satisfiesPzi != null && message.hasOwnProperty("satisfiesPzi"))
                                if (typeof message.satisfiesPzi !== "boolean")
                                    return "satisfiesPzi: boolean expected";
                            if (message.registryUri != null && message.hasOwnProperty("registryUri"))
                                if (!$util.isString(message.registryUri))
                                    return "registryUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Repository message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.Repository} Repository
                         */
                        Repository.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.Repository)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.Repository();
                            if (object.mavenConfig != null) {
                                if (typeof object.mavenConfig !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Repository.mavenConfig: object expected");
                                message.mavenConfig = $root.google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.fromObject(object.mavenConfig);
                            }
                            if (object.dockerConfig != null) {
                                if (typeof object.dockerConfig !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Repository.dockerConfig: object expected");
                                message.dockerConfig = $root.google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig.fromObject(object.dockerConfig);
                            }
                            if (object.virtualRepositoryConfig != null) {
                                if (typeof object.virtualRepositoryConfig !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Repository.virtualRepositoryConfig: object expected");
                                message.virtualRepositoryConfig = $root.google.devtools.artifactregistry.v1.VirtualRepositoryConfig.fromObject(object.virtualRepositoryConfig);
                            }
                            if (object.remoteRepositoryConfig != null) {
                                if (typeof object.remoteRepositoryConfig !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Repository.remoteRepositoryConfig: object expected");
                                message.remoteRepositoryConfig = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.fromObject(object.remoteRepositoryConfig);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.format) {
                            default:
                                if (typeof object.format === "number") {
                                    message.format = object.format;
                                    break;
                                }
                                break;
                            case "FORMAT_UNSPECIFIED":
                            case 0:
                                message.format = 0;
                                break;
                            case "DOCKER":
                            case 1:
                                message.format = 1;
                                break;
                            case "MAVEN":
                            case 2:
                                message.format = 2;
                                break;
                            case "NPM":
                            case 3:
                                message.format = 3;
                                break;
                            case "APT":
                            case 5:
                                message.format = 5;
                                break;
                            case "YUM":
                            case 6:
                                message.format = 6;
                                break;
                            case "PYTHON":
                            case 8:
                                message.format = 8;
                                break;
                            case "KFP":
                            case 9:
                                message.format = 9;
                                break;
                            case "GO":
                            case 10:
                                message.format = 10;
                                break;
                            case "GENERIC":
                            case 11:
                                message.format = 11;
                                break;
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Repository.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Repository.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Repository.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            switch (object.mode) {
                            default:
                                if (typeof object.mode === "number") {
                                    message.mode = object.mode;
                                    break;
                                }
                                break;
                            case "MODE_UNSPECIFIED":
                            case 0:
                                message.mode = 0;
                                break;
                            case "STANDARD_REPOSITORY":
                            case 1:
                                message.mode = 1;
                                break;
                            case "VIRTUAL_REPOSITORY":
                            case 2:
                                message.mode = 2;
                                break;
                            case "REMOTE_REPOSITORY":
                            case 3:
                                message.mode = 3;
                                break;
                            }
                            if (object.cleanupPolicies) {
                                if (typeof object.cleanupPolicies !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Repository.cleanupPolicies: object expected");
                                message.cleanupPolicies = {};
                                for (var keys = Object.keys(object.cleanupPolicies), i = 0; i < keys.length; ++i) {
                                    if (typeof object.cleanupPolicies[keys[i]] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.Repository.cleanupPolicies: object expected");
                                    message.cleanupPolicies[keys[i]] = $root.google.devtools.artifactregistry.v1.CleanupPolicy.fromObject(object.cleanupPolicies[keys[i]]);
                                }
                            }
                            if (object.sizeBytes != null)
                                if ($util.Long)
                                    (message.sizeBytes = $util.Long.fromValue(object.sizeBytes)).unsigned = false;
                                else if (typeof object.sizeBytes === "string")
                                    message.sizeBytes = parseInt(object.sizeBytes, 10);
                                else if (typeof object.sizeBytes === "number")
                                    message.sizeBytes = object.sizeBytes;
                                else if (typeof object.sizeBytes === "object")
                                    message.sizeBytes = new $util.LongBits(object.sizeBytes.low >>> 0, object.sizeBytes.high >>> 0).toNumber();
                            if (object.satisfiesPzs != null)
                                message.satisfiesPzs = Boolean(object.satisfiesPzs);
                            if (object.cleanupPolicyDryRun != null)
                                message.cleanupPolicyDryRun = Boolean(object.cleanupPolicyDryRun);
                            if (object.vulnerabilityScanningConfig != null) {
                                if (typeof object.vulnerabilityScanningConfig !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Repository.vulnerabilityScanningConfig: object expected");
                                message.vulnerabilityScanningConfig = $root.google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.fromObject(object.vulnerabilityScanningConfig);
                            }
                            if (object.disallowUnspecifiedMode != null)
                                message.disallowUnspecifiedMode = Boolean(object.disallowUnspecifiedMode);
                            if (object.satisfiesPzi != null)
                                message.satisfiesPzi = Boolean(object.satisfiesPzi);
                            if (object.registryUri != null)
                                message.registryUri = String(object.registryUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Repository message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @static
                         * @param {google.devtools.artifactregistry.v1.Repository} message Repository
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Repository.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.cleanupPolicies = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.format = options.enums === String ? "FORMAT_UNSPECIFIED" : 0;
                                object.description = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.kmsKeyName = "";
                                object.mode = options.enums === String ? "MODE_UNSPECIFIED" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.sizeBytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.sizeBytes = options.longs === String ? "0" : 0;
                                object.satisfiesPzs = false;
                                object.cleanupPolicyDryRun = false;
                                object.vulnerabilityScanningConfig = null;
                                object.disallowUnspecifiedMode = false;
                                object.satisfiesPzi = false;
                                object.registryUri = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.format != null && message.hasOwnProperty("format"))
                                object.format = options.enums === String ? $root.google.devtools.artifactregistry.v1.Repository.Format[message.format] === undefined ? message.format : $root.google.devtools.artifactregistry.v1.Repository.Format[message.format] : message.format;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            if (message.mavenConfig != null && message.hasOwnProperty("mavenConfig")) {
                                object.mavenConfig = $root.google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.toObject(message.mavenConfig, options);
                                if (options.oneofs)
                                    object.formatConfig = "mavenConfig";
                            }
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                object.mode = options.enums === String ? $root.google.devtools.artifactregistry.v1.Repository.Mode[message.mode] === undefined ? message.mode : $root.google.devtools.artifactregistry.v1.Repository.Mode[message.mode] : message.mode;
                            if (message.cleanupPolicies && (keys2 = Object.keys(message.cleanupPolicies)).length) {
                                object.cleanupPolicies = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.cleanupPolicies[keys2[j]] = $root.google.devtools.artifactregistry.v1.CleanupPolicy.toObject(message.cleanupPolicies[keys2[j]], options);
                            }
                            if (message.sizeBytes != null && message.hasOwnProperty("sizeBytes"))
                                if (typeof message.sizeBytes === "number")
                                    object.sizeBytes = options.longs === String ? String(message.sizeBytes) : message.sizeBytes;
                                else
                                    object.sizeBytes = options.longs === String ? $util.Long.prototype.toString.call(message.sizeBytes) : options.longs === Number ? new $util.LongBits(message.sizeBytes.low >>> 0, message.sizeBytes.high >>> 0).toNumber() : message.sizeBytes;
                            if (message.virtualRepositoryConfig != null && message.hasOwnProperty("virtualRepositoryConfig")) {
                                object.virtualRepositoryConfig = $root.google.devtools.artifactregistry.v1.VirtualRepositoryConfig.toObject(message.virtualRepositoryConfig, options);
                                if (options.oneofs)
                                    object.modeConfig = "virtualRepositoryConfig";
                            }
                            if (message.remoteRepositoryConfig != null && message.hasOwnProperty("remoteRepositoryConfig")) {
                                object.remoteRepositoryConfig = $root.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.toObject(message.remoteRepositoryConfig, options);
                                if (options.oneofs)
                                    object.modeConfig = "remoteRepositoryConfig";
                            }
                            if (message.satisfiesPzs != null && message.hasOwnProperty("satisfiesPzs"))
                                object.satisfiesPzs = message.satisfiesPzs;
                            if (message.dockerConfig != null && message.hasOwnProperty("dockerConfig")) {
                                object.dockerConfig = $root.google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig.toObject(message.dockerConfig, options);
                                if (options.oneofs)
                                    object.formatConfig = "dockerConfig";
                            }
                            if (message.cleanupPolicyDryRun != null && message.hasOwnProperty("cleanupPolicyDryRun"))
                                object.cleanupPolicyDryRun = message.cleanupPolicyDryRun;
                            if (message.vulnerabilityScanningConfig != null && message.hasOwnProperty("vulnerabilityScanningConfig"))
                                object.vulnerabilityScanningConfig = $root.google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.toObject(message.vulnerabilityScanningConfig, options);
                            if (message.disallowUnspecifiedMode != null && message.hasOwnProperty("disallowUnspecifiedMode"))
                                object.disallowUnspecifiedMode = message.disallowUnspecifiedMode;
                            if (message.satisfiesPzi != null && message.hasOwnProperty("satisfiesPzi"))
                                object.satisfiesPzi = message.satisfiesPzi;
                            if (message.registryUri != null && message.hasOwnProperty("registryUri"))
                                object.registryUri = message.registryUri;
                            return object;
                        };
    
                        /**
                         * Converts this Repository to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Repository.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Repository
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.Repository
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Repository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.Repository";
                        };
    
                        Repository.MavenRepositoryConfig = (function() {
    
                            /**
                             * Properties of a MavenRepositoryConfig.
                             * @memberof google.devtools.artifactregistry.v1.Repository
                             * @interface IMavenRepositoryConfig
                             * @property {boolean|null} [allowSnapshotOverwrites] MavenRepositoryConfig allowSnapshotOverwrites
                             * @property {google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.VersionPolicy|null} [versionPolicy] MavenRepositoryConfig versionPolicy
                             */
    
                            /**
                             * Constructs a new MavenRepositoryConfig.
                             * @memberof google.devtools.artifactregistry.v1.Repository
                             * @classdesc Represents a MavenRepositoryConfig.
                             * @implements IMavenRepositoryConfig
                             * @constructor
                             * @param {google.devtools.artifactregistry.v1.Repository.IMavenRepositoryConfig=} [properties] Properties to set
                             */
                            function MavenRepositoryConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MavenRepositoryConfig allowSnapshotOverwrites.
                             * @member {boolean} allowSnapshotOverwrites
                             * @memberof google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
                             * @instance
                             */
                            MavenRepositoryConfig.prototype.allowSnapshotOverwrites = false;
    
                            /**
                             * MavenRepositoryConfig versionPolicy.
                             * @member {google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.VersionPolicy} versionPolicy
                             * @memberof google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
                             * @instance
                             */
                            MavenRepositoryConfig.prototype.versionPolicy = 0;
    
                            /**
                             * Creates a new MavenRepositoryConfig instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
                             * @static
                             * @param {google.devtools.artifactregistry.v1.Repository.IMavenRepositoryConfig=} [properties] Properties to set
                             * @returns {google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig} MavenRepositoryConfig instance
                             */
                            MavenRepositoryConfig.create = function create(properties) {
                                return new MavenRepositoryConfig(properties);
                            };
    
                            /**
                             * Encodes the specified MavenRepositoryConfig message. Does not implicitly {@link google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
                             * @static
                             * @param {google.devtools.artifactregistry.v1.Repository.IMavenRepositoryConfig} message MavenRepositoryConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MavenRepositoryConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.allowSnapshotOverwrites != null && Object.hasOwnProperty.call(message, "allowSnapshotOverwrites"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.allowSnapshotOverwrites);
                                if (message.versionPolicy != null && Object.hasOwnProperty.call(message, "versionPolicy"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.versionPolicy);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MavenRepositoryConfig message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
                             * @static
                             * @param {google.devtools.artifactregistry.v1.Repository.IMavenRepositoryConfig} message MavenRepositoryConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MavenRepositoryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MavenRepositoryConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig} MavenRepositoryConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MavenRepositoryConfig.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.allowSnapshotOverwrites = reader.bool();
                                            break;
                                        }
                                    case 2: {
                                            message.versionPolicy = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MavenRepositoryConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig} MavenRepositoryConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MavenRepositoryConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MavenRepositoryConfig message.
                             * @function verify
                             * @memberof google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MavenRepositoryConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.allowSnapshotOverwrites != null && message.hasOwnProperty("allowSnapshotOverwrites"))
                                    if (typeof message.allowSnapshotOverwrites !== "boolean")
                                        return "allowSnapshotOverwrites: boolean expected";
                                if (message.versionPolicy != null && message.hasOwnProperty("versionPolicy"))
                                    switch (message.versionPolicy) {
                                    default:
                                        return "versionPolicy: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a MavenRepositoryConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig} MavenRepositoryConfig
                             */
                            MavenRepositoryConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig)
                                    return object;
                                var message = new $root.google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig();
                                if (object.allowSnapshotOverwrites != null)
                                    message.allowSnapshotOverwrites = Boolean(object.allowSnapshotOverwrites);
                                switch (object.versionPolicy) {
                                default:
                                    if (typeof object.versionPolicy === "number") {
                                        message.versionPolicy = object.versionPolicy;
                                        break;
                                    }
                                    break;
                                case "VERSION_POLICY_UNSPECIFIED":
                                case 0:
                                    message.versionPolicy = 0;
                                    break;
                                case "RELEASE":
                                case 1:
                                    message.versionPolicy = 1;
                                    break;
                                case "SNAPSHOT":
                                case 2:
                                    message.versionPolicy = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MavenRepositoryConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
                             * @static
                             * @param {google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig} message MavenRepositoryConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MavenRepositoryConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.allowSnapshotOverwrites = false;
                                    object.versionPolicy = options.enums === String ? "VERSION_POLICY_UNSPECIFIED" : 0;
                                }
                                if (message.allowSnapshotOverwrites != null && message.hasOwnProperty("allowSnapshotOverwrites"))
                                    object.allowSnapshotOverwrites = message.allowSnapshotOverwrites;
                                if (message.versionPolicy != null && message.hasOwnProperty("versionPolicy"))
                                    object.versionPolicy = options.enums === String ? $root.google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.VersionPolicy[message.versionPolicy] === undefined ? message.versionPolicy : $root.google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.VersionPolicy[message.versionPolicy] : message.versionPolicy;
                                return object;
                            };
    
                            /**
                             * Converts this MavenRepositoryConfig to JSON.
                             * @function toJSON
                             * @memberof google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MavenRepositoryConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for MavenRepositoryConfig
                             * @function getTypeUrl
                             * @memberof google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            MavenRepositoryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig";
                            };
    
                            /**
                             * VersionPolicy enum.
                             * @name google.devtools.artifactregistry.v1.Repository.MavenRepositoryConfig.VersionPolicy
                             * @enum {number}
                             * @property {number} VERSION_POLICY_UNSPECIFIED=0 VERSION_POLICY_UNSPECIFIED value
                             * @property {number} RELEASE=1 RELEASE value
                             * @property {number} SNAPSHOT=2 SNAPSHOT value
                             */
                            MavenRepositoryConfig.VersionPolicy = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "VERSION_POLICY_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "RELEASE"] = 1;
                                values[valuesById[2] = "SNAPSHOT"] = 2;
                                return values;
                            })();
    
                            return MavenRepositoryConfig;
                        })();
    
                        Repository.DockerRepositoryConfig = (function() {
    
                            /**
                             * Properties of a DockerRepositoryConfig.
                             * @memberof google.devtools.artifactregistry.v1.Repository
                             * @interface IDockerRepositoryConfig
                             * @property {boolean|null} [immutableTags] DockerRepositoryConfig immutableTags
                             */
    
                            /**
                             * Constructs a new DockerRepositoryConfig.
                             * @memberof google.devtools.artifactregistry.v1.Repository
                             * @classdesc Represents a DockerRepositoryConfig.
                             * @implements IDockerRepositoryConfig
                             * @constructor
                             * @param {google.devtools.artifactregistry.v1.Repository.IDockerRepositoryConfig=} [properties] Properties to set
                             */
                            function DockerRepositoryConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DockerRepositoryConfig immutableTags.
                             * @member {boolean} immutableTags
                             * @memberof google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig
                             * @instance
                             */
                            DockerRepositoryConfig.prototype.immutableTags = false;
    
                            /**
                             * Creates a new DockerRepositoryConfig instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig
                             * @static
                             * @param {google.devtools.artifactregistry.v1.Repository.IDockerRepositoryConfig=} [properties] Properties to set
                             * @returns {google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig} DockerRepositoryConfig instance
                             */
                            DockerRepositoryConfig.create = function create(properties) {
                                return new DockerRepositoryConfig(properties);
                            };
    
                            /**
                             * Encodes the specified DockerRepositoryConfig message. Does not implicitly {@link google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig
                             * @static
                             * @param {google.devtools.artifactregistry.v1.Repository.IDockerRepositoryConfig} message DockerRepositoryConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DockerRepositoryConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.immutableTags != null && Object.hasOwnProperty.call(message, "immutableTags"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.immutableTags);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DockerRepositoryConfig message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig
                             * @static
                             * @param {google.devtools.artifactregistry.v1.Repository.IDockerRepositoryConfig} message DockerRepositoryConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DockerRepositoryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DockerRepositoryConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig} DockerRepositoryConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DockerRepositoryConfig.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.immutableTags = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DockerRepositoryConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig} DockerRepositoryConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DockerRepositoryConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DockerRepositoryConfig message.
                             * @function verify
                             * @memberof google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DockerRepositoryConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.immutableTags != null && message.hasOwnProperty("immutableTags"))
                                    if (typeof message.immutableTags !== "boolean")
                                        return "immutableTags: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a DockerRepositoryConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig} DockerRepositoryConfig
                             */
                            DockerRepositoryConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig)
                                    return object;
                                var message = new $root.google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig();
                                if (object.immutableTags != null)
                                    message.immutableTags = Boolean(object.immutableTags);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DockerRepositoryConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig
                             * @static
                             * @param {google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig} message DockerRepositoryConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DockerRepositoryConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.immutableTags = false;
                                if (message.immutableTags != null && message.hasOwnProperty("immutableTags"))
                                    object.immutableTags = message.immutableTags;
                                return object;
                            };
    
                            /**
                             * Converts this DockerRepositoryConfig to JSON.
                             * @function toJSON
                             * @memberof google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DockerRepositoryConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DockerRepositoryConfig
                             * @function getTypeUrl
                             * @memberof google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DockerRepositoryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.artifactregistry.v1.Repository.DockerRepositoryConfig";
                            };
    
                            return DockerRepositoryConfig;
                        })();
    
                        Repository.VulnerabilityScanningConfig = (function() {
    
                            /**
                             * Properties of a VulnerabilityScanningConfig.
                             * @memberof google.devtools.artifactregistry.v1.Repository
                             * @interface IVulnerabilityScanningConfig
                             * @property {google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.EnablementConfig|null} [enablementConfig] VulnerabilityScanningConfig enablementConfig
                             * @property {google.protobuf.ITimestamp|null} [lastEnableTime] VulnerabilityScanningConfig lastEnableTime
                             * @property {google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.EnablementState|null} [enablementState] VulnerabilityScanningConfig enablementState
                             * @property {string|null} [enablementStateReason] VulnerabilityScanningConfig enablementStateReason
                             */
    
                            /**
                             * Constructs a new VulnerabilityScanningConfig.
                             * @memberof google.devtools.artifactregistry.v1.Repository
                             * @classdesc Represents a VulnerabilityScanningConfig.
                             * @implements IVulnerabilityScanningConfig
                             * @constructor
                             * @param {google.devtools.artifactregistry.v1.Repository.IVulnerabilityScanningConfig=} [properties] Properties to set
                             */
                            function VulnerabilityScanningConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * VulnerabilityScanningConfig enablementConfig.
                             * @member {google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.EnablementConfig} enablementConfig
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @instance
                             */
                            VulnerabilityScanningConfig.prototype.enablementConfig = 0;
    
                            /**
                             * VulnerabilityScanningConfig lastEnableTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} lastEnableTime
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @instance
                             */
                            VulnerabilityScanningConfig.prototype.lastEnableTime = null;
    
                            /**
                             * VulnerabilityScanningConfig enablementState.
                             * @member {google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.EnablementState} enablementState
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @instance
                             */
                            VulnerabilityScanningConfig.prototype.enablementState = 0;
    
                            /**
                             * VulnerabilityScanningConfig enablementStateReason.
                             * @member {string} enablementStateReason
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @instance
                             */
                            VulnerabilityScanningConfig.prototype.enablementStateReason = "";
    
                            /**
                             * Creates a new VulnerabilityScanningConfig instance using the specified properties.
                             * @function create
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @static
                             * @param {google.devtools.artifactregistry.v1.Repository.IVulnerabilityScanningConfig=} [properties] Properties to set
                             * @returns {google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig} VulnerabilityScanningConfig instance
                             */
                            VulnerabilityScanningConfig.create = function create(properties) {
                                return new VulnerabilityScanningConfig(properties);
                            };
    
                            /**
                             * Encodes the specified VulnerabilityScanningConfig message. Does not implicitly {@link google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @static
                             * @param {google.devtools.artifactregistry.v1.Repository.IVulnerabilityScanningConfig} message VulnerabilityScanningConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            VulnerabilityScanningConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enablementConfig != null && Object.hasOwnProperty.call(message, "enablementConfig"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.enablementConfig);
                                if (message.lastEnableTime != null && Object.hasOwnProperty.call(message, "lastEnableTime"))
                                    $root.google.protobuf.Timestamp.encode(message.lastEnableTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.enablementState != null && Object.hasOwnProperty.call(message, "enablementState"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.enablementState);
                                if (message.enablementStateReason != null && Object.hasOwnProperty.call(message, "enablementStateReason"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.enablementStateReason);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified VulnerabilityScanningConfig message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @static
                             * @param {google.devtools.artifactregistry.v1.Repository.IVulnerabilityScanningConfig} message VulnerabilityScanningConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            VulnerabilityScanningConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a VulnerabilityScanningConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig} VulnerabilityScanningConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            VulnerabilityScanningConfig.decode = function decode(reader, length, error) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    if (tag === error)
                                        break;
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.enablementConfig = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.lastEnableTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.enablementState = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            message.enablementStateReason = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a VulnerabilityScanningConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig} VulnerabilityScanningConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            VulnerabilityScanningConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a VulnerabilityScanningConfig message.
                             * @function verify
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            VulnerabilityScanningConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.enablementConfig != null && message.hasOwnProperty("enablementConfig"))
                                    switch (message.enablementConfig) {
                                    default:
                                        return "enablementConfig: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.lastEnableTime != null && message.hasOwnProperty("lastEnableTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.lastEnableTime);
                                    if (error)
                                        return "lastEnableTime." + error;
                                }
                                if (message.enablementState != null && message.hasOwnProperty("enablementState"))
                                    switch (message.enablementState) {
                                    default:
                                        return "enablementState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.enablementStateReason != null && message.hasOwnProperty("enablementStateReason"))
                                    if (!$util.isString(message.enablementStateReason))
                                        return "enablementStateReason: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a VulnerabilityScanningConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig} VulnerabilityScanningConfig
                             */
                            VulnerabilityScanningConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig)
                                    return object;
                                var message = new $root.google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig();
                                switch (object.enablementConfig) {
                                default:
                                    if (typeof object.enablementConfig === "number") {
                                        message.enablementConfig = object.enablementConfig;
                                        break;
                                    }
                                    break;
                                case "ENABLEMENT_CONFIG_UNSPECIFIED":
                                case 0:
                                    message.enablementConfig = 0;
                                    break;
                                case "INHERITED":
                                case 1:
                                    message.enablementConfig = 1;
                                    break;
                                case "DISABLED":
                                case 2:
                                    message.enablementConfig = 2;
                                    break;
                                }
                                if (object.lastEnableTime != null) {
                                    if (typeof object.lastEnableTime !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.lastEnableTime: object expected");
                                    message.lastEnableTime = $root.google.protobuf.Timestamp.fromObject(object.lastEnableTime);
                                }
                                switch (object.enablementState) {
                                default:
                                    if (typeof object.enablementState === "number") {
                                        message.enablementState = object.enablementState;
                                        break;
                                    }
                                    break;
                                case "ENABLEMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.enablementState = 0;
                                    break;
                                case "SCANNING_UNSUPPORTED":
                                case 1:
                                    message.enablementState = 1;
                                    break;
                                case "SCANNING_DISABLED":
                                case 2:
                                    message.enablementState = 2;
                                    break;
                                case "SCANNING_ACTIVE":
                                case 3:
                                    message.enablementState = 3;
                                    break;
                                }
                                if (object.enablementStateReason != null)
                                    message.enablementStateReason = String(object.enablementStateReason);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a VulnerabilityScanningConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @static
                             * @param {google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig} message VulnerabilityScanningConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            VulnerabilityScanningConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.enablementConfig = options.enums === String ? "ENABLEMENT_CONFIG_UNSPECIFIED" : 0;
                                    object.lastEnableTime = null;
                                    object.enablementState = options.enums === String ? "ENABLEMENT_STATE_UNSPECIFIED" : 0;
                                    object.enablementStateReason = "";
                                }
                                if (message.enablementConfig != null && message.hasOwnProperty("enablementConfig"))
                                    object.enablementConfig = options.enums === String ? $root.google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.EnablementConfig[message.enablementConfig] === undefined ? message.enablementConfig : $root.google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.EnablementConfig[message.enablementConfig] : message.enablementConfig;
                                if (message.lastEnableTime != null && message.hasOwnProperty("lastEnableTime"))
                                    object.lastEnableTime = $root.google.protobuf.Timestamp.toObject(message.lastEnableTime, options);
                                if (message.enablementState != null && message.hasOwnProperty("enablementState"))
                                    object.enablementState = options.enums === String ? $root.google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.EnablementState[message.enablementState] === undefined ? message.enablementState : $root.google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.EnablementState[message.enablementState] : message.enablementState;
                                if (message.enablementStateReason != null && message.hasOwnProperty("enablementStateReason"))
                                    object.enablementStateReason = message.enablementStateReason;
                                return object;
                            };
    
                            /**
                             * Converts this VulnerabilityScanningConfig to JSON.
                             * @function toJSON
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            VulnerabilityScanningConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for VulnerabilityScanningConfig
                             * @function getTypeUrl
                             * @memberof google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            VulnerabilityScanningConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig";
                            };
    
                            /**
                             * EnablementConfig enum.
                             * @name google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.EnablementConfig
                             * @enum {number}
                             * @property {number} ENABLEMENT_CONFIG_UNSPECIFIED=0 ENABLEMENT_CONFIG_UNSPECIFIED value
                             * @property {number} INHERITED=1 INHERITED value
                             * @property {number} DISABLED=2 DISABLED value
                             */
                            VulnerabilityScanningConfig.EnablementConfig = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "ENABLEMENT_CONFIG_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "INHERITED"] = 1;
                                values[valuesById[2] = "DISABLED"] = 2;
                                return values;
                            })();
    
                            /**
                             * EnablementState enum.
                             * @name google.devtools.artifactregistry.v1.Repository.VulnerabilityScanningConfig.EnablementState
                             * @enum {number}
                             * @property {number} ENABLEMENT_STATE_UNSPECIFIED=0 ENABLEMENT_STATE_UNSPECIFIED value
                             * @property {number} SCANNING_UNSUPPORTED=1 SCANNING_UNSUPPORTED value
                             * @property {number} SCANNING_DISABLED=2 SCANNING_DISABLED value
                             * @property {number} SCANNING_ACTIVE=3 SCANNING_ACTIVE value
                             */
                            VulnerabilityScanningConfig.EnablementState = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "ENABLEMENT_STATE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SCANNING_UNSUPPORTED"] = 1;
                                values[valuesById[2] = "SCANNING_DISABLED"] = 2;
                                values[valuesById[3] = "SCANNING_ACTIVE"] = 3;
                                return values;
                            })();
    
                            return VulnerabilityScanningConfig;
                        })();
    
                        /**
                         * Format enum.
                         * @name google.devtools.artifactregistry.v1.Repository.Format
                         * @enum {number}
                         * @property {number} FORMAT_UNSPECIFIED=0 FORMAT_UNSPECIFIED value
                         * @property {number} DOCKER=1 DOCKER value
                         * @property {number} MAVEN=2 MAVEN value
                         * @property {number} NPM=3 NPM value
                         * @property {number} APT=5 APT value
                         * @property {number} YUM=6 YUM value
                         * @property {number} PYTHON=8 PYTHON value
                         * @property {number} KFP=9 KFP value
                         * @property {number} GO=10 GO value
                         * @property {number} GENERIC=11 GENERIC value
                         */
                        Repository.Format = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "FORMAT_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DOCKER"] = 1;
                            values[valuesById[2] = "MAVEN"] = 2;
                            values[valuesById[3] = "NPM"] = 3;
                            values[valuesById[5] = "APT"] = 5;
                            values[valuesById[6] = "YUM"] = 6;
                            values[valuesById[8] = "PYTHON"] = 8;
                            values[valuesById[9] = "KFP"] = 9;
                            values[valuesById[10] = "GO"] = 10;
                            values[valuesById[11] = "GENERIC"] = 11;
                            return values;
                        })();
    
                        /**
                         * Mode enum.
                         * @name google.devtools.artifactregistry.v1.Repository.Mode
                         * @enum {number}
                         * @property {number} MODE_UNSPECIFIED=0 MODE_UNSPECIFIED value
                         * @property {number} STANDARD_REPOSITORY=1 STANDARD_REPOSITORY value
                         * @property {number} VIRTUAL_REPOSITORY=2 VIRTUAL_REPOSITORY value
                         * @property {number} REMOTE_REPOSITORY=3 REMOTE_REPOSITORY value
                         */
                        Repository.Mode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "STANDARD_REPOSITORY"] = 1;
                            values[valuesById[2] = "VIRTUAL_REPOSITORY"] = 2;
                            values[valuesById[3] = "REMOTE_REPOSITORY"] = 3;
                            return values;
                        })();
    
                        return Repository;
                    })();
    
                    v1.ListRepositoriesRequest = (function() {
    
                        /**
                         * Properties of a ListRepositoriesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListRepositoriesRequest
                         * @property {string|null} [parent] ListRepositoriesRequest parent
                         * @property {number|null} [pageSize] ListRepositoriesRequest pageSize
                         * @property {string|null} [pageToken] ListRepositoriesRequest pageToken
                         * @property {string|null} [filter] ListRepositoriesRequest filter
                         * @property {string|null} [orderBy] ListRepositoriesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListRepositoriesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListRepositoriesRequest.
                         * @implements IListRepositoriesRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListRepositoriesRequest=} [properties] Properties to set
                         */
                        function ListRepositoriesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRepositoriesRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @instance
                         */
                        ListRepositoriesRequest.prototype.parent = "";
    
                        /**
                         * ListRepositoriesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @instance
                         */
                        ListRepositoriesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListRepositoriesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @instance
                         */
                        ListRepositoriesRequest.prototype.pageToken = "";
    
                        /**
                         * ListRepositoriesRequest filter.
                         * @member {string} filter
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @instance
                         */
                        ListRepositoriesRequest.prototype.filter = "";
    
                        /**
                         * ListRepositoriesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @instance
                         */
                        ListRepositoriesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListRepositoriesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListRepositoriesRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListRepositoriesRequest} ListRepositoriesRequest instance
                         */
                        ListRepositoriesRequest.create = function create(properties) {
                            return new ListRepositoriesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRepositoriesRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListRepositoriesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListRepositoriesRequest} message ListRepositoriesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRepositoriesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRepositoriesRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListRepositoriesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListRepositoriesRequest} message ListRepositoriesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRepositoriesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRepositoriesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListRepositoriesRequest} ListRepositoriesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRepositoriesRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListRepositoriesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRepositoriesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListRepositoriesRequest} ListRepositoriesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRepositoriesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRepositoriesRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRepositoriesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRepositoriesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListRepositoriesRequest} ListRepositoriesRequest
                         */
                        ListRepositoriesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListRepositoriesRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListRepositoriesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRepositoriesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListRepositoriesRequest} message ListRepositoriesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRepositoriesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListRepositoriesRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRepositoriesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRepositoriesRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRepositoriesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListRepositoriesRequest";
                        };
    
                        return ListRepositoriesRequest;
                    })();
    
                    v1.ListRepositoriesResponse = (function() {
    
                        /**
                         * Properties of a ListRepositoriesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListRepositoriesResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.IRepository>|null} [repositories] ListRepositoriesResponse repositories
                         * @property {string|null} [nextPageToken] ListRepositoriesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListRepositoriesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListRepositoriesResponse.
                         * @implements IListRepositoriesResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListRepositoriesResponse=} [properties] Properties to set
                         */
                        function ListRepositoriesResponse(properties) {
                            this.repositories = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRepositoriesResponse repositories.
                         * @member {Array.<google.devtools.artifactregistry.v1.IRepository>} repositories
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesResponse
                         * @instance
                         */
                        ListRepositoriesResponse.prototype.repositories = $util.emptyArray;
    
                        /**
                         * ListRepositoriesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesResponse
                         * @instance
                         */
                        ListRepositoriesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListRepositoriesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListRepositoriesResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListRepositoriesResponse} ListRepositoriesResponse instance
                         */
                        ListRepositoriesResponse.create = function create(properties) {
                            return new ListRepositoriesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRepositoriesResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListRepositoriesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListRepositoriesResponse} message ListRepositoriesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRepositoriesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.repositories != null && message.repositories.length)
                                for (var i = 0; i < message.repositories.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.Repository.encode(message.repositories[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRepositoriesResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListRepositoriesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListRepositoriesResponse} message ListRepositoriesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRepositoriesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRepositoriesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListRepositoriesResponse} ListRepositoriesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRepositoriesResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListRepositoriesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.repositories && message.repositories.length))
                                            message.repositories = [];
                                        message.repositories.push($root.google.devtools.artifactregistry.v1.Repository.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRepositoriesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListRepositoriesResponse} ListRepositoriesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRepositoriesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRepositoriesResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRepositoriesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.repositories != null && message.hasOwnProperty("repositories")) {
                                if (!Array.isArray(message.repositories))
                                    return "repositories: array expected";
                                for (var i = 0; i < message.repositories.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.Repository.verify(message.repositories[i]);
                                    if (error)
                                        return "repositories." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRepositoriesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListRepositoriesResponse} ListRepositoriesResponse
                         */
                        ListRepositoriesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListRepositoriesResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListRepositoriesResponse();
                            if (object.repositories) {
                                if (!Array.isArray(object.repositories))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ListRepositoriesResponse.repositories: array expected");
                                message.repositories = [];
                                for (var i = 0; i < object.repositories.length; ++i) {
                                    if (typeof object.repositories[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ListRepositoriesResponse.repositories: object expected");
                                    message.repositories[i] = $root.google.devtools.artifactregistry.v1.Repository.fromObject(object.repositories[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRepositoriesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListRepositoriesResponse} message ListRepositoriesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRepositoriesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.repositories = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.repositories && message.repositories.length) {
                                object.repositories = [];
                                for (var j = 0; j < message.repositories.length; ++j)
                                    object.repositories[j] = $root.google.devtools.artifactregistry.v1.Repository.toObject(message.repositories[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListRepositoriesResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRepositoriesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRepositoriesResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListRepositoriesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRepositoriesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListRepositoriesResponse";
                        };
    
                        return ListRepositoriesResponse;
                    })();
    
                    v1.GetRepositoryRequest = (function() {
    
                        /**
                         * Properties of a GetRepositoryRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetRepositoryRequest
                         * @property {string|null} [name] GetRepositoryRequest name
                         */
    
                        /**
                         * Constructs a new GetRepositoryRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetRepositoryRequest.
                         * @implements IGetRepositoryRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetRepositoryRequest=} [properties] Properties to set
                         */
                        function GetRepositoryRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetRepositoryRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetRepositoryRequest
                         * @instance
                         */
                        GetRepositoryRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetRepositoryRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetRepositoryRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetRepositoryRequest} GetRepositoryRequest instance
                         */
                        GetRepositoryRequest.create = function create(properties) {
                            return new GetRepositoryRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetRepositoryRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetRepositoryRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetRepositoryRequest} message GetRepositoryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRepositoryRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetRepositoryRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetRepositoryRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetRepositoryRequest} message GetRepositoryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRepositoryRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetRepositoryRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetRepositoryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetRepositoryRequest} GetRepositoryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRepositoryRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetRepositoryRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetRepositoryRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetRepositoryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetRepositoryRequest} GetRepositoryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRepositoryRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetRepositoryRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetRepositoryRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetRepositoryRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetRepositoryRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetRepositoryRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetRepositoryRequest} GetRepositoryRequest
                         */
                        GetRepositoryRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetRepositoryRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetRepositoryRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetRepositoryRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetRepositoryRequest} message GetRepositoryRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetRepositoryRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetRepositoryRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetRepositoryRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetRepositoryRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetRepositoryRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetRepositoryRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetRepositoryRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetRepositoryRequest";
                        };
    
                        return GetRepositoryRequest;
                    })();
    
                    v1.CreateRepositoryRequest = (function() {
    
                        /**
                         * Properties of a CreateRepositoryRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface ICreateRepositoryRequest
                         * @property {string|null} [parent] CreateRepositoryRequest parent
                         * @property {string|null} [repositoryId] CreateRepositoryRequest repositoryId
                         * @property {google.devtools.artifactregistry.v1.IRepository|null} [repository] CreateRepositoryRequest repository
                         */
    
                        /**
                         * Constructs a new CreateRepositoryRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a CreateRepositoryRequest.
                         * @implements ICreateRepositoryRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.ICreateRepositoryRequest=} [properties] Properties to set
                         */
                        function CreateRepositoryRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateRepositoryRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @instance
                         */
                        CreateRepositoryRequest.prototype.parent = "";
    
                        /**
                         * CreateRepositoryRequest repositoryId.
                         * @member {string} repositoryId
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @instance
                         */
                        CreateRepositoryRequest.prototype.repositoryId = "";
    
                        /**
                         * CreateRepositoryRequest repository.
                         * @member {google.devtools.artifactregistry.v1.IRepository|null|undefined} repository
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @instance
                         */
                        CreateRepositoryRequest.prototype.repository = null;
    
                        /**
                         * Creates a new CreateRepositoryRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICreateRepositoryRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.CreateRepositoryRequest} CreateRepositoryRequest instance
                         */
                        CreateRepositoryRequest.create = function create(properties) {
                            return new CreateRepositoryRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateRepositoryRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.CreateRepositoryRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICreateRepositoryRequest} message CreateRepositoryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRepositoryRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.repositoryId != null && Object.hasOwnProperty.call(message, "repositoryId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.repositoryId);
                            if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                $root.google.devtools.artifactregistry.v1.Repository.encode(message.repository, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateRepositoryRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.CreateRepositoryRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICreateRepositoryRequest} message CreateRepositoryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRepositoryRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateRepositoryRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.CreateRepositoryRequest} CreateRepositoryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRepositoryRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.CreateRepositoryRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.repositoryId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.repository = $root.google.devtools.artifactregistry.v1.Repository.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateRepositoryRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.CreateRepositoryRequest} CreateRepositoryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRepositoryRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateRepositoryRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateRepositoryRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.repositoryId != null && message.hasOwnProperty("repositoryId"))
                                if (!$util.isString(message.repositoryId))
                                    return "repositoryId: string expected";
                            if (message.repository != null && message.hasOwnProperty("repository")) {
                                var error = $root.google.devtools.artifactregistry.v1.Repository.verify(message.repository);
                                if (error)
                                    return "repository." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateRepositoryRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.CreateRepositoryRequest} CreateRepositoryRequest
                         */
                        CreateRepositoryRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.CreateRepositoryRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.CreateRepositoryRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.repositoryId != null)
                                message.repositoryId = String(object.repositoryId);
                            if (object.repository != null) {
                                if (typeof object.repository !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.CreateRepositoryRequest.repository: object expected");
                                message.repository = $root.google.devtools.artifactregistry.v1.Repository.fromObject(object.repository);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateRepositoryRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.CreateRepositoryRequest} message CreateRepositoryRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateRepositoryRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.repositoryId = "";
                                object.repository = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.repositoryId != null && message.hasOwnProperty("repositoryId"))
                                object.repositoryId = message.repositoryId;
                            if (message.repository != null && message.hasOwnProperty("repository"))
                                object.repository = $root.google.devtools.artifactregistry.v1.Repository.toObject(message.repository, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateRepositoryRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateRepositoryRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateRepositoryRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.CreateRepositoryRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateRepositoryRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.CreateRepositoryRequest";
                        };
    
                        return CreateRepositoryRequest;
                    })();
    
                    v1.UpdateRepositoryRequest = (function() {
    
                        /**
                         * Properties of an UpdateRepositoryRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IUpdateRepositoryRequest
                         * @property {google.devtools.artifactregistry.v1.IRepository|null} [repository] UpdateRepositoryRequest repository
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateRepositoryRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateRepositoryRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an UpdateRepositoryRequest.
                         * @implements IUpdateRepositoryRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IUpdateRepositoryRequest=} [properties] Properties to set
                         */
                        function UpdateRepositoryRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateRepositoryRequest repository.
                         * @member {google.devtools.artifactregistry.v1.IRepository|null|undefined} repository
                         * @memberof google.devtools.artifactregistry.v1.UpdateRepositoryRequest
                         * @instance
                         */
                        UpdateRepositoryRequest.prototype.repository = null;
    
                        /**
                         * UpdateRepositoryRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.devtools.artifactregistry.v1.UpdateRepositoryRequest
                         * @instance
                         */
                        UpdateRepositoryRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateRepositoryRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.UpdateRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateRepositoryRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.UpdateRepositoryRequest} UpdateRepositoryRequest instance
                         */
                        UpdateRepositoryRequest.create = function create(properties) {
                            return new UpdateRepositoryRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateRepositoryRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateRepositoryRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.UpdateRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateRepositoryRequest} message UpdateRepositoryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRepositoryRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                $root.google.devtools.artifactregistry.v1.Repository.encode(message.repository, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateRepositoryRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateRepositoryRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateRepositoryRequest} message UpdateRepositoryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRepositoryRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateRepositoryRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.UpdateRepositoryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.UpdateRepositoryRequest} UpdateRepositoryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRepositoryRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.UpdateRepositoryRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.repository = $root.google.devtools.artifactregistry.v1.Repository.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateRepositoryRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateRepositoryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.UpdateRepositoryRequest} UpdateRepositoryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRepositoryRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateRepositoryRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.UpdateRepositoryRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateRepositoryRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.repository != null && message.hasOwnProperty("repository")) {
                                var error = $root.google.devtools.artifactregistry.v1.Repository.verify(message.repository);
                                if (error)
                                    return "repository." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateRepositoryRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateRepositoryRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.UpdateRepositoryRequest} UpdateRepositoryRequest
                         */
                        UpdateRepositoryRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.UpdateRepositoryRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.UpdateRepositoryRequest();
                            if (object.repository != null) {
                                if (typeof object.repository !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateRepositoryRequest.repository: object expected");
                                message.repository = $root.google.devtools.artifactregistry.v1.Repository.fromObject(object.repository);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateRepositoryRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateRepositoryRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.UpdateRepositoryRequest} message UpdateRepositoryRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateRepositoryRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.repository = null;
                                object.updateMask = null;
                            }
                            if (message.repository != null && message.hasOwnProperty("repository"))
                                object.repository = $root.google.devtools.artifactregistry.v1.Repository.toObject(message.repository, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateRepositoryRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.UpdateRepositoryRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateRepositoryRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateRepositoryRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.UpdateRepositoryRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateRepositoryRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.UpdateRepositoryRequest";
                        };
    
                        return UpdateRepositoryRequest;
                    })();
    
                    v1.DeleteRepositoryRequest = (function() {
    
                        /**
                         * Properties of a DeleteRepositoryRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IDeleteRepositoryRequest
                         * @property {string|null} [name] DeleteRepositoryRequest name
                         */
    
                        /**
                         * Constructs a new DeleteRepositoryRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a DeleteRepositoryRequest.
                         * @implements IDeleteRepositoryRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IDeleteRepositoryRequest=} [properties] Properties to set
                         */
                        function DeleteRepositoryRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteRepositoryRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.DeleteRepositoryRequest
                         * @instance
                         */
                        DeleteRepositoryRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteRepositoryRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.DeleteRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteRepositoryRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.DeleteRepositoryRequest} DeleteRepositoryRequest instance
                         */
                        DeleteRepositoryRequest.create = function create(properties) {
                            return new DeleteRepositoryRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteRepositoryRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.DeleteRepositoryRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.DeleteRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteRepositoryRequest} message DeleteRepositoryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRepositoryRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteRepositoryRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.DeleteRepositoryRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeleteRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteRepositoryRequest} message DeleteRepositoryRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRepositoryRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteRepositoryRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.DeleteRepositoryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.DeleteRepositoryRequest} DeleteRepositoryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRepositoryRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.DeleteRepositoryRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteRepositoryRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeleteRepositoryRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.DeleteRepositoryRequest} DeleteRepositoryRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRepositoryRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteRepositoryRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.DeleteRepositoryRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteRepositoryRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteRepositoryRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.DeleteRepositoryRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.DeleteRepositoryRequest} DeleteRepositoryRequest
                         */
                        DeleteRepositoryRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.DeleteRepositoryRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.DeleteRepositoryRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteRepositoryRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.DeleteRepositoryRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.DeleteRepositoryRequest} message DeleteRepositoryRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteRepositoryRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteRepositoryRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.DeleteRepositoryRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteRepositoryRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteRepositoryRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.DeleteRepositoryRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteRepositoryRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.DeleteRepositoryRequest";
                        };
    
                        return DeleteRepositoryRequest;
                    })();
    
                    v1.Rule = (function() {
    
                        /**
                         * Properties of a Rule.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IRule
                         * @property {string|null} [name] Rule name
                         * @property {google.devtools.artifactregistry.v1.Rule.Action|null} [action] Rule action
                         * @property {google.devtools.artifactregistry.v1.Rule.Operation|null} [operation] Rule operation
                         * @property {google.type.IExpr|null} [condition] Rule condition
                         * @property {string|null} [packageId] Rule packageId
                         */
    
                        /**
                         * Constructs a new Rule.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a Rule.
                         * @implements IRule
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IRule=} [properties] Properties to set
                         */
                        function Rule(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Rule name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @instance
                         */
                        Rule.prototype.name = "";
    
                        /**
                         * Rule action.
                         * @member {google.devtools.artifactregistry.v1.Rule.Action} action
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @instance
                         */
                        Rule.prototype.action = 0;
    
                        /**
                         * Rule operation.
                         * @member {google.devtools.artifactregistry.v1.Rule.Operation} operation
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @instance
                         */
                        Rule.prototype.operation = 0;
    
                        /**
                         * Rule condition.
                         * @member {google.type.IExpr|null|undefined} condition
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @instance
                         */
                        Rule.prototype.condition = null;
    
                        /**
                         * Rule packageId.
                         * @member {string} packageId
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @instance
                         */
                        Rule.prototype.packageId = "";
    
                        /**
                         * Creates a new Rule instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IRule=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.Rule} Rule instance
                         */
                        Rule.create = function create(properties) {
                            return new Rule(properties);
                        };
    
                        /**
                         * Encodes the specified Rule message. Does not implicitly {@link google.devtools.artifactregistry.v1.Rule.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IRule} message Rule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Rule.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.action);
                            if (message.operation != null && Object.hasOwnProperty.call(message, "operation"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.operation);
                            if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                                $root.google.type.Expr.encode(message.condition, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.packageId != null && Object.hasOwnProperty.call(message, "packageId"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.packageId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Rule message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.Rule.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IRule} message Rule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Rule.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Rule message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.Rule} Rule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Rule.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.Rule();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.action = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.operation = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.condition = $root.google.type.Expr.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.packageId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Rule message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.Rule} Rule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Rule.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Rule message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Rule.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.action != null && message.hasOwnProperty("action"))
                                switch (message.action) {
                                default:
                                    return "action: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.operation != null && message.hasOwnProperty("operation"))
                                switch (message.operation) {
                                default:
                                    return "operation: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.condition != null && message.hasOwnProperty("condition")) {
                                var error = $root.google.type.Expr.verify(message.condition);
                                if (error)
                                    return "condition." + error;
                            }
                            if (message.packageId != null && message.hasOwnProperty("packageId"))
                                if (!$util.isString(message.packageId))
                                    return "packageId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Rule message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.Rule} Rule
                         */
                        Rule.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.Rule)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.Rule();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.action) {
                            default:
                                if (typeof object.action === "number") {
                                    message.action = object.action;
                                    break;
                                }
                                break;
                            case "ACTION_UNSPECIFIED":
                            case 0:
                                message.action = 0;
                                break;
                            case "ALLOW":
                            case 1:
                                message.action = 1;
                                break;
                            case "DENY":
                            case 2:
                                message.action = 2;
                                break;
                            }
                            switch (object.operation) {
                            default:
                                if (typeof object.operation === "number") {
                                    message.operation = object.operation;
                                    break;
                                }
                                break;
                            case "OPERATION_UNSPECIFIED":
                            case 0:
                                message.operation = 0;
                                break;
                            case "DOWNLOAD":
                            case 1:
                                message.operation = 1;
                                break;
                            }
                            if (object.condition != null) {
                                if (typeof object.condition !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Rule.condition: object expected");
                                message.condition = $root.google.type.Expr.fromObject(object.condition);
                            }
                            if (object.packageId != null)
                                message.packageId = String(object.packageId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Rule message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @static
                         * @param {google.devtools.artifactregistry.v1.Rule} message Rule
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Rule.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.action = options.enums === String ? "ACTION_UNSPECIFIED" : 0;
                                object.operation = options.enums === String ? "OPERATION_UNSPECIFIED" : 0;
                                object.condition = null;
                                object.packageId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.action != null && message.hasOwnProperty("action"))
                                object.action = options.enums === String ? $root.google.devtools.artifactregistry.v1.Rule.Action[message.action] === undefined ? message.action : $root.google.devtools.artifactregistry.v1.Rule.Action[message.action] : message.action;
                            if (message.operation != null && message.hasOwnProperty("operation"))
                                object.operation = options.enums === String ? $root.google.devtools.artifactregistry.v1.Rule.Operation[message.operation] === undefined ? message.operation : $root.google.devtools.artifactregistry.v1.Rule.Operation[message.operation] : message.operation;
                            if (message.condition != null && message.hasOwnProperty("condition"))
                                object.condition = $root.google.type.Expr.toObject(message.condition, options);
                            if (message.packageId != null && message.hasOwnProperty("packageId"))
                                object.packageId = message.packageId;
                            return object;
                        };
    
                        /**
                         * Converts this Rule to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Rule.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Rule
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.Rule
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Rule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.Rule";
                        };
    
                        /**
                         * Action enum.
                         * @name google.devtools.artifactregistry.v1.Rule.Action
                         * @enum {number}
                         * @property {number} ACTION_UNSPECIFIED=0 ACTION_UNSPECIFIED value
                         * @property {number} ALLOW=1 ALLOW value
                         * @property {number} DENY=2 DENY value
                         */
                        Rule.Action = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ACTION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ALLOW"] = 1;
                            values[valuesById[2] = "DENY"] = 2;
                            return values;
                        })();
    
                        /**
                         * Operation enum.
                         * @name google.devtools.artifactregistry.v1.Rule.Operation
                         * @enum {number}
                         * @property {number} OPERATION_UNSPECIFIED=0 OPERATION_UNSPECIFIED value
                         * @property {number} DOWNLOAD=1 DOWNLOAD value
                         */
                        Rule.Operation = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "OPERATION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DOWNLOAD"] = 1;
                            return values;
                        })();
    
                        return Rule;
                    })();
    
                    v1.ListRulesRequest = (function() {
    
                        /**
                         * Properties of a ListRulesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListRulesRequest
                         * @property {string|null} [parent] ListRulesRequest parent
                         * @property {number|null} [pageSize] ListRulesRequest pageSize
                         * @property {string|null} [pageToken] ListRulesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListRulesRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListRulesRequest.
                         * @implements IListRulesRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListRulesRequest=} [properties] Properties to set
                         */
                        function ListRulesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRulesRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @instance
                         */
                        ListRulesRequest.prototype.parent = "";
    
                        /**
                         * ListRulesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @instance
                         */
                        ListRulesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListRulesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @instance
                         */
                        ListRulesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListRulesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListRulesRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListRulesRequest} ListRulesRequest instance
                         */
                        ListRulesRequest.create = function create(properties) {
                            return new ListRulesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRulesRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListRulesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListRulesRequest} message ListRulesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRulesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRulesRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListRulesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListRulesRequest} message ListRulesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRulesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRulesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListRulesRequest} ListRulesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRulesRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListRulesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRulesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListRulesRequest} ListRulesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRulesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRulesRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRulesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRulesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListRulesRequest} ListRulesRequest
                         */
                        ListRulesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListRulesRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListRulesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRulesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListRulesRequest} message ListRulesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRulesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListRulesRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRulesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRulesRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListRulesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRulesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListRulesRequest";
                        };
    
                        return ListRulesRequest;
                    })();
    
                    v1.ListRulesResponse = (function() {
    
                        /**
                         * Properties of a ListRulesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListRulesResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.IRule>|null} [rules] ListRulesResponse rules
                         * @property {string|null} [nextPageToken] ListRulesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListRulesResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListRulesResponse.
                         * @implements IListRulesResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListRulesResponse=} [properties] Properties to set
                         */
                        function ListRulesResponse(properties) {
                            this.rules = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRulesResponse rules.
                         * @member {Array.<google.devtools.artifactregistry.v1.IRule>} rules
                         * @memberof google.devtools.artifactregistry.v1.ListRulesResponse
                         * @instance
                         */
                        ListRulesResponse.prototype.rules = $util.emptyArray;
    
                        /**
                         * ListRulesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.artifactregistry.v1.ListRulesResponse
                         * @instance
                         */
                        ListRulesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListRulesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListRulesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListRulesResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListRulesResponse} ListRulesResponse instance
                         */
                        ListRulesResponse.create = function create(properties) {
                            return new ListRulesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRulesResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListRulesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListRulesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListRulesResponse} message ListRulesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRulesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rules != null && message.rules.length)
                                for (var i = 0; i < message.rules.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.Rule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRulesResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListRulesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListRulesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListRulesResponse} message ListRulesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRulesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRulesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListRulesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListRulesResponse} ListRulesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRulesResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListRulesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.rules && message.rules.length))
                                            message.rules = [];
                                        message.rules.push($root.google.devtools.artifactregistry.v1.Rule.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRulesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListRulesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListRulesResponse} ListRulesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRulesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRulesResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListRulesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRulesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.rules != null && message.hasOwnProperty("rules")) {
                                if (!Array.isArray(message.rules))
                                    return "rules: array expected";
                                for (var i = 0; i < message.rules.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.Rule.verify(message.rules[i]);
                                    if (error)
                                        return "rules." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRulesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListRulesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListRulesResponse} ListRulesResponse
                         */
                        ListRulesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListRulesResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListRulesResponse();
                            if (object.rules) {
                                if (!Array.isArray(object.rules))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ListRulesResponse.rules: array expected");
                                message.rules = [];
                                for (var i = 0; i < object.rules.length; ++i) {
                                    if (typeof object.rules[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ListRulesResponse.rules: object expected");
                                    message.rules[i] = $root.google.devtools.artifactregistry.v1.Rule.fromObject(object.rules[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRulesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListRulesResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListRulesResponse} message ListRulesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRulesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.rules = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.rules && message.rules.length) {
                                object.rules = [];
                                for (var j = 0; j < message.rules.length; ++j)
                                    object.rules[j] = $root.google.devtools.artifactregistry.v1.Rule.toObject(message.rules[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListRulesResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListRulesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRulesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRulesResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListRulesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRulesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListRulesResponse";
                        };
    
                        return ListRulesResponse;
                    })();
    
                    v1.GetRuleRequest = (function() {
    
                        /**
                         * Properties of a GetRuleRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetRuleRequest
                         * @property {string|null} [name] GetRuleRequest name
                         */
    
                        /**
                         * Constructs a new GetRuleRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetRuleRequest.
                         * @implements IGetRuleRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetRuleRequest=} [properties] Properties to set
                         */
                        function GetRuleRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetRuleRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetRuleRequest
                         * @instance
                         */
                        GetRuleRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetRuleRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetRuleRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetRuleRequest} GetRuleRequest instance
                         */
                        GetRuleRequest.create = function create(properties) {
                            return new GetRuleRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetRuleRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetRuleRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetRuleRequest} message GetRuleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRuleRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetRuleRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetRuleRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetRuleRequest} message GetRuleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRuleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetRuleRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetRuleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetRuleRequest} GetRuleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRuleRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetRuleRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetRuleRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetRuleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetRuleRequest} GetRuleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRuleRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetRuleRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetRuleRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetRuleRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetRuleRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetRuleRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetRuleRequest} GetRuleRequest
                         */
                        GetRuleRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetRuleRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetRuleRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetRuleRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetRuleRequest} message GetRuleRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetRuleRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetRuleRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetRuleRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetRuleRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetRuleRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetRuleRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetRuleRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetRuleRequest";
                        };
    
                        return GetRuleRequest;
                    })();
    
                    v1.CreateRuleRequest = (function() {
    
                        /**
                         * Properties of a CreateRuleRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface ICreateRuleRequest
                         * @property {string|null} [parent] CreateRuleRequest parent
                         * @property {string|null} [ruleId] CreateRuleRequest ruleId
                         * @property {google.devtools.artifactregistry.v1.IRule|null} [rule] CreateRuleRequest rule
                         */
    
                        /**
                         * Constructs a new CreateRuleRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a CreateRuleRequest.
                         * @implements ICreateRuleRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.ICreateRuleRequest=} [properties] Properties to set
                         */
                        function CreateRuleRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateRuleRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @instance
                         */
                        CreateRuleRequest.prototype.parent = "";
    
                        /**
                         * CreateRuleRequest ruleId.
                         * @member {string} ruleId
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @instance
                         */
                        CreateRuleRequest.prototype.ruleId = "";
    
                        /**
                         * CreateRuleRequest rule.
                         * @member {google.devtools.artifactregistry.v1.IRule|null|undefined} rule
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @instance
                         */
                        CreateRuleRequest.prototype.rule = null;
    
                        /**
                         * Creates a new CreateRuleRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICreateRuleRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.CreateRuleRequest} CreateRuleRequest instance
                         */
                        CreateRuleRequest.create = function create(properties) {
                            return new CreateRuleRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateRuleRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.CreateRuleRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICreateRuleRequest} message CreateRuleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRuleRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.ruleId != null && Object.hasOwnProperty.call(message, "ruleId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.ruleId);
                            if (message.rule != null && Object.hasOwnProperty.call(message, "rule"))
                                $root.google.devtools.artifactregistry.v1.Rule.encode(message.rule, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateRuleRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.CreateRuleRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICreateRuleRequest} message CreateRuleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRuleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateRuleRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.CreateRuleRequest} CreateRuleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRuleRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.CreateRuleRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.ruleId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.rule = $root.google.devtools.artifactregistry.v1.Rule.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateRuleRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.CreateRuleRequest} CreateRuleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRuleRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateRuleRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateRuleRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.ruleId != null && message.hasOwnProperty("ruleId"))
                                if (!$util.isString(message.ruleId))
                                    return "ruleId: string expected";
                            if (message.rule != null && message.hasOwnProperty("rule")) {
                                var error = $root.google.devtools.artifactregistry.v1.Rule.verify(message.rule);
                                if (error)
                                    return "rule." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateRuleRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.CreateRuleRequest} CreateRuleRequest
                         */
                        CreateRuleRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.CreateRuleRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.CreateRuleRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.ruleId != null)
                                message.ruleId = String(object.ruleId);
                            if (object.rule != null) {
                                if (typeof object.rule !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.CreateRuleRequest.rule: object expected");
                                message.rule = $root.google.devtools.artifactregistry.v1.Rule.fromObject(object.rule);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateRuleRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.CreateRuleRequest} message CreateRuleRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateRuleRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.ruleId = "";
                                object.rule = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.ruleId != null && message.hasOwnProperty("ruleId"))
                                object.ruleId = message.ruleId;
                            if (message.rule != null && message.hasOwnProperty("rule"))
                                object.rule = $root.google.devtools.artifactregistry.v1.Rule.toObject(message.rule, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateRuleRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateRuleRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateRuleRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.CreateRuleRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateRuleRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.CreateRuleRequest";
                        };
    
                        return CreateRuleRequest;
                    })();
    
                    v1.UpdateRuleRequest = (function() {
    
                        /**
                         * Properties of an UpdateRuleRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IUpdateRuleRequest
                         * @property {google.devtools.artifactregistry.v1.IRule|null} [rule] UpdateRuleRequest rule
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateRuleRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateRuleRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an UpdateRuleRequest.
                         * @implements IUpdateRuleRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IUpdateRuleRequest=} [properties] Properties to set
                         */
                        function UpdateRuleRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateRuleRequest rule.
                         * @member {google.devtools.artifactregistry.v1.IRule|null|undefined} rule
                         * @memberof google.devtools.artifactregistry.v1.UpdateRuleRequest
                         * @instance
                         */
                        UpdateRuleRequest.prototype.rule = null;
    
                        /**
                         * UpdateRuleRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.devtools.artifactregistry.v1.UpdateRuleRequest
                         * @instance
                         */
                        UpdateRuleRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateRuleRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.UpdateRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateRuleRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.UpdateRuleRequest} UpdateRuleRequest instance
                         */
                        UpdateRuleRequest.create = function create(properties) {
                            return new UpdateRuleRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateRuleRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateRuleRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.UpdateRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateRuleRequest} message UpdateRuleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRuleRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rule != null && Object.hasOwnProperty.call(message, "rule"))
                                $root.google.devtools.artifactregistry.v1.Rule.encode(message.rule, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateRuleRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateRuleRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateRuleRequest} message UpdateRuleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRuleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateRuleRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.UpdateRuleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.UpdateRuleRequest} UpdateRuleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRuleRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.UpdateRuleRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.rule = $root.google.devtools.artifactregistry.v1.Rule.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateRuleRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateRuleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.UpdateRuleRequest} UpdateRuleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRuleRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateRuleRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.UpdateRuleRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateRuleRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.rule != null && message.hasOwnProperty("rule")) {
                                var error = $root.google.devtools.artifactregistry.v1.Rule.verify(message.rule);
                                if (error)
                                    return "rule." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateRuleRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateRuleRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.UpdateRuleRequest} UpdateRuleRequest
                         */
                        UpdateRuleRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.UpdateRuleRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.UpdateRuleRequest();
                            if (object.rule != null) {
                                if (typeof object.rule !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateRuleRequest.rule: object expected");
                                message.rule = $root.google.devtools.artifactregistry.v1.Rule.fromObject(object.rule);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateRuleRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateRuleRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.UpdateRuleRequest} message UpdateRuleRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateRuleRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.rule = null;
                                object.updateMask = null;
                            }
                            if (message.rule != null && message.hasOwnProperty("rule"))
                                object.rule = $root.google.devtools.artifactregistry.v1.Rule.toObject(message.rule, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateRuleRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.UpdateRuleRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateRuleRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateRuleRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.UpdateRuleRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateRuleRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.UpdateRuleRequest";
                        };
    
                        return UpdateRuleRequest;
                    })();
    
                    v1.DeleteRuleRequest = (function() {
    
                        /**
                         * Properties of a DeleteRuleRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IDeleteRuleRequest
                         * @property {string|null} [name] DeleteRuleRequest name
                         */
    
                        /**
                         * Constructs a new DeleteRuleRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a DeleteRuleRequest.
                         * @implements IDeleteRuleRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IDeleteRuleRequest=} [properties] Properties to set
                         */
                        function DeleteRuleRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteRuleRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.DeleteRuleRequest
                         * @instance
                         */
                        DeleteRuleRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteRuleRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.DeleteRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteRuleRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.DeleteRuleRequest} DeleteRuleRequest instance
                         */
                        DeleteRuleRequest.create = function create(properties) {
                            return new DeleteRuleRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteRuleRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.DeleteRuleRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.DeleteRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteRuleRequest} message DeleteRuleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRuleRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteRuleRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.DeleteRuleRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeleteRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteRuleRequest} message DeleteRuleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRuleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteRuleRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.DeleteRuleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.DeleteRuleRequest} DeleteRuleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRuleRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.DeleteRuleRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteRuleRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeleteRuleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.DeleteRuleRequest} DeleteRuleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRuleRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteRuleRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.DeleteRuleRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteRuleRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteRuleRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.DeleteRuleRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.DeleteRuleRequest} DeleteRuleRequest
                         */
                        DeleteRuleRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.DeleteRuleRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.DeleteRuleRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteRuleRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.DeleteRuleRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.DeleteRuleRequest} message DeleteRuleRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteRuleRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteRuleRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.DeleteRuleRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteRuleRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteRuleRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.DeleteRuleRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteRuleRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.DeleteRuleRequest";
                        };
    
                        return DeleteRuleRequest;
                    })();
    
                    v1.ArtifactRegistry = (function() {
    
                        /**
                         * Constructs a new ArtifactRegistry service.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an ArtifactRegistry
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function ArtifactRegistry(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (ArtifactRegistry.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = ArtifactRegistry;
    
                        /**
                         * Creates new ArtifactRegistry service using the specified rpc implementation.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {ArtifactRegistry} RPC service. Useful where requests and/or responses are streamed.
                         */
                        ArtifactRegistry.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|listDockerImages}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ListDockerImagesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ListDockerImagesResponse} [response] ListDockerImagesResponse
                         */
    
                        /**
                         * Calls ListDockerImages.
                         * @function listDockerImages
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListDockerImagesRequest} request ListDockerImagesRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ListDockerImagesCallback} callback Node-style callback called with the error, if any, and ListDockerImagesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.listDockerImages = function listDockerImages(request, callback) {
                            return this.rpcCall(listDockerImages, $root.google.devtools.artifactregistry.v1.ListDockerImagesRequest, $root.google.devtools.artifactregistry.v1.ListDockerImagesResponse, request, callback);
                        }, "name", { value: "ListDockerImages" });
    
                        /**
                         * Calls ListDockerImages.
                         * @function listDockerImages
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListDockerImagesRequest} request ListDockerImagesRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ListDockerImagesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getDockerImage}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetDockerImageCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.DockerImage} [response] DockerImage
                         */
    
                        /**
                         * Calls GetDockerImage.
                         * @function getDockerImage
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetDockerImageRequest} request GetDockerImageRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetDockerImageCallback} callback Node-style callback called with the error, if any, and DockerImage
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getDockerImage = function getDockerImage(request, callback) {
                            return this.rpcCall(getDockerImage, $root.google.devtools.artifactregistry.v1.GetDockerImageRequest, $root.google.devtools.artifactregistry.v1.DockerImage, request, callback);
                        }, "name", { value: "GetDockerImage" });
    
                        /**
                         * Calls GetDockerImage.
                         * @function getDockerImage
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetDockerImageRequest} request GetDockerImageRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.DockerImage>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|listMavenArtifacts}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ListMavenArtifactsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ListMavenArtifactsResponse} [response] ListMavenArtifactsResponse
                         */
    
                        /**
                         * Calls ListMavenArtifacts.
                         * @function listMavenArtifacts
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListMavenArtifactsRequest} request ListMavenArtifactsRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ListMavenArtifactsCallback} callback Node-style callback called with the error, if any, and ListMavenArtifactsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.listMavenArtifacts = function listMavenArtifacts(request, callback) {
                            return this.rpcCall(listMavenArtifacts, $root.google.devtools.artifactregistry.v1.ListMavenArtifactsRequest, $root.google.devtools.artifactregistry.v1.ListMavenArtifactsResponse, request, callback);
                        }, "name", { value: "ListMavenArtifacts" });
    
                        /**
                         * Calls ListMavenArtifacts.
                         * @function listMavenArtifacts
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListMavenArtifactsRequest} request ListMavenArtifactsRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ListMavenArtifactsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getMavenArtifact}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetMavenArtifactCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.MavenArtifact} [response] MavenArtifact
                         */
    
                        /**
                         * Calls GetMavenArtifact.
                         * @function getMavenArtifact
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetMavenArtifactRequest} request GetMavenArtifactRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetMavenArtifactCallback} callback Node-style callback called with the error, if any, and MavenArtifact
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getMavenArtifact = function getMavenArtifact(request, callback) {
                            return this.rpcCall(getMavenArtifact, $root.google.devtools.artifactregistry.v1.GetMavenArtifactRequest, $root.google.devtools.artifactregistry.v1.MavenArtifact, request, callback);
                        }, "name", { value: "GetMavenArtifact" });
    
                        /**
                         * Calls GetMavenArtifact.
                         * @function getMavenArtifact
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetMavenArtifactRequest} request GetMavenArtifactRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.MavenArtifact>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|listNpmPackages}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ListNpmPackagesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ListNpmPackagesResponse} [response] ListNpmPackagesResponse
                         */
    
                        /**
                         * Calls ListNpmPackages.
                         * @function listNpmPackages
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListNpmPackagesRequest} request ListNpmPackagesRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ListNpmPackagesCallback} callback Node-style callback called with the error, if any, and ListNpmPackagesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.listNpmPackages = function listNpmPackages(request, callback) {
                            return this.rpcCall(listNpmPackages, $root.google.devtools.artifactregistry.v1.ListNpmPackagesRequest, $root.google.devtools.artifactregistry.v1.ListNpmPackagesResponse, request, callback);
                        }, "name", { value: "ListNpmPackages" });
    
                        /**
                         * Calls ListNpmPackages.
                         * @function listNpmPackages
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListNpmPackagesRequest} request ListNpmPackagesRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ListNpmPackagesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getNpmPackage}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetNpmPackageCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.NpmPackage} [response] NpmPackage
                         */
    
                        /**
                         * Calls GetNpmPackage.
                         * @function getNpmPackage
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetNpmPackageRequest} request GetNpmPackageRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetNpmPackageCallback} callback Node-style callback called with the error, if any, and NpmPackage
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getNpmPackage = function getNpmPackage(request, callback) {
                            return this.rpcCall(getNpmPackage, $root.google.devtools.artifactregistry.v1.GetNpmPackageRequest, $root.google.devtools.artifactregistry.v1.NpmPackage, request, callback);
                        }, "name", { value: "GetNpmPackage" });
    
                        /**
                         * Calls GetNpmPackage.
                         * @function getNpmPackage
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetNpmPackageRequest} request GetNpmPackageRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.NpmPackage>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|listPythonPackages}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ListPythonPackagesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ListPythonPackagesResponse} [response] ListPythonPackagesResponse
                         */
    
                        /**
                         * Calls ListPythonPackages.
                         * @function listPythonPackages
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListPythonPackagesRequest} request ListPythonPackagesRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ListPythonPackagesCallback} callback Node-style callback called with the error, if any, and ListPythonPackagesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.listPythonPackages = function listPythonPackages(request, callback) {
                            return this.rpcCall(listPythonPackages, $root.google.devtools.artifactregistry.v1.ListPythonPackagesRequest, $root.google.devtools.artifactregistry.v1.ListPythonPackagesResponse, request, callback);
                        }, "name", { value: "ListPythonPackages" });
    
                        /**
                         * Calls ListPythonPackages.
                         * @function listPythonPackages
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListPythonPackagesRequest} request ListPythonPackagesRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ListPythonPackagesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getPythonPackage}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetPythonPackageCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.PythonPackage} [response] PythonPackage
                         */
    
                        /**
                         * Calls GetPythonPackage.
                         * @function getPythonPackage
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetPythonPackageRequest} request GetPythonPackageRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetPythonPackageCallback} callback Node-style callback called with the error, if any, and PythonPackage
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getPythonPackage = function getPythonPackage(request, callback) {
                            return this.rpcCall(getPythonPackage, $root.google.devtools.artifactregistry.v1.GetPythonPackageRequest, $root.google.devtools.artifactregistry.v1.PythonPackage, request, callback);
                        }, "name", { value: "GetPythonPackage" });
    
                        /**
                         * Calls GetPythonPackage.
                         * @function getPythonPackage
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetPythonPackageRequest} request GetPythonPackageRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.PythonPackage>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|importAptArtifacts}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ImportAptArtifactsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ImportAptArtifacts.
                         * @function importAptArtifacts
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsRequest} request ImportAptArtifactsRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ImportAptArtifactsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.importAptArtifacts = function importAptArtifacts(request, callback) {
                            return this.rpcCall(importAptArtifacts, $root.google.devtools.artifactregistry.v1.ImportAptArtifactsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ImportAptArtifacts" });
    
                        /**
                         * Calls ImportAptArtifacts.
                         * @function importAptArtifacts
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IImportAptArtifactsRequest} request ImportAptArtifactsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|importYumArtifacts}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ImportYumArtifactsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ImportYumArtifacts.
                         * @function importYumArtifacts
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsRequest} request ImportYumArtifactsRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ImportYumArtifactsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.importYumArtifacts = function importYumArtifacts(request, callback) {
                            return this.rpcCall(importYumArtifacts, $root.google.devtools.artifactregistry.v1.ImportYumArtifactsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ImportYumArtifacts" });
    
                        /**
                         * Calls ImportYumArtifacts.
                         * @function importYumArtifacts
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsRequest} request ImportYumArtifactsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|listRepositories}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ListRepositoriesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ListRepositoriesResponse} [response] ListRepositoriesResponse
                         */
    
                        /**
                         * Calls ListRepositories.
                         * @function listRepositories
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListRepositoriesRequest} request ListRepositoriesRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ListRepositoriesCallback} callback Node-style callback called with the error, if any, and ListRepositoriesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.listRepositories = function listRepositories(request, callback) {
                            return this.rpcCall(listRepositories, $root.google.devtools.artifactregistry.v1.ListRepositoriesRequest, $root.google.devtools.artifactregistry.v1.ListRepositoriesResponse, request, callback);
                        }, "name", { value: "ListRepositories" });
    
                        /**
                         * Calls ListRepositories.
                         * @function listRepositories
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListRepositoriesRequest} request ListRepositoriesRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ListRepositoriesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getRepository}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetRepositoryCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Repository} [response] Repository
                         */
    
                        /**
                         * Calls GetRepository.
                         * @function getRepository
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetRepositoryRequest} request GetRepositoryRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetRepositoryCallback} callback Node-style callback called with the error, if any, and Repository
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getRepository = function getRepository(request, callback) {
                            return this.rpcCall(getRepository, $root.google.devtools.artifactregistry.v1.GetRepositoryRequest, $root.google.devtools.artifactregistry.v1.Repository, request, callback);
                        }, "name", { value: "GetRepository" });
    
                        /**
                         * Calls GetRepository.
                         * @function getRepository
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetRepositoryRequest} request GetRepositoryRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Repository>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|createRepository}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef CreateRepositoryCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateRepository.
                         * @function createRepository
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.ICreateRepositoryRequest} request CreateRepositoryRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.CreateRepositoryCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.createRepository = function createRepository(request, callback) {
                            return this.rpcCall(createRepository, $root.google.devtools.artifactregistry.v1.CreateRepositoryRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateRepository" });
    
                        /**
                         * Calls CreateRepository.
                         * @function createRepository
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.ICreateRepositoryRequest} request CreateRepositoryRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|updateRepository}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef UpdateRepositoryCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Repository} [response] Repository
                         */
    
                        /**
                         * Calls UpdateRepository.
                         * @function updateRepository
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateRepositoryRequest} request UpdateRepositoryRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.UpdateRepositoryCallback} callback Node-style callback called with the error, if any, and Repository
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.updateRepository = function updateRepository(request, callback) {
                            return this.rpcCall(updateRepository, $root.google.devtools.artifactregistry.v1.UpdateRepositoryRequest, $root.google.devtools.artifactregistry.v1.Repository, request, callback);
                        }, "name", { value: "UpdateRepository" });
    
                        /**
                         * Calls UpdateRepository.
                         * @function updateRepository
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateRepositoryRequest} request UpdateRepositoryRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Repository>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|deleteRepository}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef DeleteRepositoryCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteRepository.
                         * @function deleteRepository
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeleteRepositoryRequest} request DeleteRepositoryRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.DeleteRepositoryCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.deleteRepository = function deleteRepository(request, callback) {
                            return this.rpcCall(deleteRepository, $root.google.devtools.artifactregistry.v1.DeleteRepositoryRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteRepository" });
    
                        /**
                         * Calls DeleteRepository.
                         * @function deleteRepository
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeleteRepositoryRequest} request DeleteRepositoryRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|listPackages}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ListPackagesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ListPackagesResponse} [response] ListPackagesResponse
                         */
    
                        /**
                         * Calls ListPackages.
                         * @function listPackages
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListPackagesRequest} request ListPackagesRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ListPackagesCallback} callback Node-style callback called with the error, if any, and ListPackagesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.listPackages = function listPackages(request, callback) {
                            return this.rpcCall(listPackages, $root.google.devtools.artifactregistry.v1.ListPackagesRequest, $root.google.devtools.artifactregistry.v1.ListPackagesResponse, request, callback);
                        }, "name", { value: "ListPackages" });
    
                        /**
                         * Calls ListPackages.
                         * @function listPackages
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListPackagesRequest} request ListPackagesRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ListPackagesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getPackage}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetPackageCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Package} [response] Package
                         */
    
                        /**
                         * Calls GetPackage.
                         * @function getPackage
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetPackageRequest} request GetPackageRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetPackageCallback} callback Node-style callback called with the error, if any, and Package
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getPackage = function getPackage(request, callback) {
                            return this.rpcCall(getPackage, $root.google.devtools.artifactregistry.v1.GetPackageRequest, $root.google.devtools.artifactregistry.v1.Package, request, callback);
                        }, "name", { value: "GetPackage" });
    
                        /**
                         * Calls GetPackage.
                         * @function getPackage
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetPackageRequest} request GetPackageRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Package>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|deletePackage}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef DeletePackageCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeletePackage.
                         * @function deletePackage
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeletePackageRequest} request DeletePackageRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.DeletePackageCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.deletePackage = function deletePackage(request, callback) {
                            return this.rpcCall(deletePackage, $root.google.devtools.artifactregistry.v1.DeletePackageRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeletePackage" });
    
                        /**
                         * Calls DeletePackage.
                         * @function deletePackage
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeletePackageRequest} request DeletePackageRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|listVersions}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ListVersionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ListVersionsResponse} [response] ListVersionsResponse
                         */
    
                        /**
                         * Calls ListVersions.
                         * @function listVersions
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListVersionsRequest} request ListVersionsRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ListVersionsCallback} callback Node-style callback called with the error, if any, and ListVersionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.listVersions = function listVersions(request, callback) {
                            return this.rpcCall(listVersions, $root.google.devtools.artifactregistry.v1.ListVersionsRequest, $root.google.devtools.artifactregistry.v1.ListVersionsResponse, request, callback);
                        }, "name", { value: "ListVersions" });
    
                        /**
                         * Calls ListVersions.
                         * @function listVersions
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListVersionsRequest} request ListVersionsRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ListVersionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getVersion}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetVersionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Version} [response] Version
                         */
    
                        /**
                         * Calls GetVersion.
                         * @function getVersion
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetVersionRequest} request GetVersionRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetVersionCallback} callback Node-style callback called with the error, if any, and Version
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getVersion = function getVersion(request, callback) {
                            return this.rpcCall(getVersion, $root.google.devtools.artifactregistry.v1.GetVersionRequest, $root.google.devtools.artifactregistry.v1.Version, request, callback);
                        }, "name", { value: "GetVersion" });
    
                        /**
                         * Calls GetVersion.
                         * @function getVersion
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetVersionRequest} request GetVersionRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Version>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|deleteVersion}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef DeleteVersionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteVersion.
                         * @function deleteVersion
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeleteVersionRequest} request DeleteVersionRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.DeleteVersionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.deleteVersion = function deleteVersion(request, callback) {
                            return this.rpcCall(deleteVersion, $root.google.devtools.artifactregistry.v1.DeleteVersionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteVersion" });
    
                        /**
                         * Calls DeleteVersion.
                         * @function deleteVersion
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeleteVersionRequest} request DeleteVersionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|batchDeleteVersions}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef BatchDeleteVersionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls BatchDeleteVersions.
                         * @function batchDeleteVersions
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IBatchDeleteVersionsRequest} request BatchDeleteVersionsRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.BatchDeleteVersionsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.batchDeleteVersions = function batchDeleteVersions(request, callback) {
                            return this.rpcCall(batchDeleteVersions, $root.google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "BatchDeleteVersions" });
    
                        /**
                         * Calls BatchDeleteVersions.
                         * @function batchDeleteVersions
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IBatchDeleteVersionsRequest} request BatchDeleteVersionsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|updateVersion}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef UpdateVersionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Version} [response] Version
                         */
    
                        /**
                         * Calls UpdateVersion.
                         * @function updateVersion
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateVersionRequest} request UpdateVersionRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.UpdateVersionCallback} callback Node-style callback called with the error, if any, and Version
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.updateVersion = function updateVersion(request, callback) {
                            return this.rpcCall(updateVersion, $root.google.devtools.artifactregistry.v1.UpdateVersionRequest, $root.google.devtools.artifactregistry.v1.Version, request, callback);
                        }, "name", { value: "UpdateVersion" });
    
                        /**
                         * Calls UpdateVersion.
                         * @function updateVersion
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateVersionRequest} request UpdateVersionRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Version>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|listFiles}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ListFilesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ListFilesResponse} [response] ListFilesResponse
                         */
    
                        /**
                         * Calls ListFiles.
                         * @function listFiles
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListFilesRequest} request ListFilesRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ListFilesCallback} callback Node-style callback called with the error, if any, and ListFilesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.listFiles = function listFiles(request, callback) {
                            return this.rpcCall(listFiles, $root.google.devtools.artifactregistry.v1.ListFilesRequest, $root.google.devtools.artifactregistry.v1.ListFilesResponse, request, callback);
                        }, "name", { value: "ListFiles" });
    
                        /**
                         * Calls ListFiles.
                         * @function listFiles
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListFilesRequest} request ListFilesRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ListFilesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getFile}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetFileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.File} [response] File
                         */
    
                        /**
                         * Calls GetFile.
                         * @function getFile
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetFileRequest} request GetFileRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetFileCallback} callback Node-style callback called with the error, if any, and File
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getFile = function getFile(request, callback) {
                            return this.rpcCall(getFile, $root.google.devtools.artifactregistry.v1.GetFileRequest, $root.google.devtools.artifactregistry.v1.File, request, callback);
                        }, "name", { value: "GetFile" });
    
                        /**
                         * Calls GetFile.
                         * @function getFile
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetFileRequest} request GetFileRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.File>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|deleteFile}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef DeleteFileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteFile.
                         * @function deleteFile
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeleteFileRequest} request DeleteFileRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.DeleteFileCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.deleteFile = function deleteFile(request, callback) {
                            return this.rpcCall(deleteFile, $root.google.devtools.artifactregistry.v1.DeleteFileRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteFile" });
    
                        /**
                         * Calls DeleteFile.
                         * @function deleteFile
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeleteFileRequest} request DeleteFileRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|updateFile}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef UpdateFileCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.File} [response] File
                         */
    
                        /**
                         * Calls UpdateFile.
                         * @function updateFile
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateFileRequest} request UpdateFileRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.UpdateFileCallback} callback Node-style callback called with the error, if any, and File
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.updateFile = function updateFile(request, callback) {
                            return this.rpcCall(updateFile, $root.google.devtools.artifactregistry.v1.UpdateFileRequest, $root.google.devtools.artifactregistry.v1.File, request, callback);
                        }, "name", { value: "UpdateFile" });
    
                        /**
                         * Calls UpdateFile.
                         * @function updateFile
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateFileRequest} request UpdateFileRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.File>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|listTags}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ListTagsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ListTagsResponse} [response] ListTagsResponse
                         */
    
                        /**
                         * Calls ListTags.
                         * @function listTags
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListTagsRequest} request ListTagsRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ListTagsCallback} callback Node-style callback called with the error, if any, and ListTagsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.listTags = function listTags(request, callback) {
                            return this.rpcCall(listTags, $root.google.devtools.artifactregistry.v1.ListTagsRequest, $root.google.devtools.artifactregistry.v1.ListTagsResponse, request, callback);
                        }, "name", { value: "ListTags" });
    
                        /**
                         * Calls ListTags.
                         * @function listTags
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListTagsRequest} request ListTagsRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ListTagsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getTag}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetTagCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Tag} [response] Tag
                         */
    
                        /**
                         * Calls GetTag.
                         * @function getTag
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetTagRequest} request GetTagRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetTagCallback} callback Node-style callback called with the error, if any, and Tag
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getTag = function getTag(request, callback) {
                            return this.rpcCall(getTag, $root.google.devtools.artifactregistry.v1.GetTagRequest, $root.google.devtools.artifactregistry.v1.Tag, request, callback);
                        }, "name", { value: "GetTag" });
    
                        /**
                         * Calls GetTag.
                         * @function getTag
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetTagRequest} request GetTagRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Tag>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|createTag}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef CreateTagCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Tag} [response] Tag
                         */
    
                        /**
                         * Calls CreateTag.
                         * @function createTag
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.ICreateTagRequest} request CreateTagRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.CreateTagCallback} callback Node-style callback called with the error, if any, and Tag
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.createTag = function createTag(request, callback) {
                            return this.rpcCall(createTag, $root.google.devtools.artifactregistry.v1.CreateTagRequest, $root.google.devtools.artifactregistry.v1.Tag, request, callback);
                        }, "name", { value: "CreateTag" });
    
                        /**
                         * Calls CreateTag.
                         * @function createTag
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.ICreateTagRequest} request CreateTagRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Tag>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|updateTag}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef UpdateTagCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Tag} [response] Tag
                         */
    
                        /**
                         * Calls UpdateTag.
                         * @function updateTag
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateTagRequest} request UpdateTagRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.UpdateTagCallback} callback Node-style callback called with the error, if any, and Tag
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.updateTag = function updateTag(request, callback) {
                            return this.rpcCall(updateTag, $root.google.devtools.artifactregistry.v1.UpdateTagRequest, $root.google.devtools.artifactregistry.v1.Tag, request, callback);
                        }, "name", { value: "UpdateTag" });
    
                        /**
                         * Calls UpdateTag.
                         * @function updateTag
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateTagRequest} request UpdateTagRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Tag>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|deleteTag}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef DeleteTagCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteTag.
                         * @function deleteTag
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeleteTagRequest} request DeleteTagRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.DeleteTagCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.deleteTag = function deleteTag(request, callback) {
                            return this.rpcCall(deleteTag, $root.google.devtools.artifactregistry.v1.DeleteTagRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteTag" });
    
                        /**
                         * Calls DeleteTag.
                         * @function deleteTag
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeleteTagRequest} request DeleteTagRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|createRule}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef CreateRuleCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Rule} [response] Rule
                         */
    
                        /**
                         * Calls CreateRule.
                         * @function createRule
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.ICreateRuleRequest} request CreateRuleRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.CreateRuleCallback} callback Node-style callback called with the error, if any, and Rule
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.createRule = function createRule(request, callback) {
                            return this.rpcCall(createRule, $root.google.devtools.artifactregistry.v1.CreateRuleRequest, $root.google.devtools.artifactregistry.v1.Rule, request, callback);
                        }, "name", { value: "CreateRule" });
    
                        /**
                         * Calls CreateRule.
                         * @function createRule
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.ICreateRuleRequest} request CreateRuleRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Rule>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|listRules}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ListRulesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ListRulesResponse} [response] ListRulesResponse
                         */
    
                        /**
                         * Calls ListRules.
                         * @function listRules
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListRulesRequest} request ListRulesRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ListRulesCallback} callback Node-style callback called with the error, if any, and ListRulesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.listRules = function listRules(request, callback) {
                            return this.rpcCall(listRules, $root.google.devtools.artifactregistry.v1.ListRulesRequest, $root.google.devtools.artifactregistry.v1.ListRulesResponse, request, callback);
                        }, "name", { value: "ListRules" });
    
                        /**
                         * Calls ListRules.
                         * @function listRules
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListRulesRequest} request ListRulesRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ListRulesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getRule}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetRuleCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Rule} [response] Rule
                         */
    
                        /**
                         * Calls GetRule.
                         * @function getRule
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetRuleRequest} request GetRuleRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetRuleCallback} callback Node-style callback called with the error, if any, and Rule
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getRule = function getRule(request, callback) {
                            return this.rpcCall(getRule, $root.google.devtools.artifactregistry.v1.GetRuleRequest, $root.google.devtools.artifactregistry.v1.Rule, request, callback);
                        }, "name", { value: "GetRule" });
    
                        /**
                         * Calls GetRule.
                         * @function getRule
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetRuleRequest} request GetRuleRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Rule>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|updateRule}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef UpdateRuleCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Rule} [response] Rule
                         */
    
                        /**
                         * Calls UpdateRule.
                         * @function updateRule
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateRuleRequest} request UpdateRuleRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.UpdateRuleCallback} callback Node-style callback called with the error, if any, and Rule
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.updateRule = function updateRule(request, callback) {
                            return this.rpcCall(updateRule, $root.google.devtools.artifactregistry.v1.UpdateRuleRequest, $root.google.devtools.artifactregistry.v1.Rule, request, callback);
                        }, "name", { value: "UpdateRule" });
    
                        /**
                         * Calls UpdateRule.
                         * @function updateRule
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateRuleRequest} request UpdateRuleRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Rule>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|deleteRule}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef DeleteRuleCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteRule.
                         * @function deleteRule
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeleteRuleRequest} request DeleteRuleRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.DeleteRuleCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.deleteRule = function deleteRule(request, callback) {
                            return this.rpcCall(deleteRule, $root.google.devtools.artifactregistry.v1.DeleteRuleRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteRule" });
    
                        /**
                         * Calls DeleteRule.
                         * @function deleteRule
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeleteRuleRequest} request DeleteRuleRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|setIamPolicy}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef SetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                            return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "SetIamPolicy" });
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getIamPolicy}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                            return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "GetIamPolicy" });
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|testIamPermissions}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef TestIamPermissionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                         */
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                            return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                        }, "name", { value: "TestIamPermissions" });
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getProjectSettings}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetProjectSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ProjectSettings} [response] ProjectSettings
                         */
    
                        /**
                         * Calls GetProjectSettings.
                         * @function getProjectSettings
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetProjectSettingsRequest} request GetProjectSettingsRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetProjectSettingsCallback} callback Node-style callback called with the error, if any, and ProjectSettings
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getProjectSettings = function getProjectSettings(request, callback) {
                            return this.rpcCall(getProjectSettings, $root.google.devtools.artifactregistry.v1.GetProjectSettingsRequest, $root.google.devtools.artifactregistry.v1.ProjectSettings, request, callback);
                        }, "name", { value: "GetProjectSettings" });
    
                        /**
                         * Calls GetProjectSettings.
                         * @function getProjectSettings
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetProjectSettingsRequest} request GetProjectSettingsRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ProjectSettings>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|updateProjectSettings}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef UpdateProjectSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ProjectSettings} [response] ProjectSettings
                         */
    
                        /**
                         * Calls UpdateProjectSettings.
                         * @function updateProjectSettings
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateProjectSettingsRequest} request UpdateProjectSettingsRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.UpdateProjectSettingsCallback} callback Node-style callback called with the error, if any, and ProjectSettings
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.updateProjectSettings = function updateProjectSettings(request, callback) {
                            return this.rpcCall(updateProjectSettings, $root.google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest, $root.google.devtools.artifactregistry.v1.ProjectSettings, request, callback);
                        }, "name", { value: "UpdateProjectSettings" });
    
                        /**
                         * Calls UpdateProjectSettings.
                         * @function updateProjectSettings
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateProjectSettingsRequest} request UpdateProjectSettingsRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ProjectSettings>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getVPCSCConfig}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetVPCSCConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.VPCSCConfig} [response] VPCSCConfig
                         */
    
                        /**
                         * Calls GetVPCSCConfig.
                         * @function getVPCSCConfig
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetVPCSCConfigRequest} request GetVPCSCConfigRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetVPCSCConfigCallback} callback Node-style callback called with the error, if any, and VPCSCConfig
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getVPCSCConfig = function getVPCSCConfig(request, callback) {
                            return this.rpcCall(getVPCSCConfig, $root.google.devtools.artifactregistry.v1.GetVPCSCConfigRequest, $root.google.devtools.artifactregistry.v1.VPCSCConfig, request, callback);
                        }, "name", { value: "GetVPCSCConfig" });
    
                        /**
                         * Calls GetVPCSCConfig.
                         * @function getVPCSCConfig
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetVPCSCConfigRequest} request GetVPCSCConfigRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.VPCSCConfig>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|updateVPCSCConfig}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef UpdateVPCSCConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.VPCSCConfig} [response] VPCSCConfig
                         */
    
                        /**
                         * Calls UpdateVPCSCConfig.
                         * @function updateVPCSCConfig
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateVPCSCConfigRequest} request UpdateVPCSCConfigRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.UpdateVPCSCConfigCallback} callback Node-style callback called with the error, if any, and VPCSCConfig
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.updateVPCSCConfig = function updateVPCSCConfig(request, callback) {
                            return this.rpcCall(updateVPCSCConfig, $root.google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest, $root.google.devtools.artifactregistry.v1.VPCSCConfig, request, callback);
                        }, "name", { value: "UpdateVPCSCConfig" });
    
                        /**
                         * Calls UpdateVPCSCConfig.
                         * @function updateVPCSCConfig
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdateVPCSCConfigRequest} request UpdateVPCSCConfigRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.VPCSCConfig>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|updatePackage}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef UpdatePackageCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Package} [response] Package
                         */
    
                        /**
                         * Calls UpdatePackage.
                         * @function updatePackage
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdatePackageRequest} request UpdatePackageRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.UpdatePackageCallback} callback Node-style callback called with the error, if any, and Package
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.updatePackage = function updatePackage(request, callback) {
                            return this.rpcCall(updatePackage, $root.google.devtools.artifactregistry.v1.UpdatePackageRequest, $root.google.devtools.artifactregistry.v1.Package, request, callback);
                        }, "name", { value: "UpdatePackage" });
    
                        /**
                         * Calls UpdatePackage.
                         * @function updatePackage
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IUpdatePackageRequest} request UpdatePackageRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Package>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|listAttachments}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef ListAttachmentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.ListAttachmentsResponse} [response] ListAttachmentsResponse
                         */
    
                        /**
                         * Calls ListAttachments.
                         * @function listAttachments
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListAttachmentsRequest} request ListAttachmentsRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.ListAttachmentsCallback} callback Node-style callback called with the error, if any, and ListAttachmentsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.listAttachments = function listAttachments(request, callback) {
                            return this.rpcCall(listAttachments, $root.google.devtools.artifactregistry.v1.ListAttachmentsRequest, $root.google.devtools.artifactregistry.v1.ListAttachmentsResponse, request, callback);
                        }, "name", { value: "ListAttachments" });
    
                        /**
                         * Calls ListAttachments.
                         * @function listAttachments
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IListAttachmentsRequest} request ListAttachmentsRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.ListAttachmentsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|getAttachment}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef GetAttachmentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.devtools.artifactregistry.v1.Attachment} [response] Attachment
                         */
    
                        /**
                         * Calls GetAttachment.
                         * @function getAttachment
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetAttachmentRequest} request GetAttachmentRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.GetAttachmentCallback} callback Node-style callback called with the error, if any, and Attachment
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.getAttachment = function getAttachment(request, callback) {
                            return this.rpcCall(getAttachment, $root.google.devtools.artifactregistry.v1.GetAttachmentRequest, $root.google.devtools.artifactregistry.v1.Attachment, request, callback);
                        }, "name", { value: "GetAttachment" });
    
                        /**
                         * Calls GetAttachment.
                         * @function getAttachment
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IGetAttachmentRequest} request GetAttachmentRequest message or plain object
                         * @returns {Promise<google.devtools.artifactregistry.v1.Attachment>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|createAttachment}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef CreateAttachmentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateAttachment.
                         * @function createAttachment
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.ICreateAttachmentRequest} request CreateAttachmentRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.CreateAttachmentCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.createAttachment = function createAttachment(request, callback) {
                            return this.rpcCall(createAttachment, $root.google.devtools.artifactregistry.v1.CreateAttachmentRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateAttachment" });
    
                        /**
                         * Calls CreateAttachment.
                         * @function createAttachment
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.ICreateAttachmentRequest} request CreateAttachmentRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.devtools.artifactregistry.v1.ArtifactRegistry|deleteAttachment}.
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @typedef DeleteAttachmentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteAttachment.
                         * @function deleteAttachment
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeleteAttachmentRequest} request DeleteAttachmentRequest message or plain object
                         * @param {google.devtools.artifactregistry.v1.ArtifactRegistry.DeleteAttachmentCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ArtifactRegistry.prototype.deleteAttachment = function deleteAttachment(request, callback) {
                            return this.rpcCall(deleteAttachment, $root.google.devtools.artifactregistry.v1.DeleteAttachmentRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteAttachment" });
    
                        /**
                         * Calls DeleteAttachment.
                         * @function deleteAttachment
                         * @memberof google.devtools.artifactregistry.v1.ArtifactRegistry
                         * @instance
                         * @param {google.devtools.artifactregistry.v1.IDeleteAttachmentRequest} request DeleteAttachmentRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return ArtifactRegistry;
                    })();
    
                    v1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IOperationMetadata
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.OperationMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.devtools.artifactregistry.v1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.OperationMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.OperationMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.OperationMetadata)
                                return object;
                            return new $root.google.devtools.artifactregistry.v1.OperationMetadata();
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.OperationMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v1.ProjectSettings = (function() {
    
                        /**
                         * Properties of a ProjectSettings.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IProjectSettings
                         * @property {string|null} [name] ProjectSettings name
                         * @property {google.devtools.artifactregistry.v1.ProjectSettings.RedirectionState|null} [legacyRedirectionState] ProjectSettings legacyRedirectionState
                         * @property {number|null} [pullPercent] ProjectSettings pullPercent
                         */
    
                        /**
                         * Constructs a new ProjectSettings.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ProjectSettings.
                         * @implements IProjectSettings
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IProjectSettings=} [properties] Properties to set
                         */
                        function ProjectSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ProjectSettings name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @instance
                         */
                        ProjectSettings.prototype.name = "";
    
                        /**
                         * ProjectSettings legacyRedirectionState.
                         * @member {google.devtools.artifactregistry.v1.ProjectSettings.RedirectionState} legacyRedirectionState
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @instance
                         */
                        ProjectSettings.prototype.legacyRedirectionState = 0;
    
                        /**
                         * ProjectSettings pullPercent.
                         * @member {number} pullPercent
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @instance
                         */
                        ProjectSettings.prototype.pullPercent = 0;
    
                        /**
                         * Creates a new ProjectSettings instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IProjectSettings=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ProjectSettings} ProjectSettings instance
                         */
                        ProjectSettings.create = function create(properties) {
                            return new ProjectSettings(properties);
                        };
    
                        /**
                         * Encodes the specified ProjectSettings message. Does not implicitly {@link google.devtools.artifactregistry.v1.ProjectSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IProjectSettings} message ProjectSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProjectSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.legacyRedirectionState != null && Object.hasOwnProperty.call(message, "legacyRedirectionState"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.legacyRedirectionState);
                            if (message.pullPercent != null && Object.hasOwnProperty.call(message, "pullPercent"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pullPercent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ProjectSettings message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ProjectSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IProjectSettings} message ProjectSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProjectSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ProjectSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ProjectSettings} ProjectSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProjectSettings.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ProjectSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.legacyRedirectionState = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pullPercent = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ProjectSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ProjectSettings} ProjectSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProjectSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ProjectSettings message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ProjectSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.legacyRedirectionState != null && message.hasOwnProperty("legacyRedirectionState"))
                                switch (message.legacyRedirectionState) {
                                default:
                                    return "legacyRedirectionState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.pullPercent != null && message.hasOwnProperty("pullPercent"))
                                if (!$util.isInteger(message.pullPercent))
                                    return "pullPercent: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a ProjectSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ProjectSettings} ProjectSettings
                         */
                        ProjectSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ProjectSettings)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ProjectSettings();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.legacyRedirectionState) {
                            default:
                                if (typeof object.legacyRedirectionState === "number") {
                                    message.legacyRedirectionState = object.legacyRedirectionState;
                                    break;
                                }
                                break;
                            case "REDIRECTION_STATE_UNSPECIFIED":
                            case 0:
                                message.legacyRedirectionState = 0;
                                break;
                            case "REDIRECTION_FROM_GCR_IO_DISABLED":
                            case 1:
                                message.legacyRedirectionState = 1;
                                break;
                            case "REDIRECTION_FROM_GCR_IO_ENABLED":
                            case 2:
                                message.legacyRedirectionState = 2;
                                break;
                            case "REDIRECTION_FROM_GCR_IO_FINALIZED":
                            case 3:
                                message.legacyRedirectionState = 3;
                                break;
                            case "REDIRECTION_FROM_GCR_IO_ENABLED_AND_COPYING":
                            case 5:
                                message.legacyRedirectionState = 5;
                                break;
                            case "REDIRECTION_FROM_GCR_IO_PARTIAL_AND_COPYING":
                            case 6:
                                message.legacyRedirectionState = 6;
                                break;
                            }
                            if (object.pullPercent != null)
                                message.pullPercent = object.pullPercent | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ProjectSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ProjectSettings} message ProjectSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ProjectSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.legacyRedirectionState = options.enums === String ? "REDIRECTION_STATE_UNSPECIFIED" : 0;
                                object.pullPercent = 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.legacyRedirectionState != null && message.hasOwnProperty("legacyRedirectionState"))
                                object.legacyRedirectionState = options.enums === String ? $root.google.devtools.artifactregistry.v1.ProjectSettings.RedirectionState[message.legacyRedirectionState] === undefined ? message.legacyRedirectionState : $root.google.devtools.artifactregistry.v1.ProjectSettings.RedirectionState[message.legacyRedirectionState] : message.legacyRedirectionState;
                            if (message.pullPercent != null && message.hasOwnProperty("pullPercent"))
                                object.pullPercent = message.pullPercent;
                            return object;
                        };
    
                        /**
                         * Converts this ProjectSettings to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ProjectSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ProjectSettings
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ProjectSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ProjectSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ProjectSettings";
                        };
    
                        /**
                         * RedirectionState enum.
                         * @name google.devtools.artifactregistry.v1.ProjectSettings.RedirectionState
                         * @enum {number}
                         * @property {number} REDIRECTION_STATE_UNSPECIFIED=0 REDIRECTION_STATE_UNSPECIFIED value
                         * @property {number} REDIRECTION_FROM_GCR_IO_DISABLED=1 REDIRECTION_FROM_GCR_IO_DISABLED value
                         * @property {number} REDIRECTION_FROM_GCR_IO_ENABLED=2 REDIRECTION_FROM_GCR_IO_ENABLED value
                         * @property {number} REDIRECTION_FROM_GCR_IO_FINALIZED=3 REDIRECTION_FROM_GCR_IO_FINALIZED value
                         * @property {number} REDIRECTION_FROM_GCR_IO_ENABLED_AND_COPYING=5 REDIRECTION_FROM_GCR_IO_ENABLED_AND_COPYING value
                         * @property {number} REDIRECTION_FROM_GCR_IO_PARTIAL_AND_COPYING=6 REDIRECTION_FROM_GCR_IO_PARTIAL_AND_COPYING value
                         */
                        ProjectSettings.RedirectionState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "REDIRECTION_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "REDIRECTION_FROM_GCR_IO_DISABLED"] = 1;
                            values[valuesById[2] = "REDIRECTION_FROM_GCR_IO_ENABLED"] = 2;
                            values[valuesById[3] = "REDIRECTION_FROM_GCR_IO_FINALIZED"] = 3;
                            values[valuesById[5] = "REDIRECTION_FROM_GCR_IO_ENABLED_AND_COPYING"] = 5;
                            values[valuesById[6] = "REDIRECTION_FROM_GCR_IO_PARTIAL_AND_COPYING"] = 6;
                            return values;
                        })();
    
                        return ProjectSettings;
                    })();
    
                    v1.GetProjectSettingsRequest = (function() {
    
                        /**
                         * Properties of a GetProjectSettingsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetProjectSettingsRequest
                         * @property {string|null} [name] GetProjectSettingsRequest name
                         */
    
                        /**
                         * Constructs a new GetProjectSettingsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetProjectSettingsRequest.
                         * @implements IGetProjectSettingsRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetProjectSettingsRequest=} [properties] Properties to set
                         */
                        function GetProjectSettingsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetProjectSettingsRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetProjectSettingsRequest
                         * @instance
                         */
                        GetProjectSettingsRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetProjectSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetProjectSettingsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetProjectSettingsRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetProjectSettingsRequest} GetProjectSettingsRequest instance
                         */
                        GetProjectSettingsRequest.create = function create(properties) {
                            return new GetProjectSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetProjectSettingsRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetProjectSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetProjectSettingsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetProjectSettingsRequest} message GetProjectSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetProjectSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetProjectSettingsRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetProjectSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetProjectSettingsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetProjectSettingsRequest} message GetProjectSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetProjectSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetProjectSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetProjectSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetProjectSettingsRequest} GetProjectSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetProjectSettingsRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetProjectSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetProjectSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetProjectSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetProjectSettingsRequest} GetProjectSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetProjectSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetProjectSettingsRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetProjectSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetProjectSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetProjectSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetProjectSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetProjectSettingsRequest} GetProjectSettingsRequest
                         */
                        GetProjectSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetProjectSettingsRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetProjectSettingsRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetProjectSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetProjectSettingsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetProjectSettingsRequest} message GetProjectSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetProjectSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetProjectSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetProjectSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetProjectSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetProjectSettingsRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetProjectSettingsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetProjectSettingsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetProjectSettingsRequest";
                        };
    
                        return GetProjectSettingsRequest;
                    })();
    
                    v1.UpdateProjectSettingsRequest = (function() {
    
                        /**
                         * Properties of an UpdateProjectSettingsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IUpdateProjectSettingsRequest
                         * @property {google.devtools.artifactregistry.v1.IProjectSettings|null} [projectSettings] UpdateProjectSettingsRequest projectSettings
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateProjectSettingsRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateProjectSettingsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an UpdateProjectSettingsRequest.
                         * @implements IUpdateProjectSettingsRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IUpdateProjectSettingsRequest=} [properties] Properties to set
                         */
                        function UpdateProjectSettingsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateProjectSettingsRequest projectSettings.
                         * @member {google.devtools.artifactregistry.v1.IProjectSettings|null|undefined} projectSettings
                         * @memberof google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest
                         * @instance
                         */
                        UpdateProjectSettingsRequest.prototype.projectSettings = null;
    
                        /**
                         * UpdateProjectSettingsRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest
                         * @instance
                         */
                        UpdateProjectSettingsRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateProjectSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateProjectSettingsRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest} UpdateProjectSettingsRequest instance
                         */
                        UpdateProjectSettingsRequest.create = function create(properties) {
                            return new UpdateProjectSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateProjectSettingsRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateProjectSettingsRequest} message UpdateProjectSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateProjectSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectSettings != null && Object.hasOwnProperty.call(message, "projectSettings"))
                                $root.google.devtools.artifactregistry.v1.ProjectSettings.encode(message.projectSettings, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateProjectSettingsRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateProjectSettingsRequest} message UpdateProjectSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateProjectSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateProjectSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest} UpdateProjectSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateProjectSettingsRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.projectSettings = $root.google.devtools.artifactregistry.v1.ProjectSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateProjectSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest} UpdateProjectSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateProjectSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateProjectSettingsRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateProjectSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectSettings != null && message.hasOwnProperty("projectSettings")) {
                                var error = $root.google.devtools.artifactregistry.v1.ProjectSettings.verify(message.projectSettings);
                                if (error)
                                    return "projectSettings." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateProjectSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest} UpdateProjectSettingsRequest
                         */
                        UpdateProjectSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest();
                            if (object.projectSettings != null) {
                                if (typeof object.projectSettings !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest.projectSettings: object expected");
                                message.projectSettings = $root.google.devtools.artifactregistry.v1.ProjectSettings.fromObject(object.projectSettings);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateProjectSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest} message UpdateProjectSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateProjectSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectSettings = null;
                                object.updateMask = null;
                            }
                            if (message.projectSettings != null && message.hasOwnProperty("projectSettings"))
                                object.projectSettings = $root.google.devtools.artifactregistry.v1.ProjectSettings.toObject(message.projectSettings, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateProjectSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateProjectSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateProjectSettingsRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateProjectSettingsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.UpdateProjectSettingsRequest";
                        };
    
                        return UpdateProjectSettingsRequest;
                    })();
    
                    v1.Tag = (function() {
    
                        /**
                         * Properties of a Tag.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface ITag
                         * @property {string|null} [name] Tag name
                         * @property {string|null} [version] Tag version
                         */
    
                        /**
                         * Constructs a new Tag.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a Tag.
                         * @implements ITag
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.ITag=} [properties] Properties to set
                         */
                        function Tag(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Tag name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.Tag
                         * @instance
                         */
                        Tag.prototype.name = "";
    
                        /**
                         * Tag version.
                         * @member {string} version
                         * @memberof google.devtools.artifactregistry.v1.Tag
                         * @instance
                         */
                        Tag.prototype.version = "";
    
                        /**
                         * Creates a new Tag instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.Tag
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ITag=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.Tag} Tag instance
                         */
                        Tag.create = function create(properties) {
                            return new Tag(properties);
                        };
    
                        /**
                         * Encodes the specified Tag message. Does not implicitly {@link google.devtools.artifactregistry.v1.Tag.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.Tag
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ITag} message Tag message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Tag.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Tag message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.Tag.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Tag
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ITag} message Tag message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Tag.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Tag message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.Tag
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.Tag} Tag
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Tag.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.Tag();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Tag message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Tag
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.Tag} Tag
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Tag.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Tag message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.Tag
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Tag.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Tag message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.Tag
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.Tag} Tag
                         */
                        Tag.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.Tag)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.Tag();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.version != null)
                                message.version = String(object.version);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Tag message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.Tag
                         * @static
                         * @param {google.devtools.artifactregistry.v1.Tag} message Tag
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Tag.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.version = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            return object;
                        };
    
                        /**
                         * Converts this Tag to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.Tag
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Tag.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Tag
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.Tag
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Tag.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.Tag";
                        };
    
                        return Tag;
                    })();
    
                    v1.ListTagsRequest = (function() {
    
                        /**
                         * Properties of a ListTagsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListTagsRequest
                         * @property {string|null} [parent] ListTagsRequest parent
                         * @property {string|null} [filter] ListTagsRequest filter
                         * @property {number|null} [pageSize] ListTagsRequest pageSize
                         * @property {string|null} [pageToken] ListTagsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListTagsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListTagsRequest.
                         * @implements IListTagsRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListTagsRequest=} [properties] Properties to set
                         */
                        function ListTagsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTagsRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @instance
                         */
                        ListTagsRequest.prototype.parent = "";
    
                        /**
                         * ListTagsRequest filter.
                         * @member {string} filter
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @instance
                         */
                        ListTagsRequest.prototype.filter = "";
    
                        /**
                         * ListTagsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @instance
                         */
                        ListTagsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListTagsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @instance
                         */
                        ListTagsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListTagsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListTagsRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListTagsRequest} ListTagsRequest instance
                         */
                        ListTagsRequest.create = function create(properties) {
                            return new ListTagsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTagsRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListTagsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListTagsRequest} message ListTagsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTagsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTagsRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListTagsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListTagsRequest} message ListTagsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTagsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTagsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListTagsRequest} ListTagsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTagsRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListTagsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTagsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListTagsRequest} ListTagsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTagsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTagsRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTagsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTagsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListTagsRequest} ListTagsRequest
                         */
                        ListTagsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListTagsRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListTagsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTagsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListTagsRequest} message ListTagsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTagsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListTagsRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTagsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTagsRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListTagsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTagsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListTagsRequest";
                        };
    
                        return ListTagsRequest;
                    })();
    
                    v1.ListTagsResponse = (function() {
    
                        /**
                         * Properties of a ListTagsResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListTagsResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.ITag>|null} [tags] ListTagsResponse tags
                         * @property {string|null} [nextPageToken] ListTagsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListTagsResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListTagsResponse.
                         * @implements IListTagsResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListTagsResponse=} [properties] Properties to set
                         */
                        function ListTagsResponse(properties) {
                            this.tags = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTagsResponse tags.
                         * @member {Array.<google.devtools.artifactregistry.v1.ITag>} tags
                         * @memberof google.devtools.artifactregistry.v1.ListTagsResponse
                         * @instance
                         */
                        ListTagsResponse.prototype.tags = $util.emptyArray;
    
                        /**
                         * ListTagsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.artifactregistry.v1.ListTagsResponse
                         * @instance
                         */
                        ListTagsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListTagsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListTagsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListTagsResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListTagsResponse} ListTagsResponse instance
                         */
                        ListTagsResponse.create = function create(properties) {
                            return new ListTagsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTagsResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListTagsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListTagsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListTagsResponse} message ListTagsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTagsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tags != null && message.tags.length)
                                for (var i = 0; i < message.tags.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.Tag.encode(message.tags[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTagsResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListTagsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListTagsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListTagsResponse} message ListTagsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTagsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTagsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListTagsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListTagsResponse} ListTagsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTagsResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListTagsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.tags && message.tags.length))
                                            message.tags = [];
                                        message.tags.push($root.google.devtools.artifactregistry.v1.Tag.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTagsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListTagsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListTagsResponse} ListTagsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTagsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTagsResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListTagsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTagsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tags != null && message.hasOwnProperty("tags")) {
                                if (!Array.isArray(message.tags))
                                    return "tags: array expected";
                                for (var i = 0; i < message.tags.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.Tag.verify(message.tags[i]);
                                    if (error)
                                        return "tags." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTagsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListTagsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListTagsResponse} ListTagsResponse
                         */
                        ListTagsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListTagsResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListTagsResponse();
                            if (object.tags) {
                                if (!Array.isArray(object.tags))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ListTagsResponse.tags: array expected");
                                message.tags = [];
                                for (var i = 0; i < object.tags.length; ++i) {
                                    if (typeof object.tags[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ListTagsResponse.tags: object expected");
                                    message.tags[i] = $root.google.devtools.artifactregistry.v1.Tag.fromObject(object.tags[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTagsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListTagsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListTagsResponse} message ListTagsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTagsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tags = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.tags && message.tags.length) {
                                object.tags = [];
                                for (var j = 0; j < message.tags.length; ++j)
                                    object.tags[j] = $root.google.devtools.artifactregistry.v1.Tag.toObject(message.tags[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTagsResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListTagsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTagsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTagsResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListTagsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTagsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListTagsResponse";
                        };
    
                        return ListTagsResponse;
                    })();
    
                    v1.GetTagRequest = (function() {
    
                        /**
                         * Properties of a GetTagRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetTagRequest
                         * @property {string|null} [name] GetTagRequest name
                         */
    
                        /**
                         * Constructs a new GetTagRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetTagRequest.
                         * @implements IGetTagRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetTagRequest=} [properties] Properties to set
                         */
                        function GetTagRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetTagRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetTagRequest
                         * @instance
                         */
                        GetTagRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetTagRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetTagRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetTagRequest} GetTagRequest instance
                         */
                        GetTagRequest.create = function create(properties) {
                            return new GetTagRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetTagRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetTagRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetTagRequest} message GetTagRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTagRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetTagRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetTagRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetTagRequest} message GetTagRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTagRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetTagRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetTagRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetTagRequest} GetTagRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTagRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetTagRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetTagRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetTagRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetTagRequest} GetTagRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTagRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetTagRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetTagRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetTagRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetTagRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetTagRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetTagRequest} GetTagRequest
                         */
                        GetTagRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetTagRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetTagRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetTagRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetTagRequest} message GetTagRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetTagRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetTagRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetTagRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetTagRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetTagRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetTagRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetTagRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetTagRequest";
                        };
    
                        return GetTagRequest;
                    })();
    
                    v1.CreateTagRequest = (function() {
    
                        /**
                         * Properties of a CreateTagRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface ICreateTagRequest
                         * @property {string|null} [parent] CreateTagRequest parent
                         * @property {string|null} [tagId] CreateTagRequest tagId
                         * @property {google.devtools.artifactregistry.v1.ITag|null} [tag] CreateTagRequest tag
                         */
    
                        /**
                         * Constructs a new CreateTagRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a CreateTagRequest.
                         * @implements ICreateTagRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.ICreateTagRequest=} [properties] Properties to set
                         */
                        function CreateTagRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateTagRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @instance
                         */
                        CreateTagRequest.prototype.parent = "";
    
                        /**
                         * CreateTagRequest tagId.
                         * @member {string} tagId
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @instance
                         */
                        CreateTagRequest.prototype.tagId = "";
    
                        /**
                         * CreateTagRequest tag.
                         * @member {google.devtools.artifactregistry.v1.ITag|null|undefined} tag
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @instance
                         */
                        CreateTagRequest.prototype.tag = null;
    
                        /**
                         * Creates a new CreateTagRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICreateTagRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.CreateTagRequest} CreateTagRequest instance
                         */
                        CreateTagRequest.create = function create(properties) {
                            return new CreateTagRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateTagRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.CreateTagRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICreateTagRequest} message CreateTagRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTagRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.tagId != null && Object.hasOwnProperty.call(message, "tagId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tagId);
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                $root.google.devtools.artifactregistry.v1.Tag.encode(message.tag, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateTagRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.CreateTagRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ICreateTagRequest} message CreateTagRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTagRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateTagRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.CreateTagRequest} CreateTagRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTagRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.CreateTagRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.tagId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.tag = $root.google.devtools.artifactregistry.v1.Tag.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateTagRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.CreateTagRequest} CreateTagRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTagRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateTagRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateTagRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.tagId != null && message.hasOwnProperty("tagId"))
                                if (!$util.isString(message.tagId))
                                    return "tagId: string expected";
                            if (message.tag != null && message.hasOwnProperty("tag")) {
                                var error = $root.google.devtools.artifactregistry.v1.Tag.verify(message.tag);
                                if (error)
                                    return "tag." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateTagRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.CreateTagRequest} CreateTagRequest
                         */
                        CreateTagRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.CreateTagRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.CreateTagRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.tagId != null)
                                message.tagId = String(object.tagId);
                            if (object.tag != null) {
                                if (typeof object.tag !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.CreateTagRequest.tag: object expected");
                                message.tag = $root.google.devtools.artifactregistry.v1.Tag.fromObject(object.tag);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateTagRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.CreateTagRequest} message CreateTagRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateTagRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.tagId = "";
                                object.tag = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.tagId != null && message.hasOwnProperty("tagId"))
                                object.tagId = message.tagId;
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = $root.google.devtools.artifactregistry.v1.Tag.toObject(message.tag, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateTagRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateTagRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateTagRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.CreateTagRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateTagRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.CreateTagRequest";
                        };
    
                        return CreateTagRequest;
                    })();
    
                    v1.UpdateTagRequest = (function() {
    
                        /**
                         * Properties of an UpdateTagRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IUpdateTagRequest
                         * @property {google.devtools.artifactregistry.v1.ITag|null} [tag] UpdateTagRequest tag
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateTagRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateTagRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an UpdateTagRequest.
                         * @implements IUpdateTagRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IUpdateTagRequest=} [properties] Properties to set
                         */
                        function UpdateTagRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateTagRequest tag.
                         * @member {google.devtools.artifactregistry.v1.ITag|null|undefined} tag
                         * @memberof google.devtools.artifactregistry.v1.UpdateTagRequest
                         * @instance
                         */
                        UpdateTagRequest.prototype.tag = null;
    
                        /**
                         * UpdateTagRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.devtools.artifactregistry.v1.UpdateTagRequest
                         * @instance
                         */
                        UpdateTagRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateTagRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.UpdateTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateTagRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.UpdateTagRequest} UpdateTagRequest instance
                         */
                        UpdateTagRequest.create = function create(properties) {
                            return new UpdateTagRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateTagRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateTagRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.UpdateTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateTagRequest} message UpdateTagRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateTagRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                $root.google.devtools.artifactregistry.v1.Tag.encode(message.tag, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateTagRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateTagRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateTagRequest} message UpdateTagRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateTagRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateTagRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.UpdateTagRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.UpdateTagRequest} UpdateTagRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateTagRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.UpdateTagRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.tag = $root.google.devtools.artifactregistry.v1.Tag.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateTagRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateTagRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.UpdateTagRequest} UpdateTagRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateTagRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateTagRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.UpdateTagRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateTagRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tag != null && message.hasOwnProperty("tag")) {
                                var error = $root.google.devtools.artifactregistry.v1.Tag.verify(message.tag);
                                if (error)
                                    return "tag." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateTagRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateTagRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.UpdateTagRequest} UpdateTagRequest
                         */
                        UpdateTagRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.UpdateTagRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.UpdateTagRequest();
                            if (object.tag != null) {
                                if (typeof object.tag !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateTagRequest.tag: object expected");
                                message.tag = $root.google.devtools.artifactregistry.v1.Tag.fromObject(object.tag);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateTagRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateTagRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.UpdateTagRequest} message UpdateTagRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateTagRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.tag = null;
                                object.updateMask = null;
                            }
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = $root.google.devtools.artifactregistry.v1.Tag.toObject(message.tag, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateTagRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.UpdateTagRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateTagRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateTagRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.UpdateTagRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateTagRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.UpdateTagRequest";
                        };
    
                        return UpdateTagRequest;
                    })();
    
                    v1.DeleteTagRequest = (function() {
    
                        /**
                         * Properties of a DeleteTagRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IDeleteTagRequest
                         * @property {string|null} [name] DeleteTagRequest name
                         */
    
                        /**
                         * Constructs a new DeleteTagRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a DeleteTagRequest.
                         * @implements IDeleteTagRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IDeleteTagRequest=} [properties] Properties to set
                         */
                        function DeleteTagRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteTagRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.DeleteTagRequest
                         * @instance
                         */
                        DeleteTagRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteTagRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.DeleteTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteTagRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.DeleteTagRequest} DeleteTagRequest instance
                         */
                        DeleteTagRequest.create = function create(properties) {
                            return new DeleteTagRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteTagRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.DeleteTagRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.DeleteTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteTagRequest} message DeleteTagRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTagRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteTagRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.DeleteTagRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeleteTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteTagRequest} message DeleteTagRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTagRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteTagRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.DeleteTagRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.DeleteTagRequest} DeleteTagRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTagRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.DeleteTagRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteTagRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeleteTagRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.DeleteTagRequest} DeleteTagRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTagRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteTagRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.DeleteTagRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteTagRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteTagRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.DeleteTagRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.DeleteTagRequest} DeleteTagRequest
                         */
                        DeleteTagRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.DeleteTagRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.DeleteTagRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteTagRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.DeleteTagRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.DeleteTagRequest} message DeleteTagRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteTagRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteTagRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.DeleteTagRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteTagRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteTagRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.DeleteTagRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteTagRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.DeleteTagRequest";
                        };
    
                        return DeleteTagRequest;
                    })();
    
                    /**
                     * VersionView enum.
                     * @name google.devtools.artifactregistry.v1.VersionView
                     * @enum {number}
                     * @property {number} VERSION_VIEW_UNSPECIFIED=0 VERSION_VIEW_UNSPECIFIED value
                     * @property {number} BASIC=1 BASIC value
                     * @property {number} FULL=2 FULL value
                     */
                    v1.VersionView = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "VERSION_VIEW_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "BASIC"] = 1;
                        values[valuesById[2] = "FULL"] = 2;
                        return values;
                    })();
    
                    v1.Version = (function() {
    
                        /**
                         * Properties of a Version.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IVersion
                         * @property {string|null} [name] Version name
                         * @property {string|null} [description] Version description
                         * @property {google.protobuf.ITimestamp|null} [createTime] Version createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Version updateTime
                         * @property {Array.<google.devtools.artifactregistry.v1.ITag>|null} [relatedTags] Version relatedTags
                         * @property {google.protobuf.IStruct|null} [metadata] Version metadata
                         * @property {Object.<string,string>|null} [annotations] Version annotations
                         */
    
                        /**
                         * Constructs a new Version.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a Version.
                         * @implements IVersion
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IVersion=} [properties] Properties to set
                         */
                        function Version(properties) {
                            this.relatedTags = [];
                            this.annotations = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Version name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @instance
                         */
                        Version.prototype.name = "";
    
                        /**
                         * Version description.
                         * @member {string} description
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @instance
                         */
                        Version.prototype.description = "";
    
                        /**
                         * Version createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @instance
                         */
                        Version.prototype.createTime = null;
    
                        /**
                         * Version updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @instance
                         */
                        Version.prototype.updateTime = null;
    
                        /**
                         * Version relatedTags.
                         * @member {Array.<google.devtools.artifactregistry.v1.ITag>} relatedTags
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @instance
                         */
                        Version.prototype.relatedTags = $util.emptyArray;
    
                        /**
                         * Version metadata.
                         * @member {google.protobuf.IStruct|null|undefined} metadata
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @instance
                         */
                        Version.prototype.metadata = null;
    
                        /**
                         * Version annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @instance
                         */
                        Version.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Creates a new Version instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IVersion=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.Version} Version instance
                         */
                        Version.create = function create(properties) {
                            return new Version(properties);
                        };
    
                        /**
                         * Encodes the specified Version message. Does not implicitly {@link google.devtools.artifactregistry.v1.Version.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IVersion} message Version message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Version.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.relatedTags != null && message.relatedTags.length)
                                for (var i = 0; i < message.relatedTags.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.Tag.encode(message.relatedTags[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.protobuf.Struct.encode(message.metadata, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 9, wireType 2 =*/74).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Version message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.Version.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IVersion} message Version message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Version.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Version message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.Version} Version
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Version.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.Version(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        if (!(message.relatedTags && message.relatedTags.length))
                                            message.relatedTags = [];
                                        message.relatedTags.push($root.google.devtools.artifactregistry.v1.Tag.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 8: {
                                        message.metadata = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Version message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.Version} Version
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Version.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Version message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Version.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.relatedTags != null && message.hasOwnProperty("relatedTags")) {
                                if (!Array.isArray(message.relatedTags))
                                    return "relatedTags: array expected";
                                for (var i = 0; i < message.relatedTags.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.Tag.verify(message.relatedTags[i]);
                                    if (error)
                                        return "relatedTags." + error;
                                }
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.protobuf.Struct.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Version message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.Version} Version
                         */
                        Version.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.Version)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.Version();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Version.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Version.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.relatedTags) {
                                if (!Array.isArray(object.relatedTags))
                                    throw TypeError(".google.devtools.artifactregistry.v1.Version.relatedTags: array expected");
                                message.relatedTags = [];
                                for (var i = 0; i < object.relatedTags.length; ++i) {
                                    if (typeof object.relatedTags[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.Version.relatedTags: object expected");
                                    message.relatedTags[i] = $root.google.devtools.artifactregistry.v1.Tag.fromObject(object.relatedTags[i]);
                                }
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Version.metadata: object expected");
                                message.metadata = $root.google.protobuf.Struct.fromObject(object.metadata);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.Version.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Version message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @static
                         * @param {google.devtools.artifactregistry.v1.Version} message Version
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Version.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.relatedTags = [];
                            if (options.objects || options.defaults)
                                object.annotations = {};
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.metadata = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.relatedTags && message.relatedTags.length) {
                                object.relatedTags = [];
                                for (var j = 0; j < message.relatedTags.length; ++j)
                                    object.relatedTags[j] = $root.google.devtools.artifactregistry.v1.Tag.toObject(message.relatedTags[j], options);
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.protobuf.Struct.toObject(message.metadata, options);
                            var keys2;
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Version to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Version.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Version
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.Version
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Version.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.Version";
                        };
    
                        return Version;
                    })();
    
                    v1.ListVersionsRequest = (function() {
    
                        /**
                         * Properties of a ListVersionsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListVersionsRequest
                         * @property {string|null} [parent] ListVersionsRequest parent
                         * @property {number|null} [pageSize] ListVersionsRequest pageSize
                         * @property {string|null} [pageToken] ListVersionsRequest pageToken
                         * @property {google.devtools.artifactregistry.v1.VersionView|null} [view] ListVersionsRequest view
                         * @property {string|null} [orderBy] ListVersionsRequest orderBy
                         * @property {string|null} [filter] ListVersionsRequest filter
                         */
    
                        /**
                         * Constructs a new ListVersionsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListVersionsRequest.
                         * @implements IListVersionsRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListVersionsRequest=} [properties] Properties to set
                         */
                        function ListVersionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListVersionsRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @instance
                         */
                        ListVersionsRequest.prototype.parent = "";
    
                        /**
                         * ListVersionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @instance
                         */
                        ListVersionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListVersionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @instance
                         */
                        ListVersionsRequest.prototype.pageToken = "";
    
                        /**
                         * ListVersionsRequest view.
                         * @member {google.devtools.artifactregistry.v1.VersionView} view
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @instance
                         */
                        ListVersionsRequest.prototype.view = 0;
    
                        /**
                         * ListVersionsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @instance
                         */
                        ListVersionsRequest.prototype.orderBy = "";
    
                        /**
                         * ListVersionsRequest filter.
                         * @member {string} filter
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @instance
                         */
                        ListVersionsRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListVersionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListVersionsRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListVersionsRequest} ListVersionsRequest instance
                         */
                        ListVersionsRequest.create = function create(properties) {
                            return new ListVersionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListVersionsRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListVersionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListVersionsRequest} message ListVersionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListVersionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.view);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListVersionsRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListVersionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListVersionsRequest} message ListVersionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListVersionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListVersionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListVersionsRequest} ListVersionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListVersionsRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListVersionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.view = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListVersionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListVersionsRequest} ListVersionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListVersionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListVersionsRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListVersionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.view != null && message.hasOwnProperty("view"))
                                switch (message.view) {
                                default:
                                    return "view: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListVersionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListVersionsRequest} ListVersionsRequest
                         */
                        ListVersionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListVersionsRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListVersionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            switch (object.view) {
                            default:
                                if (typeof object.view === "number") {
                                    message.view = object.view;
                                    break;
                                }
                                break;
                            case "VERSION_VIEW_UNSPECIFIED":
                            case 0:
                                message.view = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.view = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.view = 2;
                                break;
                            }
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListVersionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListVersionsRequest} message ListVersionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListVersionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.view = options.enums === String ? "VERSION_VIEW_UNSPECIFIED" : 0;
                                object.orderBy = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.view != null && message.hasOwnProperty("view"))
                                object.view = options.enums === String ? $root.google.devtools.artifactregistry.v1.VersionView[message.view] === undefined ? message.view : $root.google.devtools.artifactregistry.v1.VersionView[message.view] : message.view;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListVersionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListVersionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListVersionsRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListVersionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListVersionsRequest";
                        };
    
                        return ListVersionsRequest;
                    })();
    
                    v1.ListVersionsResponse = (function() {
    
                        /**
                         * Properties of a ListVersionsResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IListVersionsResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.IVersion>|null} [versions] ListVersionsResponse versions
                         * @property {string|null} [nextPageToken] ListVersionsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListVersionsResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a ListVersionsResponse.
                         * @implements IListVersionsResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IListVersionsResponse=} [properties] Properties to set
                         */
                        function ListVersionsResponse(properties) {
                            this.versions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListVersionsResponse versions.
                         * @member {Array.<google.devtools.artifactregistry.v1.IVersion>} versions
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsResponse
                         * @instance
                         */
                        ListVersionsResponse.prototype.versions = $util.emptyArray;
    
                        /**
                         * ListVersionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsResponse
                         * @instance
                         */
                        ListVersionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListVersionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListVersionsResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ListVersionsResponse} ListVersionsResponse instance
                         */
                        ListVersionsResponse.create = function create(properties) {
                            return new ListVersionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListVersionsResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ListVersionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListVersionsResponse} message ListVersionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListVersionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.versions != null && message.versions.length)
                                for (var i = 0; i < message.versions.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.Version.encode(message.versions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListVersionsResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ListVersionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IListVersionsResponse} message ListVersionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListVersionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListVersionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ListVersionsResponse} ListVersionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListVersionsResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ListVersionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.versions && message.versions.length))
                                            message.versions = [];
                                        message.versions.push($root.google.devtools.artifactregistry.v1.Version.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListVersionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ListVersionsResponse} ListVersionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListVersionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListVersionsResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListVersionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.versions != null && message.hasOwnProperty("versions")) {
                                if (!Array.isArray(message.versions))
                                    return "versions: array expected";
                                for (var i = 0; i < message.versions.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.Version.verify(message.versions[i]);
                                    if (error)
                                        return "versions." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListVersionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ListVersionsResponse} ListVersionsResponse
                         */
                        ListVersionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ListVersionsResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ListVersionsResponse();
                            if (object.versions) {
                                if (!Array.isArray(object.versions))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ListVersionsResponse.versions: array expected");
                                message.versions = [];
                                for (var i = 0; i < object.versions.length; ++i) {
                                    if (typeof object.versions[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ListVersionsResponse.versions: object expected");
                                    message.versions[i] = $root.google.devtools.artifactregistry.v1.Version.fromObject(object.versions[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListVersionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ListVersionsResponse} message ListVersionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListVersionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.versions = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.versions && message.versions.length) {
                                object.versions = [];
                                for (var j = 0; j < message.versions.length; ++j)
                                    object.versions[j] = $root.google.devtools.artifactregistry.v1.Version.toObject(message.versions[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListVersionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListVersionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListVersionsResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ListVersionsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListVersionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ListVersionsResponse";
                        };
    
                        return ListVersionsResponse;
                    })();
    
                    v1.GetVersionRequest = (function() {
    
                        /**
                         * Properties of a GetVersionRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetVersionRequest
                         * @property {string|null} [name] GetVersionRequest name
                         * @property {google.devtools.artifactregistry.v1.VersionView|null} [view] GetVersionRequest view
                         */
    
                        /**
                         * Constructs a new GetVersionRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetVersionRequest.
                         * @implements IGetVersionRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetVersionRequest=} [properties] Properties to set
                         */
                        function GetVersionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetVersionRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetVersionRequest
                         * @instance
                         */
                        GetVersionRequest.prototype.name = "";
    
                        /**
                         * GetVersionRequest view.
                         * @member {google.devtools.artifactregistry.v1.VersionView} view
                         * @memberof google.devtools.artifactregistry.v1.GetVersionRequest
                         * @instance
                         */
                        GetVersionRequest.prototype.view = 0;
    
                        /**
                         * Creates a new GetVersionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetVersionRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetVersionRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetVersionRequest} GetVersionRequest instance
                         */
                        GetVersionRequest.create = function create(properties) {
                            return new GetVersionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetVersionRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetVersionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetVersionRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetVersionRequest} message GetVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetVersionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.view);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetVersionRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetVersionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetVersionRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetVersionRequest} message GetVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetVersionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetVersionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetVersionRequest} GetVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetVersionRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetVersionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.view = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetVersionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetVersionRequest} GetVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetVersionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetVersionRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetVersionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetVersionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.view != null && message.hasOwnProperty("view"))
                                switch (message.view) {
                                default:
                                    return "view: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a GetVersionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetVersionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetVersionRequest} GetVersionRequest
                         */
                        GetVersionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetVersionRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetVersionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.view) {
                            default:
                                if (typeof object.view === "number") {
                                    message.view = object.view;
                                    break;
                                }
                                break;
                            case "VERSION_VIEW_UNSPECIFIED":
                            case 0:
                                message.view = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.view = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.view = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetVersionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetVersionRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetVersionRequest} message GetVersionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetVersionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.view = options.enums === String ? "VERSION_VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.view != null && message.hasOwnProperty("view"))
                                object.view = options.enums === String ? $root.google.devtools.artifactregistry.v1.VersionView[message.view] === undefined ? message.view : $root.google.devtools.artifactregistry.v1.VersionView[message.view] : message.view;
                            return object;
                        };
    
                        /**
                         * Converts this GetVersionRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetVersionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetVersionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetVersionRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetVersionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetVersionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetVersionRequest";
                        };
    
                        return GetVersionRequest;
                    })();
    
                    v1.DeleteVersionRequest = (function() {
    
                        /**
                         * Properties of a DeleteVersionRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IDeleteVersionRequest
                         * @property {string|null} [name] DeleteVersionRequest name
                         * @property {boolean|null} [force] DeleteVersionRequest force
                         */
    
                        /**
                         * Constructs a new DeleteVersionRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a DeleteVersionRequest.
                         * @implements IDeleteVersionRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IDeleteVersionRequest=} [properties] Properties to set
                         */
                        function DeleteVersionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteVersionRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.DeleteVersionRequest
                         * @instance
                         */
                        DeleteVersionRequest.prototype.name = "";
    
                        /**
                         * DeleteVersionRequest force.
                         * @member {boolean} force
                         * @memberof google.devtools.artifactregistry.v1.DeleteVersionRequest
                         * @instance
                         */
                        DeleteVersionRequest.prototype.force = false;
    
                        /**
                         * Creates a new DeleteVersionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.DeleteVersionRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteVersionRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.DeleteVersionRequest} DeleteVersionRequest instance
                         */
                        DeleteVersionRequest.create = function create(properties) {
                            return new DeleteVersionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteVersionRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.DeleteVersionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.DeleteVersionRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteVersionRequest} message DeleteVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteVersionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.force);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteVersionRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.DeleteVersionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeleteVersionRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IDeleteVersionRequest} message DeleteVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteVersionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteVersionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.DeleteVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.DeleteVersionRequest} DeleteVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteVersionRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.DeleteVersionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteVersionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.DeleteVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.DeleteVersionRequest} DeleteVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteVersionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteVersionRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.DeleteVersionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteVersionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteVersionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.DeleteVersionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.DeleteVersionRequest} DeleteVersionRequest
                         */
                        DeleteVersionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.DeleteVersionRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.DeleteVersionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteVersionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.DeleteVersionRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.DeleteVersionRequest} message DeleteVersionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteVersionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.force = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteVersionRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.DeleteVersionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteVersionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteVersionRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.DeleteVersionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteVersionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.DeleteVersionRequest";
                        };
    
                        return DeleteVersionRequest;
                    })();
    
                    v1.BatchDeleteVersionsRequest = (function() {
    
                        /**
                         * Properties of a BatchDeleteVersionsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IBatchDeleteVersionsRequest
                         * @property {string|null} [parent] BatchDeleteVersionsRequest parent
                         * @property {Array.<string>|null} [names] BatchDeleteVersionsRequest names
                         * @property {boolean|null} [validateOnly] BatchDeleteVersionsRequest validateOnly
                         */
    
                        /**
                         * Constructs a new BatchDeleteVersionsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a BatchDeleteVersionsRequest.
                         * @implements IBatchDeleteVersionsRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IBatchDeleteVersionsRequest=} [properties] Properties to set
                         */
                        function BatchDeleteVersionsRequest(properties) {
                            this.names = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchDeleteVersionsRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @instance
                         */
                        BatchDeleteVersionsRequest.prototype.parent = "";
    
                        /**
                         * BatchDeleteVersionsRequest names.
                         * @member {Array.<string>} names
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @instance
                         */
                        BatchDeleteVersionsRequest.prototype.names = $util.emptyArray;
    
                        /**
                         * BatchDeleteVersionsRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @instance
                         */
                        BatchDeleteVersionsRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new BatchDeleteVersionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IBatchDeleteVersionsRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest} BatchDeleteVersionsRequest instance
                         */
                        BatchDeleteVersionsRequest.create = function create(properties) {
                            return new BatchDeleteVersionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified BatchDeleteVersionsRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IBatchDeleteVersionsRequest} message BatchDeleteVersionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchDeleteVersionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.names != null && message.names.length)
                                for (var i = 0; i < message.names.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.names[i]);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchDeleteVersionsRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IBatchDeleteVersionsRequest} message BatchDeleteVersionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchDeleteVersionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchDeleteVersionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest} BatchDeleteVersionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchDeleteVersionsRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.names && message.names.length))
                                            message.names = [];
                                        message.names.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchDeleteVersionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest} BatchDeleteVersionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchDeleteVersionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchDeleteVersionsRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchDeleteVersionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.names != null && message.hasOwnProperty("names")) {
                                if (!Array.isArray(message.names))
                                    return "names: array expected";
                                for (var i = 0; i < message.names.length; ++i)
                                    if (!$util.isString(message.names[i]))
                                        return "names: string[] expected";
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a BatchDeleteVersionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest} BatchDeleteVersionsRequest
                         */
                        BatchDeleteVersionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.names) {
                                if (!Array.isArray(object.names))
                                    throw TypeError(".google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest.names: array expected");
                                message.names = [];
                                for (var i = 0; i < object.names.length; ++i)
                                    message.names[i] = String(object.names[i]);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchDeleteVersionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest} message BatchDeleteVersionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchDeleteVersionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.names = [];
                            if (options.defaults) {
                                object.parent = "";
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.names && message.names.length) {
                                object.names = [];
                                for (var j = 0; j < message.names.length; ++j)
                                    object.names[j] = message.names[j];
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this BatchDeleteVersionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchDeleteVersionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchDeleteVersionsRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchDeleteVersionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.BatchDeleteVersionsRequest";
                        };
    
                        return BatchDeleteVersionsRequest;
                    })();
    
                    v1.BatchDeleteVersionsMetadata = (function() {
    
                        /**
                         * Properties of a BatchDeleteVersionsMetadata.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IBatchDeleteVersionsMetadata
                         * @property {Array.<string>|null} [failedVersions] BatchDeleteVersionsMetadata failedVersions
                         */
    
                        /**
                         * Constructs a new BatchDeleteVersionsMetadata.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a BatchDeleteVersionsMetadata.
                         * @implements IBatchDeleteVersionsMetadata
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IBatchDeleteVersionsMetadata=} [properties] Properties to set
                         */
                        function BatchDeleteVersionsMetadata(properties) {
                            this.failedVersions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchDeleteVersionsMetadata failedVersions.
                         * @member {Array.<string>} failedVersions
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata
                         * @instance
                         */
                        BatchDeleteVersionsMetadata.prototype.failedVersions = $util.emptyArray;
    
                        /**
                         * Creates a new BatchDeleteVersionsMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IBatchDeleteVersionsMetadata=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata} BatchDeleteVersionsMetadata instance
                         */
                        BatchDeleteVersionsMetadata.create = function create(properties) {
                            return new BatchDeleteVersionsMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified BatchDeleteVersionsMetadata message. Does not implicitly {@link google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IBatchDeleteVersionsMetadata} message BatchDeleteVersionsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchDeleteVersionsMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.failedVersions != null && message.failedVersions.length)
                                for (var i = 0; i < message.failedVersions.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.failedVersions[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchDeleteVersionsMetadata message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IBatchDeleteVersionsMetadata} message BatchDeleteVersionsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchDeleteVersionsMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchDeleteVersionsMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata} BatchDeleteVersionsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchDeleteVersionsMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        if (!(message.failedVersions && message.failedVersions.length))
                                            message.failedVersions = [];
                                        message.failedVersions.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchDeleteVersionsMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata} BatchDeleteVersionsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchDeleteVersionsMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchDeleteVersionsMetadata message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchDeleteVersionsMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.failedVersions != null && message.hasOwnProperty("failedVersions")) {
                                if (!Array.isArray(message.failedVersions))
                                    return "failedVersions: array expected";
                                for (var i = 0; i < message.failedVersions.length; ++i)
                                    if (!$util.isString(message.failedVersions[i]))
                                        return "failedVersions: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchDeleteVersionsMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata} BatchDeleteVersionsMetadata
                         */
                        BatchDeleteVersionsMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata();
                            if (object.failedVersions) {
                                if (!Array.isArray(object.failedVersions))
                                    throw TypeError(".google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata.failedVersions: array expected");
                                message.failedVersions = [];
                                for (var i = 0; i < object.failedVersions.length; ++i)
                                    message.failedVersions[i] = String(object.failedVersions[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchDeleteVersionsMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata} message BatchDeleteVersionsMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchDeleteVersionsMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.failedVersions = [];
                            if (message.failedVersions && message.failedVersions.length) {
                                object.failedVersions = [];
                                for (var j = 0; j < message.failedVersions.length; ++j)
                                    object.failedVersions[j] = message.failedVersions[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BatchDeleteVersionsMetadata to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchDeleteVersionsMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchDeleteVersionsMetadata
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchDeleteVersionsMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.BatchDeleteVersionsMetadata";
                        };
    
                        return BatchDeleteVersionsMetadata;
                    })();
    
                    v1.UpdateVersionRequest = (function() {
    
                        /**
                         * Properties of an UpdateVersionRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IUpdateVersionRequest
                         * @property {google.devtools.artifactregistry.v1.IVersion|null} [version] UpdateVersionRequest version
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateVersionRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateVersionRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an UpdateVersionRequest.
                         * @implements IUpdateVersionRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IUpdateVersionRequest=} [properties] Properties to set
                         */
                        function UpdateVersionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateVersionRequest version.
                         * @member {google.devtools.artifactregistry.v1.IVersion|null|undefined} version
                         * @memberof google.devtools.artifactregistry.v1.UpdateVersionRequest
                         * @instance
                         */
                        UpdateVersionRequest.prototype.version = null;
    
                        /**
                         * UpdateVersionRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.devtools.artifactregistry.v1.UpdateVersionRequest
                         * @instance
                         */
                        UpdateVersionRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateVersionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.UpdateVersionRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateVersionRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.UpdateVersionRequest} UpdateVersionRequest instance
                         */
                        UpdateVersionRequest.create = function create(properties) {
                            return new UpdateVersionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateVersionRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateVersionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.UpdateVersionRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateVersionRequest} message UpdateVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateVersionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                $root.google.devtools.artifactregistry.v1.Version.encode(message.version, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateVersionRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateVersionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateVersionRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateVersionRequest} message UpdateVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateVersionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateVersionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.UpdateVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.UpdateVersionRequest} UpdateVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateVersionRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.UpdateVersionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.version = $root.google.devtools.artifactregistry.v1.Version.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateVersionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.UpdateVersionRequest} UpdateVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateVersionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateVersionRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.UpdateVersionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateVersionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.version != null && message.hasOwnProperty("version")) {
                                var error = $root.google.devtools.artifactregistry.v1.Version.verify(message.version);
                                if (error)
                                    return "version." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateVersionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateVersionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.UpdateVersionRequest} UpdateVersionRequest
                         */
                        UpdateVersionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.UpdateVersionRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.UpdateVersionRequest();
                            if (object.version != null) {
                                if (typeof object.version !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateVersionRequest.version: object expected");
                                message.version = $root.google.devtools.artifactregistry.v1.Version.fromObject(object.version);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateVersionRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateVersionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateVersionRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.UpdateVersionRequest} message UpdateVersionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateVersionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.version = null;
                                object.updateMask = null;
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = $root.google.devtools.artifactregistry.v1.Version.toObject(message.version, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateVersionRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.UpdateVersionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateVersionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateVersionRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.UpdateVersionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateVersionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.UpdateVersionRequest";
                        };
    
                        return UpdateVersionRequest;
                    })();
    
                    v1.VPCSCConfig = (function() {
    
                        /**
                         * Properties of a VPCSCConfig.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IVPCSCConfig
                         * @property {string|null} [name] VPCSCConfig name
                         * @property {google.devtools.artifactregistry.v1.VPCSCConfig.VPCSCPolicy|null} [vpcscPolicy] VPCSCConfig vpcscPolicy
                         */
    
                        /**
                         * Constructs a new VPCSCConfig.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a VPCSCConfig.
                         * @implements IVPCSCConfig
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IVPCSCConfig=} [properties] Properties to set
                         */
                        function VPCSCConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VPCSCConfig name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.VPCSCConfig
                         * @instance
                         */
                        VPCSCConfig.prototype.name = "";
    
                        /**
                         * VPCSCConfig vpcscPolicy.
                         * @member {google.devtools.artifactregistry.v1.VPCSCConfig.VPCSCPolicy} vpcscPolicy
                         * @memberof google.devtools.artifactregistry.v1.VPCSCConfig
                         * @instance
                         */
                        VPCSCConfig.prototype.vpcscPolicy = 0;
    
                        /**
                         * Creates a new VPCSCConfig instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.VPCSCConfig
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IVPCSCConfig=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.VPCSCConfig} VPCSCConfig instance
                         */
                        VPCSCConfig.create = function create(properties) {
                            return new VPCSCConfig(properties);
                        };
    
                        /**
                         * Encodes the specified VPCSCConfig message. Does not implicitly {@link google.devtools.artifactregistry.v1.VPCSCConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.VPCSCConfig
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IVPCSCConfig} message VPCSCConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VPCSCConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.vpcscPolicy != null && Object.hasOwnProperty.call(message, "vpcscPolicy"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.vpcscPolicy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VPCSCConfig message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.VPCSCConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.VPCSCConfig
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IVPCSCConfig} message VPCSCConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VPCSCConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VPCSCConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.VPCSCConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.VPCSCConfig} VPCSCConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VPCSCConfig.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.VPCSCConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.vpcscPolicy = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VPCSCConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.VPCSCConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.VPCSCConfig} VPCSCConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VPCSCConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VPCSCConfig message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.VPCSCConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VPCSCConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.vpcscPolicy != null && message.hasOwnProperty("vpcscPolicy"))
                                switch (message.vpcscPolicy) {
                                default:
                                    return "vpcscPolicy: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a VPCSCConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.VPCSCConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.VPCSCConfig} VPCSCConfig
                         */
                        VPCSCConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.VPCSCConfig)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.VPCSCConfig();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.vpcscPolicy) {
                            default:
                                if (typeof object.vpcscPolicy === "number") {
                                    message.vpcscPolicy = object.vpcscPolicy;
                                    break;
                                }
                                break;
                            case "VPCSC_POLICY_UNSPECIFIED":
                            case 0:
                                message.vpcscPolicy = 0;
                                break;
                            case "DENY":
                            case 1:
                                message.vpcscPolicy = 1;
                                break;
                            case "ALLOW":
                            case 2:
                                message.vpcscPolicy = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VPCSCConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.VPCSCConfig
                         * @static
                         * @param {google.devtools.artifactregistry.v1.VPCSCConfig} message VPCSCConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VPCSCConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.vpcscPolicy = options.enums === String ? "VPCSC_POLICY_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.vpcscPolicy != null && message.hasOwnProperty("vpcscPolicy"))
                                object.vpcscPolicy = options.enums === String ? $root.google.devtools.artifactregistry.v1.VPCSCConfig.VPCSCPolicy[message.vpcscPolicy] === undefined ? message.vpcscPolicy : $root.google.devtools.artifactregistry.v1.VPCSCConfig.VPCSCPolicy[message.vpcscPolicy] : message.vpcscPolicy;
                            return object;
                        };
    
                        /**
                         * Converts this VPCSCConfig to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.VPCSCConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VPCSCConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VPCSCConfig
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.VPCSCConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VPCSCConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.VPCSCConfig";
                        };
    
                        /**
                         * VPCSCPolicy enum.
                         * @name google.devtools.artifactregistry.v1.VPCSCConfig.VPCSCPolicy
                         * @enum {number}
                         * @property {number} VPCSC_POLICY_UNSPECIFIED=0 VPCSC_POLICY_UNSPECIFIED value
                         * @property {number} DENY=1 DENY value
                         * @property {number} ALLOW=2 ALLOW value
                         */
                        VPCSCConfig.VPCSCPolicy = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "VPCSC_POLICY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DENY"] = 1;
                            values[valuesById[2] = "ALLOW"] = 2;
                            return values;
                        })();
    
                        return VPCSCConfig;
                    })();
    
                    v1.GetVPCSCConfigRequest = (function() {
    
                        /**
                         * Properties of a GetVPCSCConfigRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IGetVPCSCConfigRequest
                         * @property {string|null} [name] GetVPCSCConfigRequest name
                         */
    
                        /**
                         * Constructs a new GetVPCSCConfigRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a GetVPCSCConfigRequest.
                         * @implements IGetVPCSCConfigRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IGetVPCSCConfigRequest=} [properties] Properties to set
                         */
                        function GetVPCSCConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetVPCSCConfigRequest name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.GetVPCSCConfigRequest
                         * @instance
                         */
                        GetVPCSCConfigRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetVPCSCConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.GetVPCSCConfigRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetVPCSCConfigRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.GetVPCSCConfigRequest} GetVPCSCConfigRequest instance
                         */
                        GetVPCSCConfigRequest.create = function create(properties) {
                            return new GetVPCSCConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetVPCSCConfigRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.GetVPCSCConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.GetVPCSCConfigRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetVPCSCConfigRequest} message GetVPCSCConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetVPCSCConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetVPCSCConfigRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.GetVPCSCConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetVPCSCConfigRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IGetVPCSCConfigRequest} message GetVPCSCConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetVPCSCConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetVPCSCConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.GetVPCSCConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.GetVPCSCConfigRequest} GetVPCSCConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetVPCSCConfigRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.GetVPCSCConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetVPCSCConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.GetVPCSCConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.GetVPCSCConfigRequest} GetVPCSCConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetVPCSCConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetVPCSCConfigRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.GetVPCSCConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetVPCSCConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetVPCSCConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.GetVPCSCConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.GetVPCSCConfigRequest} GetVPCSCConfigRequest
                         */
                        GetVPCSCConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.GetVPCSCConfigRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.GetVPCSCConfigRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetVPCSCConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.GetVPCSCConfigRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.GetVPCSCConfigRequest} message GetVPCSCConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetVPCSCConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetVPCSCConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.GetVPCSCConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetVPCSCConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetVPCSCConfigRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.GetVPCSCConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetVPCSCConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.GetVPCSCConfigRequest";
                        };
    
                        return GetVPCSCConfigRequest;
                    })();
    
                    v1.UpdateVPCSCConfigRequest = (function() {
    
                        /**
                         * Properties of an UpdateVPCSCConfigRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IUpdateVPCSCConfigRequest
                         * @property {google.devtools.artifactregistry.v1.IVPCSCConfig|null} [vpcscConfig] UpdateVPCSCConfigRequest vpcscConfig
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateVPCSCConfigRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateVPCSCConfigRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an UpdateVPCSCConfigRequest.
                         * @implements IUpdateVPCSCConfigRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IUpdateVPCSCConfigRequest=} [properties] Properties to set
                         */
                        function UpdateVPCSCConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateVPCSCConfigRequest vpcscConfig.
                         * @member {google.devtools.artifactregistry.v1.IVPCSCConfig|null|undefined} vpcscConfig
                         * @memberof google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest
                         * @instance
                         */
                        UpdateVPCSCConfigRequest.prototype.vpcscConfig = null;
    
                        /**
                         * UpdateVPCSCConfigRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest
                         * @instance
                         */
                        UpdateVPCSCConfigRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateVPCSCConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateVPCSCConfigRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest} UpdateVPCSCConfigRequest instance
                         */
                        UpdateVPCSCConfigRequest.create = function create(properties) {
                            return new UpdateVPCSCConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateVPCSCConfigRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateVPCSCConfigRequest} message UpdateVPCSCConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateVPCSCConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.vpcscConfig != null && Object.hasOwnProperty.call(message, "vpcscConfig"))
                                $root.google.devtools.artifactregistry.v1.VPCSCConfig.encode(message.vpcscConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateVPCSCConfigRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IUpdateVPCSCConfigRequest} message UpdateVPCSCConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateVPCSCConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateVPCSCConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest} UpdateVPCSCConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateVPCSCConfigRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.vpcscConfig = $root.google.devtools.artifactregistry.v1.VPCSCConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateVPCSCConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest} UpdateVPCSCConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateVPCSCConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateVPCSCConfigRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateVPCSCConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.vpcscConfig != null && message.hasOwnProperty("vpcscConfig")) {
                                var error = $root.google.devtools.artifactregistry.v1.VPCSCConfig.verify(message.vpcscConfig);
                                if (error)
                                    return "vpcscConfig." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateVPCSCConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest} UpdateVPCSCConfigRequest
                         */
                        UpdateVPCSCConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest();
                            if (object.vpcscConfig != null) {
                                if (typeof object.vpcscConfig !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest.vpcscConfig: object expected");
                                message.vpcscConfig = $root.google.devtools.artifactregistry.v1.VPCSCConfig.fromObject(object.vpcscConfig);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateVPCSCConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest} message UpdateVPCSCConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateVPCSCConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.vpcscConfig = null;
                                object.updateMask = null;
                            }
                            if (message.vpcscConfig != null && message.hasOwnProperty("vpcscConfig"))
                                object.vpcscConfig = $root.google.devtools.artifactregistry.v1.VPCSCConfig.toObject(message.vpcscConfig, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateVPCSCConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateVPCSCConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateVPCSCConfigRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateVPCSCConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.UpdateVPCSCConfigRequest";
                        };
    
                        return UpdateVPCSCConfigRequest;
                    })();
    
                    v1.YumArtifact = (function() {
    
                        /**
                         * Properties of a YumArtifact.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IYumArtifact
                         * @property {string|null} [name] YumArtifact name
                         * @property {string|null} [packageName] YumArtifact packageName
                         * @property {google.devtools.artifactregistry.v1.YumArtifact.PackageType|null} [packageType] YumArtifact packageType
                         * @property {string|null} [architecture] YumArtifact architecture
                         */
    
                        /**
                         * Constructs a new YumArtifact.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents a YumArtifact.
                         * @implements IYumArtifact
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IYumArtifact=} [properties] Properties to set
                         */
                        function YumArtifact(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * YumArtifact name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @instance
                         */
                        YumArtifact.prototype.name = "";
    
                        /**
                         * YumArtifact packageName.
                         * @member {string} packageName
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @instance
                         */
                        YumArtifact.prototype.packageName = "";
    
                        /**
                         * YumArtifact packageType.
                         * @member {google.devtools.artifactregistry.v1.YumArtifact.PackageType} packageType
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @instance
                         */
                        YumArtifact.prototype.packageType = 0;
    
                        /**
                         * YumArtifact architecture.
                         * @member {string} architecture
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @instance
                         */
                        YumArtifact.prototype.architecture = "";
    
                        /**
                         * Creates a new YumArtifact instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IYumArtifact=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.YumArtifact} YumArtifact instance
                         */
                        YumArtifact.create = function create(properties) {
                            return new YumArtifact(properties);
                        };
    
                        /**
                         * Encodes the specified YumArtifact message. Does not implicitly {@link google.devtools.artifactregistry.v1.YumArtifact.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IYumArtifact} message YumArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        YumArtifact.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.packageName != null && Object.hasOwnProperty.call(message, "packageName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.packageName);
                            if (message.packageType != null && Object.hasOwnProperty.call(message, "packageType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.packageType);
                            if (message.architecture != null && Object.hasOwnProperty.call(message, "architecture"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.architecture);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified YumArtifact message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.YumArtifact.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IYumArtifact} message YumArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        YumArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a YumArtifact message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.YumArtifact} YumArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        YumArtifact.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.YumArtifact();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.packageName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.packageType = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.architecture = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a YumArtifact message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.YumArtifact} YumArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        YumArtifact.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a YumArtifact message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        YumArtifact.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.packageName != null && message.hasOwnProperty("packageName"))
                                if (!$util.isString(message.packageName))
                                    return "packageName: string expected";
                            if (message.packageType != null && message.hasOwnProperty("packageType"))
                                switch (message.packageType) {
                                default:
                                    return "packageType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.architecture != null && message.hasOwnProperty("architecture"))
                                if (!$util.isString(message.architecture))
                                    return "architecture: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a YumArtifact message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.YumArtifact} YumArtifact
                         */
                        YumArtifact.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.YumArtifact)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.YumArtifact();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.packageName != null)
                                message.packageName = String(object.packageName);
                            switch (object.packageType) {
                            default:
                                if (typeof object.packageType === "number") {
                                    message.packageType = object.packageType;
                                    break;
                                }
                                break;
                            case "PACKAGE_TYPE_UNSPECIFIED":
                            case 0:
                                message.packageType = 0;
                                break;
                            case "BINARY":
                            case 1:
                                message.packageType = 1;
                                break;
                            case "SOURCE":
                            case 2:
                                message.packageType = 2;
                                break;
                            }
                            if (object.architecture != null)
                                message.architecture = String(object.architecture);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a YumArtifact message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1.YumArtifact} message YumArtifact
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        YumArtifact.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.packageName = "";
                                object.packageType = options.enums === String ? "PACKAGE_TYPE_UNSPECIFIED" : 0;
                                object.architecture = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.packageName != null && message.hasOwnProperty("packageName"))
                                object.packageName = message.packageName;
                            if (message.packageType != null && message.hasOwnProperty("packageType"))
                                object.packageType = options.enums === String ? $root.google.devtools.artifactregistry.v1.YumArtifact.PackageType[message.packageType] === undefined ? message.packageType : $root.google.devtools.artifactregistry.v1.YumArtifact.PackageType[message.packageType] : message.packageType;
                            if (message.architecture != null && message.hasOwnProperty("architecture"))
                                object.architecture = message.architecture;
                            return object;
                        };
    
                        /**
                         * Converts this YumArtifact to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        YumArtifact.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for YumArtifact
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.YumArtifact
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        YumArtifact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.YumArtifact";
                        };
    
                        /**
                         * PackageType enum.
                         * @name google.devtools.artifactregistry.v1.YumArtifact.PackageType
                         * @enum {number}
                         * @property {number} PACKAGE_TYPE_UNSPECIFIED=0 PACKAGE_TYPE_UNSPECIFIED value
                         * @property {number} BINARY=1 BINARY value
                         * @property {number} SOURCE=2 SOURCE value
                         */
                        YumArtifact.PackageType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "PACKAGE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BINARY"] = 1;
                            values[valuesById[2] = "SOURCE"] = 2;
                            return values;
                        })();
    
                        return YumArtifact;
                    })();
    
                    v1.ImportYumArtifactsGcsSource = (function() {
    
                        /**
                         * Properties of an ImportYumArtifactsGcsSource.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IImportYumArtifactsGcsSource
                         * @property {Array.<string>|null} [uris] ImportYumArtifactsGcsSource uris
                         * @property {boolean|null} [useWildcards] ImportYumArtifactsGcsSource useWildcards
                         */
    
                        /**
                         * Constructs a new ImportYumArtifactsGcsSource.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an ImportYumArtifactsGcsSource.
                         * @implements IImportYumArtifactsGcsSource
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsGcsSource=} [properties] Properties to set
                         */
                        function ImportYumArtifactsGcsSource(properties) {
                            this.uris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportYumArtifactsGcsSource uris.
                         * @member {Array.<string>} uris
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource
                         * @instance
                         */
                        ImportYumArtifactsGcsSource.prototype.uris = $util.emptyArray;
    
                        /**
                         * ImportYumArtifactsGcsSource useWildcards.
                         * @member {boolean} useWildcards
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource
                         * @instance
                         */
                        ImportYumArtifactsGcsSource.prototype.useWildcards = false;
    
                        /**
                         * Creates a new ImportYumArtifactsGcsSource instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsGcsSource=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource} ImportYumArtifactsGcsSource instance
                         */
                        ImportYumArtifactsGcsSource.create = function create(properties) {
                            return new ImportYumArtifactsGcsSource(properties);
                        };
    
                        /**
                         * Encodes the specified ImportYumArtifactsGcsSource message. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsGcsSource} message ImportYumArtifactsGcsSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportYumArtifactsGcsSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uris != null && message.uris.length)
                                for (var i = 0; i < message.uris.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.uris[i]);
                            if (message.useWildcards != null && Object.hasOwnProperty.call(message, "useWildcards"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.useWildcards);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportYumArtifactsGcsSource message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsGcsSource} message ImportYumArtifactsGcsSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportYumArtifactsGcsSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportYumArtifactsGcsSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource} ImportYumArtifactsGcsSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportYumArtifactsGcsSource.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.uris && message.uris.length))
                                            message.uris = [];
                                        message.uris.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        message.useWildcards = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportYumArtifactsGcsSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource} ImportYumArtifactsGcsSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportYumArtifactsGcsSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportYumArtifactsGcsSource message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportYumArtifactsGcsSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uris != null && message.hasOwnProperty("uris")) {
                                if (!Array.isArray(message.uris))
                                    return "uris: array expected";
                                for (var i = 0; i < message.uris.length; ++i)
                                    if (!$util.isString(message.uris[i]))
                                        return "uris: string[] expected";
                            }
                            if (message.useWildcards != null && message.hasOwnProperty("useWildcards"))
                                if (typeof message.useWildcards !== "boolean")
                                    return "useWildcards: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportYumArtifactsGcsSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource} ImportYumArtifactsGcsSource
                         */
                        ImportYumArtifactsGcsSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource();
                            if (object.uris) {
                                if (!Array.isArray(object.uris))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.uris: array expected");
                                message.uris = [];
                                for (var i = 0; i < object.uris.length; ++i)
                                    message.uris[i] = String(object.uris[i]);
                            }
                            if (object.useWildcards != null)
                                message.useWildcards = Boolean(object.useWildcards);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportYumArtifactsGcsSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource} message ImportYumArtifactsGcsSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportYumArtifactsGcsSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.uris = [];
                            if (options.defaults)
                                object.useWildcards = false;
                            if (message.uris && message.uris.length) {
                                object.uris = [];
                                for (var j = 0; j < message.uris.length; ++j)
                                    object.uris[j] = message.uris[j];
                            }
                            if (message.useWildcards != null && message.hasOwnProperty("useWildcards"))
                                object.useWildcards = message.useWildcards;
                            return object;
                        };
    
                        /**
                         * Converts this ImportYumArtifactsGcsSource to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportYumArtifactsGcsSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportYumArtifactsGcsSource
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportYumArtifactsGcsSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource";
                        };
    
                        return ImportYumArtifactsGcsSource;
                    })();
    
                    v1.ImportYumArtifactsRequest = (function() {
    
                        /**
                         * Properties of an ImportYumArtifactsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IImportYumArtifactsRequest
                         * @property {google.devtools.artifactregistry.v1.IImportYumArtifactsGcsSource|null} [gcsSource] ImportYumArtifactsRequest gcsSource
                         * @property {string|null} [parent] ImportYumArtifactsRequest parent
                         */
    
                        /**
                         * Constructs a new ImportYumArtifactsRequest.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an ImportYumArtifactsRequest.
                         * @implements IImportYumArtifactsRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsRequest=} [properties] Properties to set
                         */
                        function ImportYumArtifactsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportYumArtifactsRequest gcsSource.
                         * @member {google.devtools.artifactregistry.v1.IImportYumArtifactsGcsSource|null|undefined} gcsSource
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @instance
                         */
                        ImportYumArtifactsRequest.prototype.gcsSource = null;
    
                        /**
                         * ImportYumArtifactsRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @instance
                         */
                        ImportYumArtifactsRequest.prototype.parent = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportYumArtifactsRequest source.
                         * @member {"gcsSource"|undefined} source
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @instance
                         */
                        Object.defineProperty(ImportYumArtifactsRequest.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsSource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportYumArtifactsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsRequest} ImportYumArtifactsRequest instance
                         */
                        ImportYumArtifactsRequest.create = function create(properties) {
                            return new ImportYumArtifactsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ImportYumArtifactsRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportYumArtifactsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsRequest} message ImportYumArtifactsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportYumArtifactsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.gcsSource != null && Object.hasOwnProperty.call(message, "gcsSource"))
                                $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.encode(message.gcsSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportYumArtifactsRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportYumArtifactsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsRequest} message ImportYumArtifactsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportYumArtifactsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportYumArtifactsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsRequest} ImportYumArtifactsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportYumArtifactsRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ImportYumArtifactsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.gcsSource = $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportYumArtifactsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsRequest} ImportYumArtifactsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportYumArtifactsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportYumArtifactsRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportYumArtifactsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.verify(message.gcsSource);
                                    if (error)
                                        return "gcsSource." + error;
                                }
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportYumArtifactsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsRequest} ImportYumArtifactsRequest
                         */
                        ImportYumArtifactsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ImportYumArtifactsRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ImportYumArtifactsRequest();
                            if (object.gcsSource != null) {
                                if (typeof object.gcsSource !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.ImportYumArtifactsRequest.gcsSource: object expected");
                                message.gcsSource = $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.fromObject(object.gcsSource);
                            }
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportYumArtifactsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ImportYumArtifactsRequest} message ImportYumArtifactsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportYumArtifactsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.parent = "";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                object.gcsSource = $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.toObject(message.gcsSource, options);
                                if (options.oneofs)
                                    object.source = "gcsSource";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ImportYumArtifactsRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportYumArtifactsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportYumArtifactsRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportYumArtifactsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ImportYumArtifactsRequest";
                        };
    
                        return ImportYumArtifactsRequest;
                    })();
    
                    v1.ImportYumArtifactsErrorInfo = (function() {
    
                        /**
                         * Properties of an ImportYumArtifactsErrorInfo.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IImportYumArtifactsErrorInfo
                         * @property {google.devtools.artifactregistry.v1.IImportYumArtifactsGcsSource|null} [gcsSource] ImportYumArtifactsErrorInfo gcsSource
                         * @property {google.rpc.IStatus|null} [error] ImportYumArtifactsErrorInfo error
                         */
    
                        /**
                         * Constructs a new ImportYumArtifactsErrorInfo.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an ImportYumArtifactsErrorInfo.
                         * @implements IImportYumArtifactsErrorInfo
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsErrorInfo=} [properties] Properties to set
                         */
                        function ImportYumArtifactsErrorInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportYumArtifactsErrorInfo gcsSource.
                         * @member {google.devtools.artifactregistry.v1.IImportYumArtifactsGcsSource|null|undefined} gcsSource
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @instance
                         */
                        ImportYumArtifactsErrorInfo.prototype.gcsSource = null;
    
                        /**
                         * ImportYumArtifactsErrorInfo error.
                         * @member {google.rpc.IStatus|null|undefined} error
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @instance
                         */
                        ImportYumArtifactsErrorInfo.prototype.error = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportYumArtifactsErrorInfo source.
                         * @member {"gcsSource"|undefined} source
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @instance
                         */
                        Object.defineProperty(ImportYumArtifactsErrorInfo.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsSource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportYumArtifactsErrorInfo instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsErrorInfo=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo} ImportYumArtifactsErrorInfo instance
                         */
                        ImportYumArtifactsErrorInfo.create = function create(properties) {
                            return new ImportYumArtifactsErrorInfo(properties);
                        };
    
                        /**
                         * Encodes the specified ImportYumArtifactsErrorInfo message. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsErrorInfo} message ImportYumArtifactsErrorInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportYumArtifactsErrorInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsSource != null && Object.hasOwnProperty.call(message, "gcsSource"))
                                $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.encode(message.gcsSource, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportYumArtifactsErrorInfo message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsErrorInfo} message ImportYumArtifactsErrorInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportYumArtifactsErrorInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportYumArtifactsErrorInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo} ImportYumArtifactsErrorInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportYumArtifactsErrorInfo.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsSource = $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportYumArtifactsErrorInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo} ImportYumArtifactsErrorInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportYumArtifactsErrorInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportYumArtifactsErrorInfo message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportYumArtifactsErrorInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.verify(message.gcsSource);
                                    if (error)
                                        return "gcsSource." + error;
                                }
                            }
                            if (message.error != null && message.hasOwnProperty("error")) {
                                var error = $root.google.rpc.Status.verify(message.error);
                                if (error)
                                    return "error." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportYumArtifactsErrorInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo} ImportYumArtifactsErrorInfo
                         */
                        ImportYumArtifactsErrorInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo();
                            if (object.gcsSource != null) {
                                if (typeof object.gcsSource !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo.gcsSource: object expected");
                                message.gcsSource = $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.fromObject(object.gcsSource);
                            }
                            if (object.error != null) {
                                if (typeof object.error !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo.error: object expected");
                                message.error = $root.google.rpc.Status.fromObject(object.error);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportYumArtifactsErrorInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo} message ImportYumArtifactsErrorInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportYumArtifactsErrorInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.error = null;
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                object.gcsSource = $root.google.devtools.artifactregistry.v1.ImportYumArtifactsGcsSource.toObject(message.gcsSource, options);
                                if (options.oneofs)
                                    object.source = "gcsSource";
                            }
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = $root.google.rpc.Status.toObject(message.error, options);
                            return object;
                        };
    
                        /**
                         * Converts this ImportYumArtifactsErrorInfo to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportYumArtifactsErrorInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportYumArtifactsErrorInfo
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportYumArtifactsErrorInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo";
                        };
    
                        return ImportYumArtifactsErrorInfo;
                    })();
    
                    v1.ImportYumArtifactsResponse = (function() {
    
                        /**
                         * Properties of an ImportYumArtifactsResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IImportYumArtifactsResponse
                         * @property {Array.<google.devtools.artifactregistry.v1.IYumArtifact>|null} [yumArtifacts] ImportYumArtifactsResponse yumArtifacts
                         * @property {Array.<google.devtools.artifactregistry.v1.IImportYumArtifactsErrorInfo>|null} [errors] ImportYumArtifactsResponse errors
                         */
    
                        /**
                         * Constructs a new ImportYumArtifactsResponse.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an ImportYumArtifactsResponse.
                         * @implements IImportYumArtifactsResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsResponse=} [properties] Properties to set
                         */
                        function ImportYumArtifactsResponse(properties) {
                            this.yumArtifacts = [];
                            this.errors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportYumArtifactsResponse yumArtifacts.
                         * @member {Array.<google.devtools.artifactregistry.v1.IYumArtifact>} yumArtifacts
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsResponse
                         * @instance
                         */
                        ImportYumArtifactsResponse.prototype.yumArtifacts = $util.emptyArray;
    
                        /**
                         * ImportYumArtifactsResponse errors.
                         * @member {Array.<google.devtools.artifactregistry.v1.IImportYumArtifactsErrorInfo>} errors
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsResponse
                         * @instance
                         */
                        ImportYumArtifactsResponse.prototype.errors = $util.emptyArray;
    
                        /**
                         * Creates a new ImportYumArtifactsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsResponse} ImportYumArtifactsResponse instance
                         */
                        ImportYumArtifactsResponse.create = function create(properties) {
                            return new ImportYumArtifactsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ImportYumArtifactsResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportYumArtifactsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsResponse} message ImportYumArtifactsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportYumArtifactsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.yumArtifacts != null && message.yumArtifacts.length)
                                for (var i = 0; i < message.yumArtifacts.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.YumArtifact.encode(message.yumArtifacts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.errors != null && message.errors.length)
                                for (var i = 0; i < message.errors.length; ++i)
                                    $root.google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo.encode(message.errors[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportYumArtifactsResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportYumArtifactsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsResponse} message ImportYumArtifactsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportYumArtifactsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportYumArtifactsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsResponse} ImportYumArtifactsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportYumArtifactsResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ImportYumArtifactsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.yumArtifacts && message.yumArtifacts.length))
                                            message.yumArtifacts = [];
                                        message.yumArtifacts.push($root.google.devtools.artifactregistry.v1.YumArtifact.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportYumArtifactsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsResponse} ImportYumArtifactsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportYumArtifactsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportYumArtifactsResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportYumArtifactsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.yumArtifacts != null && message.hasOwnProperty("yumArtifacts")) {
                                if (!Array.isArray(message.yumArtifacts))
                                    return "yumArtifacts: array expected";
                                for (var i = 0; i < message.yumArtifacts.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.YumArtifact.verify(message.yumArtifacts[i]);
                                    if (error)
                                        return "yumArtifacts." + error;
                                }
                            }
                            if (message.errors != null && message.hasOwnProperty("errors")) {
                                if (!Array.isArray(message.errors))
                                    return "errors: array expected";
                                for (var i = 0; i < message.errors.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo.verify(message.errors[i]);
                                    if (error)
                                        return "errors." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportYumArtifactsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsResponse} ImportYumArtifactsResponse
                         */
                        ImportYumArtifactsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ImportYumArtifactsResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1.ImportYumArtifactsResponse();
                            if (object.yumArtifacts) {
                                if (!Array.isArray(object.yumArtifacts))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ImportYumArtifactsResponse.yumArtifacts: array expected");
                                message.yumArtifacts = [];
                                for (var i = 0; i < object.yumArtifacts.length; ++i) {
                                    if (typeof object.yumArtifacts[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ImportYumArtifactsResponse.yumArtifacts: object expected");
                                    message.yumArtifacts[i] = $root.google.devtools.artifactregistry.v1.YumArtifact.fromObject(object.yumArtifacts[i]);
                                }
                            }
                            if (object.errors) {
                                if (!Array.isArray(object.errors))
                                    throw TypeError(".google.devtools.artifactregistry.v1.ImportYumArtifactsResponse.errors: array expected");
                                message.errors = [];
                                for (var i = 0; i < object.errors.length; ++i) {
                                    if (typeof object.errors[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1.ImportYumArtifactsResponse.errors: object expected");
                                    message.errors[i] = $root.google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo.fromObject(object.errors[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportYumArtifactsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ImportYumArtifactsResponse} message ImportYumArtifactsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportYumArtifactsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.yumArtifacts = [];
                                object.errors = [];
                            }
                            if (message.yumArtifacts && message.yumArtifacts.length) {
                                object.yumArtifacts = [];
                                for (var j = 0; j < message.yumArtifacts.length; ++j)
                                    object.yumArtifacts[j] = $root.google.devtools.artifactregistry.v1.YumArtifact.toObject(message.yumArtifacts[j], options);
                            }
                            if (message.errors && message.errors.length) {
                                object.errors = [];
                                for (var j = 0; j < message.errors.length; ++j)
                                    object.errors[j] = $root.google.devtools.artifactregistry.v1.ImportYumArtifactsErrorInfo.toObject(message.errors[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ImportYumArtifactsResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportYumArtifactsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportYumArtifactsResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportYumArtifactsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ImportYumArtifactsResponse";
                        };
    
                        return ImportYumArtifactsResponse;
                    })();
    
                    v1.ImportYumArtifactsMetadata = (function() {
    
                        /**
                         * Properties of an ImportYumArtifactsMetadata.
                         * @memberof google.devtools.artifactregistry.v1
                         * @interface IImportYumArtifactsMetadata
                         */
    
                        /**
                         * Constructs a new ImportYumArtifactsMetadata.
                         * @memberof google.devtools.artifactregistry.v1
                         * @classdesc Represents an ImportYumArtifactsMetadata.
                         * @implements IImportYumArtifactsMetadata
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsMetadata=} [properties] Properties to set
                         */
                        function ImportYumArtifactsMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new ImportYumArtifactsMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsMetadata=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata} ImportYumArtifactsMetadata instance
                         */
                        ImportYumArtifactsMetadata.create = function create(properties) {
                            return new ImportYumArtifactsMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ImportYumArtifactsMetadata message. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsMetadata} message ImportYumArtifactsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportYumArtifactsMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportYumArtifactsMetadata message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.IImportYumArtifactsMetadata} message ImportYumArtifactsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportYumArtifactsMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportYumArtifactsMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata} ImportYumArtifactsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportYumArtifactsMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportYumArtifactsMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata} ImportYumArtifactsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportYumArtifactsMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportYumArtifactsMetadata message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportYumArtifactsMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportYumArtifactsMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata} ImportYumArtifactsMetadata
                         */
                        ImportYumArtifactsMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata)
                                return object;
                            return new $root.google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata();
                        };
    
                        /**
                         * Creates a plain object from an ImportYumArtifactsMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata} message ImportYumArtifactsMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportYumArtifactsMetadata.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this ImportYumArtifactsMetadata to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportYumArtifactsMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportYumArtifactsMetadata
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportYumArtifactsMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1.ImportYumArtifactsMetadata";
                        };
    
                        return ImportYumArtifactsMetadata;
                    })();
    
                    return v1;
                })();
    
                artifactregistry.v1beta2 = (function() {
    
                    /**
                     * Namespace v1beta2.
                     * @memberof google.devtools.artifactregistry
                     * @namespace
                     */
                    var v1beta2 = {};
    
                    v1beta2.AptArtifact = (function() {
    
                        /**
                         * Properties of an AptArtifact.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @interface IAptArtifact
                         * @property {string|null} [name] AptArtifact name
                         * @property {string|null} [packageName] AptArtifact packageName
                         * @property {google.devtools.artifactregistry.v1beta2.AptArtifact.PackageType|null} [packageType] AptArtifact packageType
                         * @property {string|null} [architecture] AptArtifact architecture
                         * @property {string|null} [component] AptArtifact component
                         * @property {Uint8Array|null} [controlFile] AptArtifact controlFile
                         */
    
                        /**
                         * Constructs a new AptArtifact.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @classdesc Represents an AptArtifact.
                         * @implements IAptArtifact
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1beta2.IAptArtifact=} [properties] Properties to set
                         */
                        function AptArtifact(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AptArtifact name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @instance
                         */
                        AptArtifact.prototype.name = "";
    
                        /**
                         * AptArtifact packageName.
                         * @member {string} packageName
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @instance
                         */
                        AptArtifact.prototype.packageName = "";
    
                        /**
                         * AptArtifact packageType.
                         * @member {google.devtools.artifactregistry.v1beta2.AptArtifact.PackageType} packageType
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @instance
                         */
                        AptArtifact.prototype.packageType = 0;
    
                        /**
                         * AptArtifact architecture.
                         * @member {string} architecture
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @instance
                         */
                        AptArtifact.prototype.architecture = "";
    
                        /**
                         * AptArtifact component.
                         * @member {string} component
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @instance
                         */
                        AptArtifact.prototype.component = "";
    
                        /**
                         * AptArtifact controlFile.
                         * @member {Uint8Array} controlFile
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @instance
                         */
                        AptArtifact.prototype.controlFile = $util.newBuffer([]);
    
                        /**
                         * Creates a new AptArtifact instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IAptArtifact=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1beta2.AptArtifact} AptArtifact instance
                         */
                        AptArtifact.create = function create(properties) {
                            return new AptArtifact(properties);
                        };
    
                        /**
                         * Encodes the specified AptArtifact message. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.AptArtifact.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IAptArtifact} message AptArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AptArtifact.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.packageName != null && Object.hasOwnProperty.call(message, "packageName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.packageName);
                            if (message.packageType != null && Object.hasOwnProperty.call(message, "packageType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.packageType);
                            if (message.architecture != null && Object.hasOwnProperty.call(message, "architecture"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.architecture);
                            if (message.component != null && Object.hasOwnProperty.call(message, "component"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.component);
                            if (message.controlFile != null && Object.hasOwnProperty.call(message, "controlFile"))
                                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.controlFile);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AptArtifact message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.AptArtifact.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IAptArtifact} message AptArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AptArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AptArtifact message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1beta2.AptArtifact} AptArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AptArtifact.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1beta2.AptArtifact();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.packageName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.packageType = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.architecture = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.component = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.controlFile = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AptArtifact message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1beta2.AptArtifact} AptArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AptArtifact.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AptArtifact message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AptArtifact.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.packageName != null && message.hasOwnProperty("packageName"))
                                if (!$util.isString(message.packageName))
                                    return "packageName: string expected";
                            if (message.packageType != null && message.hasOwnProperty("packageType"))
                                switch (message.packageType) {
                                default:
                                    return "packageType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.architecture != null && message.hasOwnProperty("architecture"))
                                if (!$util.isString(message.architecture))
                                    return "architecture: string expected";
                            if (message.component != null && message.hasOwnProperty("component"))
                                if (!$util.isString(message.component))
                                    return "component: string expected";
                            if (message.controlFile != null && message.hasOwnProperty("controlFile"))
                                if (!(message.controlFile && typeof message.controlFile.length === "number" || $util.isString(message.controlFile)))
                                    return "controlFile: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates an AptArtifact message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1beta2.AptArtifact} AptArtifact
                         */
                        AptArtifact.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1beta2.AptArtifact)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1beta2.AptArtifact();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.packageName != null)
                                message.packageName = String(object.packageName);
                            switch (object.packageType) {
                            default:
                                if (typeof object.packageType === "number") {
                                    message.packageType = object.packageType;
                                    break;
                                }
                                break;
                            case "PACKAGE_TYPE_UNSPECIFIED":
                            case 0:
                                message.packageType = 0;
                                break;
                            case "BINARY":
                            case 1:
                                message.packageType = 1;
                                break;
                            case "SOURCE":
                            case 2:
                                message.packageType = 2;
                                break;
                            }
                            if (object.architecture != null)
                                message.architecture = String(object.architecture);
                            if (object.component != null)
                                message.component = String(object.component);
                            if (object.controlFile != null)
                                if (typeof object.controlFile === "string")
                                    $util.base64.decode(object.controlFile, message.controlFile = $util.newBuffer($util.base64.length(object.controlFile)), 0);
                                else if (object.controlFile.length >= 0)
                                    message.controlFile = object.controlFile;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AptArtifact message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.AptArtifact} message AptArtifact
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AptArtifact.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.packageName = "";
                                object.packageType = options.enums === String ? "PACKAGE_TYPE_UNSPECIFIED" : 0;
                                object.architecture = "";
                                object.component = "";
                                if (options.bytes === String)
                                    object.controlFile = "";
                                else {
                                    object.controlFile = [];
                                    if (options.bytes !== Array)
                                        object.controlFile = $util.newBuffer(object.controlFile);
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.packageName != null && message.hasOwnProperty("packageName"))
                                object.packageName = message.packageName;
                            if (message.packageType != null && message.hasOwnProperty("packageType"))
                                object.packageType = options.enums === String ? $root.google.devtools.artifactregistry.v1beta2.AptArtifact.PackageType[message.packageType] === undefined ? message.packageType : $root.google.devtools.artifactregistry.v1beta2.AptArtifact.PackageType[message.packageType] : message.packageType;
                            if (message.architecture != null && message.hasOwnProperty("architecture"))
                                object.architecture = message.architecture;
                            if (message.component != null && message.hasOwnProperty("component"))
                                object.component = message.component;
                            if (message.controlFile != null && message.hasOwnProperty("controlFile"))
                                object.controlFile = options.bytes === String ? $util.base64.encode(message.controlFile, 0, message.controlFile.length) : options.bytes === Array ? Array.prototype.slice.call(message.controlFile) : message.controlFile;
                            return object;
                        };
    
                        /**
                         * Converts this AptArtifact to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AptArtifact.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AptArtifact
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1beta2.AptArtifact
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AptArtifact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1beta2.AptArtifact";
                        };
    
                        /**
                         * PackageType enum.
                         * @name google.devtools.artifactregistry.v1beta2.AptArtifact.PackageType
                         * @enum {number}
                         * @property {number} PACKAGE_TYPE_UNSPECIFIED=0 PACKAGE_TYPE_UNSPECIFIED value
                         * @property {number} BINARY=1 BINARY value
                         * @property {number} SOURCE=2 SOURCE value
                         */
                        AptArtifact.PackageType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "PACKAGE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BINARY"] = 1;
                            values[valuesById[2] = "SOURCE"] = 2;
                            return values;
                        })();
    
                        return AptArtifact;
                    })();
    
                    v1beta2.ImportAptArtifactsGcsSource = (function() {
    
                        /**
                         * Properties of an ImportAptArtifactsGcsSource.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @interface IImportAptArtifactsGcsSource
                         * @property {Array.<string>|null} [uris] ImportAptArtifactsGcsSource uris
                         * @property {boolean|null} [useWildcards] ImportAptArtifactsGcsSource useWildcards
                         */
    
                        /**
                         * Constructs a new ImportAptArtifactsGcsSource.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @classdesc Represents an ImportAptArtifactsGcsSource.
                         * @implements IImportAptArtifactsGcsSource
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsGcsSource=} [properties] Properties to set
                         */
                        function ImportAptArtifactsGcsSource(properties) {
                            this.uris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportAptArtifactsGcsSource uris.
                         * @member {Array.<string>} uris
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource
                         * @instance
                         */
                        ImportAptArtifactsGcsSource.prototype.uris = $util.emptyArray;
    
                        /**
                         * ImportAptArtifactsGcsSource useWildcards.
                         * @member {boolean} useWildcards
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource
                         * @instance
                         */
                        ImportAptArtifactsGcsSource.prototype.useWildcards = false;
    
                        /**
                         * Creates a new ImportAptArtifactsGcsSource instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsGcsSource=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource} ImportAptArtifactsGcsSource instance
                         */
                        ImportAptArtifactsGcsSource.create = function create(properties) {
                            return new ImportAptArtifactsGcsSource(properties);
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsGcsSource message. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsGcsSource} message ImportAptArtifactsGcsSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsGcsSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uris != null && message.uris.length)
                                for (var i = 0; i < message.uris.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.uris[i]);
                            if (message.useWildcards != null && Object.hasOwnProperty.call(message, "useWildcards"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.useWildcards);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsGcsSource message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsGcsSource} message ImportAptArtifactsGcsSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsGcsSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsGcsSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource} ImportAptArtifactsGcsSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsGcsSource.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.uris && message.uris.length))
                                            message.uris = [];
                                        message.uris.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        message.useWildcards = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsGcsSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource} ImportAptArtifactsGcsSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsGcsSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportAptArtifactsGcsSource message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportAptArtifactsGcsSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uris != null && message.hasOwnProperty("uris")) {
                                if (!Array.isArray(message.uris))
                                    return "uris: array expected";
                                for (var i = 0; i < message.uris.length; ++i)
                                    if (!$util.isString(message.uris[i]))
                                        return "uris: string[] expected";
                            }
                            if (message.useWildcards != null && message.hasOwnProperty("useWildcards"))
                                if (typeof message.useWildcards !== "boolean")
                                    return "useWildcards: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportAptArtifactsGcsSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource} ImportAptArtifactsGcsSource
                         */
                        ImportAptArtifactsGcsSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource();
                            if (object.uris) {
                                if (!Array.isArray(object.uris))
                                    throw TypeError(".google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.uris: array expected");
                                message.uris = [];
                                for (var i = 0; i < object.uris.length; ++i)
                                    message.uris[i] = String(object.uris[i]);
                            }
                            if (object.useWildcards != null)
                                message.useWildcards = Boolean(object.useWildcards);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportAptArtifactsGcsSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource} message ImportAptArtifactsGcsSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportAptArtifactsGcsSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.uris = [];
                            if (options.defaults)
                                object.useWildcards = false;
                            if (message.uris && message.uris.length) {
                                object.uris = [];
                                for (var j = 0; j < message.uris.length; ++j)
                                    object.uris[j] = message.uris[j];
                            }
                            if (message.useWildcards != null && message.hasOwnProperty("useWildcards"))
                                object.useWildcards = message.useWildcards;
                            return object;
                        };
    
                        /**
                         * Converts this ImportAptArtifactsGcsSource to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportAptArtifactsGcsSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportAptArtifactsGcsSource
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportAptArtifactsGcsSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource";
                        };
    
                        return ImportAptArtifactsGcsSource;
                    })();
    
                    v1beta2.ImportAptArtifactsRequest = (function() {
    
                        /**
                         * Properties of an ImportAptArtifactsRequest.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @interface IImportAptArtifactsRequest
                         * @property {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsGcsSource|null} [gcsSource] ImportAptArtifactsRequest gcsSource
                         * @property {string|null} [parent] ImportAptArtifactsRequest parent
                         */
    
                        /**
                         * Constructs a new ImportAptArtifactsRequest.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @classdesc Represents an ImportAptArtifactsRequest.
                         * @implements IImportAptArtifactsRequest
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsRequest=} [properties] Properties to set
                         */
                        function ImportAptArtifactsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportAptArtifactsRequest gcsSource.
                         * @member {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsGcsSource|null|undefined} gcsSource
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @instance
                         */
                        ImportAptArtifactsRequest.prototype.gcsSource = null;
    
                        /**
                         * ImportAptArtifactsRequest parent.
                         * @member {string} parent
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @instance
                         */
                        ImportAptArtifactsRequest.prototype.parent = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportAptArtifactsRequest source.
                         * @member {"gcsSource"|undefined} source
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @instance
                         */
                        Object.defineProperty(ImportAptArtifactsRequest.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsSource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportAptArtifactsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsRequest=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest} ImportAptArtifactsRequest instance
                         */
                        ImportAptArtifactsRequest.create = function create(properties) {
                            return new ImportAptArtifactsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsRequest message. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsRequest} message ImportAptArtifactsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.gcsSource != null && Object.hasOwnProperty.call(message, "gcsSource"))
                                $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.encode(message.gcsSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsRequest message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsRequest} message ImportAptArtifactsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest} ImportAptArtifactsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsRequest.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 2: {
                                        message.gcsSource = $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest} ImportAptArtifactsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportAptArtifactsRequest message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportAptArtifactsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.verify(message.gcsSource);
                                    if (error)
                                        return "gcsSource." + error;
                                }
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportAptArtifactsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest} ImportAptArtifactsRequest
                         */
                        ImportAptArtifactsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest();
                            if (object.gcsSource != null) {
                                if (typeof object.gcsSource !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest.gcsSource: object expected");
                                message.gcsSource = $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.fromObject(object.gcsSource);
                            }
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportAptArtifactsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest} message ImportAptArtifactsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportAptArtifactsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.parent = "";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                object.gcsSource = $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.toObject(message.gcsSource, options);
                                if (options.oneofs)
                                    object.source = "gcsSource";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ImportAptArtifactsRequest to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportAptArtifactsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportAptArtifactsRequest
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportAptArtifactsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1beta2.ImportAptArtifactsRequest";
                        };
    
                        return ImportAptArtifactsRequest;
                    })();
    
                    v1beta2.ImportAptArtifactsErrorInfo = (function() {
    
                        /**
                         * Properties of an ImportAptArtifactsErrorInfo.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @interface IImportAptArtifactsErrorInfo
                         * @property {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsGcsSource|null} [gcsSource] ImportAptArtifactsErrorInfo gcsSource
                         * @property {google.rpc.IStatus|null} [error] ImportAptArtifactsErrorInfo error
                         */
    
                        /**
                         * Constructs a new ImportAptArtifactsErrorInfo.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @classdesc Represents an ImportAptArtifactsErrorInfo.
                         * @implements IImportAptArtifactsErrorInfo
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsErrorInfo=} [properties] Properties to set
                         */
                        function ImportAptArtifactsErrorInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportAptArtifactsErrorInfo gcsSource.
                         * @member {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsGcsSource|null|undefined} gcsSource
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @instance
                         */
                        ImportAptArtifactsErrorInfo.prototype.gcsSource = null;
    
                        /**
                         * ImportAptArtifactsErrorInfo error.
                         * @member {google.rpc.IStatus|null|undefined} error
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @instance
                         */
                        ImportAptArtifactsErrorInfo.prototype.error = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ImportAptArtifactsErrorInfo source.
                         * @member {"gcsSource"|undefined} source
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @instance
                         */
                        Object.defineProperty(ImportAptArtifactsErrorInfo.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsSource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ImportAptArtifactsErrorInfo instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsErrorInfo=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo} ImportAptArtifactsErrorInfo instance
                         */
                        ImportAptArtifactsErrorInfo.create = function create(properties) {
                            return new ImportAptArtifactsErrorInfo(properties);
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsErrorInfo message. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsErrorInfo} message ImportAptArtifactsErrorInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsErrorInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsSource != null && Object.hasOwnProperty.call(message, "gcsSource"))
                                $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.encode(message.gcsSource, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsErrorInfo message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsErrorInfo} message ImportAptArtifactsErrorInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsErrorInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsErrorInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo} ImportAptArtifactsErrorInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsErrorInfo.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsSource = $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsErrorInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo} ImportAptArtifactsErrorInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsErrorInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportAptArtifactsErrorInfo message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportAptArtifactsErrorInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.verify(message.gcsSource);
                                    if (error)
                                        return "gcsSource." + error;
                                }
                            }
                            if (message.error != null && message.hasOwnProperty("error")) {
                                var error = $root.google.rpc.Status.verify(message.error);
                                if (error)
                                    return "error." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportAptArtifactsErrorInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo} ImportAptArtifactsErrorInfo
                         */
                        ImportAptArtifactsErrorInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo();
                            if (object.gcsSource != null) {
                                if (typeof object.gcsSource !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo.gcsSource: object expected");
                                message.gcsSource = $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.fromObject(object.gcsSource);
                            }
                            if (object.error != null) {
                                if (typeof object.error !== "object")
                                    throw TypeError(".google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo.error: object expected");
                                message.error = $root.google.rpc.Status.fromObject(object.error);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportAptArtifactsErrorInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo} message ImportAptArtifactsErrorInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportAptArtifactsErrorInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.error = null;
                            if (message.gcsSource != null && message.hasOwnProperty("gcsSource")) {
                                object.gcsSource = $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsGcsSource.toObject(message.gcsSource, options);
                                if (options.oneofs)
                                    object.source = "gcsSource";
                            }
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = $root.google.rpc.Status.toObject(message.error, options);
                            return object;
                        };
    
                        /**
                         * Converts this ImportAptArtifactsErrorInfo to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportAptArtifactsErrorInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportAptArtifactsErrorInfo
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportAptArtifactsErrorInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo";
                        };
    
                        return ImportAptArtifactsErrorInfo;
                    })();
    
                    v1beta2.ImportAptArtifactsResponse = (function() {
    
                        /**
                         * Properties of an ImportAptArtifactsResponse.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @interface IImportAptArtifactsResponse
                         * @property {Array.<google.devtools.artifactregistry.v1beta2.IAptArtifact>|null} [aptArtifacts] ImportAptArtifactsResponse aptArtifacts
                         * @property {Array.<google.devtools.artifactregistry.v1beta2.IImportAptArtifactsErrorInfo>|null} [errors] ImportAptArtifactsResponse errors
                         */
    
                        /**
                         * Constructs a new ImportAptArtifactsResponse.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @classdesc Represents an ImportAptArtifactsResponse.
                         * @implements IImportAptArtifactsResponse
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsResponse=} [properties] Properties to set
                         */
                        function ImportAptArtifactsResponse(properties) {
                            this.aptArtifacts = [];
                            this.errors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportAptArtifactsResponse aptArtifacts.
                         * @member {Array.<google.devtools.artifactregistry.v1beta2.IAptArtifact>} aptArtifacts
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse
                         * @instance
                         */
                        ImportAptArtifactsResponse.prototype.aptArtifacts = $util.emptyArray;
    
                        /**
                         * ImportAptArtifactsResponse errors.
                         * @member {Array.<google.devtools.artifactregistry.v1beta2.IImportAptArtifactsErrorInfo>} errors
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse
                         * @instance
                         */
                        ImportAptArtifactsResponse.prototype.errors = $util.emptyArray;
    
                        /**
                         * Creates a new ImportAptArtifactsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsResponse=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse} ImportAptArtifactsResponse instance
                         */
                        ImportAptArtifactsResponse.create = function create(properties) {
                            return new ImportAptArtifactsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsResponse message. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsResponse} message ImportAptArtifactsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.aptArtifacts != null && message.aptArtifacts.length)
                                for (var i = 0; i < message.aptArtifacts.length; ++i)
                                    $root.google.devtools.artifactregistry.v1beta2.AptArtifact.encode(message.aptArtifacts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.errors != null && message.errors.length)
                                for (var i = 0; i < message.errors.length; ++i)
                                    $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo.encode(message.errors[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsResponse message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsResponse} message ImportAptArtifactsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse} ImportAptArtifactsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsResponse.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.aptArtifacts && message.aptArtifacts.length))
                                            message.aptArtifacts = [];
                                        message.aptArtifacts.push($root.google.devtools.artifactregistry.v1beta2.AptArtifact.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse} ImportAptArtifactsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportAptArtifactsResponse message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportAptArtifactsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.aptArtifacts != null && message.hasOwnProperty("aptArtifacts")) {
                                if (!Array.isArray(message.aptArtifacts))
                                    return "aptArtifacts: array expected";
                                for (var i = 0; i < message.aptArtifacts.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1beta2.AptArtifact.verify(message.aptArtifacts[i]);
                                    if (error)
                                        return "aptArtifacts." + error;
                                }
                            }
                            if (message.errors != null && message.hasOwnProperty("errors")) {
                                if (!Array.isArray(message.errors))
                                    return "errors: array expected";
                                for (var i = 0; i < message.errors.length; ++i) {
                                    var error = $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo.verify(message.errors[i]);
                                    if (error)
                                        return "errors." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportAptArtifactsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse} ImportAptArtifactsResponse
                         */
                        ImportAptArtifactsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse();
                            if (object.aptArtifacts) {
                                if (!Array.isArray(object.aptArtifacts))
                                    throw TypeError(".google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse.aptArtifacts: array expected");
                                message.aptArtifacts = [];
                                for (var i = 0; i < object.aptArtifacts.length; ++i) {
                                    if (typeof object.aptArtifacts[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse.aptArtifacts: object expected");
                                    message.aptArtifacts[i] = $root.google.devtools.artifactregistry.v1beta2.AptArtifact.fromObject(object.aptArtifacts[i]);
                                }
                            }
                            if (object.errors) {
                                if (!Array.isArray(object.errors))
                                    throw TypeError(".google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse.errors: array expected");
                                message.errors = [];
                                for (var i = 0; i < object.errors.length; ++i) {
                                    if (typeof object.errors[i] !== "object")
                                        throw TypeError(".google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse.errors: object expected");
                                    message.errors[i] = $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo.fromObject(object.errors[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportAptArtifactsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse} message ImportAptArtifactsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportAptArtifactsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.aptArtifacts = [];
                                object.errors = [];
                            }
                            if (message.aptArtifacts && message.aptArtifacts.length) {
                                object.aptArtifacts = [];
                                for (var j = 0; j < message.aptArtifacts.length; ++j)
                                    object.aptArtifacts[j] = $root.google.devtools.artifactregistry.v1beta2.AptArtifact.toObject(message.aptArtifacts[j], options);
                            }
                            if (message.errors && message.errors.length) {
                                object.errors = [];
                                for (var j = 0; j < message.errors.length; ++j)
                                    object.errors[j] = $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsErrorInfo.toObject(message.errors[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ImportAptArtifactsResponse to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportAptArtifactsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportAptArtifactsResponse
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportAptArtifactsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1beta2.ImportAptArtifactsResponse";
                        };
    
                        return ImportAptArtifactsResponse;
                    })();
    
                    v1beta2.ImportAptArtifactsMetadata = (function() {
    
                        /**
                         * Properties of an ImportAptArtifactsMetadata.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @interface IImportAptArtifactsMetadata
                         */
    
                        /**
                         * Constructs a new ImportAptArtifactsMetadata.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @classdesc Represents an ImportAptArtifactsMetadata.
                         * @implements IImportAptArtifactsMetadata
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsMetadata=} [properties] Properties to set
                         */
                        function ImportAptArtifactsMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new ImportAptArtifactsMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsMetadata=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata} ImportAptArtifactsMetadata instance
                         */
                        ImportAptArtifactsMetadata.create = function create(properties) {
                            return new ImportAptArtifactsMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsMetadata message. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsMetadata} message ImportAptArtifactsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportAptArtifactsMetadata message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IImportAptArtifactsMetadata} message ImportAptArtifactsMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportAptArtifactsMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata} ImportAptArtifactsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsMetadata.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportAptArtifactsMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata} ImportAptArtifactsMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportAptArtifactsMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportAptArtifactsMetadata message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportAptArtifactsMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an ImportAptArtifactsMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata} ImportAptArtifactsMetadata
                         */
                        ImportAptArtifactsMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata)
                                return object;
                            return new $root.google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata();
                        };
    
                        /**
                         * Creates a plain object from an ImportAptArtifactsMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata} message ImportAptArtifactsMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportAptArtifactsMetadata.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this ImportAptArtifactsMetadata to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportAptArtifactsMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ImportAptArtifactsMetadata
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ImportAptArtifactsMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1beta2.ImportAptArtifactsMetadata";
                        };
    
                        return ImportAptArtifactsMetadata;
                    })();
    
                    v1beta2.Hash = (function() {
    
                        /**
                         * Properties of a Hash.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @interface IHash
                         * @property {google.devtools.artifactregistry.v1beta2.Hash.HashType|null} [type] Hash type
                         * @property {Uint8Array|null} [value] Hash value
                         */
    
                        /**
                         * Constructs a new Hash.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @classdesc Represents a Hash.
                         * @implements IHash
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1beta2.IHash=} [properties] Properties to set
                         */
                        function Hash(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Hash type.
                         * @member {google.devtools.artifactregistry.v1beta2.Hash.HashType} type
                         * @memberof google.devtools.artifactregistry.v1beta2.Hash
                         * @instance
                         */
                        Hash.prototype.type = 0;
    
                        /**
                         * Hash value.
                         * @member {Uint8Array} value
                         * @memberof google.devtools.artifactregistry.v1beta2.Hash
                         * @instance
                         */
                        Hash.prototype.value = $util.newBuffer([]);
    
                        /**
                         * Creates a new Hash instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1beta2.Hash
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IHash=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1beta2.Hash} Hash instance
                         */
                        Hash.create = function create(properties) {
                            return new Hash(properties);
                        };
    
                        /**
                         * Encodes the specified Hash message. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.Hash.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1beta2.Hash
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IHash} message Hash message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Hash.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Hash message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.Hash.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.Hash
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IHash} message Hash message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Hash.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Hash message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1beta2.Hash
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1beta2.Hash} Hash
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Hash.decode = function decode(reader, length, error) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.devtools.artifactregistry.v1beta2.Hash();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                if (tag === error)
                                    break;
                                switch (tag >>> 3) {
                                case 1: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.value = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Hash message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.Hash
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.devtools.artifactregistry.v1beta2.Hash} Hash
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Hash.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Hash message.
                         * @function verify
                         * @memberof google.devtools.artifactregistry.v1beta2.Hash
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Hash.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.value != null && message.hasOwnProperty("value"))
                                if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                                    return "value: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates a Hash message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.devtools.artifactregistry.v1beta2.Hash
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.devtools.artifactregistry.v1beta2.Hash} Hash
                         */
                        Hash.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.devtools.artifactregistry.v1beta2.Hash)
                                return object;
                            var message = new $root.google.devtools.artifactregistry.v1beta2.Hash();
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "HASH_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "SHA256":
                            case 1:
                                message.type = 1;
                                break;
                            case "MD5":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.value != null)
                                if (typeof object.value === "string")
                                    $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                                else if (object.value.length >= 0)
                                    message.value = object.value;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Hash message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.devtools.artifactregistry.v1beta2.Hash
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.Hash} message Hash
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Hash.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = options.enums === String ? "HASH_TYPE_UNSPECIFIED" : 0;
                                if (options.bytes === String)
                                    object.value = "";
                                else {
                                    object.value = [];
                                    if (options.bytes !== Array)
                                        object.value = $util.newBuffer(object.value);
                                }
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.devtools.artifactregistry.v1beta2.Hash.HashType[message.type] === undefined ? message.type : $root.google.devtools.artifactregistry.v1beta2.Hash.HashType[message.type] : message.type;
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                            return object;
                        };
    
                        /**
                         * Converts this Hash to JSON.
                         * @function toJSON
                         * @memberof google.devtools.artifactregistry.v1beta2.Hash
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Hash.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Hash
                         * @function getTypeUrl
                         * @memberof google.devtools.artifactregistry.v1beta2.Hash
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Hash.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.devtools.artifactregistry.v1beta2.Hash";
                        };
    
                        /**
                         * HashType enum.
                         * @name google.devtools.artifactregistry.v1beta2.Hash.HashType
                         * @enum {number}
                         * @property {number} HASH_TYPE_UNSPECIFIED=0 HASH_TYPE_UNSPECIFIED value
                         * @property {number} SHA256=1 SHA256 value
                         * @property {number} MD5=2 MD5 value
                         */
                        Hash.HashType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "HASH_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SHA256"] = 1;
                            values[valuesById[2] = "MD5"] = 2;
                            return values;
                        })();
    
                        return Hash;
                    })();
    
                    v1beta2.File = (function() {
    
                        /**
                         * Properties of a File.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @interface IFile
                         * @property {string|null} [name] File name
                         * @property {number|Long|null} [sizeBytes] File sizeBytes
                         * @property {Array.<google.devtools.artifactregistry.v1beta2.IHash>|null} [hashes] File hashes
                         * @property {google.protobuf.ITimestamp|null} [createTime] File createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] File updateTime
                         * @property {string|null} [owner] File owner
                         */
    
                        /**
                         * Constructs a new File.
                         * @memberof google.devtools.artifactregistry.v1beta2
                         * @classdesc Represents a File.
                         * @implements IFile
                         * @constructor
                         * @param {google.devtools.artifactregistry.v1beta2.IFile=} [properties] Properties to set
                         */
                        function File(properties) {
                            this.hashes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * File name.
                         * @member {string} name
                         * @memberof google.devtools.artifactregistry.v1beta2.File
                         * @instance
                         */
                        File.prototype.name = "";
    
                        /**
                         * File sizeBytes.
                         * @member {number|Long} sizeBytes
                         * @memberof google.devtools.artifactregistry.v1beta2.File
                         * @instance
                         */
                        File.prototype.sizeBytes = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * File hashes.
                         * @member {Array.<google.devtools.artifactregistry.v1beta2.IHash>} hashes
                         * @memberof google.devtools.artifactregistry.v1beta2.File
                         * @instance
                         */
                        File.prototype.hashes = $util.emptyArray;
    
                        /**
                         * File createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.devtools.artifactregistry.v1beta2.File
                         * @instance
                         */
                        File.prototype.createTime = null;
    
                        /**
                         * File updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.devtools.artifactregistry.v1beta2.File
                         * @instance
                         */
                        File.prototype.updateTime = null;
    
                        /**
                         * File owner.
                         * @member {string} owner
                         * @memberof google.devtools.artifactregistry.v1beta2.File
                         * @instance
                         */
                        File.prototype.owner = "";
    
                        /**
                         * Creates a new File instance using the specified properties.
                         * @function create
                         * @memberof google.devtools.artifactregistry.v1beta2.File
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IFile=} [properties] Properties to set
                         * @returns {google.devtools.artifactregistry.v1beta2.File} File instance
                         */
                        File.create = function create(properties) {
                            return new File(properties);
                        };
    
                        /**
                         * Encodes the specified File message. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.File.verify|verify} messages.
                         * @function encode
                         * @memberof google.devtools.artifactregistry.v1beta2.File
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IFile} message File message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        File.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.sizeBytes != null && Object.hasOwnProperty.call(message, "sizeBytes"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.sizeBytes);
                            if (message.hashes != null && message.hashes.length)
                                for (var i = 0; i < message.hashes.length; ++i)
                                    $root.google.devtools.artifactregistry.v1beta2.Hash.encode(message.hashes[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.owner != null && Object.hasOwnProperty.call(message, "owner"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.owner);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified File message, length delimited. Does not implicitly {@link google.devtools.artifactregistry.v1beta2.File.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.devtools.artifactregistry.v1beta2.File
                         * @static
                         * @param {google.devtools.artifactregistry.v1beta2.IFile} message File message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        File.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a File message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.devtools.artifactregistry.v1beta2.File
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.devtools.artifactregistry.v1beta2.File} File
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        File.decode = function decode(reader, length, error) {
                            if (!(read