// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback, GaxCall, LocationsClient, LocationProtos} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
import {loggingUtils as logging, decodeAnyProtosInArray} from 'google-gax';

/**
 * Client JSON configuration object, loaded from
 * `src/v1beta1/saas_rollouts_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './saas_rollouts_client_config.json';
const version = require('../../../package.json').version;

/**
 *  Manages the rollout of SaaS services.
 * @class
 * @memberof v1beta1
 */
export class SaasRolloutsClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  private _universeDomain: string;
  private _servicePath: string;
  private _log = logging.log('saasservicemgmt');

  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  locationsClient: LocationsClient;
  pathTemplates: {[name: string]: gax.PathTemplate};
  saasRolloutsStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of SaasRolloutsClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://cloud.google.com/docs/authentication/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new SaasRolloutsClient({fallback: true}, gax);
   *     ```
   */
  constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof SaasRolloutsClient;
    if (opts?.universe_domain && opts?.universeDomain && opts?.universe_domain !== opts?.universeDomain) {
      throw new Error('Please set either universe_domain or universeDomain, but not both.');
    }
    const universeDomainEnvVar = (typeof process === 'object' && typeof process.env === 'object') ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;
    this._universeDomain = opts?.universeDomain ?? opts?.universe_domain ?? universeDomainEnvVar ?? 'googleapis.com';
    this._servicePath = 'saasservicemgmt.' + this._universeDomain;
    const servicePath = opts?.servicePath || opts?.apiEndpoint || this._servicePath;
    this._providedCustomServicePath = !!(opts?.servicePath || opts?.apiEndpoint);
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== this._servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = this._servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === this._servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }
    this.locationsClient = new this._gaxModule.LocationsClient(
      this._gaxGrpc,
      opts
    );
  

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process === 'object' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
      projectPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}'
      ),
      releasePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/releases/{release}'
      ),
      rolloutPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/rollouts/{rollout_id}'
      ),
      rolloutKindPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/rolloutKinds/{rollout_kind_id}'
      ),
      saasPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/saas/{saas}'
      ),
      tenantPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tenants/{tenant}'
      ),
      unitPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/units/{unit}'
      ),
      unitKindPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/unitKinds/{unitKind}'
      ),
      unitOperationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/unitOperations/{unitOperation}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listRollouts:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'rollouts'),
      listRolloutKinds:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'rolloutKinds')
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.cloud.saasplatform.saasservicemgmt.v1beta1.SaasRollouts', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.saasRolloutsStub) {
      return this.saasRolloutsStub;
    }

    // Put together the "service stub" for
    // google.cloud.saasplatform.saasservicemgmt.v1beta1.SaasRollouts.
    this.saasRolloutsStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.cloud.saasplatform.saasservicemgmt.v1beta1.SaasRollouts') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.saasplatform.saasservicemgmt.v1beta1.SaasRollouts,
        this._opts, this._providedCustomServicePath) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const saasRolloutsStubMethods =
        ['listRollouts', 'getRollout', 'createRollout', 'updateRollout', 'deleteRollout', 'listRolloutKinds', 'getRolloutKind', 'createRolloutKind', 'updateRolloutKind', 'deleteRolloutKind'];
    for (const methodName of saasRolloutsStubMethods) {
      const callPromise = this.saasRolloutsStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const descriptor =
        this.descriptors.page[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.saasRolloutsStub;
  }

  /**
   * The DNS address for this API service.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    if (typeof process === 'object' && typeof process.emitWarning === 'function') {
      process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');
    }
    return 'saasservicemgmt.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    if (typeof process === 'object' && typeof process.emitWarning === 'function') {
      process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');
    }
    return 'saasservicemgmt.googleapis.com';
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  get apiEndpoint() {
    return this._servicePath;
  }

  get universeDomain() {
    return this._universeDomain;
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-platform'
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
/**
 * Retrieve a single rollout.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the resource within a service.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.Rollout|Rollout}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/saas_rollouts.get_rollout.js</caption>
 * region_tag:saasservicemgmt_v1beta1_generated_SaasRollouts_GetRollout_async
 */
  getRollout(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutRequest|undefined, {}|undefined
      ]>;
  getRollout(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutRequest|null|undefined,
          {}|null|undefined>): void;
  getRollout(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutRequest,
      callback: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutRequest|null|undefined,
          {}|null|undefined>): void;
  getRollout(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('getRollout request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('getRollout response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.getRollout(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('getRollout response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Create a new rollout.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent of the rollout.
 * @param {string} request.rolloutId
 *   Required. The ID value for the new rollout.
 * @param {google.cloud.saasplatform.saasservicemgmt.v1beta1.Rollout} request.rollout
 *   Required. The desired state for the rollout.
 * @param {boolean} request.validateOnly
 *   If "validate_only" is set to true, the service will try to validate
 *   that this request would succeed, but will not actually make changes.
 * @param {string} request.requestId
 *   An optional request ID to identify requests. Specify a unique request ID
 *   so that if you must retry your request, the server will know to ignore
 *   the request if it has already been completed. The server will guarantee
 *   that for at least 60 minutes since the first request.
 *
 *   For example, consider a situation where you make an initial request and the
 *   request times out. If you make the request again with the same request
 *   ID, the server can check if original operation with the same request ID
 *   was received, and if so, will ignore the second request. This prevents
 *   clients from accidentally creating duplicate commitments.
 *
 *   The request ID must be a valid UUID with the exception that zero UUID is
 *   not supported (00000000-0000-0000-0000-000000000000).
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.Rollout|Rollout}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/saas_rollouts.create_rollout.js</caption>
 * region_tag:saasservicemgmt_v1beta1_generated_SaasRollouts_CreateRollout_async
 */
  createRollout(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutRequest|undefined, {}|undefined
      ]>;
  createRollout(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutRequest|null|undefined,
          {}|null|undefined>): void;
  createRollout(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutRequest,
      callback: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutRequest|null|undefined,
          {}|null|undefined>): void;
  createRollout(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('createRollout request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('createRollout response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.createRollout(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('createRollout response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Update a single rollout.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.saasplatform.saasservicemgmt.v1beta1.Rollout} request.rollout
 *   Required. The desired state for the rollout.
 * @param {boolean} request.validateOnly
 *   If "validate_only" is set to true, the service will try to validate
 *   that this request would succeed, but will not actually make changes.
 * @param {string} request.requestId
 *   An optional request ID to identify requests. Specify a unique request ID
 *   so that if you must retry your request, the server will know to ignore
 *   the request if it has already been completed. The server will guarantee
 *   that for at least 60 minutes since the first request.
 *
 *   For example, consider a situation where you make an initial request and the
 *   request times out. If you make the request again with the same request
 *   ID, the server can check if original operation with the same request ID
 *   was received, and if so, will ignore the second request. This prevents
 *   clients from accidentally creating duplicate commitments.
 *
 *   The request ID must be a valid UUID with the exception that zero UUID is
 *   not supported (00000000-0000-0000-0000-000000000000).
 * @param {google.protobuf.FieldMask} request.updateMask
 *   Field mask is used to specify the fields to be overwritten in the
 *   Rollout resource by the update.
 *
 *   The fields specified in the update_mask are relative to the resource, not
 *   the full request. A field will be overwritten if it is in the mask.
 *
 *   If the user does not provide a mask then all fields in the
 *   Rollout will be overwritten.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.Rollout|Rollout}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/saas_rollouts.update_rollout.js</caption>
 * region_tag:saasservicemgmt_v1beta1_generated_SaasRollouts_UpdateRollout_async
 */
  updateRollout(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutRequest|undefined, {}|undefined
      ]>;
  updateRollout(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutRequest|null|undefined,
          {}|null|undefined>): void;
  updateRollout(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutRequest,
      callback: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutRequest|null|undefined,
          {}|null|undefined>): void;
  updateRollout(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'rollout.name': request.rollout!.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('updateRollout request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('updateRollout response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.updateRollout(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('updateRollout response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Delete a single rollout.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the resource within a service.
 * @param {string} request.etag
 *   The etag known to the client for the expected state of the rollout. This is
 *   used with state-changing methods to prevent accidental overwrites when
 *   multiple user agents might be acting in parallel on the same resource.
 *
 *   An etag wildcard provide optimistic concurrency based on the expected
 *   existence of the rollout. The Any wildcard (`*`) requires that the resource
 *   must already exists, and the Not Any wildcard (`!*`) requires that it must
 *   not.
 * @param {boolean} request.validateOnly
 *   If "validate_only" is set to true, the service will try to validate
 *   that this request would succeed, but will not actually make changes.
 * @param {string} request.requestId
 *   An optional request ID to identify requests. Specify a unique request ID
 *   so that if you must retry your request, the server will know to ignore
 *   the request if it has already been completed. The server will guarantee
 *   that for at least 60 minutes since the first request.
 *
 *   For example, consider a situation where you make an initial request and the
 *   request times out. If you make the request again with the same request
 *   ID, the server can check if original operation with the same request ID
 *   was received, and if so, will ignore the second request. This prevents
 *   clients from accidentally creating duplicate commitments.
 *
 *   The request ID must be a valid UUID with the exception that zero UUID is
 *   not supported (00000000-0000-0000-0000-000000000000).
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/saas_rollouts.delete_rollout.js</caption>
 * region_tag:saasservicemgmt_v1beta1_generated_SaasRollouts_DeleteRollout_async
 */
  deleteRollout(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutRequest,
      options?: CallOptions):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutRequest|undefined, {}|undefined
      ]>;
  deleteRollout(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutRequest|null|undefined,
          {}|null|undefined>): void;
  deleteRollout(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutRequest,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutRequest|null|undefined,
          {}|null|undefined>): void;
  deleteRollout(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('deleteRollout request %j', request);
    const wrappedCallback: Callback<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('deleteRollout response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.deleteRollout(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.protobuf.IEmpty,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('deleteRollout response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Retrieve a single rollout kind.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the resource within a service.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutKind|RolloutKind}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/saas_rollouts.get_rollout_kind.js</caption>
 * region_tag:saasservicemgmt_v1beta1_generated_SaasRollouts_GetRolloutKind_async
 */
  getRolloutKind(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutKindRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutKindRequest|undefined, {}|undefined
      ]>;
  getRolloutKind(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutKindRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutKindRequest|null|undefined,
          {}|null|undefined>): void;
  getRolloutKind(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutKindRequest,
      callback: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutKindRequest|null|undefined,
          {}|null|undefined>): void;
  getRolloutKind(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutKindRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutKindRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutKindRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutKindRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('getRolloutKind request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutKindRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('getRolloutKind response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.getRolloutKind(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IGetRolloutKindRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('getRolloutKind response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Create a new rollout kind.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent of the rollout kind.
 * @param {string} request.rolloutKindId
 *   Required. The ID value for the new rollout kind.
 * @param {google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutKind} request.rolloutKind
 *   Required. The desired state for the rollout kind.
 * @param {boolean} request.validateOnly
 *   If "validate_only" is set to true, the service will try to validate
 *   that this request would succeed, but will not actually make changes.
 * @param {string} request.requestId
 *   An optional request ID to identify requests. Specify a unique request ID
 *   so that if you must retry your request, the server will know to ignore
 *   the request if it has already been completed. The server will guarantee
 *   that for at least 60 minutes since the first request.
 *
 *   For example, consider a situation where you make an initial request and the
 *   request times out. If you make the request again with the same request
 *   ID, the server can check if original operation with the same request ID
 *   was received, and if so, will ignore the second request. This prevents
 *   clients from accidentally creating duplicate commitments.
 *
 *   The request ID must be a valid UUID with the exception that zero UUID is
 *   not supported (00000000-0000-0000-0000-000000000000).
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutKind|RolloutKind}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/saas_rollouts.create_rollout_kind.js</caption>
 * region_tag:saasservicemgmt_v1beta1_generated_SaasRollouts_CreateRolloutKind_async
 */
  createRolloutKind(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutKindRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutKindRequest|undefined, {}|undefined
      ]>;
  createRolloutKind(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutKindRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutKindRequest|null|undefined,
          {}|null|undefined>): void;
  createRolloutKind(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutKindRequest,
      callback: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutKindRequest|null|undefined,
          {}|null|undefined>): void;
  createRolloutKind(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutKindRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutKindRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutKindRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutKindRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('createRolloutKind request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutKindRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('createRolloutKind response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.createRolloutKind(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.ICreateRolloutKindRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('createRolloutKind response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Update a single rollout kind.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutKind} request.rolloutKind
 *   Required. The desired state for the rollout kind.
 * @param {boolean} request.validateOnly
 *   If "validate_only" is set to true, the service will try to validate
 *   that this request would succeed, but will not actually make changes.
 * @param {string} request.requestId
 *   An optional request ID to identify requests. Specify a unique request ID
 *   so that if you must retry your request, the server will know to ignore
 *   the request if it has already been completed. The server will guarantee
 *   that for at least 60 minutes since the first request.
 *
 *   For example, consider a situation where you make an initial request and the
 *   request times out. If you make the request again with the same request
 *   ID, the server can check if original operation with the same request ID
 *   was received, and if so, will ignore the second request. This prevents
 *   clients from accidentally creating duplicate commitments.
 *
 *   The request ID must be a valid UUID with the exception that zero UUID is
 *   not supported (00000000-0000-0000-0000-000000000000).
 * @param {google.protobuf.FieldMask} request.updateMask
 *   Field mask is used to specify the fields to be overwritten in the
 *   RolloutKind resource by the update.
 *
 *   The fields specified in the update_mask are relative to the resource, not
 *   the full request. A field will be overwritten if it is in the mask.
 *
 *   If the user does not provide a mask then all fields in the
 *   RolloutKind will be overwritten.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutKind|RolloutKind}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/saas_rollouts.update_rollout_kind.js</caption>
 * region_tag:saasservicemgmt_v1beta1_generated_SaasRollouts_UpdateRolloutKind_async
 */
  updateRolloutKind(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutKindRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutKindRequest|undefined, {}|undefined
      ]>;
  updateRolloutKind(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutKindRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutKindRequest|null|undefined,
          {}|null|undefined>): void;
  updateRolloutKind(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutKindRequest,
      callback: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutKindRequest|null|undefined,
          {}|null|undefined>): void;
  updateRolloutKind(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutKindRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutKindRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutKindRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutKindRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'rollout_kind.name': request.rolloutKind!.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('updateRolloutKind request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutKindRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('updateRolloutKind response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.updateRolloutKind(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IUpdateRolloutKindRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('updateRolloutKind response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }
/**
 * Delete a single rollout kind.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The resource name of the resource within a service.
 * @param {string} request.etag
 *   The etag known to the client for the expected state of the rollout kind.
 *   This is used with state-changing methods to prevent accidental overwrites
 *   when multiple user agents might be acting in parallel on the same resource.
 *
 *   An etag wildcard provide optimistic concurrency based on the expected
 *   existence of the rollout kind. The Any wildcard (`*`) requires that the
 *   resource must already exists, and the Not Any wildcard (`!*`) requires that
 *   it must not.
 * @param {boolean} request.validateOnly
 *   If "validate_only" is set to true, the service will try to validate
 *   that this request would succeed, but will not actually make changes.
 * @param {string} request.requestId
 *   An optional request ID to identify requests. Specify a unique request ID
 *   so that if you must retry your request, the server will know to ignore
 *   the request if it has already been completed. The server will guarantee
 *   that for at least 60 minutes since the first request.
 *
 *   For example, consider a situation where you make an initial request and the
 *   request times out. If you make the request again with the same request
 *   ID, the server can check if original operation with the same request ID
 *   was received, and if so, will ignore the second request. This prevents
 *   clients from accidentally creating duplicate commitments.
 *
 *   The request ID must be a valid UUID with the exception that zero UUID is
 *   not supported (00000000-0000-0000-0000-000000000000).
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/saas_rollouts.delete_rollout_kind.js</caption>
 * region_tag:saasservicemgmt_v1beta1_generated_SaasRollouts_DeleteRolloutKind_async
 */
  deleteRolloutKind(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutKindRequest,
      options?: CallOptions):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutKindRequest|undefined, {}|undefined
      ]>;
  deleteRolloutKind(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutKindRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutKindRequest|null|undefined,
          {}|null|undefined>): void;
  deleteRolloutKind(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutKindRequest,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutKindRequest|null|undefined,
          {}|null|undefined>): void;
  deleteRolloutKind(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutKindRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutKindRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutKindRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutKindRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('deleteRolloutKind request %j', request);
    const wrappedCallback: Callback<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutKindRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('deleteRolloutKind response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.deleteRolloutKind(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.protobuf.IEmpty,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IDeleteRolloutKindRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('deleteRolloutKind response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }

 /**
 * Retrieve a collection of rollouts.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent of the rollout.
 * @param {number} request.pageSize
 *   The maximum number of rollouts to send per page.
 * @param {string} request.pageToken
 *   The page token: If the next_page_token from a previous response
 *   is provided, this request will send the subsequent page.
 * @param {string} request.filter
 *   Filter the list as specified in https://google.aip.dev/160.
 * @param {string} request.orderBy
 *   Order results as specified in https://google.aip.dev/132.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of {@link protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.Rollout|Rollout}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listRolloutsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listRollouts(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout[],
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest|null,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsResponse
      ]>;
  listRollouts(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsResponse|null|undefined,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout>): void;
  listRollouts(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest,
      callback: PaginationCallback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsResponse|null|undefined,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout>): void;
  listRollouts(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsResponse|null|undefined,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout>,
      callback?: PaginationCallback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsResponse|null|undefined,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout>):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout[],
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest|null,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: PaginationCallback<
      protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest,
      protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsResponse|null|undefined,
      protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout>|undefined = callback
      ? (error, values, nextPageRequest, rawResponse) => {
          this._log.info('listRollouts values %j', values);
          callback!(error, values, nextPageRequest, rawResponse); // We verified callback above.
        }
      : undefined;
    this._log.info('listRollouts request %j', request);
    return this.innerApiCalls
      .listRollouts(request, options, wrappedCallback)
      ?.then(([response, input, output]: [
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout[],
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest|null,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsResponse
      ]) => {
        this._log.info('listRollouts values %j', response);
        return [response, input, output];
      });
  }

/**
 * Equivalent to `listRollouts`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent of the rollout.
 * @param {number} request.pageSize
 *   The maximum number of rollouts to send per page.
 * @param {string} request.pageToken
 *   The page token: If the next_page_token from a previous response
 *   is provided, this request will send the subsequent page.
 * @param {string} request.filter
 *   Filter the list as specified in https://google.aip.dev/160.
 * @param {string} request.orderBy
 *   Order results as specified in https://google.aip.dev/132.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing {@link protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.Rollout|Rollout} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listRolloutsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listRolloutsStream(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listRollouts'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listRollouts stream %j', request);
    return this.descriptors.page.listRollouts.createStream(
      this.innerApiCalls.listRollouts as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listRollouts`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent of the rollout.
 * @param {number} request.pageSize
 *   The maximum number of rollouts to send per page.
 * @param {string} request.pageToken
 *   The page token: If the next_page_token from a previous response
 *   is provided, this request will send the subsequent page.
 * @param {string} request.filter
 *   Filter the list as specified in https://google.aip.dev/160.
 * @param {string} request.orderBy
 *   Order results as specified in https://google.aip.dev/132.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
 *   When you iterate the returned iterable, each element will be an object representing
 *   {@link protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.Rollout|Rollout}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/saas_rollouts.list_rollouts.js</caption>
 * region_tag:saasservicemgmt_v1beta1_generated_SaasRollouts_ListRollouts_async
 */
  listRolloutsAsync(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listRollouts'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listRollouts iterate %j', request);
    return this.descriptors.page.listRollouts.asyncIterate(
      this.innerApiCalls['listRollouts'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRollout>;
  }
 /**
 * Retrieve a collection of rollout kinds.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent of the rollout kind.
 * @param {number} request.pageSize
 *   The maximum number of rollout kinds to send per page.
 * @param {string} request.pageToken
 *   The page token: If the next_page_token from a previous response
 *   is provided, this request will send the subsequent page.
 * @param {string} request.filter
 *   Filter the list as specified in https://google.aip.dev/160.
 * @param {string} request.orderBy
 *   Order results as specified in https://google.aip.dev/132.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of {@link protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutKind|RolloutKind}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listRolloutKindsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listRolloutKinds(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind[],
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest|null,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsResponse
      ]>;
  listRolloutKinds(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsResponse|null|undefined,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind>): void;
  listRolloutKinds(
      request: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest,
      callback: PaginationCallback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsResponse|null|undefined,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind>): void;
  listRolloutKinds(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsResponse|null|undefined,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind>,
      callback?: PaginationCallback<
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsResponse|null|undefined,
          protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind>):
      Promise<[
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind[],
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest|null,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: PaginationCallback<
      protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest,
      protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsResponse|null|undefined,
      protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind>|undefined = callback
      ? (error, values, nextPageRequest, rawResponse) => {
          this._log.info('listRolloutKinds values %j', values);
          callback!(error, values, nextPageRequest, rawResponse); // We verified callback above.
        }
      : undefined;
    this._log.info('listRolloutKinds request %j', request);
    return this.innerApiCalls
      .listRolloutKinds(request, options, wrappedCallback)
      ?.then(([response, input, output]: [
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind[],
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest|null,
        protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsResponse
      ]) => {
        this._log.info('listRolloutKinds values %j', response);
        return [response, input, output];
      });
  }

/**
 * Equivalent to `listRolloutKinds`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent of the rollout kind.
 * @param {number} request.pageSize
 *   The maximum number of rollout kinds to send per page.
 * @param {string} request.pageToken
 *   The page token: If the next_page_token from a previous response
 *   is provided, this request will send the subsequent page.
 * @param {string} request.filter
 *   Filter the list as specified in https://google.aip.dev/160.
 * @param {string} request.orderBy
 *   Order results as specified in https://google.aip.dev/132.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing {@link protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutKind|RolloutKind} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listRolloutKindsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listRolloutKindsStream(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listRolloutKinds'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listRolloutKinds stream %j', request);
    return this.descriptors.page.listRolloutKinds.createStream(
      this.innerApiCalls.listRolloutKinds as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listRolloutKinds`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent of the rollout kind.
 * @param {number} request.pageSize
 *   The maximum number of rollout kinds to send per page.
 * @param {string} request.pageToken
 *   The page token: If the next_page_token from a previous response
 *   is provided, this request will send the subsequent page.
 * @param {string} request.filter
 *   Filter the list as specified in https://google.aip.dev/160.
 * @param {string} request.orderBy
 *   Order results as specified in https://google.aip.dev/132.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
 *   When you iterate the returned iterable, each element will be an object representing
 *   {@link protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutKind|RolloutKind}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/saas_rollouts.list_rollout_kinds.js</caption>
 * region_tag:saasservicemgmt_v1beta1_generated_SaasRollouts_ListRolloutKinds_async
 */
  listRolloutKindsAsync(
      request?: protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IListRolloutKindsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listRolloutKinds'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listRolloutKinds iterate %j', request);
    return this.descriptors.page.listRolloutKinds.asyncIterate(
      this.innerApiCalls['listRolloutKinds'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.saasplatform.saasservicemgmt.v1beta1.IRolloutKind>;
  }
/**
   * Gets information about a location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Resource name for the location.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example
   * ```
   * const [response] = await client.getLocation(request);
   * ```
   */
  getLocation(
    request: LocationProtos.google.cloud.location.IGetLocationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          LocationProtos.google.cloud.location.ILocation,
          | LocationProtos.google.cloud.location.IGetLocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LocationProtos.google.cloud.location.ILocation,
      | LocationProtos.google.cloud.location.IGetLocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.getLocation(request, options, callback);
  }

/**
   * Lists information about the supported locations for this service. Returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   The resource that owns the locations collection, if applicable.
   * @param {string} request.filter
   *   The standard list filter.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example
   * ```
   * const iterable = client.listLocationsAsync(request);
   * for await (const response of iterable) {
   *   // process response
   * }
   * ```
   */
  listLocationsAsync(
    request: LocationProtos.google.cloud.location.IListLocationsRequest,
    options?: CallOptions
  ): AsyncIterable<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.listLocationsAsync(request, options);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified location resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  locationPath(project:string,location:string) {
    return this.pathTemplates.locationPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).project;
  }

  /**
   * Parse the location from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).location;
  }

  /**
   * Return a fully-qualified project resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  projectPath(project:string) {
    return this.pathTemplates.projectPathTemplate.render({
      project: project,
    });
  }

  /**
   * Parse the project from Project resource.
   *
   * @param {string} projectName
   *   A fully-qualified path representing Project resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectName(projectName: string) {
    return this.pathTemplates.projectPathTemplate.match(projectName).project;
  }

  /**
   * Return a fully-qualified release resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} release
   * @returns {string} Resource name string.
   */
  releasePath(project:string,location:string,release:string) {
    return this.pathTemplates.releasePathTemplate.render({
      project: project,
      location: location,
      release: release,
    });
  }

  /**
   * Parse the project from Release resource.
   *
   * @param {string} releaseName
   *   A fully-qualified path representing Release resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromReleaseName(releaseName: string) {
    return this.pathTemplates.releasePathTemplate.match(releaseName).project;
  }

  /**
   * Parse the location from Release resource.
   *
   * @param {string} releaseName
   *   A fully-qualified path representing Release resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromReleaseName(releaseName: string) {
    return this.pathTemplates.releasePathTemplate.match(releaseName).location;
  }

  /**
   * Parse the release from Release resource.
   *
   * @param {string} releaseName
   *   A fully-qualified path representing Release resource.
   * @returns {string} A string representing the release.
   */
  matchReleaseFromReleaseName(releaseName: string) {
    return this.pathTemplates.releasePathTemplate.match(releaseName).release;
  }

  /**
   * Return a fully-qualified rollout resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} rollout_id
   * @returns {string} Resource name string.
   */
  rolloutPath(project:string,location:string,rolloutId:string) {
    return this.pathTemplates.rolloutPathTemplate.render({
      project: project,
      location: location,
      rollout_id: rolloutId,
    });
  }

  /**
   * Parse the project from Rollout resource.
   *
   * @param {string} rolloutName
   *   A fully-qualified path representing Rollout resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromRolloutName(rolloutName: string) {
    return this.pathTemplates.rolloutPathTemplate.match(rolloutName).project;
  }

  /**
   * Parse the location from Rollout resource.
   *
   * @param {string} rolloutName
   *   A fully-qualified path representing Rollout resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromRolloutName(rolloutName: string) {
    return this.pathTemplates.rolloutPathTemplate.match(rolloutName).location;
  }

  /**
   * Parse the rollout_id from Rollout resource.
   *
   * @param {string} rolloutName
   *   A fully-qualified path representing Rollout resource.
   * @returns {string} A string representing the rollout_id.
   */
  matchRolloutIdFromRolloutName(rolloutName: string) {
    return this.pathTemplates.rolloutPathTemplate.match(rolloutName).rollout_id;
  }

  /**
   * Return a fully-qualified rolloutKind resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} rollout_kind_id
   * @returns {string} Resource name string.
   */
  rolloutKindPath(project:string,location:string,rolloutKindId:string) {
    return this.pathTemplates.rolloutKindPathTemplate.render({
      project: project,
      location: location,
      rollout_kind_id: rolloutKindId,
    });
  }

  /**
   * Parse the project from RolloutKind resource.
   *
   * @param {string} rolloutKindName
   *   A fully-qualified path representing RolloutKind resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromRolloutKindName(rolloutKindName: string) {
    return this.pathTemplates.rolloutKindPathTemplate.match(rolloutKindName).project;
  }

  /**
   * Parse the location from RolloutKind resource.
   *
   * @param {string} rolloutKindName
   *   A fully-qualified path representing RolloutKind resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromRolloutKindName(rolloutKindName: string) {
    return this.pathTemplates.rolloutKindPathTemplate.match(rolloutKindName).location;
  }

  /**
   * Parse the rollout_kind_id from RolloutKind resource.
   *
   * @param {string} rolloutKindName
   *   A fully-qualified path representing RolloutKind resource.
   * @returns {string} A string representing the rollout_kind_id.
   */
  matchRolloutKindIdFromRolloutKindName(rolloutKindName: string) {
    return this.pathTemplates.rolloutKindPathTemplate.match(rolloutKindName).rollout_kind_id;
  }

  /**
   * Return a fully-qualified saas resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} saas
   * @returns {string} Resource name string.
   */
  saasPath(project:string,location:string,saas:string) {
    return this.pathTemplates.saasPathTemplate.render({
      project: project,
      location: location,
      saas: saas,
    });
  }

  /**
   * Parse the project from Saas resource.
   *
   * @param {string} saasName
   *   A fully-qualified path representing Saas resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromSaasName(saasName: string) {
    return this.pathTemplates.saasPathTemplate.match(saasName).project;
  }

  /**
   * Parse the location from Saas resource.
   *
   * @param {string} saasName
   *   A fully-qualified path representing Saas resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromSaasName(saasName: string) {
    return this.pathTemplates.saasPathTemplate.match(saasName).location;
  }

  /**
   * Parse the saas from Saas resource.
   *
   * @param {string} saasName
   *   A fully-qualified path representing Saas resource.
   * @returns {string} A string representing the saas.
   */
  matchSaasFromSaasName(saasName: string) {
    return this.pathTemplates.saasPathTemplate.match(saasName).saas;
  }

  /**
   * Return a fully-qualified tenant resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} tenant
   * @returns {string} Resource name string.
   */
  tenantPath(project:string,location:string,tenant:string) {
    return this.pathTemplates.tenantPathTemplate.render({
      project: project,
      location: location,
      tenant: tenant,
    });
  }

  /**
   * Parse the project from Tenant resource.
   *
   * @param {string} tenantName
   *   A fully-qualified path representing Tenant resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTenantName(tenantName: string) {
    return this.pathTemplates.tenantPathTemplate.match(tenantName).project;
  }

  /**
   * Parse the location from Tenant resource.
   *
   * @param {string} tenantName
   *   A fully-qualified path representing Tenant resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTenantName(tenantName: string) {
    return this.pathTemplates.tenantPathTemplate.match(tenantName).location;
  }

  /**
   * Parse the tenant from Tenant resource.
   *
   * @param {string} tenantName
   *   A fully-qualified path representing Tenant resource.
   * @returns {string} A string representing the tenant.
   */
  matchTenantFromTenantName(tenantName: string) {
    return this.pathTemplates.tenantPathTemplate.match(tenantName).tenant;
  }

  /**
   * Return a fully-qualified unit resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} unit
   * @returns {string} Resource name string.
   */
  unitPath(project:string,location:string,unit:string) {
    return this.pathTemplates.unitPathTemplate.render({
      project: project,
      location: location,
      unit: unit,
    });
  }

  /**
   * Parse the project from Unit resource.
   *
   * @param {string} unitName
   *   A fully-qualified path representing Unit resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromUnitName(unitName: string) {
    return this.pathTemplates.unitPathTemplate.match(unitName).project;
  }

  /**
   * Parse the location from Unit resource.
   *
   * @param {string} unitName
   *   A fully-qualified path representing Unit resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromUnitName(unitName: string) {
    return this.pathTemplates.unitPathTemplate.match(unitName).location;
  }

  /**
   * Parse the unit from Unit resource.
   *
   * @param {string} unitName
   *   A fully-qualified path representing Unit resource.
   * @returns {string} A string representing the unit.
   */
  matchUnitFromUnitName(unitName: string) {
    return this.pathTemplates.unitPathTemplate.match(unitName).unit;
  }

  /**
   * Return a fully-qualified unitKind resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} unitKind
   * @returns {string} Resource name string.
   */
  unitKindPath(project:string,location:string,unitKind:string) {
    return this.pathTemplates.unitKindPathTemplate.render({
      project: project,
      location: location,
      unitKind: unitKind,
    });
  }

  /**
   * Parse the project from UnitKind resource.
   *
   * @param {string} unitKindName
   *   A fully-qualified path representing UnitKind resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromUnitKindName(unitKindName: string) {
    return this.pathTemplates.unitKindPathTemplate.match(unitKindName).project;
  }

  /**
   * Parse the location from UnitKind resource.
   *
   * @param {string} unitKindName
   *   A fully-qualified path representing UnitKind resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromUnitKindName(unitKindName: string) {
    return this.pathTemplates.unitKindPathTemplate.match(unitKindName).location;
  }

  /**
   * Parse the unitKind from UnitKind resource.
   *
   * @param {string} unitKindName
   *   A fully-qualified path representing UnitKind resource.
   * @returns {string} A string representing the unitKind.
   */
  matchUnitKindFromUnitKindName(unitKindName: string) {
    return this.pathTemplates.unitKindPathTemplate.match(unitKindName).unitKind;
  }

  /**
   * Return a fully-qualified unitOperation resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} unitOperation
   * @returns {string} Resource name string.
   */
  unitOperationPath(project:string,location:string,unitOperation:string) {
    return this.pathTemplates.unitOperationPathTemplate.render({
      project: project,
      location: location,
      unitOperation: unitOperation,
    });
  }

  /**
   * Parse the project from UnitOperation resource.
   *
   * @param {string} unitOperationName
   *   A fully-qualified path representing UnitOperation resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromUnitOperationName(unitOperationName: string) {
    return this.pathTemplates.unitOperationPathTemplate.match(unitOperationName).project;
  }

  /**
   * Parse the location from UnitOperation resource.
   *
   * @param {string} unitOperationName
   *   A fully-qualified path representing UnitOperation resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromUnitOperationName(unitOperationName: string) {
    return this.pathTemplates.unitOperationPathTemplate.match(unitOperationName).location;
  }

  /**
   * Parse the unitOperation from UnitOperation resource.
   *
   * @param {string} unitOperationName
   *   A fully-qualified path representing UnitOperation resource.
   * @returns {string} A string representing the unitOperation.
   */
  matchUnitOperationFromUnitOperationName(unitOperationName: string) {
    return this.pathTemplates.unitOperationPathTemplate.match(unitOperationName).unitOperation;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.saasRolloutsStub && !this._terminated) {
      return this.saasRolloutsStub.then(stub => {
        this._log.info('ending gRPC channel');
        this._terminated = true;
        stub.close();
        this.locationsClient.close().catch(err => {throw err});
      });
    }
    return Promise.resolve();
  }
}