// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_tasks_protos || ($protobuf.roots._google_cloud_tasks_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.tasks = (function() {
    
                /**
                 * Namespace tasks.
                 * @memberof google.cloud
                 * @namespace
                 */
                var tasks = {};
    
                tasks.v2 = (function() {
    
                    /**
                     * Namespace v2.
                     * @memberof google.cloud.tasks
                     * @namespace
                     */
                    var v2 = {};
    
                    v2.CloudTasks = (function() {
    
                        /**
                         * Constructs a new CloudTasks service.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a CloudTasks
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CloudTasks(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CloudTasks.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CloudTasks;
    
                        /**
                         * Creates new CloudTasks service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CloudTasks} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CloudTasks.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|listQueues}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef ListQueuesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.ListQueuesResponse} [response] ListQueuesResponse
                         */
    
                        /**
                         * Calls ListQueues.
                         * @function listQueues
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IListQueuesRequest} request ListQueuesRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.ListQueuesCallback} callback Node-style callback called with the error, if any, and ListQueuesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.listQueues = function listQueues(request, callback) {
                            return this.rpcCall(listQueues, $root.google.cloud.tasks.v2.ListQueuesRequest, $root.google.cloud.tasks.v2.ListQueuesResponse, request, callback);
                        }, "name", { value: "ListQueues" });
    
                        /**
                         * Calls ListQueues.
                         * @function listQueues
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IListQueuesRequest} request ListQueuesRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.ListQueuesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|getQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef GetQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls GetQueue.
                         * @function getQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IGetQueueRequest} request GetQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.GetQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getQueue = function getQueue(request, callback) {
                            return this.rpcCall(getQueue, $root.google.cloud.tasks.v2.GetQueueRequest, $root.google.cloud.tasks.v2.Queue, request, callback);
                        }, "name", { value: "GetQueue" });
    
                        /**
                         * Calls GetQueue.
                         * @function getQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IGetQueueRequest} request GetQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|createQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef CreateQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls CreateQueue.
                         * @function createQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.ICreateQueueRequest} request CreateQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.CreateQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.createQueue = function createQueue(request, callback) {
                            return this.rpcCall(createQueue, $root.google.cloud.tasks.v2.CreateQueueRequest, $root.google.cloud.tasks.v2.Queue, request, callback);
                        }, "name", { value: "CreateQueue" });
    
                        /**
                         * Calls CreateQueue.
                         * @function createQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.ICreateQueueRequest} request CreateQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|updateQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef UpdateQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls UpdateQueue.
                         * @function updateQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IUpdateQueueRequest} request UpdateQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.UpdateQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.updateQueue = function updateQueue(request, callback) {
                            return this.rpcCall(updateQueue, $root.google.cloud.tasks.v2.UpdateQueueRequest, $root.google.cloud.tasks.v2.Queue, request, callback);
                        }, "name", { value: "UpdateQueue" });
    
                        /**
                         * Calls UpdateQueue.
                         * @function updateQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IUpdateQueueRequest} request UpdateQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|deleteQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef DeleteQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteQueue.
                         * @function deleteQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IDeleteQueueRequest} request DeleteQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.DeleteQueueCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.deleteQueue = function deleteQueue(request, callback) {
                            return this.rpcCall(deleteQueue, $root.google.cloud.tasks.v2.DeleteQueueRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteQueue" });
    
                        /**
                         * Calls DeleteQueue.
                         * @function deleteQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IDeleteQueueRequest} request DeleteQueueRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|purgeQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef PurgeQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls PurgeQueue.
                         * @function purgeQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IPurgeQueueRequest} request PurgeQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.PurgeQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.purgeQueue = function purgeQueue(request, callback) {
                            return this.rpcCall(purgeQueue, $root.google.cloud.tasks.v2.PurgeQueueRequest, $root.google.cloud.tasks.v2.Queue, request, callback);
                        }, "name", { value: "PurgeQueue" });
    
                        /**
                         * Calls PurgeQueue.
                         * @function purgeQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IPurgeQueueRequest} request PurgeQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|pauseQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef PauseQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls PauseQueue.
                         * @function pauseQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IPauseQueueRequest} request PauseQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.PauseQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.pauseQueue = function pauseQueue(request, callback) {
                            return this.rpcCall(pauseQueue, $root.google.cloud.tasks.v2.PauseQueueRequest, $root.google.cloud.tasks.v2.Queue, request, callback);
                        }, "name", { value: "PauseQueue" });
    
                        /**
                         * Calls PauseQueue.
                         * @function pauseQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IPauseQueueRequest} request PauseQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|resumeQueue}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef ResumeQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls ResumeQueue.
                         * @function resumeQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IResumeQueueRequest} request ResumeQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.ResumeQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.resumeQueue = function resumeQueue(request, callback) {
                            return this.rpcCall(resumeQueue, $root.google.cloud.tasks.v2.ResumeQueueRequest, $root.google.cloud.tasks.v2.Queue, request, callback);
                        }, "name", { value: "ResumeQueue" });
    
                        /**
                         * Calls ResumeQueue.
                         * @function resumeQueue
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IResumeQueueRequest} request ResumeQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|getIamPolicy}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef GetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                            return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "GetIamPolicy" });
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|setIamPolicy}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef SetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                            return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "SetIamPolicy" });
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|testIamPermissions}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef TestIamPermissionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                         */
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                            return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                        }, "name", { value: "TestIamPermissions" });
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|listTasks}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef ListTasksCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.ListTasksResponse} [response] ListTasksResponse
                         */
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IListTasksRequest} request ListTasksRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.ListTasksCallback} callback Node-style callback called with the error, if any, and ListTasksResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.listTasks = function listTasks(request, callback) {
                            return this.rpcCall(listTasks, $root.google.cloud.tasks.v2.ListTasksRequest, $root.google.cloud.tasks.v2.ListTasksResponse, request, callback);
                        }, "name", { value: "ListTasks" });
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IListTasksRequest} request ListTasksRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.ListTasksResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|getTask}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef GetTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Task} [response] Task
                         */
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.GetTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getTask = function getTask(request, callback) {
                            return this.rpcCall(getTask, $root.google.cloud.tasks.v2.GetTaskRequest, $root.google.cloud.tasks.v2.Task, request, callback);
                        }, "name", { value: "GetTask" });
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|createTask}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef CreateTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Task} [response] Task
                         */
    
                        /**
                         * Calls CreateTask.
                         * @function createTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.ICreateTaskRequest} request CreateTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.CreateTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.createTask = function createTask(request, callback) {
                            return this.rpcCall(createTask, $root.google.cloud.tasks.v2.CreateTaskRequest, $root.google.cloud.tasks.v2.Task, request, callback);
                        }, "name", { value: "CreateTask" });
    
                        /**
                         * Calls CreateTask.
                         * @function createTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.ICreateTaskRequest} request CreateTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|deleteTask}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef DeleteTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteTask.
                         * @function deleteTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IDeleteTaskRequest} request DeleteTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.DeleteTaskCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.deleteTask = function deleteTask(request, callback) {
                            return this.rpcCall(deleteTask, $root.google.cloud.tasks.v2.DeleteTaskRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteTask" });
    
                        /**
                         * Calls DeleteTask.
                         * @function deleteTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IDeleteTaskRequest} request DeleteTaskRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2.CloudTasks|runTask}.
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @typedef RunTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2.Task} [response] Task
                         */
    
                        /**
                         * Calls RunTask.
                         * @function runTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IRunTaskRequest} request RunTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2.CloudTasks.RunTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.runTask = function runTask(request, callback) {
                            return this.rpcCall(runTask, $root.google.cloud.tasks.v2.RunTaskRequest, $root.google.cloud.tasks.v2.Task, request, callback);
                        }, "name", { value: "RunTask" });
    
                        /**
                         * Calls RunTask.
                         * @function runTask
                         * @memberof google.cloud.tasks.v2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2.IRunTaskRequest} request RunTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2.Task>} Promise
                         * @variation 2
                         */
    
                        return CloudTasks;
                    })();
    
                    v2.ListQueuesRequest = (function() {
    
                        /**
                         * Properties of a ListQueuesRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IListQueuesRequest
                         * @property {string|null} [parent] ListQueuesRequest parent
                         * @property {string|null} [filter] ListQueuesRequest filter
                         * @property {number|null} [pageSize] ListQueuesRequest pageSize
                         * @property {string|null} [pageToken] ListQueuesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListQueuesRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a ListQueuesRequest.
                         * @implements IListQueuesRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IListQueuesRequest=} [properties] Properties to set
                         */
                        function ListQueuesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListQueuesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.parent = "";
    
                        /**
                         * ListQueuesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.filter = "";
    
                        /**
                         * ListQueuesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListQueuesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListQueuesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IListQueuesRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.ListQueuesRequest} ListQueuesRequest instance
                         */
                        ListQueuesRequest.create = function create(properties) {
                            return new ListQueuesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListQueuesRequest message. Does not implicitly {@link google.cloud.tasks.v2.ListQueuesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IListQueuesRequest} message ListQueuesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListQueuesRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.ListQueuesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IListQueuesRequest} message ListQueuesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListQueuesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.ListQueuesRequest} ListQueuesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.ListQueuesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListQueuesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.ListQueuesRequest} ListQueuesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListQueuesRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListQueuesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListQueuesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.ListQueuesRequest} ListQueuesRequest
                         */
                        ListQueuesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.ListQueuesRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.ListQueuesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListQueuesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ListQueuesRequest} message ListQueuesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListQueuesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListQueuesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListQueuesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListQueuesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.ListQueuesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListQueuesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.ListQueuesRequest";
                        };
    
                        return ListQueuesRequest;
                    })();
    
                    v2.ListQueuesResponse = (function() {
    
                        /**
                         * Properties of a ListQueuesResponse.
                         * @memberof google.cloud.tasks.v2
                         * @interface IListQueuesResponse
                         * @property {Array.<google.cloud.tasks.v2.IQueue>|null} [queues] ListQueuesResponse queues
                         * @property {string|null} [nextPageToken] ListQueuesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListQueuesResponse.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a ListQueuesResponse.
                         * @implements IListQueuesResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2.IListQueuesResponse=} [properties] Properties to set
                         */
                        function ListQueuesResponse(properties) {
                            this.queues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListQueuesResponse queues.
                         * @member {Array.<google.cloud.tasks.v2.IQueue>} queues
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @instance
                         */
                        ListQueuesResponse.prototype.queues = $util.emptyArray;
    
                        /**
                         * ListQueuesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @instance
                         */
                        ListQueuesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListQueuesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2.IListQueuesResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.ListQueuesResponse} ListQueuesResponse instance
                         */
                        ListQueuesResponse.create = function create(properties) {
                            return new ListQueuesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListQueuesResponse message. Does not implicitly {@link google.cloud.tasks.v2.ListQueuesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2.IListQueuesResponse} message ListQueuesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queues != null && message.queues.length)
                                for (var i = 0; i < message.queues.length; ++i)
                                    $root.google.cloud.tasks.v2.Queue.encode(message.queues[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListQueuesResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.ListQueuesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2.IListQueuesResponse} message ListQueuesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListQueuesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.ListQueuesResponse} ListQueuesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.ListQueuesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.queues && message.queues.length))
                                            message.queues = [];
                                        message.queues.push($root.google.cloud.tasks.v2.Queue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListQueuesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.ListQueuesResponse} ListQueuesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListQueuesResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListQueuesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queues != null && message.hasOwnProperty("queues")) {
                                if (!Array.isArray(message.queues))
                                    return "queues: array expected";
                                for (var i = 0; i < message.queues.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2.Queue.verify(message.queues[i]);
                                    if (error)
                                        return "queues." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListQueuesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.ListQueuesResponse} ListQueuesResponse
                         */
                        ListQueuesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.ListQueuesResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.ListQueuesResponse();
                            if (object.queues) {
                                if (!Array.isArray(object.queues))
                                    throw TypeError(".google.cloud.tasks.v2.ListQueuesResponse.queues: array expected");
                                message.queues = [];
                                for (var i = 0; i < object.queues.length; ++i) {
                                    if (typeof object.queues[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2.ListQueuesResponse.queues: object expected");
                                    message.queues[i] = $root.google.cloud.tasks.v2.Queue.fromObject(object.queues[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListQueuesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2.ListQueuesResponse} message ListQueuesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListQueuesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.queues = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.queues && message.queues.length) {
                                object.queues = [];
                                for (var j = 0; j < message.queues.length; ++j)
                                    object.queues[j] = $root.google.cloud.tasks.v2.Queue.toObject(message.queues[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListQueuesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListQueuesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListQueuesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.ListQueuesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListQueuesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.ListQueuesResponse";
                        };
    
                        return ListQueuesResponse;
                    })();
    
                    v2.GetQueueRequest = (function() {
    
                        /**
                         * Properties of a GetQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IGetQueueRequest
                         * @property {string|null} [name] GetQueueRequest name
                         */
    
                        /**
                         * Constructs a new GetQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a GetQueueRequest.
                         * @implements IGetQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IGetQueueRequest=} [properties] Properties to set
                         */
                        function GetQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @instance
                         */
                        GetQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IGetQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.GetQueueRequest} GetQueueRequest instance
                         */
                        GetQueueRequest.create = function create(properties) {
                            return new GetQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.GetQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IGetQueueRequest} message GetQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.GetQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IGetQueueRequest} message GetQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.GetQueueRequest} GetQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.GetQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.GetQueueRequest} GetQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.GetQueueRequest} GetQueueRequest
                         */
                        GetQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.GetQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.GetQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.GetQueueRequest} message GetQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.GetQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.GetQueueRequest";
                        };
    
                        return GetQueueRequest;
                    })();
    
                    v2.CreateQueueRequest = (function() {
    
                        /**
                         * Properties of a CreateQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface ICreateQueueRequest
                         * @property {string|null} [parent] CreateQueueRequest parent
                         * @property {google.cloud.tasks.v2.IQueue|null} [queue] CreateQueueRequest queue
                         */
    
                        /**
                         * Constructs a new CreateQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a CreateQueueRequest.
                         * @implements ICreateQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.ICreateQueueRequest=} [properties] Properties to set
                         */
                        function CreateQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateQueueRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @instance
                         */
                        CreateQueueRequest.prototype.parent = "";
    
                        /**
                         * CreateQueueRequest queue.
                         * @member {google.cloud.tasks.v2.IQueue|null|undefined} queue
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @instance
                         */
                        CreateQueueRequest.prototype.queue = null;
    
                        /**
                         * Creates a new CreateQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ICreateQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.CreateQueueRequest} CreateQueueRequest instance
                         */
                        CreateQueueRequest.create = function create(properties) {
                            return new CreateQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.CreateQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ICreateQueueRequest} message CreateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                $root.google.cloud.tasks.v2.Queue.encode(message.queue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.CreateQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ICreateQueueRequest} message CreateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.CreateQueueRequest} CreateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.CreateQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.queue = $root.google.cloud.tasks.v2.Queue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.CreateQueueRequest} CreateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.queue != null && message.hasOwnProperty("queue")) {
                                var error = $root.google.cloud.tasks.v2.Queue.verify(message.queue);
                                if (error)
                                    return "queue." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.CreateQueueRequest} CreateQueueRequest
                         */
                        CreateQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.CreateQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.CreateQueueRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.queue != null) {
                                if (typeof object.queue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.CreateQueueRequest.queue: object expected");
                                message.queue = $root.google.cloud.tasks.v2.Queue.fromObject(object.queue);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.CreateQueueRequest} message CreateQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.queue = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = $root.google.cloud.tasks.v2.Queue.toObject(message.queue, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.CreateQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.CreateQueueRequest";
                        };
    
                        return CreateQueueRequest;
                    })();
    
                    v2.UpdateQueueRequest = (function() {
    
                        /**
                         * Properties of an UpdateQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IUpdateQueueRequest
                         * @property {google.cloud.tasks.v2.IQueue|null} [queue] UpdateQueueRequest queue
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateQueueRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents an UpdateQueueRequest.
                         * @implements IUpdateQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IUpdateQueueRequest=} [properties] Properties to set
                         */
                        function UpdateQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateQueueRequest queue.
                         * @member {google.cloud.tasks.v2.IQueue|null|undefined} queue
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @instance
                         */
                        UpdateQueueRequest.prototype.queue = null;
    
                        /**
                         * UpdateQueueRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @instance
                         */
                        UpdateQueueRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IUpdateQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.UpdateQueueRequest} UpdateQueueRequest instance
                         */
                        UpdateQueueRequest.create = function create(properties) {
                            return new UpdateQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.UpdateQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IUpdateQueueRequest} message UpdateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                $root.google.cloud.tasks.v2.Queue.encode(message.queue, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.UpdateQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IUpdateQueueRequest} message UpdateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.UpdateQueueRequest} UpdateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.UpdateQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queue = $root.google.cloud.tasks.v2.Queue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.UpdateQueueRequest} UpdateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queue != null && message.hasOwnProperty("queue")) {
                                var error = $root.google.cloud.tasks.v2.Queue.verify(message.queue);
                                if (error)
                                    return "queue." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.UpdateQueueRequest} UpdateQueueRequest
                         */
                        UpdateQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.UpdateQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.UpdateQueueRequest();
                            if (object.queue != null) {
                                if (typeof object.queue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.UpdateQueueRequest.queue: object expected");
                                message.queue = $root.google.cloud.tasks.v2.Queue.fromObject(object.queue);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.UpdateQueueRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.UpdateQueueRequest} message UpdateQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.queue = null;
                                object.updateMask = null;
                            }
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = $root.google.cloud.tasks.v2.Queue.toObject(message.queue, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.UpdateQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.UpdateQueueRequest";
                        };
    
                        return UpdateQueueRequest;
                    })();
    
                    v2.DeleteQueueRequest = (function() {
    
                        /**
                         * Properties of a DeleteQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IDeleteQueueRequest
                         * @property {string|null} [name] DeleteQueueRequest name
                         */
    
                        /**
                         * Constructs a new DeleteQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a DeleteQueueRequest.
                         * @implements IDeleteQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IDeleteQueueRequest=} [properties] Properties to set
                         */
                        function DeleteQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @instance
                         */
                        DeleteQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IDeleteQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.DeleteQueueRequest} DeleteQueueRequest instance
                         */
                        DeleteQueueRequest.create = function create(properties) {
                            return new DeleteQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.DeleteQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IDeleteQueueRequest} message DeleteQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.DeleteQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IDeleteQueueRequest} message DeleteQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.DeleteQueueRequest} DeleteQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.DeleteQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.DeleteQueueRequest} DeleteQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.DeleteQueueRequest} DeleteQueueRequest
                         */
                        DeleteQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.DeleteQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.DeleteQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.DeleteQueueRequest} message DeleteQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.DeleteQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.DeleteQueueRequest";
                        };
    
                        return DeleteQueueRequest;
                    })();
    
                    v2.PurgeQueueRequest = (function() {
    
                        /**
                         * Properties of a PurgeQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IPurgeQueueRequest
                         * @property {string|null} [name] PurgeQueueRequest name
                         */
    
                        /**
                         * Constructs a new PurgeQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a PurgeQueueRequest.
                         * @implements IPurgeQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IPurgeQueueRequest=} [properties] Properties to set
                         */
                        function PurgeQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurgeQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @instance
                         */
                        PurgeQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new PurgeQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IPurgeQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.PurgeQueueRequest} PurgeQueueRequest instance
                         */
                        PurgeQueueRequest.create = function create(properties) {
                            return new PurgeQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PurgeQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.PurgeQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IPurgeQueueRequest} message PurgeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurgeQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.PurgeQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IPurgeQueueRequest} message PurgeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurgeQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.PurgeQueueRequest} PurgeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.PurgeQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurgeQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.PurgeQueueRequest} PurgeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurgeQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurgeQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PurgeQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.PurgeQueueRequest} PurgeQueueRequest
                         */
                        PurgeQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.PurgeQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.PurgeQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurgeQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.PurgeQueueRequest} message PurgeQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurgeQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this PurgeQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurgeQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurgeQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.PurgeQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurgeQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.PurgeQueueRequest";
                        };
    
                        return PurgeQueueRequest;
                    })();
    
                    v2.PauseQueueRequest = (function() {
    
                        /**
                         * Properties of a PauseQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IPauseQueueRequest
                         * @property {string|null} [name] PauseQueueRequest name
                         */
    
                        /**
                         * Constructs a new PauseQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a PauseQueueRequest.
                         * @implements IPauseQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IPauseQueueRequest=} [properties] Properties to set
                         */
                        function PauseQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PauseQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @instance
                         */
                        PauseQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new PauseQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IPauseQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.PauseQueueRequest} PauseQueueRequest instance
                         */
                        PauseQueueRequest.create = function create(properties) {
                            return new PauseQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PauseQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.PauseQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IPauseQueueRequest} message PauseQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PauseQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PauseQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.PauseQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IPauseQueueRequest} message PauseQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PauseQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PauseQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.PauseQueueRequest} PauseQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PauseQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.PauseQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PauseQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.PauseQueueRequest} PauseQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PauseQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PauseQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PauseQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PauseQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.PauseQueueRequest} PauseQueueRequest
                         */
                        PauseQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.PauseQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.PauseQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PauseQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.PauseQueueRequest} message PauseQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PauseQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this PauseQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PauseQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PauseQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.PauseQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PauseQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.PauseQueueRequest";
                        };
    
                        return PauseQueueRequest;
                    })();
    
                    v2.ResumeQueueRequest = (function() {
    
                        /**
                         * Properties of a ResumeQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IResumeQueueRequest
                         * @property {string|null} [name] ResumeQueueRequest name
                         */
    
                        /**
                         * Constructs a new ResumeQueueRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a ResumeQueueRequest.
                         * @implements IResumeQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IResumeQueueRequest=} [properties] Properties to set
                         */
                        function ResumeQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResumeQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @instance
                         */
                        ResumeQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new ResumeQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IResumeQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.ResumeQueueRequest} ResumeQueueRequest instance
                         */
                        ResumeQueueRequest.create = function create(properties) {
                            return new ResumeQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResumeQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2.ResumeQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IResumeQueueRequest} message ResumeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResumeQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResumeQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.ResumeQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IResumeQueueRequest} message ResumeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResumeQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResumeQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.ResumeQueueRequest} ResumeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResumeQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.ResumeQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResumeQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.ResumeQueueRequest} ResumeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResumeQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResumeQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResumeQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResumeQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.ResumeQueueRequest} ResumeQueueRequest
                         */
                        ResumeQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.ResumeQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.ResumeQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResumeQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ResumeQueueRequest} message ResumeQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResumeQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ResumeQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResumeQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResumeQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.ResumeQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResumeQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.ResumeQueueRequest";
                        };
    
                        return ResumeQueueRequest;
                    })();
    
                    v2.ListTasksRequest = (function() {
    
                        /**
                         * Properties of a ListTasksRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IListTasksRequest
                         * @property {string|null} [parent] ListTasksRequest parent
                         * @property {google.cloud.tasks.v2.Task.View|null} [responseView] ListTasksRequest responseView
                         * @property {number|null} [pageSize] ListTasksRequest pageSize
                         * @property {string|null} [pageToken] ListTasksRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListTasksRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a ListTasksRequest.
                         * @implements IListTasksRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IListTasksRequest=} [properties] Properties to set
                         */
                        function ListTasksRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.parent = "";
    
                        /**
                         * ListTasksRequest responseView.
                         * @member {google.cloud.tasks.v2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.responseView = 0;
    
                        /**
                         * ListTasksRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageSize = 0;
    
                        /**
                         * ListTasksRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListTasksRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IListTasksRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.ListTasksRequest} ListTasksRequest instance
                         */
                        ListTasksRequest.create = function create(properties) {
                            return new ListTasksRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message. Does not implicitly {@link google.cloud.tasks.v2.ListTasksRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.ListTasksRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.ListTasksRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.ListTasksRequest} ListTasksRequest
                         */
                        ListTasksRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.ListTasksRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.ListTasksRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ListTasksRequest} message ListTasksRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2.Task.View[message.responseView] : message.responseView;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.ListTasksRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.ListTasksRequest";
                        };
    
                        return ListTasksRequest;
                    })();
    
                    v2.ListTasksResponse = (function() {
    
                        /**
                         * Properties of a ListTasksResponse.
                         * @memberof google.cloud.tasks.v2
                         * @interface IListTasksResponse
                         * @property {Array.<google.cloud.tasks.v2.ITask>|null} [tasks] ListTasksResponse tasks
                         * @property {string|null} [nextPageToken] ListTasksResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListTasksResponse.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a ListTasksResponse.
                         * @implements IListTasksResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2.IListTasksResponse=} [properties] Properties to set
                         */
                        function ListTasksResponse(properties) {
                            this.tasks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksResponse tasks.
                         * @member {Array.<google.cloud.tasks.v2.ITask>} tasks
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.tasks = $util.emptyArray;
    
                        /**
                         * ListTasksResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListTasksResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2.IListTasksResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.ListTasksResponse} ListTasksResponse instance
                         */
                        ListTasksResponse.create = function create(properties) {
                            return new ListTasksResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message. Does not implicitly {@link google.cloud.tasks.v2.ListTasksResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasks != null && message.tasks.length)
                                for (var i = 0; i < message.tasks.length; ++i)
                                    $root.google.cloud.tasks.v2.Task.encode(message.tasks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.ListTasksResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.ListTasksResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.tasks && message.tasks.length))
                                            message.tasks = [];
                                        message.tasks.push($root.google.cloud.tasks.v2.Task.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasks != null && message.hasOwnProperty("tasks")) {
                                if (!Array.isArray(message.tasks))
                                    return "tasks: array expected";
                                for (var i = 0; i < message.tasks.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2.Task.verify(message.tasks[i]);
                                    if (error)
                                        return "tasks." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.ListTasksResponse} ListTasksResponse
                         */
                        ListTasksResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.ListTasksResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.ListTasksResponse();
                            if (object.tasks) {
                                if (!Array.isArray(object.tasks))
                                    throw TypeError(".google.cloud.tasks.v2.ListTasksResponse.tasks: array expected");
                                message.tasks = [];
                                for (var i = 0; i < object.tasks.length; ++i) {
                                    if (typeof object.tasks[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2.ListTasksResponse.tasks: object expected");
                                    message.tasks[i] = $root.google.cloud.tasks.v2.Task.fromObject(object.tasks[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2.ListTasksResponse} message ListTasksResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tasks = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.tasks && message.tasks.length) {
                                object.tasks = [];
                                for (var j = 0; j < message.tasks.length; ++j)
                                    object.tasks[j] = $root.google.cloud.tasks.v2.Task.toObject(message.tasks[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.ListTasksResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.ListTasksResponse";
                        };
    
                        return ListTasksResponse;
                    })();
    
                    v2.GetTaskRequest = (function() {
    
                        /**
                         * Properties of a GetTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IGetTaskRequest
                         * @property {string|null} [name] GetTaskRequest name
                         * @property {google.cloud.tasks.v2.Task.View|null} [responseView] GetTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new GetTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a GetTaskRequest.
                         * @implements IGetTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IGetTaskRequest=} [properties] Properties to set
                         */
                        function GetTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.name = "";
    
                        /**
                         * GetTaskRequest responseView.
                         * @member {google.cloud.tasks.v2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new GetTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IGetTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.GetTaskRequest} GetTaskRequest instance
                         */
                        GetTaskRequest.create = function create(properties) {
                            return new GetTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2.GetTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.GetTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.GetTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a GetTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.GetTaskRequest} GetTaskRequest
                         */
                        GetTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.GetTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.GetTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.GetTaskRequest} message GetTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this GetTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.GetTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.GetTaskRequest";
                        };
    
                        return GetTaskRequest;
                    })();
    
                    v2.CreateTaskRequest = (function() {
    
                        /**
                         * Properties of a CreateTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface ICreateTaskRequest
                         * @property {string|null} [parent] CreateTaskRequest parent
                         * @property {google.cloud.tasks.v2.ITask|null} [task] CreateTaskRequest task
                         * @property {google.cloud.tasks.v2.Task.View|null} [responseView] CreateTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new CreateTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a CreateTaskRequest.
                         * @implements ICreateTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.ICreateTaskRequest=} [properties] Properties to set
                         */
                        function CreateTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateTaskRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.parent = "";
    
                        /**
                         * CreateTaskRequest task.
                         * @member {google.cloud.tasks.v2.ITask|null|undefined} task
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.task = null;
    
                        /**
                         * CreateTaskRequest responseView.
                         * @member {google.cloud.tasks.v2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new CreateTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ICreateTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.CreateTaskRequest} CreateTaskRequest instance
                         */
                        CreateTaskRequest.create = function create(properties) {
                            return new CreateTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2.CreateTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ICreateTaskRequest} message CreateTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.task != null && Object.hasOwnProperty.call(message, "task"))
                                $root.google.cloud.tasks.v2.Task.encode(message.task, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.CreateTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.ICreateTaskRequest} message CreateTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.CreateTaskRequest} CreateTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.CreateTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.task = $root.google.cloud.tasks.v2.Task.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.CreateTaskRequest} CreateTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.task != null && message.hasOwnProperty("task")) {
                                var error = $root.google.cloud.tasks.v2.Task.verify(message.task);
                                if (error)
                                    return "task." + error;
                            }
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CreateTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.CreateTaskRequest} CreateTaskRequest
                         */
                        CreateTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.CreateTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.CreateTaskRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.task != null) {
                                if (typeof object.task !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.CreateTaskRequest.task: object expected");
                                message.task = $root.google.cloud.tasks.v2.Task.fromObject(object.task);
                            }
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.CreateTaskRequest} message CreateTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.task = null;
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.task != null && message.hasOwnProperty("task"))
                                object.task = $root.google.cloud.tasks.v2.Task.toObject(message.task, options);
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this CreateTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.CreateTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.CreateTaskRequest";
                        };
    
                        return CreateTaskRequest;
                    })();
    
                    v2.DeleteTaskRequest = (function() {
    
                        /**
                         * Properties of a DeleteTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IDeleteTaskRequest
                         * @property {string|null} [name] DeleteTaskRequest name
                         */
    
                        /**
                         * Constructs a new DeleteTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a DeleteTaskRequest.
                         * @implements IDeleteTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IDeleteTaskRequest=} [properties] Properties to set
                         */
                        function DeleteTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @instance
                         */
                        DeleteTaskRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IDeleteTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.DeleteTaskRequest} DeleteTaskRequest instance
                         */
                        DeleteTaskRequest.create = function create(properties) {
                            return new DeleteTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2.DeleteTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IDeleteTaskRequest} message DeleteTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.DeleteTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IDeleteTaskRequest} message DeleteTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.DeleteTaskRequest} DeleteTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.DeleteTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.DeleteTaskRequest} DeleteTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.DeleteTaskRequest} DeleteTaskRequest
                         */
                        DeleteTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.DeleteTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.DeleteTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.DeleteTaskRequest} message DeleteTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.DeleteTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.DeleteTaskRequest";
                        };
    
                        return DeleteTaskRequest;
                    })();
    
                    v2.RunTaskRequest = (function() {
    
                        /**
                         * Properties of a RunTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IRunTaskRequest
                         * @property {string|null} [name] RunTaskRequest name
                         * @property {google.cloud.tasks.v2.Task.View|null} [responseView] RunTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new RunTaskRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a RunTaskRequest.
                         * @implements IRunTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IRunTaskRequest=} [properties] Properties to set
                         */
                        function RunTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @instance
                         */
                        RunTaskRequest.prototype.name = "";
    
                        /**
                         * RunTaskRequest responseView.
                         * @member {google.cloud.tasks.v2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @instance
                         */
                        RunTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new RunTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IRunTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.RunTaskRequest} RunTaskRequest instance
                         */
                        RunTaskRequest.create = function create(properties) {
                            return new RunTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2.RunTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IRunTaskRequest} message RunTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.RunTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IRunTaskRequest} message RunTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.RunTaskRequest} RunTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.RunTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.RunTaskRequest} RunTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a RunTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.RunTaskRequest} RunTaskRequest
                         */
                        RunTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.RunTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.RunTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2.RunTaskRequest} message RunTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this RunTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.RunTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.RunTaskRequest";
                        };
    
                        return RunTaskRequest;
                    })();
    
                    v2.Queue = (function() {
    
                        /**
                         * Properties of a Queue.
                         * @memberof google.cloud.tasks.v2
                         * @interface IQueue
                         * @property {string|null} [name] Queue name
                         * @property {google.cloud.tasks.v2.IAppEngineRouting|null} [appEngineRoutingOverride] Queue appEngineRoutingOverride
                         * @property {google.cloud.tasks.v2.IRateLimits|null} [rateLimits] Queue rateLimits
                         * @property {google.cloud.tasks.v2.IRetryConfig|null} [retryConfig] Queue retryConfig
                         * @property {google.cloud.tasks.v2.Queue.State|null} [state] Queue state
                         * @property {google.protobuf.ITimestamp|null} [purgeTime] Queue purgeTime
                         * @property {google.cloud.tasks.v2.IStackdriverLoggingConfig|null} [stackdriverLoggingConfig] Queue stackdriverLoggingConfig
                         */
    
                        /**
                         * Constructs a new Queue.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a Queue.
                         * @implements IQueue
                         * @constructor
                         * @param {google.cloud.tasks.v2.IQueue=} [properties] Properties to set
                         */
                        function Queue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Queue name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.name = "";
    
                        /**
                         * Queue appEngineRoutingOverride.
                         * @member {google.cloud.tasks.v2.IAppEngineRouting|null|undefined} appEngineRoutingOverride
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.appEngineRoutingOverride = null;
    
                        /**
                         * Queue rateLimits.
                         * @member {google.cloud.tasks.v2.IRateLimits|null|undefined} rateLimits
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.rateLimits = null;
    
                        /**
                         * Queue retryConfig.
                         * @member {google.cloud.tasks.v2.IRetryConfig|null|undefined} retryConfig
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.retryConfig = null;
    
                        /**
                         * Queue state.
                         * @member {google.cloud.tasks.v2.Queue.State} state
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.state = 0;
    
                        /**
                         * Queue purgeTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} purgeTime
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.purgeTime = null;
    
                        /**
                         * Queue stackdriverLoggingConfig.
                         * @member {google.cloud.tasks.v2.IStackdriverLoggingConfig|null|undefined} stackdriverLoggingConfig
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         */
                        Queue.prototype.stackdriverLoggingConfig = null;
    
                        /**
                         * Creates a new Queue instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2.IQueue=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.Queue} Queue instance
                         */
                        Queue.create = function create(properties) {
                            return new Queue(properties);
                        };
    
                        /**
                         * Encodes the specified Queue message. Does not implicitly {@link google.cloud.tasks.v2.Queue.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2.IQueue} message Queue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Queue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.appEngineRoutingOverride != null && Object.hasOwnProperty.call(message, "appEngineRoutingOverride"))
                                $root.google.cloud.tasks.v2.AppEngineRouting.encode(message.appEngineRoutingOverride, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.rateLimits != null && Object.hasOwnProperty.call(message, "rateLimits"))
                                $root.google.cloud.tasks.v2.RateLimits.encode(message.rateLimits, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.retryConfig != null && Object.hasOwnProperty.call(message, "retryConfig"))
                                $root.google.cloud.tasks.v2.RetryConfig.encode(message.retryConfig, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.state);
                            if (message.purgeTime != null && Object.hasOwnProperty.call(message, "purgeTime"))
                                $root.google.protobuf.Timestamp.encode(message.purgeTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.stackdriverLoggingConfig != null && Object.hasOwnProperty.call(message, "stackdriverLoggingConfig"))
                                $root.google.cloud.tasks.v2.StackdriverLoggingConfig.encode(message.stackdriverLoggingConfig, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Queue message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.Queue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2.IQueue} message Queue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Queue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Queue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.Queue} Queue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Queue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.Queue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.appEngineRoutingOverride = $root.google.cloud.tasks.v2.AppEngineRouting.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.rateLimits = $root.google.cloud.tasks.v2.RateLimits.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.retryConfig = $root.google.cloud.tasks.v2.RetryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.purgeTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.stackdriverLoggingConfig = $root.google.cloud.tasks.v2.StackdriverLoggingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Queue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.Queue} Queue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Queue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Queue message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Queue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.appEngineRoutingOverride != null && message.hasOwnProperty("appEngineRoutingOverride")) {
                                var error = $root.google.cloud.tasks.v2.AppEngineRouting.verify(message.appEngineRoutingOverride);
                                if (error)
                                    return "appEngineRoutingOverride." + error;
                            }
                            if (message.rateLimits != null && message.hasOwnProperty("rateLimits")) {
                                var error = $root.google.cloud.tasks.v2.RateLimits.verify(message.rateLimits);
                                if (error)
                                    return "rateLimits." + error;
                            }
                            if (message.retryConfig != null && message.hasOwnProperty("retryConfig")) {
                                var error = $root.google.cloud.tasks.v2.RetryConfig.verify(message.retryConfig);
                                if (error)
                                    return "retryConfig." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.purgeTime != null && message.hasOwnProperty("purgeTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.purgeTime);
                                if (error)
                                    return "purgeTime." + error;
                            }
                            if (message.stackdriverLoggingConfig != null && message.hasOwnProperty("stackdriverLoggingConfig")) {
                                var error = $root.google.cloud.tasks.v2.StackdriverLoggingConfig.verify(message.stackdriverLoggingConfig);
                                if (error)
                                    return "stackdriverLoggingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Queue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.Queue} Queue
                         */
                        Queue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.Queue)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.Queue();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.appEngineRoutingOverride != null) {
                                if (typeof object.appEngineRoutingOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Queue.appEngineRoutingOverride: object expected");
                                message.appEngineRoutingOverride = $root.google.cloud.tasks.v2.AppEngineRouting.fromObject(object.appEngineRoutingOverride);
                            }
                            if (object.rateLimits != null) {
                                if (typeof object.rateLimits !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Queue.rateLimits: object expected");
                                message.rateLimits = $root.google.cloud.tasks.v2.RateLimits.fromObject(object.rateLimits);
                            }
                            if (object.retryConfig != null) {
                                if (typeof object.retryConfig !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Queue.retryConfig: object expected");
                                message.retryConfig = $root.google.cloud.tasks.v2.RetryConfig.fromObject(object.retryConfig);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "PAUSED":
                            case 2:
                                message.state = 2;
                                break;
                            case "DISABLED":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.purgeTime != null) {
                                if (typeof object.purgeTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Queue.purgeTime: object expected");
                                message.purgeTime = $root.google.protobuf.Timestamp.fromObject(object.purgeTime);
                            }
                            if (object.stackdriverLoggingConfig != null) {
                                if (typeof object.stackdriverLoggingConfig !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Queue.stackdriverLoggingConfig: object expected");
                                message.stackdriverLoggingConfig = $root.google.cloud.tasks.v2.StackdriverLoggingConfig.fromObject(object.stackdriverLoggingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Queue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2.Queue} message Queue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Queue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.appEngineRoutingOverride = null;
                                object.rateLimits = null;
                                object.retryConfig = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.purgeTime = null;
                                object.stackdriverLoggingConfig = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.appEngineRoutingOverride != null && message.hasOwnProperty("appEngineRoutingOverride"))
                                object.appEngineRoutingOverride = $root.google.cloud.tasks.v2.AppEngineRouting.toObject(message.appEngineRoutingOverride, options);
                            if (message.rateLimits != null && message.hasOwnProperty("rateLimits"))
                                object.rateLimits = $root.google.cloud.tasks.v2.RateLimits.toObject(message.rateLimits, options);
                            if (message.retryConfig != null && message.hasOwnProperty("retryConfig"))
                                object.retryConfig = $root.google.cloud.tasks.v2.RetryConfig.toObject(message.retryConfig, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.tasks.v2.Queue.State[message.state] === undefined ? message.state : $root.google.cloud.tasks.v2.Queue.State[message.state] : message.state;
                            if (message.purgeTime != null && message.hasOwnProperty("purgeTime"))
                                object.purgeTime = $root.google.protobuf.Timestamp.toObject(message.purgeTime, options);
                            if (message.stackdriverLoggingConfig != null && message.hasOwnProperty("stackdriverLoggingConfig"))
                                object.stackdriverLoggingConfig = $root.google.cloud.tasks.v2.StackdriverLoggingConfig.toObject(message.stackdriverLoggingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this Queue to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.Queue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Queue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Queue
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.Queue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Queue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.Queue";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.tasks.v2.Queue.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} PAUSED=2 PAUSED value
                         * @property {number} DISABLED=3 DISABLED value
                         */
                        Queue.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "PAUSED"] = 2;
                            values[valuesById[3] = "DISABLED"] = 3;
                            return values;
                        })();
    
                        return Queue;
                    })();
    
                    v2.RateLimits = (function() {
    
                        /**
                         * Properties of a RateLimits.
                         * @memberof google.cloud.tasks.v2
                         * @interface IRateLimits
                         * @property {number|null} [maxDispatchesPerSecond] RateLimits maxDispatchesPerSecond
                         * @property {number|null} [maxBurstSize] RateLimits maxBurstSize
                         * @property {number|null} [maxConcurrentDispatches] RateLimits maxConcurrentDispatches
                         */
    
                        /**
                         * Constructs a new RateLimits.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a RateLimits.
                         * @implements IRateLimits
                         * @constructor
                         * @param {google.cloud.tasks.v2.IRateLimits=} [properties] Properties to set
                         */
                        function RateLimits(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RateLimits maxDispatchesPerSecond.
                         * @member {number} maxDispatchesPerSecond
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxDispatchesPerSecond = 0;
    
                        /**
                         * RateLimits maxBurstSize.
                         * @member {number} maxBurstSize
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxBurstSize = 0;
    
                        /**
                         * RateLimits maxConcurrentDispatches.
                         * @member {number} maxConcurrentDispatches
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxConcurrentDispatches = 0;
    
                        /**
                         * Creates a new RateLimits instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2.IRateLimits=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.RateLimits} RateLimits instance
                         */
                        RateLimits.create = function create(properties) {
                            return new RateLimits(properties);
                        };
    
                        /**
                         * Encodes the specified RateLimits message. Does not implicitly {@link google.cloud.tasks.v2.RateLimits.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2.IRateLimits} message RateLimits message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RateLimits.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxDispatchesPerSecond != null && Object.hasOwnProperty.call(message, "maxDispatchesPerSecond"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.maxDispatchesPerSecond);
                            if (message.maxBurstSize != null && Object.hasOwnProperty.call(message, "maxBurstSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxBurstSize);
                            if (message.maxConcurrentDispatches != null && Object.hasOwnProperty.call(message, "maxConcurrentDispatches"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxConcurrentDispatches);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RateLimits message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.RateLimits.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2.IRateLimits} message RateLimits message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RateLimits.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RateLimits message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.RateLimits} RateLimits
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RateLimits.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.RateLimits();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxDispatchesPerSecond = reader.double();
                                        break;
                                    }
                                case 2: {
                                        message.maxBurstSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.maxConcurrentDispatches = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RateLimits message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.RateLimits} RateLimits
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RateLimits.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RateLimits message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RateLimits.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.maxDispatchesPerSecond != null && message.hasOwnProperty("maxDispatchesPerSecond"))
                                if (typeof message.maxDispatchesPerSecond !== "number")
                                    return "maxDispatchesPerSecond: number expected";
                            if (message.maxBurstSize != null && message.hasOwnProperty("maxBurstSize"))
                                if (!$util.isInteger(message.maxBurstSize))
                                    return "maxBurstSize: integer expected";
                            if (message.maxConcurrentDispatches != null && message.hasOwnProperty("maxConcurrentDispatches"))
                                if (!$util.isInteger(message.maxConcurrentDispatches))
                                    return "maxConcurrentDispatches: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RateLimits message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.RateLimits} RateLimits
                         */
                        RateLimits.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.RateLimits)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.RateLimits();
                            if (object.maxDispatchesPerSecond != null)
                                message.maxDispatchesPerSecond = Number(object.maxDispatchesPerSecond);
                            if (object.maxBurstSize != null)
                                message.maxBurstSize = object.maxBurstSize | 0;
                            if (object.maxConcurrentDispatches != null)
                                message.maxConcurrentDispatches = object.maxConcurrentDispatches | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RateLimits message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2.RateLimits} message RateLimits
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RateLimits.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxDispatchesPerSecond = 0;
                                object.maxBurstSize = 0;
                                object.maxConcurrentDispatches = 0;
                            }
                            if (message.maxDispatchesPerSecond != null && message.hasOwnProperty("maxDispatchesPerSecond"))
                                object.maxDispatchesPerSecond = options.json && !isFinite(message.maxDispatchesPerSecond) ? String(message.maxDispatchesPerSecond) : message.maxDispatchesPerSecond;
                            if (message.maxBurstSize != null && message.hasOwnProperty("maxBurstSize"))
                                object.maxBurstSize = message.maxBurstSize;
                            if (message.maxConcurrentDispatches != null && message.hasOwnProperty("maxConcurrentDispatches"))
                                object.maxConcurrentDispatches = message.maxConcurrentDispatches;
                            return object;
                        };
    
                        /**
                         * Converts this RateLimits to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RateLimits.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RateLimits
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.RateLimits
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RateLimits.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.RateLimits";
                        };
    
                        return RateLimits;
                    })();
    
                    v2.RetryConfig = (function() {
    
                        /**
                         * Properties of a RetryConfig.
                         * @memberof google.cloud.tasks.v2
                         * @interface IRetryConfig
                         * @property {number|null} [maxAttempts] RetryConfig maxAttempts
                         * @property {google.protobuf.IDuration|null} [maxRetryDuration] RetryConfig maxRetryDuration
                         * @property {google.protobuf.IDuration|null} [minBackoff] RetryConfig minBackoff
                         * @property {google.protobuf.IDuration|null} [maxBackoff] RetryConfig maxBackoff
                         * @property {number|null} [maxDoublings] RetryConfig maxDoublings
                         */
    
                        /**
                         * Constructs a new RetryConfig.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a RetryConfig.
                         * @implements IRetryConfig
                         * @constructor
                         * @param {google.cloud.tasks.v2.IRetryConfig=} [properties] Properties to set
                         */
                        function RetryConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetryConfig maxAttempts.
                         * @member {number} maxAttempts
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxAttempts = 0;
    
                        /**
                         * RetryConfig maxRetryDuration.
                         * @member {google.protobuf.IDuration|null|undefined} maxRetryDuration
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxRetryDuration = null;
    
                        /**
                         * RetryConfig minBackoff.
                         * @member {google.protobuf.IDuration|null|undefined} minBackoff
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.minBackoff = null;
    
                        /**
                         * RetryConfig maxBackoff.
                         * @member {google.protobuf.IDuration|null|undefined} maxBackoff
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxBackoff = null;
    
                        /**
                         * RetryConfig maxDoublings.
                         * @member {number} maxDoublings
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxDoublings = 0;
    
                        /**
                         * Creates a new RetryConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2.IRetryConfig=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.RetryConfig} RetryConfig instance
                         */
                        RetryConfig.create = function create(properties) {
                            return new RetryConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RetryConfig message. Does not implicitly {@link google.cloud.tasks.v2.RetryConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2.IRetryConfig} message RetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxAttempts != null && Object.hasOwnProperty.call(message, "maxAttempts"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maxAttempts);
                            if (message.maxRetryDuration != null && Object.hasOwnProperty.call(message, "maxRetryDuration"))
                                $root.google.protobuf.Duration.encode(message.maxRetryDuration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.minBackoff != null && Object.hasOwnProperty.call(message, "minBackoff"))
                                $root.google.protobuf.Duration.encode(message.minBackoff, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.maxBackoff != null && Object.hasOwnProperty.call(message, "maxBackoff"))
                                $root.google.protobuf.Duration.encode(message.maxBackoff, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.maxDoublings != null && Object.hasOwnProperty.call(message, "maxDoublings"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.maxDoublings);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetryConfig message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.RetryConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2.IRetryConfig} message RetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetryConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.RetryConfig} RetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.RetryConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxAttempts = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.maxRetryDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.minBackoff = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.maxBackoff = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.maxDoublings = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetryConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.RetryConfig} RetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetryConfig message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetryConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.maxAttempts != null && message.hasOwnProperty("maxAttempts"))
                                if (!$util.isInteger(message.maxAttempts))
                                    return "maxAttempts: integer expected";
                            if (message.maxRetryDuration != null && message.hasOwnProperty("maxRetryDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxRetryDuration);
                                if (error)
                                    return "maxRetryDuration." + error;
                            }
                            if (message.minBackoff != null && message.hasOwnProperty("minBackoff")) {
                                var error = $root.google.protobuf.Duration.verify(message.minBackoff);
                                if (error)
                                    return "minBackoff." + error;
                            }
                            if (message.maxBackoff != null && message.hasOwnProperty("maxBackoff")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxBackoff);
                                if (error)
                                    return "maxBackoff." + error;
                            }
                            if (message.maxDoublings != null && message.hasOwnProperty("maxDoublings"))
                                if (!$util.isInteger(message.maxDoublings))
                                    return "maxDoublings: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetryConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.RetryConfig} RetryConfig
                         */
                        RetryConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.RetryConfig)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.RetryConfig();
                            if (object.maxAttempts != null)
                                message.maxAttempts = object.maxAttempts | 0;
                            if (object.maxRetryDuration != null) {
                                if (typeof object.maxRetryDuration !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.RetryConfig.maxRetryDuration: object expected");
                                message.maxRetryDuration = $root.google.protobuf.Duration.fromObject(object.maxRetryDuration);
                            }
                            if (object.minBackoff != null) {
                                if (typeof object.minBackoff !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.RetryConfig.minBackoff: object expected");
                                message.minBackoff = $root.google.protobuf.Duration.fromObject(object.minBackoff);
                            }
                            if (object.maxBackoff != null) {
                                if (typeof object.maxBackoff !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.RetryConfig.maxBackoff: object expected");
                                message.maxBackoff = $root.google.protobuf.Duration.fromObject(object.maxBackoff);
                            }
                            if (object.maxDoublings != null)
                                message.maxDoublings = object.maxDoublings | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetryConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2.RetryConfig} message RetryConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetryConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxAttempts = 0;
                                object.maxRetryDuration = null;
                                object.minBackoff = null;
                                object.maxBackoff = null;
                                object.maxDoublings = 0;
                            }
                            if (message.maxAttempts != null && message.hasOwnProperty("maxAttempts"))
                                object.maxAttempts = message.maxAttempts;
                            if (message.maxRetryDuration != null && message.hasOwnProperty("maxRetryDuration"))
                                object.maxRetryDuration = $root.google.protobuf.Duration.toObject(message.maxRetryDuration, options);
                            if (message.minBackoff != null && message.hasOwnProperty("minBackoff"))
                                object.minBackoff = $root.google.protobuf.Duration.toObject(message.minBackoff, options);
                            if (message.maxBackoff != null && message.hasOwnProperty("maxBackoff"))
                                object.maxBackoff = $root.google.protobuf.Duration.toObject(message.maxBackoff, options);
                            if (message.maxDoublings != null && message.hasOwnProperty("maxDoublings"))
                                object.maxDoublings = message.maxDoublings;
                            return object;
                        };
    
                        /**
                         * Converts this RetryConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetryConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetryConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.RetryConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.RetryConfig";
                        };
    
                        return RetryConfig;
                    })();
    
                    v2.StackdriverLoggingConfig = (function() {
    
                        /**
                         * Properties of a StackdriverLoggingConfig.
                         * @memberof google.cloud.tasks.v2
                         * @interface IStackdriverLoggingConfig
                         * @property {number|null} [samplingRatio] StackdriverLoggingConfig samplingRatio
                         */
    
                        /**
                         * Constructs a new StackdriverLoggingConfig.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a StackdriverLoggingConfig.
                         * @implements IStackdriverLoggingConfig
                         * @constructor
                         * @param {google.cloud.tasks.v2.IStackdriverLoggingConfig=} [properties] Properties to set
                         */
                        function StackdriverLoggingConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StackdriverLoggingConfig samplingRatio.
                         * @member {number} samplingRatio
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @instance
                         */
                        StackdriverLoggingConfig.prototype.samplingRatio = 0;
    
                        /**
                         * Creates a new StackdriverLoggingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2.IStackdriverLoggingConfig=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.StackdriverLoggingConfig} StackdriverLoggingConfig instance
                         */
                        StackdriverLoggingConfig.create = function create(properties) {
                            return new StackdriverLoggingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified StackdriverLoggingConfig message. Does not implicitly {@link google.cloud.tasks.v2.StackdriverLoggingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2.IStackdriverLoggingConfig} message StackdriverLoggingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StackdriverLoggingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.samplingRatio != null && Object.hasOwnProperty.call(message, "samplingRatio"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.samplingRatio);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StackdriverLoggingConfig message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.StackdriverLoggingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2.IStackdriverLoggingConfig} message StackdriverLoggingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StackdriverLoggingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StackdriverLoggingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.StackdriverLoggingConfig} StackdriverLoggingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StackdriverLoggingConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.StackdriverLoggingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.samplingRatio = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StackdriverLoggingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.StackdriverLoggingConfig} StackdriverLoggingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StackdriverLoggingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StackdriverLoggingConfig message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StackdriverLoggingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.samplingRatio != null && message.hasOwnProperty("samplingRatio"))
                                if (typeof message.samplingRatio !== "number")
                                    return "samplingRatio: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a StackdriverLoggingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.StackdriverLoggingConfig} StackdriverLoggingConfig
                         */
                        StackdriverLoggingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.StackdriverLoggingConfig)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.StackdriverLoggingConfig();
                            if (object.samplingRatio != null)
                                message.samplingRatio = Number(object.samplingRatio);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StackdriverLoggingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2.StackdriverLoggingConfig} message StackdriverLoggingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StackdriverLoggingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.samplingRatio = 0;
                            if (message.samplingRatio != null && message.hasOwnProperty("samplingRatio"))
                                object.samplingRatio = options.json && !isFinite(message.samplingRatio) ? String(message.samplingRatio) : message.samplingRatio;
                            return object;
                        };
    
                        /**
                         * Converts this StackdriverLoggingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StackdriverLoggingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StackdriverLoggingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.StackdriverLoggingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StackdriverLoggingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.StackdriverLoggingConfig";
                        };
    
                        return StackdriverLoggingConfig;
                    })();
    
                    v2.HttpRequest = (function() {
    
                        /**
                         * Properties of a HttpRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IHttpRequest
                         * @property {string|null} [url] HttpRequest url
                         * @property {google.cloud.tasks.v2.HttpMethod|null} [httpMethod] HttpRequest httpMethod
                         * @property {Object.<string,string>|null} [headers] HttpRequest headers
                         * @property {Uint8Array|null} [body] HttpRequest body
                         * @property {google.cloud.tasks.v2.IOAuthToken|null} [oauthToken] HttpRequest oauthToken
                         * @property {google.cloud.tasks.v2.IOidcToken|null} [oidcToken] HttpRequest oidcToken
                         */
    
                        /**
                         * Constructs a new HttpRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a HttpRequest.
                         * @implements IHttpRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IHttpRequest=} [properties] Properties to set
                         */
                        function HttpRequest(properties) {
                            this.headers = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HttpRequest url.
                         * @member {string} url
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.url = "";
    
                        /**
                         * HttpRequest httpMethod.
                         * @member {google.cloud.tasks.v2.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.httpMethod = 0;
    
                        /**
                         * HttpRequest headers.
                         * @member {Object.<string,string>} headers
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.headers = $util.emptyObject;
    
                        /**
                         * HttpRequest body.
                         * @member {Uint8Array} body
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.body = $util.newBuffer([]);
    
                        /**
                         * HttpRequest oauthToken.
                         * @member {google.cloud.tasks.v2.IOAuthToken|null|undefined} oauthToken
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.oauthToken = null;
    
                        /**
                         * HttpRequest oidcToken.
                         * @member {google.cloud.tasks.v2.IOidcToken|null|undefined} oidcToken
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.oidcToken = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * HttpRequest authorizationHeader.
                         * @member {"oauthToken"|"oidcToken"|undefined} authorizationHeader
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         */
                        Object.defineProperty(HttpRequest.prototype, "authorizationHeader", {
                            get: $util.oneOfGetter($oneOfFields = ["oauthToken", "oidcToken"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new HttpRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IHttpRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.HttpRequest} HttpRequest instance
                         */
                        HttpRequest.create = function create(properties) {
                            return new HttpRequest(properties);
                        };
    
                        /**
                         * Encodes the specified HttpRequest message. Does not implicitly {@link google.cloud.tasks.v2.HttpRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IHttpRequest} message HttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.url);
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.httpMethod);
                            if (message.headers != null && Object.hasOwnProperty.call(message, "headers"))
                                for (var keys = Object.keys(message.headers), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.headers[keys[i]]).ldelim();
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.body);
                            if (message.oauthToken != null && Object.hasOwnProperty.call(message, "oauthToken"))
                                $root.google.cloud.tasks.v2.OAuthToken.encode(message.oauthToken, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.oidcToken != null && Object.hasOwnProperty.call(message, "oidcToken"))
                                $root.google.cloud.tasks.v2.OidcToken.encode(message.oidcToken, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HttpRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.HttpRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IHttpRequest} message HttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HttpRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.HttpRequest} HttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.HttpRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.url = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (message.headers === $util.emptyObject)
                                            message.headers = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.headers[key] = value;
                                        break;
                                    }
                                case 4: {
                                        message.body = reader.bytes();
                                        break;
                                    }
                                case 5: {
                                        message.oauthToken = $root.google.cloud.tasks.v2.OAuthToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.oidcToken = $root.google.cloud.tasks.v2.OidcToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HttpRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.HttpRequest} HttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HttpRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HttpRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.headers != null && message.hasOwnProperty("headers")) {
                                if (!$util.isObject(message.headers))
                                    return "headers: object expected";
                                var key = Object.keys(message.headers);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.headers[key[i]]))
                                        return "headers: string{k:string} expected";
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                                    return "body: buffer expected";
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2.OAuthToken.verify(message.oauthToken);
                                    if (error)
                                        return "oauthToken." + error;
                                }
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                if (properties.authorizationHeader === 1)
                                    return "authorizationHeader: multiple values";
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2.OidcToken.verify(message.oidcToken);
                                    if (error)
                                        return "oidcToken." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HttpRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.HttpRequest} HttpRequest
                         */
                        HttpRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.HttpRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.HttpRequest();
                            if (object.url != null)
                                message.url = String(object.url);
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.headers) {
                                if (typeof object.headers !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.HttpRequest.headers: object expected");
                                message.headers = {};
                                for (var keys = Object.keys(object.headers), i = 0; i < keys.length; ++i)
                                    message.headers[keys[i]] = String(object.headers[keys[i]]);
                            }
                            if (object.body != null)
                                if (typeof object.body === "string")
                                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                                else if (object.body.length >= 0)
                                    message.body = object.body;
                            if (object.oauthToken != null) {
                                if (typeof object.oauthToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.HttpRequest.oauthToken: object expected");
                                message.oauthToken = $root.google.cloud.tasks.v2.OAuthToken.fromObject(object.oauthToken);
                            }
                            if (object.oidcToken != null) {
                                if (typeof object.oidcToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.HttpRequest.oidcToken: object expected");
                                message.oidcToken = $root.google.cloud.tasks.v2.OidcToken.fromObject(object.oidcToken);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HttpRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.HttpRequest} message HttpRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HttpRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.headers = {};
                            if (options.defaults) {
                                object.url = "";
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                                if (options.bytes === String)
                                    object.body = "";
                                else {
                                    object.body = [];
                                    if (options.bytes !== Array)
                                        object.body = $util.newBuffer(object.body);
                                }
                            }
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2.HttpMethod[message.httpMethod] : message.httpMethod;
                            var keys2;
                            if (message.headers && (keys2 = Object.keys(message.headers)).length) {
                                object.headers = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.headers[keys2[j]] = message.headers[keys2[j]];
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                object.oauthToken = $root.google.cloud.tasks.v2.OAuthToken.toObject(message.oauthToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oauthToken";
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                object.oidcToken = $root.google.cloud.tasks.v2.OidcToken.toObject(message.oidcToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oidcToken";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HttpRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HttpRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HttpRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.HttpRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HttpRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.HttpRequest";
                        };
    
                        return HttpRequest;
                    })();
    
                    v2.AppEngineHttpRequest = (function() {
    
                        /**
                         * Properties of an AppEngineHttpRequest.
                         * @memberof google.cloud.tasks.v2
                         * @interface IAppEngineHttpRequest
                         * @property {google.cloud.tasks.v2.HttpMethod|null} [httpMethod] AppEngineHttpRequest httpMethod
                         * @property {google.cloud.tasks.v2.IAppEngineRouting|null} [appEngineRouting] AppEngineHttpRequest appEngineRouting
                         * @property {string|null} [relativeUri] AppEngineHttpRequest relativeUri
                         * @property {Object.<string,string>|null} [headers] AppEngineHttpRequest headers
                         * @property {Uint8Array|null} [body] AppEngineHttpRequest body
                         */
    
                        /**
                         * Constructs a new AppEngineHttpRequest.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents an AppEngineHttpRequest.
                         * @implements IAppEngineHttpRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2.IAppEngineHttpRequest=} [properties] Properties to set
                         */
                        function AppEngineHttpRequest(properties) {
                            this.headers = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineHttpRequest httpMethod.
                         * @member {google.cloud.tasks.v2.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.httpMethod = 0;
    
                        /**
                         * AppEngineHttpRequest appEngineRouting.
                         * @member {google.cloud.tasks.v2.IAppEngineRouting|null|undefined} appEngineRouting
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.appEngineRouting = null;
    
                        /**
                         * AppEngineHttpRequest relativeUri.
                         * @member {string} relativeUri
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.relativeUri = "";
    
                        /**
                         * AppEngineHttpRequest headers.
                         * @member {Object.<string,string>} headers
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.headers = $util.emptyObject;
    
                        /**
                         * AppEngineHttpRequest body.
                         * @member {Uint8Array} body
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.body = $util.newBuffer([]);
    
                        /**
                         * Creates a new AppEngineHttpRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IAppEngineHttpRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.AppEngineHttpRequest} AppEngineHttpRequest instance
                         */
                        AppEngineHttpRequest.create = function create(properties) {
                            return new AppEngineHttpRequest(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpRequest message. Does not implicitly {@link google.cloud.tasks.v2.AppEngineHttpRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IAppEngineHttpRequest} message AppEngineHttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.httpMethod);
                            if (message.appEngineRouting != null && Object.hasOwnProperty.call(message, "appEngineRouting"))
                                $root.google.cloud.tasks.v2.AppEngineRouting.encode(message.appEngineRouting, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.relativeUri != null && Object.hasOwnProperty.call(message, "relativeUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.relativeUri);
                            if (message.headers != null && Object.hasOwnProperty.call(message, "headers"))
                                for (var keys = Object.keys(message.headers), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.headers[keys[i]]).ldelim();
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.body);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.AppEngineHttpRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.IAppEngineHttpRequest} message AppEngineHttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineHttpRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.AppEngineHttpRequest} AppEngineHttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.AppEngineHttpRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.appEngineRouting = $root.google.cloud.tasks.v2.AppEngineRouting.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.relativeUri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.headers === $util.emptyObject)
                                            message.headers = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.headers[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.body = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineHttpRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.AppEngineHttpRequest} AppEngineHttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineHttpRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineHttpRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.appEngineRouting != null && message.hasOwnProperty("appEngineRouting")) {
                                var error = $root.google.cloud.tasks.v2.AppEngineRouting.verify(message.appEngineRouting);
                                if (error)
                                    return "appEngineRouting." + error;
                            }
                            if (message.relativeUri != null && message.hasOwnProperty("relativeUri"))
                                if (!$util.isString(message.relativeUri))
                                    return "relativeUri: string expected";
                            if (message.headers != null && message.hasOwnProperty("headers")) {
                                if (!$util.isObject(message.headers))
                                    return "headers: object expected";
                                var key = Object.keys(message.headers);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.headers[key[i]]))
                                        return "headers: string{k:string} expected";
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                                    return "body: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineHttpRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.AppEngineHttpRequest} AppEngineHttpRequest
                         */
                        AppEngineHttpRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.AppEngineHttpRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.AppEngineHttpRequest();
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.appEngineRouting != null) {
                                if (typeof object.appEngineRouting !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.AppEngineHttpRequest.appEngineRouting: object expected");
                                message.appEngineRouting = $root.google.cloud.tasks.v2.AppEngineRouting.fromObject(object.appEngineRouting);
                            }
                            if (object.relativeUri != null)
                                message.relativeUri = String(object.relativeUri);
                            if (object.headers) {
                                if (typeof object.headers !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.AppEngineHttpRequest.headers: object expected");
                                message.headers = {};
                                for (var keys = Object.keys(object.headers), i = 0; i < keys.length; ++i)
                                    message.headers[keys[i]] = String(object.headers[keys[i]]);
                            }
                            if (object.body != null)
                                if (typeof object.body === "string")
                                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                                else if (object.body.length >= 0)
                                    message.body = object.body;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineHttpRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2.AppEngineHttpRequest} message AppEngineHttpRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineHttpRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.headers = {};
                            if (options.defaults) {
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                                object.appEngineRouting = null;
                                object.relativeUri = "";
                                if (options.bytes === String)
                                    object.body = "";
                                else {
                                    object.body = [];
                                    if (options.bytes !== Array)
                                        object.body = $util.newBuffer(object.body);
                                }
                            }
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2.HttpMethod[message.httpMethod] : message.httpMethod;
                            if (message.appEngineRouting != null && message.hasOwnProperty("appEngineRouting"))
                                object.appEngineRouting = $root.google.cloud.tasks.v2.AppEngineRouting.toObject(message.appEngineRouting, options);
                            if (message.relativeUri != null && message.hasOwnProperty("relativeUri"))
                                object.relativeUri = message.relativeUri;
                            var keys2;
                            if (message.headers && (keys2 = Object.keys(message.headers)).length) {
                                object.headers = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.headers[keys2[j]] = message.headers[keys2[j]];
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineHttpRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineHttpRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineHttpRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.AppEngineHttpRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineHttpRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.AppEngineHttpRequest";
                        };
    
                        return AppEngineHttpRequest;
                    })();
    
                    v2.AppEngineRouting = (function() {
    
                        /**
                         * Properties of an AppEngineRouting.
                         * @memberof google.cloud.tasks.v2
                         * @interface IAppEngineRouting
                         * @property {string|null} [service] AppEngineRouting service
                         * @property {string|null} [version] AppEngineRouting version
                         * @property {string|null} [instance] AppEngineRouting instance
                         * @property {string|null} [host] AppEngineRouting host
                         */
    
                        /**
                         * Constructs a new AppEngineRouting.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents an AppEngineRouting.
                         * @implements IAppEngineRouting
                         * @constructor
                         * @param {google.cloud.tasks.v2.IAppEngineRouting=} [properties] Properties to set
                         */
                        function AppEngineRouting(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineRouting service.
                         * @member {string} service
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.service = "";
    
                        /**
                         * AppEngineRouting version.
                         * @member {string} version
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.version = "";
    
                        /**
                         * AppEngineRouting instance.
                         * @member {string} instance
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.instance = "";
    
                        /**
                         * AppEngineRouting host.
                         * @member {string} host
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.host = "";
    
                        /**
                         * Creates a new AppEngineRouting instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2.IAppEngineRouting=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.AppEngineRouting} AppEngineRouting instance
                         */
                        AppEngineRouting.create = function create(properties) {
                            return new AppEngineRouting(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineRouting message. Does not implicitly {@link google.cloud.tasks.v2.AppEngineRouting.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2.IAppEngineRouting} message AppEngineRouting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineRouting.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.instance);
                            if (message.host != null && Object.hasOwnProperty.call(message, "host"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.host);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineRouting message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.AppEngineRouting.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2.IAppEngineRouting} message AppEngineRouting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineRouting.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineRouting message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.AppEngineRouting} AppEngineRouting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineRouting.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.AppEngineRouting();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.instance = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.host = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineRouting message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.AppEngineRouting} AppEngineRouting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineRouting.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineRouting message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineRouting.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.host != null && message.hasOwnProperty("host"))
                                if (!$util.isString(message.host))
                                    return "host: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineRouting message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.AppEngineRouting} AppEngineRouting
                         */
                        AppEngineRouting.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.AppEngineRouting)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.AppEngineRouting();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.host != null)
                                message.host = String(object.host);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineRouting message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2.AppEngineRouting} message AppEngineRouting
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineRouting.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.version = "";
                                object.instance = "";
                                object.host = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.host != null && message.hasOwnProperty("host"))
                                object.host = message.host;
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineRouting to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineRouting.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineRouting
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.AppEngineRouting
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineRouting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.AppEngineRouting";
                        };
    
                        return AppEngineRouting;
                    })();
    
                    /**
                     * HttpMethod enum.
                     * @name google.cloud.tasks.v2.HttpMethod
                     * @enum {number}
                     * @property {number} HTTP_METHOD_UNSPECIFIED=0 HTTP_METHOD_UNSPECIFIED value
                     * @property {number} POST=1 POST value
                     * @property {number} GET=2 GET value
                     * @property {number} HEAD=3 HEAD value
                     * @property {number} PUT=4 PUT value
                     * @property {number} DELETE=5 DELETE value
                     * @property {number} PATCH=6 PATCH value
                     * @property {number} OPTIONS=7 OPTIONS value
                     */
                    v2.HttpMethod = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "HTTP_METHOD_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "POST"] = 1;
                        values[valuesById[2] = "GET"] = 2;
                        values[valuesById[3] = "HEAD"] = 3;
                        values[valuesById[4] = "PUT"] = 4;
                        values[valuesById[5] = "DELETE"] = 5;
                        values[valuesById[6] = "PATCH"] = 6;
                        values[valuesById[7] = "OPTIONS"] = 7;
                        return values;
                    })();
    
                    v2.OAuthToken = (function() {
    
                        /**
                         * Properties of a OAuthToken.
                         * @memberof google.cloud.tasks.v2
                         * @interface IOAuthToken
                         * @property {string|null} [serviceAccountEmail] OAuthToken serviceAccountEmail
                         * @property {string|null} [scope] OAuthToken scope
                         */
    
                        /**
                         * Constructs a new OAuthToken.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a OAuthToken.
                         * @implements IOAuthToken
                         * @constructor
                         * @param {google.cloud.tasks.v2.IOAuthToken=} [properties] Properties to set
                         */
                        function OAuthToken(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OAuthToken serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @instance
                         */
                        OAuthToken.prototype.serviceAccountEmail = "";
    
                        /**
                         * OAuthToken scope.
                         * @member {string} scope
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @instance
                         */
                        OAuthToken.prototype.scope = "";
    
                        /**
                         * Creates a new OAuthToken instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2.IOAuthToken=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.OAuthToken} OAuthToken instance
                         */
                        OAuthToken.create = function create(properties) {
                            return new OAuthToken(properties);
                        };
    
                        /**
                         * Encodes the specified OAuthToken message. Does not implicitly {@link google.cloud.tasks.v2.OAuthToken.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2.IOAuthToken} message OAuthToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OAuthToken.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceAccountEmail);
                            if (message.scope != null && Object.hasOwnProperty.call(message, "scope"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.scope);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OAuthToken message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.OAuthToken.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2.IOAuthToken} message OAuthToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OAuthToken.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a OAuthToken message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.OAuthToken} OAuthToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OAuthToken.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.OAuthToken();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.scope = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a OAuthToken message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.OAuthToken} OAuthToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OAuthToken.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a OAuthToken message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OAuthToken.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                if (!$util.isString(message.scope))
                                    return "scope: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a OAuthToken message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.OAuthToken} OAuthToken
                         */
                        OAuthToken.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.OAuthToken)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.OAuthToken();
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.scope != null)
                                message.scope = String(object.scope);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a OAuthToken message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2.OAuthToken} message OAuthToken
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OAuthToken.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.serviceAccountEmail = "";
                                object.scope = "";
                            }
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                object.scope = message.scope;
                            return object;
                        };
    
                        /**
                         * Converts this OAuthToken to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OAuthToken.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OAuthToken
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.OAuthToken
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OAuthToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.OAuthToken";
                        };
    
                        return OAuthToken;
                    })();
    
                    v2.OidcToken = (function() {
    
                        /**
                         * Properties of an OidcToken.
                         * @memberof google.cloud.tasks.v2
                         * @interface IOidcToken
                         * @property {string|null} [serviceAccountEmail] OidcToken serviceAccountEmail
                         * @property {string|null} [audience] OidcToken audience
                         */
    
                        /**
                         * Constructs a new OidcToken.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents an OidcToken.
                         * @implements IOidcToken
                         * @constructor
                         * @param {google.cloud.tasks.v2.IOidcToken=} [properties] Properties to set
                         */
                        function OidcToken(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OidcToken serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @instance
                         */
                        OidcToken.prototype.serviceAccountEmail = "";
    
                        /**
                         * OidcToken audience.
                         * @member {string} audience
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @instance
                         */
                        OidcToken.prototype.audience = "";
    
                        /**
                         * Creates a new OidcToken instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2.IOidcToken=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.OidcToken} OidcToken instance
                         */
                        OidcToken.create = function create(properties) {
                            return new OidcToken(properties);
                        };
    
                        /**
                         * Encodes the specified OidcToken message. Does not implicitly {@link google.cloud.tasks.v2.OidcToken.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2.IOidcToken} message OidcToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OidcToken.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceAccountEmail);
                            if (message.audience != null && Object.hasOwnProperty.call(message, "audience"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.audience);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OidcToken message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.OidcToken.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2.IOidcToken} message OidcToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OidcToken.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OidcToken message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.OidcToken} OidcToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OidcToken.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.OidcToken();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.audience = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OidcToken message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.OidcToken} OidcToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OidcToken.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OidcToken message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OidcToken.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.audience != null && message.hasOwnProperty("audience"))
                                if (!$util.isString(message.audience))
                                    return "audience: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OidcToken message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.OidcToken} OidcToken
                         */
                        OidcToken.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.OidcToken)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.OidcToken();
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.audience != null)
                                message.audience = String(object.audience);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OidcToken message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2.OidcToken} message OidcToken
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OidcToken.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.serviceAccountEmail = "";
                                object.audience = "";
                            }
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.audience != null && message.hasOwnProperty("audience"))
                                object.audience = message.audience;
                            return object;
                        };
    
                        /**
                         * Converts this OidcToken to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OidcToken.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OidcToken
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.OidcToken
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OidcToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.OidcToken";
                        };
    
                        return OidcToken;
                    })();
    
                    v2.Task = (function() {
    
                        /**
                         * Properties of a Task.
                         * @memberof google.cloud.tasks.v2
                         * @interface ITask
                         * @property {string|null} [name] Task name
                         * @property {google.cloud.tasks.v2.IAppEngineHttpRequest|null} [appEngineHttpRequest] Task appEngineHttpRequest
                         * @property {google.cloud.tasks.v2.IHttpRequest|null} [httpRequest] Task httpRequest
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] Task scheduleTime
                         * @property {google.protobuf.ITimestamp|null} [createTime] Task createTime
                         * @property {google.protobuf.IDuration|null} [dispatchDeadline] Task dispatchDeadline
                         * @property {number|null} [dispatchCount] Task dispatchCount
                         * @property {number|null} [responseCount] Task responseCount
                         * @property {google.cloud.tasks.v2.IAttempt|null} [firstAttempt] Task firstAttempt
                         * @property {google.cloud.tasks.v2.IAttempt|null} [lastAttempt] Task lastAttempt
                         * @property {google.cloud.tasks.v2.Task.View|null} [view] Task view
                         */
    
                        /**
                         * Constructs a new Task.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents a Task.
                         * @implements ITask
                         * @constructor
                         * @param {google.cloud.tasks.v2.ITask=} [properties] Properties to set
                         */
                        function Task(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Task name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.name = "";
    
                        /**
                         * Task appEngineHttpRequest.
                         * @member {google.cloud.tasks.v2.IAppEngineHttpRequest|null|undefined} appEngineHttpRequest
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.appEngineHttpRequest = null;
    
                        /**
                         * Task httpRequest.
                         * @member {google.cloud.tasks.v2.IHttpRequest|null|undefined} httpRequest
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.httpRequest = null;
    
                        /**
                         * Task scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.scheduleTime = null;
    
                        /**
                         * Task createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.createTime = null;
    
                        /**
                         * Task dispatchDeadline.
                         * @member {google.protobuf.IDuration|null|undefined} dispatchDeadline
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.dispatchDeadline = null;
    
                        /**
                         * Task dispatchCount.
                         * @member {number} dispatchCount
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.dispatchCount = 0;
    
                        /**
                         * Task responseCount.
                         * @member {number} responseCount
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.responseCount = 0;
    
                        /**
                         * Task firstAttempt.
                         * @member {google.cloud.tasks.v2.IAttempt|null|undefined} firstAttempt
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.firstAttempt = null;
    
                        /**
                         * Task lastAttempt.
                         * @member {google.cloud.tasks.v2.IAttempt|null|undefined} lastAttempt
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.lastAttempt = null;
    
                        /**
                         * Task view.
                         * @member {google.cloud.tasks.v2.Task.View} view
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Task.prototype.view = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Task messageType.
                         * @member {"appEngineHttpRequest"|"httpRequest"|undefined} messageType
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         */
                        Object.defineProperty(Task.prototype, "messageType", {
                            get: $util.oneOfGetter($oneOfFields = ["appEngineHttpRequest", "httpRequest"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Task instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {google.cloud.tasks.v2.ITask=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.Task} Task instance
                         */
                        Task.create = function create(properties) {
                            return new Task(properties);
                        };
    
                        /**
                         * Encodes the specified Task message. Does not implicitly {@link google.cloud.tasks.v2.Task.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {google.cloud.tasks.v2.ITask} message Task message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Task.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.appEngineHttpRequest != null && Object.hasOwnProperty.call(message, "appEngineHttpRequest"))
                                $root.google.cloud.tasks.v2.AppEngineHttpRequest.encode(message.appEngineHttpRequest, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.httpRequest != null && Object.hasOwnProperty.call(message, "httpRequest"))
                                $root.google.cloud.tasks.v2.HttpRequest.encode(message.httpRequest, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.dispatchDeadline != null && Object.hasOwnProperty.call(message, "dispatchDeadline"))
                                $root.google.protobuf.Duration.encode(message.dispatchDeadline, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.dispatchCount != null && Object.hasOwnProperty.call(message, "dispatchCount"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.dispatchCount);
                            if (message.responseCount != null && Object.hasOwnProperty.call(message, "responseCount"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.responseCount);
                            if (message.firstAttempt != null && Object.hasOwnProperty.call(message, "firstAttempt"))
                                $root.google.cloud.tasks.v2.Attempt.encode(message.firstAttempt, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.lastAttempt != null && Object.hasOwnProperty.call(message, "lastAttempt"))
                                $root.google.cloud.tasks.v2.Attempt.encode(message.lastAttempt, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.view);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Task message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.Task.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {google.cloud.tasks.v2.ITask} message Task message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Task.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Task message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.Task} Task
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Task.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.Task();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.appEngineHttpRequest = $root.google.cloud.tasks.v2.AppEngineHttpRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.httpRequest = $root.google.cloud.tasks.v2.HttpRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.dispatchDeadline = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.dispatchCount = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.responseCount = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.firstAttempt = $root.google.cloud.tasks.v2.Attempt.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.lastAttempt = $root.google.cloud.tasks.v2.Attempt.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.view = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Task message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.Task} Task
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Task.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Task message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Task.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.appEngineHttpRequest != null && message.hasOwnProperty("appEngineHttpRequest")) {
                                properties.messageType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2.AppEngineHttpRequest.verify(message.appEngineHttpRequest);
                                    if (error)
                                        return "appEngineHttpRequest." + error;
                                }
                            }
                            if (message.httpRequest != null && message.hasOwnProperty("httpRequest")) {
                                if (properties.messageType === 1)
                                    return "messageType: multiple values";
                                properties.messageType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2.HttpRequest.verify(message.httpRequest);
                                    if (error)
                                        return "httpRequest." + error;
                                }
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.dispatchDeadline != null && message.hasOwnProperty("dispatchDeadline")) {
                                var error = $root.google.protobuf.Duration.verify(message.dispatchDeadline);
                                if (error)
                                    return "dispatchDeadline." + error;
                            }
                            if (message.dispatchCount != null && message.hasOwnProperty("dispatchCount"))
                                if (!$util.isInteger(message.dispatchCount))
                                    return "dispatchCount: integer expected";
                            if (message.responseCount != null && message.hasOwnProperty("responseCount"))
                                if (!$util.isInteger(message.responseCount))
                                    return "responseCount: integer expected";
                            if (message.firstAttempt != null && message.hasOwnProperty("firstAttempt")) {
                                var error = $root.google.cloud.tasks.v2.Attempt.verify(message.firstAttempt);
                                if (error)
                                    return "firstAttempt." + error;
                            }
                            if (message.lastAttempt != null && message.hasOwnProperty("lastAttempt")) {
                                var error = $root.google.cloud.tasks.v2.Attempt.verify(message.lastAttempt);
                                if (error)
                                    return "lastAttempt." + error;
                            }
                            if (message.view != null && message.hasOwnProperty("view"))
                                switch (message.view) {
                                default:
                                    return "view: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a Task message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.Task} Task
                         */
                        Task.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.Task)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.Task();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.appEngineHttpRequest != null) {
                                if (typeof object.appEngineHttpRequest !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.appEngineHttpRequest: object expected");
                                message.appEngineHttpRequest = $root.google.cloud.tasks.v2.AppEngineHttpRequest.fromObject(object.appEngineHttpRequest);
                            }
                            if (object.httpRequest != null) {
                                if (typeof object.httpRequest !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.httpRequest: object expected");
                                message.httpRequest = $root.google.cloud.tasks.v2.HttpRequest.fromObject(object.httpRequest);
                            }
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.dispatchDeadline != null) {
                                if (typeof object.dispatchDeadline !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.dispatchDeadline: object expected");
                                message.dispatchDeadline = $root.google.protobuf.Duration.fromObject(object.dispatchDeadline);
                            }
                            if (object.dispatchCount != null)
                                message.dispatchCount = object.dispatchCount | 0;
                            if (object.responseCount != null)
                                message.responseCount = object.responseCount | 0;
                            if (object.firstAttempt != null) {
                                if (typeof object.firstAttempt !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.firstAttempt: object expected");
                                message.firstAttempt = $root.google.cloud.tasks.v2.Attempt.fromObject(object.firstAttempt);
                            }
                            if (object.lastAttempt != null) {
                                if (typeof object.lastAttempt !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Task.lastAttempt: object expected");
                                message.lastAttempt = $root.google.cloud.tasks.v2.Attempt.fromObject(object.lastAttempt);
                            }
                            switch (object.view) {
                            default:
                                if (typeof object.view === "number") {
                                    message.view = object.view;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.view = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.view = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.view = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Task message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {google.cloud.tasks.v2.Task} message Task
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Task.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.scheduleTime = null;
                                object.createTime = null;
                                object.dispatchDeadline = null;
                                object.dispatchCount = 0;
                                object.responseCount = 0;
                                object.firstAttempt = null;
                                object.lastAttempt = null;
                                object.view = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.appEngineHttpRequest != null && message.hasOwnProperty("appEngineHttpRequest")) {
                                object.appEngineHttpRequest = $root.google.cloud.tasks.v2.AppEngineHttpRequest.toObject(message.appEngineHttpRequest, options);
                                if (options.oneofs)
                                    object.messageType = "appEngineHttpRequest";
                            }
                            if (message.httpRequest != null && message.hasOwnProperty("httpRequest")) {
                                object.httpRequest = $root.google.cloud.tasks.v2.HttpRequest.toObject(message.httpRequest, options);
                                if (options.oneofs)
                                    object.messageType = "httpRequest";
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.dispatchDeadline != null && message.hasOwnProperty("dispatchDeadline"))
                                object.dispatchDeadline = $root.google.protobuf.Duration.toObject(message.dispatchDeadline, options);
                            if (message.dispatchCount != null && message.hasOwnProperty("dispatchCount"))
                                object.dispatchCount = message.dispatchCount;
                            if (message.responseCount != null && message.hasOwnProperty("responseCount"))
                                object.responseCount = message.responseCount;
                            if (message.firstAttempt != null && message.hasOwnProperty("firstAttempt"))
                                object.firstAttempt = $root.google.cloud.tasks.v2.Attempt.toObject(message.firstAttempt, options);
                            if (message.lastAttempt != null && message.hasOwnProperty("lastAttempt"))
                                object.lastAttempt = $root.google.cloud.tasks.v2.Attempt.toObject(message.lastAttempt, options);
                            if (message.view != null && message.hasOwnProperty("view"))
                                object.view = options.enums === String ? $root.google.cloud.tasks.v2.Task.View[message.view] === undefined ? message.view : $root.google.cloud.tasks.v2.Task.View[message.view] : message.view;
                            return object;
                        };
    
                        /**
                         * Converts this Task to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.Task
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Task.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Task
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.Task
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Task.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.Task";
                        };
    
                        /**
                         * View enum.
                         * @name google.cloud.tasks.v2.Task.View
                         * @enum {number}
                         * @property {number} VIEW_UNSPECIFIED=0 VIEW_UNSPECIFIED value
                         * @property {number} BASIC=1 BASIC value
                         * @property {number} FULL=2 FULL value
                         */
                        Task.View = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "VIEW_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BASIC"] = 1;
                            values[valuesById[2] = "FULL"] = 2;
                            return values;
                        })();
    
                        return Task;
                    })();
    
                    v2.Attempt = (function() {
    
                        /**
                         * Properties of an Attempt.
                         * @memberof google.cloud.tasks.v2
                         * @interface IAttempt
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] Attempt scheduleTime
                         * @property {google.protobuf.ITimestamp|null} [dispatchTime] Attempt dispatchTime
                         * @property {google.protobuf.ITimestamp|null} [responseTime] Attempt responseTime
                         * @property {google.rpc.IStatus|null} [responseStatus] Attempt responseStatus
                         */
    
                        /**
                         * Constructs a new Attempt.
                         * @memberof google.cloud.tasks.v2
                         * @classdesc Represents an Attempt.
                         * @implements IAttempt
                         * @constructor
                         * @param {google.cloud.tasks.v2.IAttempt=} [properties] Properties to set
                         */
                        function Attempt(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Attempt scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @instance
                         */
                        Attempt.prototype.scheduleTime = null;
    
                        /**
                         * Attempt dispatchTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} dispatchTime
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @instance
                         */
                        Attempt.prototype.dispatchTime = null;
    
                        /**
                         * Attempt responseTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} responseTime
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @instance
                         */
                        Attempt.prototype.responseTime = null;
    
                        /**
                         * Attempt responseStatus.
                         * @member {google.rpc.IStatus|null|undefined} responseStatus
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @instance
                         */
                        Attempt.prototype.responseStatus = null;
    
                        /**
                         * Creates a new Attempt instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {google.cloud.tasks.v2.IAttempt=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2.Attempt} Attempt instance
                         */
                        Attempt.create = function create(properties) {
                            return new Attempt(properties);
                        };
    
                        /**
                         * Encodes the specified Attempt message. Does not implicitly {@link google.cloud.tasks.v2.Attempt.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {google.cloud.tasks.v2.IAttempt} message Attempt message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Attempt.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.dispatchTime != null && Object.hasOwnProperty.call(message, "dispatchTime"))
                                $root.google.protobuf.Timestamp.encode(message.dispatchTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseTime != null && Object.hasOwnProperty.call(message, "responseTime"))
                                $root.google.protobuf.Timestamp.encode(message.responseTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.responseStatus != null && Object.hasOwnProperty.call(message, "responseStatus"))
                                $root.google.rpc.Status.encode(message.responseStatus, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Attempt message, length delimited. Does not implicitly {@link google.cloud.tasks.v2.Attempt.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {google.cloud.tasks.v2.IAttempt} message Attempt message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Attempt.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Attempt message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2.Attempt} Attempt
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Attempt.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2.Attempt();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.dispatchTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.responseStatus = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Attempt message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2.Attempt} Attempt
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Attempt.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Attempt message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Attempt.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.dispatchTime != null && message.hasOwnProperty("dispatchTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.dispatchTime);
                                if (error)
                                    return "dispatchTime." + error;
                            }
                            if (message.responseTime != null && message.hasOwnProperty("responseTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.responseTime);
                                if (error)
                                    return "responseTime." + error;
                            }
                            if (message.responseStatus != null && message.hasOwnProperty("responseStatus")) {
                                var error = $root.google.rpc.Status.verify(message.responseStatus);
                                if (error)
                                    return "responseStatus." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Attempt message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2.Attempt} Attempt
                         */
                        Attempt.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2.Attempt)
                                return object;
                            var message = new $root.google.cloud.tasks.v2.Attempt();
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Attempt.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            if (object.dispatchTime != null) {
                                if (typeof object.dispatchTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Attempt.dispatchTime: object expected");
                                message.dispatchTime = $root.google.protobuf.Timestamp.fromObject(object.dispatchTime);
                            }
                            if (object.responseTime != null) {
                                if (typeof object.responseTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Attempt.responseTime: object expected");
                                message.responseTime = $root.google.protobuf.Timestamp.fromObject(object.responseTime);
                            }
                            if (object.responseStatus != null) {
                                if (typeof object.responseStatus !== "object")
                                    throw TypeError(".google.cloud.tasks.v2.Attempt.responseStatus: object expected");
                                message.responseStatus = $root.google.rpc.Status.fromObject(object.responseStatus);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Attempt message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {google.cloud.tasks.v2.Attempt} message Attempt
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Attempt.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.scheduleTime = null;
                                object.dispatchTime = null;
                                object.responseTime = null;
                                object.responseStatus = null;
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.dispatchTime != null && message.hasOwnProperty("dispatchTime"))
                                object.dispatchTime = $root.google.protobuf.Timestamp.toObject(message.dispatchTime, options);
                            if (message.responseTime != null && message.hasOwnProperty("responseTime"))
                                object.responseTime = $root.google.protobuf.Timestamp.toObject(message.responseTime, options);
                            if (message.responseStatus != null && message.hasOwnProperty("responseStatus"))
                                object.responseStatus = $root.google.rpc.Status.toObject(message.responseStatus, options);
                            return object;
                        };
    
                        /**
                         * Converts this Attempt to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Attempt.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Attempt
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2.Attempt
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Attempt.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2.Attempt";
                        };
    
                        return Attempt;
                    })();
    
                    return v2;
                })();
    
                tasks.v2beta2 = (function() {
    
                    /**
                     * Namespace v2beta2.
                     * @memberof google.cloud.tasks
                     * @namespace
                     */
                    var v2beta2 = {};
    
                    v2beta2.CloudTasks = (function() {
    
                        /**
                         * Constructs a new CloudTasks service.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a CloudTasks
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CloudTasks(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CloudTasks.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CloudTasks;
    
                        /**
                         * Creates new CloudTasks service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CloudTasks} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CloudTasks.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|listQueues}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef ListQueuesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.ListQueuesResponse} [response] ListQueuesResponse
                         */
    
                        /**
                         * Calls ListQueues.
                         * @function listQueues
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IListQueuesRequest} request ListQueuesRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.ListQueuesCallback} callback Node-style callback called with the error, if any, and ListQueuesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.listQueues = function listQueues(request, callback) {
                            return this.rpcCall(listQueues, $root.google.cloud.tasks.v2beta2.ListQueuesRequest, $root.google.cloud.tasks.v2beta2.ListQueuesResponse, request, callback);
                        }, "name", { value: "ListQueues" });
    
                        /**
                         * Calls ListQueues.
                         * @function listQueues
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IListQueuesRequest} request ListQueuesRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.ListQueuesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|getQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef GetQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls GetQueue.
                         * @function getQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IGetQueueRequest} request GetQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.GetQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getQueue = function getQueue(request, callback) {
                            return this.rpcCall(getQueue, $root.google.cloud.tasks.v2beta2.GetQueueRequest, $root.google.cloud.tasks.v2beta2.Queue, request, callback);
                        }, "name", { value: "GetQueue" });
    
                        /**
                         * Calls GetQueue.
                         * @function getQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IGetQueueRequest} request GetQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|createQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef CreateQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls CreateQueue.
                         * @function createQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ICreateQueueRequest} request CreateQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.CreateQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.createQueue = function createQueue(request, callback) {
                            return this.rpcCall(createQueue, $root.google.cloud.tasks.v2beta2.CreateQueueRequest, $root.google.cloud.tasks.v2beta2.Queue, request, callback);
                        }, "name", { value: "CreateQueue" });
    
                        /**
                         * Calls CreateQueue.
                         * @function createQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ICreateQueueRequest} request CreateQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|updateQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef UpdateQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls UpdateQueue.
                         * @function updateQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IUpdateQueueRequest} request UpdateQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.UpdateQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.updateQueue = function updateQueue(request, callback) {
                            return this.rpcCall(updateQueue, $root.google.cloud.tasks.v2beta2.UpdateQueueRequest, $root.google.cloud.tasks.v2beta2.Queue, request, callback);
                        }, "name", { value: "UpdateQueue" });
    
                        /**
                         * Calls UpdateQueue.
                         * @function updateQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IUpdateQueueRequest} request UpdateQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|deleteQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef DeleteQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteQueue.
                         * @function deleteQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IDeleteQueueRequest} request DeleteQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.DeleteQueueCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.deleteQueue = function deleteQueue(request, callback) {
                            return this.rpcCall(deleteQueue, $root.google.cloud.tasks.v2beta2.DeleteQueueRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteQueue" });
    
                        /**
                         * Calls DeleteQueue.
                         * @function deleteQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IDeleteQueueRequest} request DeleteQueueRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|purgeQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef PurgeQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls PurgeQueue.
                         * @function purgeQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IPurgeQueueRequest} request PurgeQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.PurgeQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.purgeQueue = function purgeQueue(request, callback) {
                            return this.rpcCall(purgeQueue, $root.google.cloud.tasks.v2beta2.PurgeQueueRequest, $root.google.cloud.tasks.v2beta2.Queue, request, callback);
                        }, "name", { value: "PurgeQueue" });
    
                        /**
                         * Calls PurgeQueue.
                         * @function purgeQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IPurgeQueueRequest} request PurgeQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|pauseQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef PauseQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls PauseQueue.
                         * @function pauseQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IPauseQueueRequest} request PauseQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.PauseQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.pauseQueue = function pauseQueue(request, callback) {
                            return this.rpcCall(pauseQueue, $root.google.cloud.tasks.v2beta2.PauseQueueRequest, $root.google.cloud.tasks.v2beta2.Queue, request, callback);
                        }, "name", { value: "PauseQueue" });
    
                        /**
                         * Calls PauseQueue.
                         * @function pauseQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IPauseQueueRequest} request PauseQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|resumeQueue}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef ResumeQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Queue} [response] Queue
                         */
    
                        /**
                         * Calls ResumeQueue.
                         * @function resumeQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IResumeQueueRequest} request ResumeQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.ResumeQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.resumeQueue = function resumeQueue(request, callback) {
                            return this.rpcCall(resumeQueue, $root.google.cloud.tasks.v2beta2.ResumeQueueRequest, $root.google.cloud.tasks.v2beta2.Queue, request, callback);
                        }, "name", { value: "ResumeQueue" });
    
                        /**
                         * Calls ResumeQueue.
                         * @function resumeQueue
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IResumeQueueRequest} request ResumeQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|uploadQueueYaml}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef UploadQueueYamlCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls UploadQueueYaml.
                         * @function uploadQueueYaml
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IUploadQueueYamlRequest} request UploadQueueYamlRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.UploadQueueYamlCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.uploadQueueYaml = function uploadQueueYaml(request, callback) {
                            return this.rpcCall(uploadQueueYaml, $root.google.cloud.tasks.v2beta2.UploadQueueYamlRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "UploadQueueYaml" });
    
                        /**
                         * Calls UploadQueueYaml.
                         * @function uploadQueueYaml
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IUploadQueueYamlRequest} request UploadQueueYamlRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|getIamPolicy}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef GetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                            return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "GetIamPolicy" });
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|setIamPolicy}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef SetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                            return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "SetIamPolicy" });
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|testIamPermissions}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef TestIamPermissionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                         */
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                            return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                        }, "name", { value: "TestIamPermissions" });
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|listTasks}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef ListTasksCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.ListTasksResponse} [response] ListTasksResponse
                         */
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IListTasksRequest} request ListTasksRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.ListTasksCallback} callback Node-style callback called with the error, if any, and ListTasksResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.listTasks = function listTasks(request, callback) {
                            return this.rpcCall(listTasks, $root.google.cloud.tasks.v2beta2.ListTasksRequest, $root.google.cloud.tasks.v2beta2.ListTasksResponse, request, callback);
                        }, "name", { value: "ListTasks" });
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IListTasksRequest} request ListTasksRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.ListTasksResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|getTask}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef GetTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Task} [response] Task
                         */
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.GetTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getTask = function getTask(request, callback) {
                            return this.rpcCall(getTask, $root.google.cloud.tasks.v2beta2.GetTaskRequest, $root.google.cloud.tasks.v2beta2.Task, request, callback);
                        }, "name", { value: "GetTask" });
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|createTask}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef CreateTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Task} [response] Task
                         */
    
                        /**
                         * Calls CreateTask.
                         * @function createTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ICreateTaskRequest} request CreateTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.CreateTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.createTask = function createTask(request, callback) {
                            return this.rpcCall(createTask, $root.google.cloud.tasks.v2beta2.CreateTaskRequest, $root.google.cloud.tasks.v2beta2.Task, request, callback);
                        }, "name", { value: "CreateTask" });
    
                        /**
                         * Calls CreateTask.
                         * @function createTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ICreateTaskRequest} request CreateTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|deleteTask}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef DeleteTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteTask.
                         * @function deleteTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IDeleteTaskRequest} request DeleteTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.DeleteTaskCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.deleteTask = function deleteTask(request, callback) {
                            return this.rpcCall(deleteTask, $root.google.cloud.tasks.v2beta2.DeleteTaskRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteTask" });
    
                        /**
                         * Calls DeleteTask.
                         * @function deleteTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IDeleteTaskRequest} request DeleteTaskRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|leaseTasks}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef LeaseTasksCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.LeaseTasksResponse} [response] LeaseTasksResponse
                         */
    
                        /**
                         * Calls LeaseTasks.
                         * @function leaseTasks
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksRequest} request LeaseTasksRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.LeaseTasksCallback} callback Node-style callback called with the error, if any, and LeaseTasksResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.leaseTasks = function leaseTasks(request, callback) {
                            return this.rpcCall(leaseTasks, $root.google.cloud.tasks.v2beta2.LeaseTasksRequest, $root.google.cloud.tasks.v2beta2.LeaseTasksResponse, request, callback);
                        }, "name", { value: "LeaseTasks" });
    
                        /**
                         * Calls LeaseTasks.
                         * @function leaseTasks
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksRequest} request LeaseTasksRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.LeaseTasksResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|acknowledgeTask}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef AcknowledgeTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls AcknowledgeTask.
                         * @function acknowledgeTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest} request AcknowledgeTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.AcknowledgeTaskCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.acknowledgeTask = function acknowledgeTask(request, callback) {
                            return this.rpcCall(acknowledgeTask, $root.google.cloud.tasks.v2beta2.AcknowledgeTaskRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "AcknowledgeTask" });
    
                        /**
                         * Calls AcknowledgeTask.
                         * @function acknowledgeTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest} request AcknowledgeTaskRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|renewLease}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef RenewLeaseCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Task} [response] Task
                         */
    
                        /**
                         * Calls RenewLease.
                         * @function renewLease
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IRenewLeaseRequest} request RenewLeaseRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.RenewLeaseCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.renewLease = function renewLease(request, callback) {
                            return this.rpcCall(renewLease, $root.google.cloud.tasks.v2beta2.RenewLeaseRequest, $root.google.cloud.tasks.v2beta2.Task, request, callback);
                        }, "name", { value: "RenewLease" });
    
                        /**
                         * Calls RenewLease.
                         * @function renewLease
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IRenewLeaseRequest} request RenewLeaseRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|cancelLease}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef CancelLeaseCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Task} [response] Task
                         */
    
                        /**
                         * Calls CancelLease.
                         * @function cancelLease
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ICancelLeaseRequest} request CancelLeaseRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.CancelLeaseCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.cancelLease = function cancelLease(request, callback) {
                            return this.rpcCall(cancelLease, $root.google.cloud.tasks.v2beta2.CancelLeaseRequest, $root.google.cloud.tasks.v2beta2.Task, request, callback);
                        }, "name", { value: "CancelLease" });
    
                        /**
                         * Calls CancelLease.
                         * @function cancelLease
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.ICancelLeaseRequest} request CancelLeaseRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta2.CloudTasks|runTask}.
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @typedef RunTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta2.Task} [response] Task
                         */
    
                        /**
                         * Calls RunTask.
                         * @function runTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IRunTaskRequest} request RunTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta2.CloudTasks.RunTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.runTask = function runTask(request, callback) {
                            return this.rpcCall(runTask, $root.google.cloud.tasks.v2beta2.RunTaskRequest, $root.google.cloud.tasks.v2beta2.Task, request, callback);
                        }, "name", { value: "RunTask" });
    
                        /**
                         * Calls RunTask.
                         * @function runTask
                         * @memberof google.cloud.tasks.v2beta2.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta2.IRunTaskRequest} request RunTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta2.Task>} Promise
                         * @variation 2
                         */
    
                        return CloudTasks;
                    })();
    
                    v2beta2.ListQueuesRequest = (function() {
    
                        /**
                         * Properties of a ListQueuesRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IListQueuesRequest
                         * @property {string|null} [parent] ListQueuesRequest parent
                         * @property {string|null} [filter] ListQueuesRequest filter
                         * @property {number|null} [pageSize] ListQueuesRequest pageSize
                         * @property {string|null} [pageToken] ListQueuesRequest pageToken
                         * @property {google.protobuf.IFieldMask|null} [readMask] ListQueuesRequest readMask
                         */
    
                        /**
                         * Constructs a new ListQueuesRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a ListQueuesRequest.
                         * @implements IListQueuesRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IListQueuesRequest=} [properties] Properties to set
                         */
                        function ListQueuesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListQueuesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.parent = "";
    
                        /**
                         * ListQueuesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.filter = "";
    
                        /**
                         * ListQueuesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListQueuesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.pageToken = "";
    
                        /**
                         * ListQueuesRequest readMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} readMask
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.readMask = null;
    
                        /**
                         * Creates a new ListQueuesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListQueuesRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesRequest} ListQueuesRequest instance
                         */
                        ListQueuesRequest.create = function create(properties) {
                            return new ListQueuesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListQueuesRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.ListQueuesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListQueuesRequest} message ListQueuesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            if (message.readMask != null && Object.hasOwnProperty.call(message, "readMask"))
                                $root.google.protobuf.FieldMask.encode(message.readMask, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListQueuesRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.ListQueuesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListQueuesRequest} message ListQueuesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListQueuesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesRequest} ListQueuesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.ListQueuesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.readMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListQueuesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesRequest} ListQueuesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListQueuesRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListQueuesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.readMask != null && message.hasOwnProperty("readMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.readMask);
                                if (error)
                                    return "readMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListQueuesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesRequest} ListQueuesRequest
                         */
                        ListQueuesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.ListQueuesRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.ListQueuesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.readMask != null) {
                                if (typeof object.readMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.ListQueuesRequest.readMask: object expected");
                                message.readMask = $root.google.protobuf.FieldMask.fromObject(object.readMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListQueuesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ListQueuesRequest} message ListQueuesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListQueuesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.readMask = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.readMask != null && message.hasOwnProperty("readMask"))
                                object.readMask = $root.google.protobuf.FieldMask.toObject(message.readMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this ListQueuesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListQueuesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListQueuesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListQueuesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.ListQueuesRequest";
                        };
    
                        return ListQueuesRequest;
                    })();
    
                    v2beta2.ListQueuesResponse = (function() {
    
                        /**
                         * Properties of a ListQueuesResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IListQueuesResponse
                         * @property {Array.<google.cloud.tasks.v2beta2.IQueue>|null} [queues] ListQueuesResponse queues
                         * @property {string|null} [nextPageToken] ListQueuesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListQueuesResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a ListQueuesResponse.
                         * @implements IListQueuesResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IListQueuesResponse=} [properties] Properties to set
                         */
                        function ListQueuesResponse(properties) {
                            this.queues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListQueuesResponse queues.
                         * @member {Array.<google.cloud.tasks.v2beta2.IQueue>} queues
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @instance
                         */
                        ListQueuesResponse.prototype.queues = $util.emptyArray;
    
                        /**
                         * ListQueuesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @instance
                         */
                        ListQueuesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListQueuesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListQueuesResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesResponse} ListQueuesResponse instance
                         */
                        ListQueuesResponse.create = function create(properties) {
                            return new ListQueuesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListQueuesResponse message. Does not implicitly {@link google.cloud.tasks.v2beta2.ListQueuesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListQueuesResponse} message ListQueuesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queues != null && message.queues.length)
                                for (var i = 0; i < message.queues.length; ++i)
                                    $root.google.cloud.tasks.v2beta2.Queue.encode(message.queues[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListQueuesResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.ListQueuesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListQueuesResponse} message ListQueuesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListQueuesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesResponse} ListQueuesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.ListQueuesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.queues && message.queues.length))
                                            message.queues = [];
                                        message.queues.push($root.google.cloud.tasks.v2beta2.Queue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListQueuesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesResponse} ListQueuesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListQueuesResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListQueuesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queues != null && message.hasOwnProperty("queues")) {
                                if (!Array.isArray(message.queues))
                                    return "queues: array expected";
                                for (var i = 0; i < message.queues.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta2.Queue.verify(message.queues[i]);
                                    if (error)
                                        return "queues." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListQueuesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.ListQueuesResponse} ListQueuesResponse
                         */
                        ListQueuesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.ListQueuesResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.ListQueuesResponse();
                            if (object.queues) {
                                if (!Array.isArray(object.queues))
                                    throw TypeError(".google.cloud.tasks.v2beta2.ListQueuesResponse.queues: array expected");
                                message.queues = [];
                                for (var i = 0; i < object.queues.length; ++i) {
                                    if (typeof object.queues[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta2.ListQueuesResponse.queues: object expected");
                                    message.queues[i] = $root.google.cloud.tasks.v2beta2.Queue.fromObject(object.queues[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListQueuesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ListQueuesResponse} message ListQueuesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListQueuesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.queues = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.queues && message.queues.length) {
                                object.queues = [];
                                for (var j = 0; j < message.queues.length; ++j)
                                    object.queues[j] = $root.google.cloud.tasks.v2beta2.Queue.toObject(message.queues[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListQueuesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListQueuesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListQueuesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.ListQueuesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListQueuesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.ListQueuesResponse";
                        };
    
                        return ListQueuesResponse;
                    })();
    
                    v2beta2.GetQueueRequest = (function() {
    
                        /**
                         * Properties of a GetQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IGetQueueRequest
                         * @property {string|null} [name] GetQueueRequest name
                         * @property {google.protobuf.IFieldMask|null} [readMask] GetQueueRequest readMask
                         */
    
                        /**
                         * Constructs a new GetQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a GetQueueRequest.
                         * @implements IGetQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IGetQueueRequest=} [properties] Properties to set
                         */
                        function GetQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @instance
                         */
                        GetQueueRequest.prototype.name = "";
    
                        /**
                         * GetQueueRequest readMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} readMask
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @instance
                         */
                        GetQueueRequest.prototype.readMask = null;
    
                        /**
                         * Creates a new GetQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IGetQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.GetQueueRequest} GetQueueRequest instance
                         */
                        GetQueueRequest.create = function create(properties) {
                            return new GetQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.GetQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IGetQueueRequest} message GetQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.readMask != null && Object.hasOwnProperty.call(message, "readMask"))
                                $root.google.protobuf.FieldMask.encode(message.readMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.GetQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IGetQueueRequest} message GetQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.GetQueueRequest} GetQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.GetQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.readMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.GetQueueRequest} GetQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.readMask != null && message.hasOwnProperty("readMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.readMask);
                                if (error)
                                    return "readMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GetQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.GetQueueRequest} GetQueueRequest
                         */
                        GetQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.GetQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.GetQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.readMask != null) {
                                if (typeof object.readMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.GetQueueRequest.readMask: object expected");
                                message.readMask = $root.google.protobuf.FieldMask.fromObject(object.readMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.GetQueueRequest} message GetQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.readMask = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.readMask != null && message.hasOwnProperty("readMask"))
                                object.readMask = $root.google.protobuf.FieldMask.toObject(message.readMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this GetQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.GetQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.GetQueueRequest";
                        };
    
                        return GetQueueRequest;
                    })();
    
                    v2beta2.CreateQueueRequest = (function() {
    
                        /**
                         * Properties of a CreateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ICreateQueueRequest
                         * @property {string|null} [parent] CreateQueueRequest parent
                         * @property {google.cloud.tasks.v2beta2.IQueue|null} [queue] CreateQueueRequest queue
                         */
    
                        /**
                         * Constructs a new CreateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a CreateQueueRequest.
                         * @implements ICreateQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ICreateQueueRequest=} [properties] Properties to set
                         */
                        function CreateQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateQueueRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @instance
                         */
                        CreateQueueRequest.prototype.parent = "";
    
                        /**
                         * CreateQueueRequest queue.
                         * @member {google.cloud.tasks.v2beta2.IQueue|null|undefined} queue
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @instance
                         */
                        CreateQueueRequest.prototype.queue = null;
    
                        /**
                         * Creates a new CreateQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICreateQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.CreateQueueRequest} CreateQueueRequest instance
                         */
                        CreateQueueRequest.create = function create(properties) {
                            return new CreateQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.CreateQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICreateQueueRequest} message CreateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                $root.google.cloud.tasks.v2beta2.Queue.encode(message.queue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.CreateQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICreateQueueRequest} message CreateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.CreateQueueRequest} CreateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.CreateQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.queue = $root.google.cloud.tasks.v2beta2.Queue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.CreateQueueRequest} CreateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.queue != null && message.hasOwnProperty("queue")) {
                                var error = $root.google.cloud.tasks.v2beta2.Queue.verify(message.queue);
                                if (error)
                                    return "queue." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.CreateQueueRequest} CreateQueueRequest
                         */
                        CreateQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.CreateQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.CreateQueueRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.queue != null) {
                                if (typeof object.queue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.CreateQueueRequest.queue: object expected");
                                message.queue = $root.google.cloud.tasks.v2beta2.Queue.fromObject(object.queue);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.CreateQueueRequest} message CreateQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.queue = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = $root.google.cloud.tasks.v2beta2.Queue.toObject(message.queue, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.CreateQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.CreateQueueRequest";
                        };
    
                        return CreateQueueRequest;
                    })();
    
                    v2beta2.UpdateQueueRequest = (function() {
    
                        /**
                         * Properties of an UpdateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IUpdateQueueRequest
                         * @property {google.cloud.tasks.v2beta2.IQueue|null} [queue] UpdateQueueRequest queue
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateQueueRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an UpdateQueueRequest.
                         * @implements IUpdateQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IUpdateQueueRequest=} [properties] Properties to set
                         */
                        function UpdateQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateQueueRequest queue.
                         * @member {google.cloud.tasks.v2beta2.IQueue|null|undefined} queue
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @instance
                         */
                        UpdateQueueRequest.prototype.queue = null;
    
                        /**
                         * UpdateQueueRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @instance
                         */
                        UpdateQueueRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUpdateQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.UpdateQueueRequest} UpdateQueueRequest instance
                         */
                        UpdateQueueRequest.create = function create(properties) {
                            return new UpdateQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.UpdateQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUpdateQueueRequest} message UpdateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                $root.google.cloud.tasks.v2beta2.Queue.encode(message.queue, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.UpdateQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUpdateQueueRequest} message UpdateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.UpdateQueueRequest} UpdateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.UpdateQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queue = $root.google.cloud.tasks.v2beta2.Queue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.UpdateQueueRequest} UpdateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queue != null && message.hasOwnProperty("queue")) {
                                var error = $root.google.cloud.tasks.v2beta2.Queue.verify(message.queue);
                                if (error)
                                    return "queue." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.UpdateQueueRequest} UpdateQueueRequest
                         */
                        UpdateQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.UpdateQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.UpdateQueueRequest();
                            if (object.queue != null) {
                                if (typeof object.queue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.UpdateQueueRequest.queue: object expected");
                                message.queue = $root.google.cloud.tasks.v2beta2.Queue.fromObject(object.queue);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.UpdateQueueRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.UpdateQueueRequest} message UpdateQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.queue = null;
                                object.updateMask = null;
                            }
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = $root.google.cloud.tasks.v2beta2.Queue.toObject(message.queue, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.UpdateQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.UpdateQueueRequest";
                        };
    
                        return UpdateQueueRequest;
                    })();
    
                    v2beta2.DeleteQueueRequest = (function() {
    
                        /**
                         * Properties of a DeleteQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IDeleteQueueRequest
                         * @property {string|null} [name] DeleteQueueRequest name
                         */
    
                        /**
                         * Constructs a new DeleteQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a DeleteQueueRequest.
                         * @implements IDeleteQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IDeleteQueueRequest=} [properties] Properties to set
                         */
                        function DeleteQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @instance
                         */
                        DeleteQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IDeleteQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.DeleteQueueRequest} DeleteQueueRequest instance
                         */
                        DeleteQueueRequest.create = function create(properties) {
                            return new DeleteQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.DeleteQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IDeleteQueueRequest} message DeleteQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.DeleteQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IDeleteQueueRequest} message DeleteQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.DeleteQueueRequest} DeleteQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.DeleteQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.DeleteQueueRequest} DeleteQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.DeleteQueueRequest} DeleteQueueRequest
                         */
                        DeleteQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.DeleteQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.DeleteQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.DeleteQueueRequest} message DeleteQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.DeleteQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.DeleteQueueRequest";
                        };
    
                        return DeleteQueueRequest;
                    })();
    
                    v2beta2.PurgeQueueRequest = (function() {
    
                        /**
                         * Properties of a PurgeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IPurgeQueueRequest
                         * @property {string|null} [name] PurgeQueueRequest name
                         */
    
                        /**
                         * Constructs a new PurgeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a PurgeQueueRequest.
                         * @implements IPurgeQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IPurgeQueueRequest=} [properties] Properties to set
                         */
                        function PurgeQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurgeQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @instance
                         */
                        PurgeQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new PurgeQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPurgeQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.PurgeQueueRequest} PurgeQueueRequest instance
                         */
                        PurgeQueueRequest.create = function create(properties) {
                            return new PurgeQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PurgeQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.PurgeQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPurgeQueueRequest} message PurgeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurgeQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.PurgeQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPurgeQueueRequest} message PurgeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurgeQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.PurgeQueueRequest} PurgeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.PurgeQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurgeQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.PurgeQueueRequest} PurgeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurgeQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurgeQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PurgeQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.PurgeQueueRequest} PurgeQueueRequest
                         */
                        PurgeQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.PurgeQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.PurgeQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurgeQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.PurgeQueueRequest} message PurgeQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurgeQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this PurgeQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurgeQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurgeQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.PurgeQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurgeQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.PurgeQueueRequest";
                        };
    
                        return PurgeQueueRequest;
                    })();
    
                    v2beta2.PauseQueueRequest = (function() {
    
                        /**
                         * Properties of a PauseQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IPauseQueueRequest
                         * @property {string|null} [name] PauseQueueRequest name
                         */
    
                        /**
                         * Constructs a new PauseQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a PauseQueueRequest.
                         * @implements IPauseQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IPauseQueueRequest=} [properties] Properties to set
                         */
                        function PauseQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PauseQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @instance
                         */
                        PauseQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new PauseQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPauseQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.PauseQueueRequest} PauseQueueRequest instance
                         */
                        PauseQueueRequest.create = function create(properties) {
                            return new PauseQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PauseQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.PauseQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPauseQueueRequest} message PauseQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PauseQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PauseQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.PauseQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPauseQueueRequest} message PauseQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PauseQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PauseQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.PauseQueueRequest} PauseQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PauseQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.PauseQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PauseQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.PauseQueueRequest} PauseQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PauseQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PauseQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PauseQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PauseQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.PauseQueueRequest} PauseQueueRequest
                         */
                        PauseQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.PauseQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.PauseQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PauseQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.PauseQueueRequest} message PauseQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PauseQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this PauseQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PauseQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PauseQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.PauseQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PauseQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.PauseQueueRequest";
                        };
    
                        return PauseQueueRequest;
                    })();
    
                    v2beta2.ResumeQueueRequest = (function() {
    
                        /**
                         * Properties of a ResumeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IResumeQueueRequest
                         * @property {string|null} [name] ResumeQueueRequest name
                         */
    
                        /**
                         * Constructs a new ResumeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a ResumeQueueRequest.
                         * @implements IResumeQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IResumeQueueRequest=} [properties] Properties to set
                         */
                        function ResumeQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResumeQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @instance
                         */
                        ResumeQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new ResumeQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IResumeQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.ResumeQueueRequest} ResumeQueueRequest instance
                         */
                        ResumeQueueRequest.create = function create(properties) {
                            return new ResumeQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResumeQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.ResumeQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IResumeQueueRequest} message ResumeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResumeQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResumeQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.ResumeQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IResumeQueueRequest} message ResumeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResumeQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResumeQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.ResumeQueueRequest} ResumeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResumeQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.ResumeQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResumeQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.ResumeQueueRequest} ResumeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResumeQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResumeQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResumeQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResumeQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.ResumeQueueRequest} ResumeQueueRequest
                         */
                        ResumeQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.ResumeQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.ResumeQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResumeQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ResumeQueueRequest} message ResumeQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResumeQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ResumeQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResumeQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResumeQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.ResumeQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResumeQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.ResumeQueueRequest";
                        };
    
                        return ResumeQueueRequest;
                    })();
    
                    v2beta2.UploadQueueYamlRequest = (function() {
    
                        /**
                         * Properties of an UploadQueueYamlRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IUploadQueueYamlRequest
                         * @property {string|null} [appId] UploadQueueYamlRequest appId
                         * @property {google.api.IHttpBody|null} [httpBody] UploadQueueYamlRequest httpBody
                         */
    
                        /**
                         * Constructs a new UploadQueueYamlRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an UploadQueueYamlRequest.
                         * @implements IUploadQueueYamlRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IUploadQueueYamlRequest=} [properties] Properties to set
                         */
                        function UploadQueueYamlRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UploadQueueYamlRequest appId.
                         * @member {string} appId
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @instance
                         */
                        UploadQueueYamlRequest.prototype.appId = "";
    
                        /**
                         * UploadQueueYamlRequest httpBody.
                         * @member {google.api.IHttpBody|null|undefined} httpBody
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @instance
                         */
                        UploadQueueYamlRequest.prototype.httpBody = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * UploadQueueYamlRequest _httpBody.
                         * @member {"httpBody"|undefined} _httpBody
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @instance
                         */
                        Object.defineProperty(UploadQueueYamlRequest.prototype, "_httpBody", {
                            get: $util.oneOfGetter($oneOfFields = ["httpBody"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new UploadQueueYamlRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUploadQueueYamlRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.UploadQueueYamlRequest} UploadQueueYamlRequest instance
                         */
                        UploadQueueYamlRequest.create = function create(properties) {
                            return new UploadQueueYamlRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UploadQueueYamlRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.UploadQueueYamlRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUploadQueueYamlRequest} message UploadQueueYamlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UploadQueueYamlRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.appId != null && Object.hasOwnProperty.call(message, "appId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.appId);
                            if (message.httpBody != null && Object.hasOwnProperty.call(message, "httpBody"))
                                $root.google.api.HttpBody.encode(message.httpBody, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UploadQueueYamlRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.UploadQueueYamlRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUploadQueueYamlRequest} message UploadQueueYamlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UploadQueueYamlRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UploadQueueYamlRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.UploadQueueYamlRequest} UploadQueueYamlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UploadQueueYamlRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.UploadQueueYamlRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.appId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.httpBody = $root.google.api.HttpBody.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UploadQueueYamlRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.UploadQueueYamlRequest} UploadQueueYamlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UploadQueueYamlRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UploadQueueYamlRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UploadQueueYamlRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.appId != null && message.hasOwnProperty("appId"))
                                if (!$util.isString(message.appId))
                                    return "appId: string expected";
                            if (message.httpBody != null && message.hasOwnProperty("httpBody")) {
                                properties._httpBody = 1;
                                {
                                    var error = $root.google.api.HttpBody.verify(message.httpBody);
                                    if (error)
                                        return "httpBody." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UploadQueueYamlRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.UploadQueueYamlRequest} UploadQueueYamlRequest
                         */
                        UploadQueueYamlRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.UploadQueueYamlRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.UploadQueueYamlRequest();
                            if (object.appId != null)
                                message.appId = String(object.appId);
                            if (object.httpBody != null) {
                                if (typeof object.httpBody !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.UploadQueueYamlRequest.httpBody: object expected");
                                message.httpBody = $root.google.api.HttpBody.fromObject(object.httpBody);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UploadQueueYamlRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.UploadQueueYamlRequest} message UploadQueueYamlRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UploadQueueYamlRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.appId = "";
                            if (message.appId != null && message.hasOwnProperty("appId"))
                                object.appId = message.appId;
                            if (message.httpBody != null && message.hasOwnProperty("httpBody")) {
                                object.httpBody = $root.google.api.HttpBody.toObject(message.httpBody, options);
                                if (options.oneofs)
                                    object._httpBody = "httpBody";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this UploadQueueYamlRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UploadQueueYamlRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UploadQueueYamlRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.UploadQueueYamlRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UploadQueueYamlRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.UploadQueueYamlRequest";
                        };
    
                        return UploadQueueYamlRequest;
                    })();
    
                    v2beta2.ListTasksRequest = (function() {
    
                        /**
                         * Properties of a ListTasksRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IListTasksRequest
                         * @property {string|null} [parent] ListTasksRequest parent
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] ListTasksRequest responseView
                         * @property {number|null} [pageSize] ListTasksRequest pageSize
                         * @property {string|null} [pageToken] ListTasksRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListTasksRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a ListTasksRequest.
                         * @implements IListTasksRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IListTasksRequest=} [properties] Properties to set
                         */
                        function ListTasksRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.parent = "";
    
                        /**
                         * ListTasksRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.responseView = 0;
    
                        /**
                         * ListTasksRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageSize = 0;
    
                        /**
                         * ListTasksRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListTasksRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListTasksRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.ListTasksRequest} ListTasksRequest instance
                         */
                        ListTasksRequest.create = function create(properties) {
                            return new ListTasksRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.ListTasksRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.ListTasksRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.ListTasksRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.ListTasksRequest} ListTasksRequest
                         */
                        ListTasksRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.ListTasksRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.ListTasksRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ListTasksRequest} message ListTasksRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.ListTasksRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.ListTasksRequest";
                        };
    
                        return ListTasksRequest;
                    })();
    
                    v2beta2.ListTasksResponse = (function() {
    
                        /**
                         * Properties of a ListTasksResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IListTasksResponse
                         * @property {Array.<google.cloud.tasks.v2beta2.ITask>|null} [tasks] ListTasksResponse tasks
                         * @property {string|null} [nextPageToken] ListTasksResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListTasksResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a ListTasksResponse.
                         * @implements IListTasksResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IListTasksResponse=} [properties] Properties to set
                         */
                        function ListTasksResponse(properties) {
                            this.tasks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksResponse tasks.
                         * @member {Array.<google.cloud.tasks.v2beta2.ITask>} tasks
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.tasks = $util.emptyArray;
    
                        /**
                         * ListTasksResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListTasksResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListTasksResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.ListTasksResponse} ListTasksResponse instance
                         */
                        ListTasksResponse.create = function create(properties) {
                            return new ListTasksResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message. Does not implicitly {@link google.cloud.tasks.v2beta2.ListTasksResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasks != null && message.tasks.length)
                                for (var i = 0; i < message.tasks.length; ++i)
                                    $root.google.cloud.tasks.v2beta2.Task.encode(message.tasks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.ListTasksResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.ListTasksResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.tasks && message.tasks.length))
                                            message.tasks = [];
                                        message.tasks.push($root.google.cloud.tasks.v2beta2.Task.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasks != null && message.hasOwnProperty("tasks")) {
                                if (!Array.isArray(message.tasks))
                                    return "tasks: array expected";
                                for (var i = 0; i < message.tasks.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta2.Task.verify(message.tasks[i]);
                                    if (error)
                                        return "tasks." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.ListTasksResponse} ListTasksResponse
                         */
                        ListTasksResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.ListTasksResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.ListTasksResponse();
                            if (object.tasks) {
                                if (!Array.isArray(object.tasks))
                                    throw TypeError(".google.cloud.tasks.v2beta2.ListTasksResponse.tasks: array expected");
                                message.tasks = [];
                                for (var i = 0; i < object.tasks.length; ++i) {
                                    if (typeof object.tasks[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta2.ListTasksResponse.tasks: object expected");
                                    message.tasks[i] = $root.google.cloud.tasks.v2beta2.Task.fromObject(object.tasks[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ListTasksResponse} message ListTasksResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tasks = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.tasks && message.tasks.length) {
                                object.tasks = [];
                                for (var j = 0; j < message.tasks.length; ++j)
                                    object.tasks[j] = $root.google.cloud.tasks.v2beta2.Task.toObject(message.tasks[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.ListTasksResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.ListTasksResponse";
                        };
    
                        return ListTasksResponse;
                    })();
    
                    v2beta2.GetTaskRequest = (function() {
    
                        /**
                         * Properties of a GetTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IGetTaskRequest
                         * @property {string|null} [name] GetTaskRequest name
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] GetTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new GetTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a GetTaskRequest.
                         * @implements IGetTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IGetTaskRequest=} [properties] Properties to set
                         */
                        function GetTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.name = "";
    
                        /**
                         * GetTaskRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new GetTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IGetTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.GetTaskRequest} GetTaskRequest instance
                         */
                        GetTaskRequest.create = function create(properties) {
                            return new GetTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.GetTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.GetTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.GetTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a GetTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.GetTaskRequest} GetTaskRequest
                         */
                        GetTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.GetTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.GetTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.GetTaskRequest} message GetTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this GetTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.GetTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.GetTaskRequest";
                        };
    
                        return GetTaskRequest;
                    })();
    
                    v2beta2.CreateTaskRequest = (function() {
    
                        /**
                         * Properties of a CreateTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ICreateTaskRequest
                         * @property {string|null} [parent] CreateTaskRequest parent
                         * @property {google.cloud.tasks.v2beta2.ITask|null} [task] CreateTaskRequest task
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] CreateTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new CreateTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a CreateTaskRequest.
                         * @implements ICreateTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ICreateTaskRequest=} [properties] Properties to set
                         */
                        function CreateTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateTaskRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.parent = "";
    
                        /**
                         * CreateTaskRequest task.
                         * @member {google.cloud.tasks.v2beta2.ITask|null|undefined} task
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.task = null;
    
                        /**
                         * CreateTaskRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new CreateTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICreateTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.CreateTaskRequest} CreateTaskRequest instance
                         */
                        CreateTaskRequest.create = function create(properties) {
                            return new CreateTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.CreateTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICreateTaskRequest} message CreateTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.task != null && Object.hasOwnProperty.call(message, "task"))
                                $root.google.cloud.tasks.v2beta2.Task.encode(message.task, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.CreateTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICreateTaskRequest} message CreateTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.CreateTaskRequest} CreateTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.CreateTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.task = $root.google.cloud.tasks.v2beta2.Task.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.CreateTaskRequest} CreateTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.task != null && message.hasOwnProperty("task")) {
                                var error = $root.google.cloud.tasks.v2beta2.Task.verify(message.task);
                                if (error)
                                    return "task." + error;
                            }
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CreateTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.CreateTaskRequest} CreateTaskRequest
                         */
                        CreateTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.CreateTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.CreateTaskRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.task != null) {
                                if (typeof object.task !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.CreateTaskRequest.task: object expected");
                                message.task = $root.google.cloud.tasks.v2beta2.Task.fromObject(object.task);
                            }
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.CreateTaskRequest} message CreateTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.task = null;
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.task != null && message.hasOwnProperty("task"))
                                object.task = $root.google.cloud.tasks.v2beta2.Task.toObject(message.task, options);
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this CreateTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.CreateTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.CreateTaskRequest";
                        };
    
                        return CreateTaskRequest;
                    })();
    
                    v2beta2.DeleteTaskRequest = (function() {
    
                        /**
                         * Properties of a DeleteTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IDeleteTaskRequest
                         * @property {string|null} [name] DeleteTaskRequest name
                         */
    
                        /**
                         * Constructs a new DeleteTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a DeleteTaskRequest.
                         * @implements IDeleteTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IDeleteTaskRequest=} [properties] Properties to set
                         */
                        function DeleteTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @instance
                         */
                        DeleteTaskRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IDeleteTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.DeleteTaskRequest} DeleteTaskRequest instance
                         */
                        DeleteTaskRequest.create = function create(properties) {
                            return new DeleteTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.DeleteTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IDeleteTaskRequest} message DeleteTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.DeleteTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IDeleteTaskRequest} message DeleteTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.DeleteTaskRequest} DeleteTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.DeleteTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.DeleteTaskRequest} DeleteTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.DeleteTaskRequest} DeleteTaskRequest
                         */
                        DeleteTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.DeleteTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.DeleteTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.DeleteTaskRequest} message DeleteTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.DeleteTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.DeleteTaskRequest";
                        };
    
                        return DeleteTaskRequest;
                    })();
    
                    v2beta2.LeaseTasksRequest = (function() {
    
                        /**
                         * Properties of a LeaseTasksRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ILeaseTasksRequest
                         * @property {string|null} [parent] LeaseTasksRequest parent
                         * @property {number|null} [maxTasks] LeaseTasksRequest maxTasks
                         * @property {google.protobuf.IDuration|null} [leaseDuration] LeaseTasksRequest leaseDuration
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] LeaseTasksRequest responseView
                         * @property {string|null} [filter] LeaseTasksRequest filter
                         */
    
                        /**
                         * Constructs a new LeaseTasksRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a LeaseTasksRequest.
                         * @implements ILeaseTasksRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksRequest=} [properties] Properties to set
                         */
                        function LeaseTasksRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LeaseTasksRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @instance
                         */
                        LeaseTasksRequest.prototype.parent = "";
    
                        /**
                         * LeaseTasksRequest maxTasks.
                         * @member {number} maxTasks
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @instance
                         */
                        LeaseTasksRequest.prototype.maxTasks = 0;
    
                        /**
                         * LeaseTasksRequest leaseDuration.
                         * @member {google.protobuf.IDuration|null|undefined} leaseDuration
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @instance
                         */
                        LeaseTasksRequest.prototype.leaseDuration = null;
    
                        /**
                         * LeaseTasksRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @instance
                         */
                        LeaseTasksRequest.prototype.responseView = 0;
    
                        /**
                         * LeaseTasksRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @instance
                         */
                        LeaseTasksRequest.prototype.filter = "";
    
                        /**
                         * Creates a new LeaseTasksRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksRequest} LeaseTasksRequest instance
                         */
                        LeaseTasksRequest.create = function create(properties) {
                            return new LeaseTasksRequest(properties);
                        };
    
                        /**
                         * Encodes the specified LeaseTasksRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.LeaseTasksRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksRequest} message LeaseTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LeaseTasksRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.maxTasks != null && Object.hasOwnProperty.call(message, "maxTasks"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxTasks);
                            if (message.leaseDuration != null && Object.hasOwnProperty.call(message, "leaseDuration"))
                                $root.google.protobuf.Duration.encode(message.leaseDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.responseView);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LeaseTasksRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.LeaseTasksRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksRequest} message LeaseTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LeaseTasksRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LeaseTasksRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksRequest} LeaseTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LeaseTasksRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.LeaseTasksRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.maxTasks = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.leaseDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LeaseTasksRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksRequest} LeaseTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LeaseTasksRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LeaseTasksRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LeaseTasksRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.maxTasks != null && message.hasOwnProperty("maxTasks"))
                                if (!$util.isInteger(message.maxTasks))
                                    return "maxTasks: integer expected";
                            if (message.leaseDuration != null && message.hasOwnProperty("leaseDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.leaseDuration);
                                if (error)
                                    return "leaseDuration." + error;
                            }
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a LeaseTasksRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksRequest} LeaseTasksRequest
                         */
                        LeaseTasksRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.LeaseTasksRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.LeaseTasksRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.maxTasks != null)
                                message.maxTasks = object.maxTasks | 0;
                            if (object.leaseDuration != null) {
                                if (typeof object.leaseDuration !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.LeaseTasksRequest.leaseDuration: object expected");
                                message.leaseDuration = $root.google.protobuf.Duration.fromObject(object.leaseDuration);
                            }
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LeaseTasksRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.LeaseTasksRequest} message LeaseTasksRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LeaseTasksRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.maxTasks = 0;
                                object.leaseDuration = null;
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.maxTasks != null && message.hasOwnProperty("maxTasks"))
                                object.maxTasks = message.maxTasks;
                            if (message.leaseDuration != null && message.hasOwnProperty("leaseDuration"))
                                object.leaseDuration = $root.google.protobuf.Duration.toObject(message.leaseDuration, options);
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this LeaseTasksRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LeaseTasksRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LeaseTasksRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LeaseTasksRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.LeaseTasksRequest";
                        };
    
                        return LeaseTasksRequest;
                    })();
    
                    v2beta2.LeaseTasksResponse = (function() {
    
                        /**
                         * Properties of a LeaseTasksResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ILeaseTasksResponse
                         * @property {Array.<google.cloud.tasks.v2beta2.ITask>|null} [tasks] LeaseTasksResponse tasks
                         */
    
                        /**
                         * Constructs a new LeaseTasksResponse.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a LeaseTasksResponse.
                         * @implements ILeaseTasksResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksResponse=} [properties] Properties to set
                         */
                        function LeaseTasksResponse(properties) {
                            this.tasks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LeaseTasksResponse tasks.
                         * @member {Array.<google.cloud.tasks.v2beta2.ITask>} tasks
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @instance
                         */
                        LeaseTasksResponse.prototype.tasks = $util.emptyArray;
    
                        /**
                         * Creates a new LeaseTasksResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksResponse} LeaseTasksResponse instance
                         */
                        LeaseTasksResponse.create = function create(properties) {
                            return new LeaseTasksResponse(properties);
                        };
    
                        /**
                         * Encodes the specified LeaseTasksResponse message. Does not implicitly {@link google.cloud.tasks.v2beta2.LeaseTasksResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksResponse} message LeaseTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LeaseTasksResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasks != null && message.tasks.length)
                                for (var i = 0; i < message.tasks.length; ++i)
                                    $root.google.cloud.tasks.v2beta2.Task.encode(message.tasks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LeaseTasksResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.LeaseTasksResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ILeaseTasksResponse} message LeaseTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LeaseTasksResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LeaseTasksResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksResponse} LeaseTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LeaseTasksResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.LeaseTasksResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.tasks && message.tasks.length))
                                            message.tasks = [];
                                        message.tasks.push($root.google.cloud.tasks.v2beta2.Task.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LeaseTasksResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksResponse} LeaseTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LeaseTasksResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LeaseTasksResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LeaseTasksResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasks != null && message.hasOwnProperty("tasks")) {
                                if (!Array.isArray(message.tasks))
                                    return "tasks: array expected";
                                for (var i = 0; i < message.tasks.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta2.Task.verify(message.tasks[i]);
                                    if (error)
                                        return "tasks." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LeaseTasksResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.LeaseTasksResponse} LeaseTasksResponse
                         */
                        LeaseTasksResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.LeaseTasksResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.LeaseTasksResponse();
                            if (object.tasks) {
                                if (!Array.isArray(object.tasks))
                                    throw TypeError(".google.cloud.tasks.v2beta2.LeaseTasksResponse.tasks: array expected");
                                message.tasks = [];
                                for (var i = 0; i < object.tasks.length; ++i) {
                                    if (typeof object.tasks[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta2.LeaseTasksResponse.tasks: object expected");
                                    message.tasks[i] = $root.google.cloud.tasks.v2beta2.Task.fromObject(object.tasks[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LeaseTasksResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta2.LeaseTasksResponse} message LeaseTasksResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LeaseTasksResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tasks = [];
                            if (message.tasks && message.tasks.length) {
                                object.tasks = [];
                                for (var j = 0; j < message.tasks.length; ++j)
                                    object.tasks[j] = $root.google.cloud.tasks.v2beta2.Task.toObject(message.tasks[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LeaseTasksResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LeaseTasksResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LeaseTasksResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.LeaseTasksResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LeaseTasksResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.LeaseTasksResponse";
                        };
    
                        return LeaseTasksResponse;
                    })();
    
                    v2beta2.AcknowledgeTaskRequest = (function() {
    
                        /**
                         * Properties of an AcknowledgeTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IAcknowledgeTaskRequest
                         * @property {string|null} [name] AcknowledgeTaskRequest name
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] AcknowledgeTaskRequest scheduleTime
                         */
    
                        /**
                         * Constructs a new AcknowledgeTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an AcknowledgeTaskRequest.
                         * @implements IAcknowledgeTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest=} [properties] Properties to set
                         */
                        function AcknowledgeTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AcknowledgeTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @instance
                         */
                        AcknowledgeTaskRequest.prototype.name = "";
    
                        /**
                         * AcknowledgeTaskRequest scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @instance
                         */
                        AcknowledgeTaskRequest.prototype.scheduleTime = null;
    
                        /**
                         * Creates a new AcknowledgeTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.AcknowledgeTaskRequest} AcknowledgeTaskRequest instance
                         */
                        AcknowledgeTaskRequest.create = function create(properties) {
                            return new AcknowledgeTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified AcknowledgeTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.AcknowledgeTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest} message AcknowledgeTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AcknowledgeTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AcknowledgeTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.AcknowledgeTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest} message AcknowledgeTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AcknowledgeTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AcknowledgeTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.AcknowledgeTaskRequest} AcknowledgeTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AcknowledgeTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.AcknowledgeTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AcknowledgeTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.AcknowledgeTaskRequest} AcknowledgeTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AcknowledgeTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AcknowledgeTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AcknowledgeTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AcknowledgeTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.AcknowledgeTaskRequest} AcknowledgeTaskRequest
                         */
                        AcknowledgeTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.AcknowledgeTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.AcknowledgeTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AcknowledgeTaskRequest.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AcknowledgeTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.AcknowledgeTaskRequest} message AcknowledgeTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AcknowledgeTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.scheduleTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this AcknowledgeTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AcknowledgeTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AcknowledgeTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.AcknowledgeTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AcknowledgeTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.AcknowledgeTaskRequest";
                        };
    
                        return AcknowledgeTaskRequest;
                    })();
    
                    v2beta2.RenewLeaseRequest = (function() {
    
                        /**
                         * Properties of a RenewLeaseRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IRenewLeaseRequest
                         * @property {string|null} [name] RenewLeaseRequest name
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] RenewLeaseRequest scheduleTime
                         * @property {google.protobuf.IDuration|null} [leaseDuration] RenewLeaseRequest leaseDuration
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] RenewLeaseRequest responseView
                         */
    
                        /**
                         * Constructs a new RenewLeaseRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a RenewLeaseRequest.
                         * @implements IRenewLeaseRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IRenewLeaseRequest=} [properties] Properties to set
                         */
                        function RenewLeaseRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RenewLeaseRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @instance
                         */
                        RenewLeaseRequest.prototype.name = "";
    
                        /**
                         * RenewLeaseRequest scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @instance
                         */
                        RenewLeaseRequest.prototype.scheduleTime = null;
    
                        /**
                         * RenewLeaseRequest leaseDuration.
                         * @member {google.protobuf.IDuration|null|undefined} leaseDuration
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @instance
                         */
                        RenewLeaseRequest.prototype.leaseDuration = null;
    
                        /**
                         * RenewLeaseRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @instance
                         */
                        RenewLeaseRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new RenewLeaseRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRenewLeaseRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.RenewLeaseRequest} RenewLeaseRequest instance
                         */
                        RenewLeaseRequest.create = function create(properties) {
                            return new RenewLeaseRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RenewLeaseRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.RenewLeaseRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRenewLeaseRequest} message RenewLeaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RenewLeaseRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.leaseDuration != null && Object.hasOwnProperty.call(message, "leaseDuration"))
                                $root.google.protobuf.Duration.encode(message.leaseDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RenewLeaseRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.RenewLeaseRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRenewLeaseRequest} message RenewLeaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RenewLeaseRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RenewLeaseRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.RenewLeaseRequest} RenewLeaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RenewLeaseRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.RenewLeaseRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.leaseDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RenewLeaseRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.RenewLeaseRequest} RenewLeaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RenewLeaseRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RenewLeaseRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RenewLeaseRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.leaseDuration != null && message.hasOwnProperty("leaseDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.leaseDuration);
                                if (error)
                                    return "leaseDuration." + error;
                            }
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a RenewLeaseRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.RenewLeaseRequest} RenewLeaseRequest
                         */
                        RenewLeaseRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.RenewLeaseRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.RenewLeaseRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.RenewLeaseRequest.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            if (object.leaseDuration != null) {
                                if (typeof object.leaseDuration !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.RenewLeaseRequest.leaseDuration: object expected");
                                message.leaseDuration = $root.google.protobuf.Duration.fromObject(object.leaseDuration);
                            }
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RenewLeaseRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.RenewLeaseRequest} message RenewLeaseRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RenewLeaseRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.scheduleTime = null;
                                object.leaseDuration = null;
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.leaseDuration != null && message.hasOwnProperty("leaseDuration"))
                                object.leaseDuration = $root.google.protobuf.Duration.toObject(message.leaseDuration, options);
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this RenewLeaseRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RenewLeaseRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RenewLeaseRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.RenewLeaseRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RenewLeaseRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.RenewLeaseRequest";
                        };
    
                        return RenewLeaseRequest;
                    })();
    
                    v2beta2.CancelLeaseRequest = (function() {
    
                        /**
                         * Properties of a CancelLeaseRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ICancelLeaseRequest
                         * @property {string|null} [name] CancelLeaseRequest name
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] CancelLeaseRequest scheduleTime
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] CancelLeaseRequest responseView
                         */
    
                        /**
                         * Constructs a new CancelLeaseRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a CancelLeaseRequest.
                         * @implements ICancelLeaseRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ICancelLeaseRequest=} [properties] Properties to set
                         */
                        function CancelLeaseRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CancelLeaseRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @instance
                         */
                        CancelLeaseRequest.prototype.name = "";
    
                        /**
                         * CancelLeaseRequest scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @instance
                         */
                        CancelLeaseRequest.prototype.scheduleTime = null;
    
                        /**
                         * CancelLeaseRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @instance
                         */
                        CancelLeaseRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new CancelLeaseRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICancelLeaseRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.CancelLeaseRequest} CancelLeaseRequest instance
                         */
                        CancelLeaseRequest.create = function create(properties) {
                            return new CancelLeaseRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CancelLeaseRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.CancelLeaseRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICancelLeaseRequest} message CancelLeaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelLeaseRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CancelLeaseRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.CancelLeaseRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ICancelLeaseRequest} message CancelLeaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelLeaseRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CancelLeaseRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.CancelLeaseRequest} CancelLeaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelLeaseRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.CancelLeaseRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CancelLeaseRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.CancelLeaseRequest} CancelLeaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelLeaseRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CancelLeaseRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CancelLeaseRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CancelLeaseRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.CancelLeaseRequest} CancelLeaseRequest
                         */
                        CancelLeaseRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.CancelLeaseRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.CancelLeaseRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.CancelLeaseRequest.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CancelLeaseRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.CancelLeaseRequest} message CancelLeaseRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CancelLeaseRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.scheduleTime = null;
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this CancelLeaseRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CancelLeaseRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CancelLeaseRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.CancelLeaseRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CancelLeaseRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.CancelLeaseRequest";
                        };
    
                        return CancelLeaseRequest;
                    })();
    
                    v2beta2.RunTaskRequest = (function() {
    
                        /**
                         * Properties of a RunTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IRunTaskRequest
                         * @property {string|null} [name] RunTaskRequest name
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [responseView] RunTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new RunTaskRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a RunTaskRequest.
                         * @implements IRunTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IRunTaskRequest=} [properties] Properties to set
                         */
                        function RunTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @instance
                         */
                        RunTaskRequest.prototype.name = "";
    
                        /**
                         * RunTaskRequest responseView.
                         * @member {google.cloud.tasks.v2beta2.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @instance
                         */
                        RunTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new RunTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRunTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.RunTaskRequest} RunTaskRequest instance
                         */
                        RunTaskRequest.create = function create(properties) {
                            return new RunTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.RunTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRunTaskRequest} message RunTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.RunTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRunTaskRequest} message RunTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.RunTaskRequest} RunTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.RunTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.RunTaskRequest} RunTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a RunTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.RunTaskRequest} RunTaskRequest
                         */
                        RunTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.RunTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.RunTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.RunTaskRequest} message RunTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta2.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this RunTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.RunTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.RunTaskRequest";
                        };
    
                        return RunTaskRequest;
                    })();
    
                    v2beta2.Queue = (function() {
    
                        /**
                         * Properties of a Queue.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IQueue
                         * @property {string|null} [name] Queue name
                         * @property {google.cloud.tasks.v2beta2.IAppEngineHttpTarget|null} [appEngineHttpTarget] Queue appEngineHttpTarget
                         * @property {google.cloud.tasks.v2beta2.IPullTarget|null} [pullTarget] Queue pullTarget
                         * @property {google.cloud.tasks.v2beta2.IHttpTarget|null} [httpTarget] Queue httpTarget
                         * @property {google.cloud.tasks.v2beta2.IRateLimits|null} [rateLimits] Queue rateLimits
                         * @property {google.cloud.tasks.v2beta2.IRetryConfig|null} [retryConfig] Queue retryConfig
                         * @property {google.cloud.tasks.v2beta2.Queue.State|null} [state] Queue state
                         * @property {google.protobuf.ITimestamp|null} [purgeTime] Queue purgeTime
                         * @property {google.protobuf.IDuration|null} [taskTtl] Queue taskTtl
                         * @property {google.protobuf.IDuration|null} [tombstoneTtl] Queue tombstoneTtl
                         * @property {google.cloud.tasks.v2beta2.IQueueStats|null} [stats] Queue stats
                         */
    
                        /**
                         * Constructs a new Queue.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a Queue.
                         * @implements IQueue
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IQueue=} [properties] Properties to set
                         */
                        function Queue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Queue name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.name = "";
    
                        /**
                         * Queue appEngineHttpTarget.
                         * @member {google.cloud.tasks.v2beta2.IAppEngineHttpTarget|null|undefined} appEngineHttpTarget
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.appEngineHttpTarget = null;
    
                        /**
                         * Queue pullTarget.
                         * @member {google.cloud.tasks.v2beta2.IPullTarget|null|undefined} pullTarget
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.pullTarget = null;
    
                        /**
                         * Queue httpTarget.
                         * @member {google.cloud.tasks.v2beta2.IHttpTarget|null|undefined} httpTarget
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.httpTarget = null;
    
                        /**
                         * Queue rateLimits.
                         * @member {google.cloud.tasks.v2beta2.IRateLimits|null|undefined} rateLimits
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.rateLimits = null;
    
                        /**
                         * Queue retryConfig.
                         * @member {google.cloud.tasks.v2beta2.IRetryConfig|null|undefined} retryConfig
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.retryConfig = null;
    
                        /**
                         * Queue state.
                         * @member {google.cloud.tasks.v2beta2.Queue.State} state
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.state = 0;
    
                        /**
                         * Queue purgeTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} purgeTime
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.purgeTime = null;
    
                        /**
                         * Queue taskTtl.
                         * @member {google.protobuf.IDuration|null|undefined} taskTtl
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.taskTtl = null;
    
                        /**
                         * Queue tombstoneTtl.
                         * @member {google.protobuf.IDuration|null|undefined} tombstoneTtl
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.tombstoneTtl = null;
    
                        /**
                         * Queue stats.
                         * @member {google.cloud.tasks.v2beta2.IQueueStats|null|undefined} stats
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Queue.prototype.stats = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Queue targetType.
                         * @member {"appEngineHttpTarget"|"pullTarget"|"httpTarget"|undefined} targetType
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         */
                        Object.defineProperty(Queue.prototype, "targetType", {
                            get: $util.oneOfGetter($oneOfFields = ["appEngineHttpTarget", "pullTarget", "httpTarget"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Queue instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueue=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.Queue} Queue instance
                         */
                        Queue.create = function create(properties) {
                            return new Queue(properties);
                        };
    
                        /**
                         * Encodes the specified Queue message. Does not implicitly {@link google.cloud.tasks.v2beta2.Queue.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueue} message Queue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Queue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.appEngineHttpTarget != null && Object.hasOwnProperty.call(message, "appEngineHttpTarget"))
                                $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget.encode(message.appEngineHttpTarget, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.pullTarget != null && Object.hasOwnProperty.call(message, "pullTarget"))
                                $root.google.cloud.tasks.v2beta2.PullTarget.encode(message.pullTarget, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.rateLimits != null && Object.hasOwnProperty.call(message, "rateLimits"))
                                $root.google.cloud.tasks.v2beta2.RateLimits.encode(message.rateLimits, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.retryConfig != null && Object.hasOwnProperty.call(message, "retryConfig"))
                                $root.google.cloud.tasks.v2beta2.RetryConfig.encode(message.retryConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.state);
                            if (message.purgeTime != null && Object.hasOwnProperty.call(message, "purgeTime"))
                                $root.google.protobuf.Timestamp.encode(message.purgeTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.taskTtl != null && Object.hasOwnProperty.call(message, "taskTtl"))
                                $root.google.protobuf.Duration.encode(message.taskTtl, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.tombstoneTtl != null && Object.hasOwnProperty.call(message, "tombstoneTtl"))
                                $root.google.protobuf.Duration.encode(message.tombstoneTtl, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.stats != null && Object.hasOwnProperty.call(message, "stats"))
                                $root.google.cloud.tasks.v2beta2.QueueStats.encode(message.stats, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.httpTarget != null && Object.hasOwnProperty.call(message, "httpTarget"))
                                $root.google.cloud.tasks.v2beta2.HttpTarget.encode(message.httpTarget, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Queue message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.Queue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueue} message Queue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Queue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Queue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.Queue} Queue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Queue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.Queue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.appEngineHttpTarget = $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.pullTarget = $root.google.cloud.tasks.v2beta2.PullTarget.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 17: {
                                        message.httpTarget = $root.google.cloud.tasks.v2beta2.HttpTarget.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.rateLimits = $root.google.cloud.tasks.v2beta2.RateLimits.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.retryConfig = $root.google.cloud.tasks.v2beta2.RetryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.purgeTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.taskTtl = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.tombstoneTtl = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.stats = $root.google.cloud.tasks.v2beta2.QueueStats.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Queue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.Queue} Queue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Queue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Queue message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Queue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.appEngineHttpTarget != null && message.hasOwnProperty("appEngineHttpTarget")) {
                                properties.targetType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget.verify(message.appEngineHttpTarget);
                                    if (error)
                                        return "appEngineHttpTarget." + error;
                                }
                            }
                            if (message.pullTarget != null && message.hasOwnProperty("pullTarget")) {
                                if (properties.targetType === 1)
                                    return "targetType: multiple values";
                                properties.targetType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.PullTarget.verify(message.pullTarget);
                                    if (error)
                                        return "pullTarget." + error;
                                }
                            }
                            if (message.httpTarget != null && message.hasOwnProperty("httpTarget")) {
                                if (properties.targetType === 1)
                                    return "targetType: multiple values";
                                properties.targetType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.HttpTarget.verify(message.httpTarget);
                                    if (error)
                                        return "httpTarget." + error;
                                }
                            }
                            if (message.rateLimits != null && message.hasOwnProperty("rateLimits")) {
                                var error = $root.google.cloud.tasks.v2beta2.RateLimits.verify(message.rateLimits);
                                if (error)
                                    return "rateLimits." + error;
                            }
                            if (message.retryConfig != null && message.hasOwnProperty("retryConfig")) {
                                var error = $root.google.cloud.tasks.v2beta2.RetryConfig.verify(message.retryConfig);
                                if (error)
                                    return "retryConfig." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.purgeTime != null && message.hasOwnProperty("purgeTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.purgeTime);
                                if (error)
                                    return "purgeTime." + error;
                            }
                            if (message.taskTtl != null && message.hasOwnProperty("taskTtl")) {
                                var error = $root.google.protobuf.Duration.verify(message.taskTtl);
                                if (error)
                                    return "taskTtl." + error;
                            }
                            if (message.tombstoneTtl != null && message.hasOwnProperty("tombstoneTtl")) {
                                var error = $root.google.protobuf.Duration.verify(message.tombstoneTtl);
                                if (error)
                                    return "tombstoneTtl." + error;
                            }
                            if (message.stats != null && message.hasOwnProperty("stats")) {
                                var error = $root.google.cloud.tasks.v2beta2.QueueStats.verify(message.stats);
                                if (error)
                                    return "stats." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Queue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.Queue} Queue
                         */
                        Queue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.Queue)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.Queue();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.appEngineHttpTarget != null) {
                                if (typeof object.appEngineHttpTarget !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.appEngineHttpTarget: object expected");
                                message.appEngineHttpTarget = $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget.fromObject(object.appEngineHttpTarget);
                            }
                            if (object.pullTarget != null) {
                                if (typeof object.pullTarget !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.pullTarget: object expected");
                                message.pullTarget = $root.google.cloud.tasks.v2beta2.PullTarget.fromObject(object.pullTarget);
                            }
                            if (object.httpTarget != null) {
                                if (typeof object.httpTarget !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.httpTarget: object expected");
                                message.httpTarget = $root.google.cloud.tasks.v2beta2.HttpTarget.fromObject(object.httpTarget);
                            }
                            if (object.rateLimits != null) {
                                if (typeof object.rateLimits !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.rateLimits: object expected");
                                message.rateLimits = $root.google.cloud.tasks.v2beta2.RateLimits.fromObject(object.rateLimits);
                            }
                            if (object.retryConfig != null) {
                                if (typeof object.retryConfig !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.retryConfig: object expected");
                                message.retryConfig = $root.google.cloud.tasks.v2beta2.RetryConfig.fromObject(object.retryConfig);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "PAUSED":
                            case 2:
                                message.state = 2;
                                break;
                            case "DISABLED":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.purgeTime != null) {
                                if (typeof object.purgeTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.purgeTime: object expected");
                                message.purgeTime = $root.google.protobuf.Timestamp.fromObject(object.purgeTime);
                            }
                            if (object.taskTtl != null) {
                                if (typeof object.taskTtl !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.taskTtl: object expected");
                                message.taskTtl = $root.google.protobuf.Duration.fromObject(object.taskTtl);
                            }
                            if (object.tombstoneTtl != null) {
                                if (typeof object.tombstoneTtl !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.tombstoneTtl: object expected");
                                message.tombstoneTtl = $root.google.protobuf.Duration.fromObject(object.tombstoneTtl);
                            }
                            if (object.stats != null) {
                                if (typeof object.stats !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Queue.stats: object expected");
                                message.stats = $root.google.cloud.tasks.v2beta2.QueueStats.fromObject(object.stats);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Queue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta2.Queue} message Queue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Queue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.rateLimits = null;
                                object.retryConfig = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.purgeTime = null;
                                object.taskTtl = null;
                                object.tombstoneTtl = null;
                                object.stats = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.appEngineHttpTarget != null && message.hasOwnProperty("appEngineHttpTarget")) {
                                object.appEngineHttpTarget = $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget.toObject(message.appEngineHttpTarget, options);
                                if (options.oneofs)
                                    object.targetType = "appEngineHttpTarget";
                            }
                            if (message.pullTarget != null && message.hasOwnProperty("pullTarget")) {
                                object.pullTarget = $root.google.cloud.tasks.v2beta2.PullTarget.toObject(message.pullTarget, options);
                                if (options.oneofs)
                                    object.targetType = "pullTarget";
                            }
                            if (message.rateLimits != null && message.hasOwnProperty("rateLimits"))
                                object.rateLimits = $root.google.cloud.tasks.v2beta2.RateLimits.toObject(message.rateLimits, options);
                            if (message.retryConfig != null && message.hasOwnProperty("retryConfig"))
                                object.retryConfig = $root.google.cloud.tasks.v2beta2.RetryConfig.toObject(message.retryConfig, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.tasks.v2beta2.Queue.State[message.state] === undefined ? message.state : $root.google.cloud.tasks.v2beta2.Queue.State[message.state] : message.state;
                            if (message.purgeTime != null && message.hasOwnProperty("purgeTime"))
                                object.purgeTime = $root.google.protobuf.Timestamp.toObject(message.purgeTime, options);
                            if (message.taskTtl != null && message.hasOwnProperty("taskTtl"))
                                object.taskTtl = $root.google.protobuf.Duration.toObject(message.taskTtl, options);
                            if (message.tombstoneTtl != null && message.hasOwnProperty("tombstoneTtl"))
                                object.tombstoneTtl = $root.google.protobuf.Duration.toObject(message.tombstoneTtl, options);
                            if (message.stats != null && message.hasOwnProperty("stats"))
                                object.stats = $root.google.cloud.tasks.v2beta2.QueueStats.toObject(message.stats, options);
                            if (message.httpTarget != null && message.hasOwnProperty("httpTarget")) {
                                object.httpTarget = $root.google.cloud.tasks.v2beta2.HttpTarget.toObject(message.httpTarget, options);
                                if (options.oneofs)
                                    object.targetType = "httpTarget";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Queue to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Queue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Queue
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.Queue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Queue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.Queue";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.tasks.v2beta2.Queue.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} PAUSED=2 PAUSED value
                         * @property {number} DISABLED=3 DISABLED value
                         */
                        Queue.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "PAUSED"] = 2;
                            values[valuesById[3] = "DISABLED"] = 3;
                            return values;
                        })();
    
                        return Queue;
                    })();
    
                    v2beta2.RateLimits = (function() {
    
                        /**
                         * Properties of a RateLimits.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IRateLimits
                         * @property {number|null} [maxTasksDispatchedPerSecond] RateLimits maxTasksDispatchedPerSecond
                         * @property {number|null} [maxBurstSize] RateLimits maxBurstSize
                         * @property {number|null} [maxConcurrentTasks] RateLimits maxConcurrentTasks
                         */
    
                        /**
                         * Constructs a new RateLimits.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a RateLimits.
                         * @implements IRateLimits
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IRateLimits=} [properties] Properties to set
                         */
                        function RateLimits(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RateLimits maxTasksDispatchedPerSecond.
                         * @member {number} maxTasksDispatchedPerSecond
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxTasksDispatchedPerSecond = 0;
    
                        /**
                         * RateLimits maxBurstSize.
                         * @member {number} maxBurstSize
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxBurstSize = 0;
    
                        /**
                         * RateLimits maxConcurrentTasks.
                         * @member {number} maxConcurrentTasks
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxConcurrentTasks = 0;
    
                        /**
                         * Creates a new RateLimits instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRateLimits=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.RateLimits} RateLimits instance
                         */
                        RateLimits.create = function create(properties) {
                            return new RateLimits(properties);
                        };
    
                        /**
                         * Encodes the specified RateLimits message. Does not implicitly {@link google.cloud.tasks.v2beta2.RateLimits.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRateLimits} message RateLimits message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RateLimits.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxTasksDispatchedPerSecond != null && Object.hasOwnProperty.call(message, "maxTasksDispatchedPerSecond"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.maxTasksDispatchedPerSecond);
                            if (message.maxBurstSize != null && Object.hasOwnProperty.call(message, "maxBurstSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxBurstSize);
                            if (message.maxConcurrentTasks != null && Object.hasOwnProperty.call(message, "maxConcurrentTasks"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxConcurrentTasks);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RateLimits message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.RateLimits.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRateLimits} message RateLimits message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RateLimits.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RateLimits message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.RateLimits} RateLimits
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RateLimits.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.RateLimits();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxTasksDispatchedPerSecond = reader.double();
                                        break;
                                    }
                                case 2: {
                                        message.maxBurstSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.maxConcurrentTasks = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RateLimits message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.RateLimits} RateLimits
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RateLimits.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RateLimits message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RateLimits.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.maxTasksDispatchedPerSecond != null && message.hasOwnProperty("maxTasksDispatchedPerSecond"))
                                if (typeof message.maxTasksDispatchedPerSecond !== "number")
                                    return "maxTasksDispatchedPerSecond: number expected";
                            if (message.maxBurstSize != null && message.hasOwnProperty("maxBurstSize"))
                                if (!$util.isInteger(message.maxBurstSize))
                                    return "maxBurstSize: integer expected";
                            if (message.maxConcurrentTasks != null && message.hasOwnProperty("maxConcurrentTasks"))
                                if (!$util.isInteger(message.maxConcurrentTasks))
                                    return "maxConcurrentTasks: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RateLimits message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.RateLimits} RateLimits
                         */
                        RateLimits.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.RateLimits)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.RateLimits();
                            if (object.maxTasksDispatchedPerSecond != null)
                                message.maxTasksDispatchedPerSecond = Number(object.maxTasksDispatchedPerSecond);
                            if (object.maxBurstSize != null)
                                message.maxBurstSize = object.maxBurstSize | 0;
                            if (object.maxConcurrentTasks != null)
                                message.maxConcurrentTasks = object.maxConcurrentTasks | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RateLimits message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta2.RateLimits} message RateLimits
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RateLimits.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxTasksDispatchedPerSecond = 0;
                                object.maxBurstSize = 0;
                                object.maxConcurrentTasks = 0;
                            }
                            if (message.maxTasksDispatchedPerSecond != null && message.hasOwnProperty("maxTasksDispatchedPerSecond"))
                                object.maxTasksDispatchedPerSecond = options.json && !isFinite(message.maxTasksDispatchedPerSecond) ? String(message.maxTasksDispatchedPerSecond) : message.maxTasksDispatchedPerSecond;
                            if (message.maxBurstSize != null && message.hasOwnProperty("maxBurstSize"))
                                object.maxBurstSize = message.maxBurstSize;
                            if (message.maxConcurrentTasks != null && message.hasOwnProperty("maxConcurrentTasks"))
                                object.maxConcurrentTasks = message.maxConcurrentTasks;
                            return object;
                        };
    
                        /**
                         * Converts this RateLimits to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RateLimits.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RateLimits
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.RateLimits
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RateLimits.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.RateLimits";
                        };
    
                        return RateLimits;
                    })();
    
                    v2beta2.RetryConfig = (function() {
    
                        /**
                         * Properties of a RetryConfig.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IRetryConfig
                         * @property {number|null} [maxAttempts] RetryConfig maxAttempts
                         * @property {boolean|null} [unlimitedAttempts] RetryConfig unlimitedAttempts
                         * @property {google.protobuf.IDuration|null} [maxRetryDuration] RetryConfig maxRetryDuration
                         * @property {google.protobuf.IDuration|null} [minBackoff] RetryConfig minBackoff
                         * @property {google.protobuf.IDuration|null} [maxBackoff] RetryConfig maxBackoff
                         * @property {number|null} [maxDoublings] RetryConfig maxDoublings
                         */
    
                        /**
                         * Constructs a new RetryConfig.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a RetryConfig.
                         * @implements IRetryConfig
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IRetryConfig=} [properties] Properties to set
                         */
                        function RetryConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetryConfig maxAttempts.
                         * @member {number|null|undefined} maxAttempts
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxAttempts = null;
    
                        /**
                         * RetryConfig unlimitedAttempts.
                         * @member {boolean|null|undefined} unlimitedAttempts
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.unlimitedAttempts = null;
    
                        /**
                         * RetryConfig maxRetryDuration.
                         * @member {google.protobuf.IDuration|null|undefined} maxRetryDuration
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxRetryDuration = null;
    
                        /**
                         * RetryConfig minBackoff.
                         * @member {google.protobuf.IDuration|null|undefined} minBackoff
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.minBackoff = null;
    
                        /**
                         * RetryConfig maxBackoff.
                         * @member {google.protobuf.IDuration|null|undefined} maxBackoff
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxBackoff = null;
    
                        /**
                         * RetryConfig maxDoublings.
                         * @member {number} maxDoublings
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxDoublings = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RetryConfig numAttempts.
                         * @member {"maxAttempts"|"unlimitedAttempts"|undefined} numAttempts
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         */
                        Object.defineProperty(RetryConfig.prototype, "numAttempts", {
                            get: $util.oneOfGetter($oneOfFields = ["maxAttempts", "unlimitedAttempts"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RetryConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRetryConfig=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.RetryConfig} RetryConfig instance
                         */
                        RetryConfig.create = function create(properties) {
                            return new RetryConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RetryConfig message. Does not implicitly {@link google.cloud.tasks.v2beta2.RetryConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRetryConfig} message RetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxAttempts != null && Object.hasOwnProperty.call(message, "maxAttempts"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maxAttempts);
                            if (message.unlimitedAttempts != null && Object.hasOwnProperty.call(message, "unlimitedAttempts"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.unlimitedAttempts);
                            if (message.maxRetryDuration != null && Object.hasOwnProperty.call(message, "maxRetryDuration"))
                                $root.google.protobuf.Duration.encode(message.maxRetryDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.minBackoff != null && Object.hasOwnProperty.call(message, "minBackoff"))
                                $root.google.protobuf.Duration.encode(message.minBackoff, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.maxBackoff != null && Object.hasOwnProperty.call(message, "maxBackoff"))
                                $root.google.protobuf.Duration.encode(message.maxBackoff, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.maxDoublings != null && Object.hasOwnProperty.call(message, "maxDoublings"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.maxDoublings);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetryConfig message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.RetryConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IRetryConfig} message RetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetryConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.RetryConfig} RetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.RetryConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxAttempts = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.unlimitedAttempts = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.maxRetryDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.minBackoff = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.maxBackoff = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.maxDoublings = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetryConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.RetryConfig} RetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetryConfig message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetryConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.maxAttempts != null && message.hasOwnProperty("maxAttempts")) {
                                properties.numAttempts = 1;
                                if (!$util.isInteger(message.maxAttempts))
                                    return "maxAttempts: integer expected";
                            }
                            if (message.unlimitedAttempts != null && message.hasOwnProperty("unlimitedAttempts")) {
                                if (properties.numAttempts === 1)
                                    return "numAttempts: multiple values";
                                properties.numAttempts = 1;
                                if (typeof message.unlimitedAttempts !== "boolean")
                                    return "unlimitedAttempts: boolean expected";
                            }
                            if (message.maxRetryDuration != null && message.hasOwnProperty("maxRetryDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxRetryDuration);
                                if (error)
                                    return "maxRetryDuration." + error;
                            }
                            if (message.minBackoff != null && message.hasOwnProperty("minBackoff")) {
                                var error = $root.google.protobuf.Duration.verify(message.minBackoff);
                                if (error)
                                    return "minBackoff." + error;
                            }
                            if (message.maxBackoff != null && message.hasOwnProperty("maxBackoff")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxBackoff);
                                if (error)
                                    return "maxBackoff." + error;
                            }
                            if (message.maxDoublings != null && message.hasOwnProperty("maxDoublings"))
                                if (!$util.isInteger(message.maxDoublings))
                                    return "maxDoublings: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetryConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.RetryConfig} RetryConfig
                         */
                        RetryConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.RetryConfig)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.RetryConfig();
                            if (object.maxAttempts != null)
                                message.maxAttempts = object.maxAttempts | 0;
                            if (object.unlimitedAttempts != null)
                                message.unlimitedAttempts = Boolean(object.unlimitedAttempts);
                            if (object.maxRetryDuration != null) {
                                if (typeof object.maxRetryDuration !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.RetryConfig.maxRetryDuration: object expected");
                                message.maxRetryDuration = $root.google.protobuf.Duration.fromObject(object.maxRetryDuration);
                            }
                            if (object.minBackoff != null) {
                                if (typeof object.minBackoff !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.RetryConfig.minBackoff: object expected");
                                message.minBackoff = $root.google.protobuf.Duration.fromObject(object.minBackoff);
                            }
                            if (object.maxBackoff != null) {
                                if (typeof object.maxBackoff !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.RetryConfig.maxBackoff: object expected");
                                message.maxBackoff = $root.google.protobuf.Duration.fromObject(object.maxBackoff);
                            }
                            if (object.maxDoublings != null)
                                message.maxDoublings = object.maxDoublings | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetryConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta2.RetryConfig} message RetryConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetryConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxRetryDuration = null;
                                object.minBackoff = null;
                                object.maxBackoff = null;
                                object.maxDoublings = 0;
                            }
                            if (message.maxAttempts != null && message.hasOwnProperty("maxAttempts")) {
                                object.maxAttempts = message.maxAttempts;
                                if (options.oneofs)
                                    object.numAttempts = "maxAttempts";
                            }
                            if (message.unlimitedAttempts != null && message.hasOwnProperty("unlimitedAttempts")) {
                                object.unlimitedAttempts = message.unlimitedAttempts;
                                if (options.oneofs)
                                    object.numAttempts = "unlimitedAttempts";
                            }
                            if (message.maxRetryDuration != null && message.hasOwnProperty("maxRetryDuration"))
                                object.maxRetryDuration = $root.google.protobuf.Duration.toObject(message.maxRetryDuration, options);
                            if (message.minBackoff != null && message.hasOwnProperty("minBackoff"))
                                object.minBackoff = $root.google.protobuf.Duration.toObject(message.minBackoff, options);
                            if (message.maxBackoff != null && message.hasOwnProperty("maxBackoff"))
                                object.maxBackoff = $root.google.protobuf.Duration.toObject(message.maxBackoff, options);
                            if (message.maxDoublings != null && message.hasOwnProperty("maxDoublings"))
                                object.maxDoublings = message.maxDoublings;
                            return object;
                        };
    
                        /**
                         * Converts this RetryConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetryConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetryConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.RetryConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.RetryConfig";
                        };
    
                        return RetryConfig;
                    })();
    
                    v2beta2.QueueStats = (function() {
    
                        /**
                         * Properties of a QueueStats.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IQueueStats
                         * @property {number|Long|null} [tasksCount] QueueStats tasksCount
                         * @property {google.protobuf.ITimestamp|null} [oldestEstimatedArrivalTime] QueueStats oldestEstimatedArrivalTime
                         * @property {number|Long|null} [executedLastMinuteCount] QueueStats executedLastMinuteCount
                         * @property {number|Long|null} [concurrentDispatchesCount] QueueStats concurrentDispatchesCount
                         * @property {number|null} [effectiveExecutionRate] QueueStats effectiveExecutionRate
                         */
    
                        /**
                         * Constructs a new QueueStats.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a QueueStats.
                         * @implements IQueueStats
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IQueueStats=} [properties] Properties to set
                         */
                        function QueueStats(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueueStats tasksCount.
                         * @member {number|Long} tasksCount
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.tasksCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * QueueStats oldestEstimatedArrivalTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} oldestEstimatedArrivalTime
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.oldestEstimatedArrivalTime = null;
    
                        /**
                         * QueueStats executedLastMinuteCount.
                         * @member {number|Long} executedLastMinuteCount
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.executedLastMinuteCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * QueueStats concurrentDispatchesCount.
                         * @member {number|Long} concurrentDispatchesCount
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.concurrentDispatchesCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * QueueStats effectiveExecutionRate.
                         * @member {number} effectiveExecutionRate
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.effectiveExecutionRate = 0;
    
                        /**
                         * Creates a new QueueStats instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueueStats=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.QueueStats} QueueStats instance
                         */
                        QueueStats.create = function create(properties) {
                            return new QueueStats(properties);
                        };
    
                        /**
                         * Encodes the specified QueueStats message. Does not implicitly {@link google.cloud.tasks.v2beta2.QueueStats.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueueStats} message QueueStats message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueueStats.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasksCount != null && Object.hasOwnProperty.call(message, "tasksCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.tasksCount);
                            if (message.oldestEstimatedArrivalTime != null && Object.hasOwnProperty.call(message, "oldestEstimatedArrivalTime"))
                                $root.google.protobuf.Timestamp.encode(message.oldestEstimatedArrivalTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.executedLastMinuteCount != null && Object.hasOwnProperty.call(message, "executedLastMinuteCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.executedLastMinuteCount);
                            if (message.concurrentDispatchesCount != null && Object.hasOwnProperty.call(message, "concurrentDispatchesCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.concurrentDispatchesCount);
                            if (message.effectiveExecutionRate != null && Object.hasOwnProperty.call(message, "effectiveExecutionRate"))
                                writer.uint32(/* id 5, wireType 1 =*/41).double(message.effectiveExecutionRate);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueueStats message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.QueueStats.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueueStats} message QueueStats message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueueStats.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueueStats message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.QueueStats} QueueStats
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueueStats.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.QueueStats();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.tasksCount = reader.int64();
                                        break;
                                    }
                                case 2: {
                                        message.oldestEstimatedArrivalTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.executedLastMinuteCount = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.concurrentDispatchesCount = reader.int64();
                                        break;
                                    }
                                case 5: {
                                        message.effectiveExecutionRate = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueueStats message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.QueueStats} QueueStats
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueueStats.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueueStats message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueueStats.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasksCount != null && message.hasOwnProperty("tasksCount"))
                                if (!$util.isInteger(message.tasksCount) && !(message.tasksCount && $util.isInteger(message.tasksCount.low) && $util.isInteger(message.tasksCount.high)))
                                    return "tasksCount: integer|Long expected";
                            if (message.oldestEstimatedArrivalTime != null && message.hasOwnProperty("oldestEstimatedArrivalTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.oldestEstimatedArrivalTime);
                                if (error)
                                    return "oldestEstimatedArrivalTime." + error;
                            }
                            if (message.executedLastMinuteCount != null && message.hasOwnProperty("executedLastMinuteCount"))
                                if (!$util.isInteger(message.executedLastMinuteCount) && !(message.executedLastMinuteCount && $util.isInteger(message.executedLastMinuteCount.low) && $util.isInteger(message.executedLastMinuteCount.high)))
                                    return "executedLastMinuteCount: integer|Long expected";
                            if (message.concurrentDispatchesCount != null && message.hasOwnProperty("concurrentDispatchesCount"))
                                if (!$util.isInteger(message.concurrentDispatchesCount) && !(message.concurrentDispatchesCount && $util.isInteger(message.concurrentDispatchesCount.low) && $util.isInteger(message.concurrentDispatchesCount.high)))
                                    return "concurrentDispatchesCount: integer|Long expected";
                            if (message.effectiveExecutionRate != null && message.hasOwnProperty("effectiveExecutionRate"))
                                if (typeof message.effectiveExecutionRate !== "number")
                                    return "effectiveExecutionRate: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a QueueStats message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.QueueStats} QueueStats
                         */
                        QueueStats.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.QueueStats)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.QueueStats();
                            if (object.tasksCount != null)
                                if ($util.Long)
                                    (message.tasksCount = $util.Long.fromValue(object.tasksCount)).unsigned = false;
                                else if (typeof object.tasksCount === "string")
                                    message.tasksCount = parseInt(object.tasksCount, 10);
                                else if (typeof object.tasksCount === "number")
                                    message.tasksCount = object.tasksCount;
                                else if (typeof object.tasksCount === "object")
                                    message.tasksCount = new $util.LongBits(object.tasksCount.low >>> 0, object.tasksCount.high >>> 0).toNumber();
                            if (object.oldestEstimatedArrivalTime != null) {
                                if (typeof object.oldestEstimatedArrivalTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.QueueStats.oldestEstimatedArrivalTime: object expected");
                                message.oldestEstimatedArrivalTime = $root.google.protobuf.Timestamp.fromObject(object.oldestEstimatedArrivalTime);
                            }
                            if (object.executedLastMinuteCount != null)
                                if ($util.Long)
                                    (message.executedLastMinuteCount = $util.Long.fromValue(object.executedLastMinuteCount)).unsigned = false;
                                else if (typeof object.executedLastMinuteCount === "string")
                                    message.executedLastMinuteCount = parseInt(object.executedLastMinuteCount, 10);
                                else if (typeof object.executedLastMinuteCount === "number")
                                    message.executedLastMinuteCount = object.executedLastMinuteCount;
                                else if (typeof object.executedLastMinuteCount === "object")
                                    message.executedLastMinuteCount = new $util.LongBits(object.executedLastMinuteCount.low >>> 0, object.executedLastMinuteCount.high >>> 0).toNumber();
                            if (object.concurrentDispatchesCount != null)
                                if ($util.Long)
                                    (message.concurrentDispatchesCount = $util.Long.fromValue(object.concurrentDispatchesCount)).unsigned = false;
                                else if (typeof object.concurrentDispatchesCount === "string")
                                    message.concurrentDispatchesCount = parseInt(object.concurrentDispatchesCount, 10);
                                else if (typeof object.concurrentDispatchesCount === "number")
                                    message.concurrentDispatchesCount = object.concurrentDispatchesCount;
                                else if (typeof object.concurrentDispatchesCount === "object")
                                    message.concurrentDispatchesCount = new $util.LongBits(object.concurrentDispatchesCount.low >>> 0, object.concurrentDispatchesCount.high >>> 0).toNumber();
                            if (object.effectiveExecutionRate != null)
                                message.effectiveExecutionRate = Number(object.effectiveExecutionRate);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueueStats message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta2.QueueStats} message QueueStats
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueueStats.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.tasksCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.tasksCount = options.longs === String ? "0" : 0;
                                object.oldestEstimatedArrivalTime = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.executedLastMinuteCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.executedLastMinuteCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.concurrentDispatchesCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.concurrentDispatchesCount = options.longs === String ? "0" : 0;
                                object.effectiveExecutionRate = 0;
                            }
                            if (message.tasksCount != null && message.hasOwnProperty("tasksCount"))
                                if (typeof message.tasksCount === "number")
                                    object.tasksCount = options.longs === String ? String(message.tasksCount) : message.tasksCount;
                                else
                                    object.tasksCount = options.longs === String ? $util.Long.prototype.toString.call(message.tasksCount) : options.longs === Number ? new $util.LongBits(message.tasksCount.low >>> 0, message.tasksCount.high >>> 0).toNumber() : message.tasksCount;
                            if (message.oldestEstimatedArrivalTime != null && message.hasOwnProperty("oldestEstimatedArrivalTime"))
                                object.oldestEstimatedArrivalTime = $root.google.protobuf.Timestamp.toObject(message.oldestEstimatedArrivalTime, options);
                            if (message.executedLastMinuteCount != null && message.hasOwnProperty("executedLastMinuteCount"))
                                if (typeof message.executedLastMinuteCount === "number")
                                    object.executedLastMinuteCount = options.longs === String ? String(message.executedLastMinuteCount) : message.executedLastMinuteCount;
                                else
                                    object.executedLastMinuteCount = options.longs === String ? $util.Long.prototype.toString.call(message.executedLastMinuteCount) : options.longs === Number ? new $util.LongBits(message.executedLastMinuteCount.low >>> 0, message.executedLastMinuteCount.high >>> 0).toNumber() : message.executedLastMinuteCount;
                            if (message.concurrentDispatchesCount != null && message.hasOwnProperty("concurrentDispatchesCount"))
                                if (typeof message.concurrentDispatchesCount === "number")
                                    object.concurrentDispatchesCount = options.longs === String ? String(message.concurrentDispatchesCount) : message.concurrentDispatchesCount;
                                else
                                    object.concurrentDispatchesCount = options.longs === String ? $util.Long.prototype.toString.call(message.concurrentDispatchesCount) : options.longs === Number ? new $util.LongBits(message.concurrentDispatchesCount.low >>> 0, message.concurrentDispatchesCount.high >>> 0).toNumber() : message.concurrentDispatchesCount;
                            if (message.effectiveExecutionRate != null && message.hasOwnProperty("effectiveExecutionRate"))
                                object.effectiveExecutionRate = options.json && !isFinite(message.effectiveExecutionRate) ? String(message.effectiveExecutionRate) : message.effectiveExecutionRate;
                            return object;
                        };
    
                        /**
                         * Converts this QueueStats to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueueStats.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueueStats
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.QueueStats
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueueStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.QueueStats";
                        };
    
                        return QueueStats;
                    })();
    
                    v2beta2.PullTarget = (function() {
    
                        /**
                         * Properties of a PullTarget.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IPullTarget
                         */
    
                        /**
                         * Constructs a new PullTarget.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a PullTarget.
                         * @implements IPullTarget
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IPullTarget=} [properties] Properties to set
                         */
                        function PullTarget(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new PullTarget instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPullTarget=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.PullTarget} PullTarget instance
                         */
                        PullTarget.create = function create(properties) {
                            return new PullTarget(properties);
                        };
    
                        /**
                         * Encodes the specified PullTarget message. Does not implicitly {@link google.cloud.tasks.v2beta2.PullTarget.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPullTarget} message PullTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullTarget.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PullTarget message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.PullTarget.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPullTarget} message PullTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullTarget.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PullTarget message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.PullTarget} PullTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullTarget.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.PullTarget();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PullTarget message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.PullTarget} PullTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullTarget.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PullTarget message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PullTarget.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a PullTarget message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.PullTarget} PullTarget
                         */
                        PullTarget.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.PullTarget)
                                return object;
                            return new $root.google.cloud.tasks.v2beta2.PullTarget();
                        };
    
                        /**
                         * Creates a plain object from a PullTarget message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.PullTarget} message PullTarget
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PullTarget.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this PullTarget to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PullTarget.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PullTarget
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.PullTarget
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PullTarget.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.PullTarget";
                        };
    
                        return PullTarget;
                    })();
    
                    v2beta2.PullMessage = (function() {
    
                        /**
                         * Properties of a PullMessage.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IPullMessage
                         * @property {Uint8Array|null} [payload] PullMessage payload
                         * @property {string|null} [tag] PullMessage tag
                         */
    
                        /**
                         * Constructs a new PullMessage.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a PullMessage.
                         * @implements IPullMessage
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IPullMessage=} [properties] Properties to set
                         */
                        function PullMessage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PullMessage payload.
                         * @member {Uint8Array} payload
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @instance
                         */
                        PullMessage.prototype.payload = $util.newBuffer([]);
    
                        /**
                         * PullMessage tag.
                         * @member {string} tag
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @instance
                         */
                        PullMessage.prototype.tag = "";
    
                        /**
                         * Creates a new PullMessage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPullMessage=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.PullMessage} PullMessage instance
                         */
                        PullMessage.create = function create(properties) {
                            return new PullMessage(properties);
                        };
    
                        /**
                         * Encodes the specified PullMessage message. Does not implicitly {@link google.cloud.tasks.v2beta2.PullMessage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPullMessage} message PullMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullMessage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.payload != null && Object.hasOwnProperty.call(message, "payload"))
                                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.payload);
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PullMessage message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.PullMessage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPullMessage} message PullMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullMessage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PullMessage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.PullMessage} PullMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullMessage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.PullMessage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.payload = reader.bytes();
                                        break;
                                    }
                                case 2: {
                                        message.tag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PullMessage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.PullMessage} PullMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullMessage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PullMessage message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PullMessage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.payload != null && message.hasOwnProperty("payload"))
                                if (!(message.payload && typeof message.payload.length === "number" || $util.isString(message.payload)))
                                    return "payload: buffer expected";
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                if (!$util.isString(message.tag))
                                    return "tag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PullMessage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.PullMessage} PullMessage
                         */
                        PullMessage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.PullMessage)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.PullMessage();
                            if (object.payload != null)
                                if (typeof object.payload === "string")
                                    $util.base64.decode(object.payload, message.payload = $util.newBuffer($util.base64.length(object.payload)), 0);
                                else if (object.payload.length >= 0)
                                    message.payload = object.payload;
                            if (object.tag != null)
                                message.tag = String(object.tag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PullMessage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta2.PullMessage} message PullMessage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PullMessage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if (options.bytes === String)
                                    object.payload = "";
                                else {
                                    object.payload = [];
                                    if (options.bytes !== Array)
                                        object.payload = $util.newBuffer(object.payload);
                                }
                                object.tag = "";
                            }
                            if (message.payload != null && message.hasOwnProperty("payload"))
                                object.payload = options.bytes === String ? $util.base64.encode(message.payload, 0, message.payload.length) : options.bytes === Array ? Array.prototype.slice.call(message.payload) : message.payload;
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = message.tag;
                            return object;
                        };
    
                        /**
                         * Converts this PullMessage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PullMessage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PullMessage
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.PullMessage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PullMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.PullMessage";
                        };
    
                        return PullMessage;
                    })();
    
                    v2beta2.AppEngineHttpTarget = (function() {
    
                        /**
                         * Properties of an AppEngineHttpTarget.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IAppEngineHttpTarget
                         * @property {google.cloud.tasks.v2beta2.IAppEngineRouting|null} [appEngineRoutingOverride] AppEngineHttpTarget appEngineRoutingOverride
                         */
    
                        /**
                         * Constructs a new AppEngineHttpTarget.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an AppEngineHttpTarget.
                         * @implements IAppEngineHttpTarget
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpTarget=} [properties] Properties to set
                         */
                        function AppEngineHttpTarget(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineHttpTarget appEngineRoutingOverride.
                         * @member {google.cloud.tasks.v2beta2.IAppEngineRouting|null|undefined} appEngineRoutingOverride
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @instance
                         */
                        AppEngineHttpTarget.prototype.appEngineRoutingOverride = null;
    
                        /**
                         * Creates a new AppEngineHttpTarget instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpTarget=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpTarget} AppEngineHttpTarget instance
                         */
                        AppEngineHttpTarget.create = function create(properties) {
                            return new AppEngineHttpTarget(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpTarget message. Does not implicitly {@link google.cloud.tasks.v2beta2.AppEngineHttpTarget.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpTarget} message AppEngineHttpTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpTarget.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.appEngineRoutingOverride != null && Object.hasOwnProperty.call(message, "appEngineRoutingOverride"))
                                $root.google.cloud.tasks.v2beta2.AppEngineRouting.encode(message.appEngineRoutingOverride, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpTarget message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.AppEngineHttpTarget.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpTarget} message AppEngineHttpTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpTarget.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineHttpTarget message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpTarget} AppEngineHttpTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpTarget.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.appEngineRoutingOverride = $root.google.cloud.tasks.v2beta2.AppEngineRouting.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineHttpTarget message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpTarget} AppEngineHttpTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpTarget.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineHttpTarget message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineHttpTarget.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.appEngineRoutingOverride != null && message.hasOwnProperty("appEngineRoutingOverride")) {
                                var error = $root.google.cloud.tasks.v2beta2.AppEngineRouting.verify(message.appEngineRoutingOverride);
                                if (error)
                                    return "appEngineRoutingOverride." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineHttpTarget message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpTarget} AppEngineHttpTarget
                         */
                        AppEngineHttpTarget.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.AppEngineHttpTarget();
                            if (object.appEngineRoutingOverride != null) {
                                if (typeof object.appEngineRoutingOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AppEngineHttpTarget.appEngineRoutingOverride: object expected");
                                message.appEngineRoutingOverride = $root.google.cloud.tasks.v2beta2.AppEngineRouting.fromObject(object.appEngineRoutingOverride);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineHttpTarget message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.AppEngineHttpTarget} message AppEngineHttpTarget
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineHttpTarget.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.appEngineRoutingOverride = null;
                            if (message.appEngineRoutingOverride != null && message.hasOwnProperty("appEngineRoutingOverride"))
                                object.appEngineRoutingOverride = $root.google.cloud.tasks.v2beta2.AppEngineRouting.toObject(message.appEngineRoutingOverride, options);
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineHttpTarget to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineHttpTarget.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineHttpTarget
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpTarget
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineHttpTarget.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.AppEngineHttpTarget";
                        };
    
                        return AppEngineHttpTarget;
                    })();
    
                    v2beta2.AppEngineHttpRequest = (function() {
    
                        /**
                         * Properties of an AppEngineHttpRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IAppEngineHttpRequest
                         * @property {google.cloud.tasks.v2beta2.HttpMethod|null} [httpMethod] AppEngineHttpRequest httpMethod
                         * @property {google.cloud.tasks.v2beta2.IAppEngineRouting|null} [appEngineRouting] AppEngineHttpRequest appEngineRouting
                         * @property {string|null} [relativeUrl] AppEngineHttpRequest relativeUrl
                         * @property {Object.<string,string>|null} [headers] AppEngineHttpRequest headers
                         * @property {Uint8Array|null} [payload] AppEngineHttpRequest payload
                         */
    
                        /**
                         * Constructs a new AppEngineHttpRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an AppEngineHttpRequest.
                         * @implements IAppEngineHttpRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpRequest=} [properties] Properties to set
                         */
                        function AppEngineHttpRequest(properties) {
                            this.headers = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineHttpRequest httpMethod.
                         * @member {google.cloud.tasks.v2beta2.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.httpMethod = 0;
    
                        /**
                         * AppEngineHttpRequest appEngineRouting.
                         * @member {google.cloud.tasks.v2beta2.IAppEngineRouting|null|undefined} appEngineRouting
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.appEngineRouting = null;
    
                        /**
                         * AppEngineHttpRequest relativeUrl.
                         * @member {string} relativeUrl
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.relativeUrl = "";
    
                        /**
                         * AppEngineHttpRequest headers.
                         * @member {Object.<string,string>} headers
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.headers = $util.emptyObject;
    
                        /**
                         * AppEngineHttpRequest payload.
                         * @member {Uint8Array} payload
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @instance
                         */
                        AppEngineHttpRequest.prototype.payload = $util.newBuffer([]);
    
                        /**
                         * Creates a new AppEngineHttpRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpRequest} AppEngineHttpRequest instance
                         */
                        AppEngineHttpRequest.create = function create(properties) {
                            return new AppEngineHttpRequest(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.AppEngineHttpRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpRequest} message AppEngineHttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.httpMethod);
                            if (message.appEngineRouting != null && Object.hasOwnProperty.call(message, "appEngineRouting"))
                                $root.google.cloud.tasks.v2beta2.AppEngineRouting.encode(message.appEngineRouting, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.relativeUrl != null && Object.hasOwnProperty.call(message, "relativeUrl"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.relativeUrl);
                            if (message.headers != null && Object.hasOwnProperty.call(message, "headers"))
                                for (var keys = Object.keys(message.headers), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.headers[keys[i]]).ldelim();
                            if (message.payload != null && Object.hasOwnProperty.call(message, "payload"))
                                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.payload);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineHttpRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.AppEngineHttpRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineHttpRequest} message AppEngineHttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineHttpRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineHttpRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpRequest} AppEngineHttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.appEngineRouting = $root.google.cloud.tasks.v2beta2.AppEngineRouting.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.relativeUrl = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.headers === $util.emptyObject)
                                            message.headers = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.headers[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.payload = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineHttpRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpRequest} AppEngineHttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineHttpRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineHttpRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineHttpRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.appEngineRouting != null && message.hasOwnProperty("appEngineRouting")) {
                                var error = $root.google.cloud.tasks.v2beta2.AppEngineRouting.verify(message.appEngineRouting);
                                if (error)
                                    return "appEngineRouting." + error;
                            }
                            if (message.relativeUrl != null && message.hasOwnProperty("relativeUrl"))
                                if (!$util.isString(message.relativeUrl))
                                    return "relativeUrl: string expected";
                            if (message.headers != null && message.hasOwnProperty("headers")) {
                                if (!$util.isObject(message.headers))
                                    return "headers: object expected";
                                var key = Object.keys(message.headers);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.headers[key[i]]))
                                        return "headers: string{k:string} expected";
                            }
                            if (message.payload != null && message.hasOwnProperty("payload"))
                                if (!(message.payload && typeof message.payload.length === "number" || $util.isString(message.payload)))
                                    return "payload: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineHttpRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.AppEngineHttpRequest} AppEngineHttpRequest
                         */
                        AppEngineHttpRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest();
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.appEngineRouting != null) {
                                if (typeof object.appEngineRouting !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AppEngineHttpRequest.appEngineRouting: object expected");
                                message.appEngineRouting = $root.google.cloud.tasks.v2beta2.AppEngineRouting.fromObject(object.appEngineRouting);
                            }
                            if (object.relativeUrl != null)
                                message.relativeUrl = String(object.relativeUrl);
                            if (object.headers) {
                                if (typeof object.headers !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AppEngineHttpRequest.headers: object expected");
                                message.headers = {};
                                for (var keys = Object.keys(object.headers), i = 0; i < keys.length; ++i)
                                    message.headers[keys[i]] = String(object.headers[keys[i]]);
                            }
                            if (object.payload != null)
                                if (typeof object.payload === "string")
                                    $util.base64.decode(object.payload, message.payload = $util.newBuffer($util.base64.length(object.payload)), 0);
                                else if (object.payload.length >= 0)
                                    message.payload = object.payload;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineHttpRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.AppEngineHttpRequest} message AppEngineHttpRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineHttpRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.headers = {};
                            if (options.defaults) {
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                                object.appEngineRouting = null;
                                object.relativeUrl = "";
                                if (options.bytes === String)
                                    object.payload = "";
                                else {
                                    object.payload = [];
                                    if (options.bytes !== Array)
                                        object.payload = $util.newBuffer(object.payload);
                                }
                            }
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2beta2.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2beta2.HttpMethod[message.httpMethod] : message.httpMethod;
                            if (message.appEngineRouting != null && message.hasOwnProperty("appEngineRouting"))
                                object.appEngineRouting = $root.google.cloud.tasks.v2beta2.AppEngineRouting.toObject(message.appEngineRouting, options);
                            if (message.relativeUrl != null && message.hasOwnProperty("relativeUrl"))
                                object.relativeUrl = message.relativeUrl;
                            var keys2;
                            if (message.headers && (keys2 = Object.keys(message.headers)).length) {
                                object.headers = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.headers[keys2[j]] = message.headers[keys2[j]];
                            }
                            if (message.payload != null && message.hasOwnProperty("payload"))
                                object.payload = options.bytes === String ? $util.base64.encode(message.payload, 0, message.payload.length) : options.bytes === Array ? Array.prototype.slice.call(message.payload) : message.payload;
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineHttpRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineHttpRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineHttpRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.AppEngineHttpRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineHttpRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.AppEngineHttpRequest";
                        };
    
                        return AppEngineHttpRequest;
                    })();
    
                    v2beta2.AppEngineRouting = (function() {
    
                        /**
                         * Properties of an AppEngineRouting.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IAppEngineRouting
                         * @property {string|null} [service] AppEngineRouting service
                         * @property {string|null} [version] AppEngineRouting version
                         * @property {string|null} [instance] AppEngineRouting instance
                         * @property {string|null} [host] AppEngineRouting host
                         */
    
                        /**
                         * Constructs a new AppEngineRouting.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an AppEngineRouting.
                         * @implements IAppEngineRouting
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IAppEngineRouting=} [properties] Properties to set
                         */
                        function AppEngineRouting(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AppEngineRouting service.
                         * @member {string} service
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.service = "";
    
                        /**
                         * AppEngineRouting version.
                         * @member {string} version
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.version = "";
    
                        /**
                         * AppEngineRouting instance.
                         * @member {string} instance
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.instance = "";
    
                        /**
                         * AppEngineRouting host.
                         * @member {string} host
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @instance
                         */
                        AppEngineRouting.prototype.host = "";
    
                        /**
                         * Creates a new AppEngineRouting instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineRouting=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.AppEngineRouting} AppEngineRouting instance
                         */
                        AppEngineRouting.create = function create(properties) {
                            return new AppEngineRouting(properties);
                        };
    
                        /**
                         * Encodes the specified AppEngineRouting message. Does not implicitly {@link google.cloud.tasks.v2beta2.AppEngineRouting.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineRouting} message AppEngineRouting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineRouting.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.instance);
                            if (message.host != null && Object.hasOwnProperty.call(message, "host"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.host);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AppEngineRouting message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.AppEngineRouting.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAppEngineRouting} message AppEngineRouting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppEngineRouting.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AppEngineRouting message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.AppEngineRouting} AppEngineRouting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineRouting.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.AppEngineRouting();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.instance = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.host = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AppEngineRouting message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.AppEngineRouting} AppEngineRouting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppEngineRouting.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AppEngineRouting message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppEngineRouting.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.host != null && message.hasOwnProperty("host"))
                                if (!$util.isString(message.host))
                                    return "host: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AppEngineRouting message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.AppEngineRouting} AppEngineRouting
                         */
                        AppEngineRouting.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.AppEngineRouting)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.AppEngineRouting();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.host != null)
                                message.host = String(object.host);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AppEngineRouting message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {google.cloud.tasks.v2beta2.AppEngineRouting} message AppEngineRouting
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppEngineRouting.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = "";
                                object.version = "";
                                object.instance = "";
                                object.host = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.host != null && message.hasOwnProperty("host"))
                                object.host = message.host;
                            return object;
                        };
    
                        /**
                         * Converts this AppEngineRouting to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppEngineRouting.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AppEngineRouting
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.AppEngineRouting
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppEngineRouting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.AppEngineRouting";
                        };
    
                        return AppEngineRouting;
                    })();
    
                    v2beta2.HttpRequest = (function() {
    
                        /**
                         * Properties of a HttpRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IHttpRequest
                         * @property {string|null} [url] HttpRequest url
                         * @property {google.cloud.tasks.v2beta2.HttpMethod|null} [httpMethod] HttpRequest httpMethod
                         * @property {Object.<string,string>|null} [headers] HttpRequest headers
                         * @property {Uint8Array|null} [body] HttpRequest body
                         * @property {google.cloud.tasks.v2beta2.IOAuthToken|null} [oauthToken] HttpRequest oauthToken
                         * @property {google.cloud.tasks.v2beta2.IOidcToken|null} [oidcToken] HttpRequest oidcToken
                         */
    
                        /**
                         * Constructs a new HttpRequest.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a HttpRequest.
                         * @implements IHttpRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IHttpRequest=} [properties] Properties to set
                         */
                        function HttpRequest(properties) {
                            this.headers = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HttpRequest url.
                         * @member {string} url
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.url = "";
    
                        /**
                         * HttpRequest httpMethod.
                         * @member {google.cloud.tasks.v2beta2.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.httpMethod = 0;
    
                        /**
                         * HttpRequest headers.
                         * @member {Object.<string,string>} headers
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.headers = $util.emptyObject;
    
                        /**
                         * HttpRequest body.
                         * @member {Uint8Array} body
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.body = $util.newBuffer([]);
    
                        /**
                         * HttpRequest oauthToken.
                         * @member {google.cloud.tasks.v2beta2.IOAuthToken|null|undefined} oauthToken
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.oauthToken = null;
    
                        /**
                         * HttpRequest oidcToken.
                         * @member {google.cloud.tasks.v2beta2.IOidcToken|null|undefined} oidcToken
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        HttpRequest.prototype.oidcToken = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * HttpRequest authorizationHeader.
                         * @member {"oauthToken"|"oidcToken"|undefined} authorizationHeader
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         */
                        Object.defineProperty(HttpRequest.prototype, "authorizationHeader", {
                            get: $util.oneOfGetter($oneOfFields = ["oauthToken", "oidcToken"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new HttpRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IHttpRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.HttpRequest} HttpRequest instance
                         */
                        HttpRequest.create = function create(properties) {
                            return new HttpRequest(properties);
                        };
    
                        /**
                         * Encodes the specified HttpRequest message. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IHttpRequest} message HttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.url);
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.httpMethod);
                            if (message.headers != null && Object.hasOwnProperty.call(message, "headers"))
                                for (var keys = Object.keys(message.headers), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.headers[keys[i]]).ldelim();
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.body);
                            if (message.oauthToken != null && Object.hasOwnProperty.call(message, "oauthToken"))
                                $root.google.cloud.tasks.v2beta2.OAuthToken.encode(message.oauthToken, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.oidcToken != null && Object.hasOwnProperty.call(message, "oidcToken"))
                                $root.google.cloud.tasks.v2beta2.OidcToken.encode(message.oidcToken, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HttpRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IHttpRequest} message HttpRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HttpRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.HttpRequest} HttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.HttpRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.url = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (message.headers === $util.emptyObject)
                                            message.headers = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.headers[key] = value;
                                        break;
                                    }
                                case 4: {
                                        message.body = reader.bytes();
                                        break;
                                    }
                                case 5: {
                                        message.oauthToken = $root.google.cloud.tasks.v2beta2.OAuthToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.oidcToken = $root.google.cloud.tasks.v2beta2.OidcToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HttpRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.HttpRequest} HttpRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HttpRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HttpRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.headers != null && message.hasOwnProperty("headers")) {
                                if (!$util.isObject(message.headers))
                                    return "headers: object expected";
                                var key = Object.keys(message.headers);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.headers[key[i]]))
                                        return "headers: string{k:string} expected";
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                if (!(message.body && typeof message.body.length === "number" || $util.isString(message.body)))
                                    return "body: buffer expected";
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.OAuthToken.verify(message.oauthToken);
                                    if (error)
                                        return "oauthToken." + error;
                                }
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                if (properties.authorizationHeader === 1)
                                    return "authorizationHeader: multiple values";
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.OidcToken.verify(message.oidcToken);
                                    if (error)
                                        return "oidcToken." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HttpRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.HttpRequest} HttpRequest
                         */
                        HttpRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.HttpRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.HttpRequest();
                            if (object.url != null)
                                message.url = String(object.url);
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.headers) {
                                if (typeof object.headers !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpRequest.headers: object expected");
                                message.headers = {};
                                for (var keys = Object.keys(object.headers), i = 0; i < keys.length; ++i)
                                    message.headers[keys[i]] = String(object.headers[keys[i]]);
                            }
                            if (object.body != null)
                                if (typeof object.body === "string")
                                    $util.base64.decode(object.body, message.body = $util.newBuffer($util.base64.length(object.body)), 0);
                                else if (object.body.length >= 0)
                                    message.body = object.body;
                            if (object.oauthToken != null) {
                                if (typeof object.oauthToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpRequest.oauthToken: object expected");
                                message.oauthToken = $root.google.cloud.tasks.v2beta2.OAuthToken.fromObject(object.oauthToken);
                            }
                            if (object.oidcToken != null) {
                                if (typeof object.oidcToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpRequest.oidcToken: object expected");
                                message.oidcToken = $root.google.cloud.tasks.v2beta2.OidcToken.fromObject(object.oidcToken);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HttpRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta2.HttpRequest} message HttpRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HttpRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.headers = {};
                            if (options.defaults) {
                                object.url = "";
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                                if (options.bytes === String)
                                    object.body = "";
                                else {
                                    object.body = [];
                                    if (options.bytes !== Array)
                                        object.body = $util.newBuffer(object.body);
                                }
                            }
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2beta2.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2beta2.HttpMethod[message.httpMethod] : message.httpMethod;
                            var keys2;
                            if (message.headers && (keys2 = Object.keys(message.headers)).length) {
                                object.headers = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.headers[keys2[j]] = message.headers[keys2[j]];
                            }
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = options.bytes === String ? $util.base64.encode(message.body, 0, message.body.length) : options.bytes === Array ? Array.prototype.slice.call(message.body) : message.body;
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                object.oauthToken = $root.google.cloud.tasks.v2beta2.OAuthToken.toObject(message.oauthToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oauthToken";
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                object.oidcToken = $root.google.cloud.tasks.v2beta2.OidcToken.toObject(message.oidcToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oidcToken";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HttpRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HttpRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HttpRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.HttpRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HttpRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.HttpRequest";
                        };
    
                        return HttpRequest;
                    })();
    
                    v2beta2.PathOverride = (function() {
    
                        /**
                         * Properties of a PathOverride.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IPathOverride
                         * @property {string|null} [path] PathOverride path
                         */
    
                        /**
                         * Constructs a new PathOverride.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a PathOverride.
                         * @implements IPathOverride
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IPathOverride=} [properties] Properties to set
                         */
                        function PathOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PathOverride path.
                         * @member {string} path
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @instance
                         */
                        PathOverride.prototype.path = "";
    
                        /**
                         * Creates a new PathOverride instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPathOverride=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.PathOverride} PathOverride instance
                         */
                        PathOverride.create = function create(properties) {
                            return new PathOverride(properties);
                        };
    
                        /**
                         * Encodes the specified PathOverride message. Does not implicitly {@link google.cloud.tasks.v2beta2.PathOverride.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPathOverride} message PathOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PathOverride.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PathOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.PathOverride.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IPathOverride} message PathOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PathOverride.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PathOverride message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.PathOverride} PathOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PathOverride.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.PathOverride();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.path = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PathOverride message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.PathOverride} PathOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PathOverride.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PathOverride message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PathOverride.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.path != null && message.hasOwnProperty("path"))
                                if (!$util.isString(message.path))
                                    return "path: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PathOverride message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.PathOverride} PathOverride
                         */
                        PathOverride.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.PathOverride)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.PathOverride();
                            if (object.path != null)
                                message.path = String(object.path);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PathOverride message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.PathOverride} message PathOverride
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PathOverride.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.path = "";
                            if (message.path != null && message.hasOwnProperty("path"))
                                object.path = message.path;
                            return object;
                        };
    
                        /**
                         * Converts this PathOverride to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PathOverride.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PathOverride
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.PathOverride
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PathOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.PathOverride";
                        };
    
                        return PathOverride;
                    })();
    
                    v2beta2.QueryOverride = (function() {
    
                        /**
                         * Properties of a QueryOverride.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IQueryOverride
                         * @property {string|null} [queryParams] QueryOverride queryParams
                         */
    
                        /**
                         * Constructs a new QueryOverride.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a QueryOverride.
                         * @implements IQueryOverride
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IQueryOverride=} [properties] Properties to set
                         */
                        function QueryOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueryOverride queryParams.
                         * @member {string} queryParams
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @instance
                         */
                        QueryOverride.prototype.queryParams = "";
    
                        /**
                         * Creates a new QueryOverride instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueryOverride=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.QueryOverride} QueryOverride instance
                         */
                        QueryOverride.create = function create(properties) {
                            return new QueryOverride(properties);
                        };
    
                        /**
                         * Encodes the specified QueryOverride message. Does not implicitly {@link google.cloud.tasks.v2beta2.QueryOverride.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueryOverride} message QueryOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryOverride.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queryParams != null && Object.hasOwnProperty.call(message, "queryParams"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.queryParams);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueryOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.QueryOverride.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IQueryOverride} message QueryOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryOverride.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueryOverride message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.QueryOverride} QueryOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryOverride.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.QueryOverride();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queryParams = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueryOverride message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.QueryOverride} QueryOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryOverride.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueryOverride message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueryOverride.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queryParams != null && message.hasOwnProperty("queryParams"))
                                if (!$util.isString(message.queryParams))
                                    return "queryParams: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a QueryOverride message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.QueryOverride} QueryOverride
                         */
                        QueryOverride.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.QueryOverride)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.QueryOverride();
                            if (object.queryParams != null)
                                message.queryParams = String(object.queryParams);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueryOverride message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.QueryOverride} message QueryOverride
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueryOverride.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.queryParams = "";
                            if (message.queryParams != null && message.hasOwnProperty("queryParams"))
                                object.queryParams = message.queryParams;
                            return object;
                        };
    
                        /**
                         * Converts this QueryOverride to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueryOverride.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueryOverride
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.QueryOverride
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueryOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.QueryOverride";
                        };
    
                        return QueryOverride;
                    })();
    
                    v2beta2.UriOverride = (function() {
    
                        /**
                         * Properties of an UriOverride.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IUriOverride
                         * @property {google.cloud.tasks.v2beta2.UriOverride.Scheme|null} [scheme] UriOverride scheme
                         * @property {string|null} [host] UriOverride host
                         * @property {number|Long|null} [port] UriOverride port
                         * @property {google.cloud.tasks.v2beta2.IPathOverride|null} [pathOverride] UriOverride pathOverride
                         * @property {google.cloud.tasks.v2beta2.IQueryOverride|null} [queryOverride] UriOverride queryOverride
                         * @property {google.cloud.tasks.v2beta2.UriOverride.UriOverrideEnforceMode|null} [uriOverrideEnforceMode] UriOverride uriOverrideEnforceMode
                         */
    
                        /**
                         * Constructs a new UriOverride.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an UriOverride.
                         * @implements IUriOverride
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IUriOverride=} [properties] Properties to set
                         */
                        function UriOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UriOverride scheme.
                         * @member {google.cloud.tasks.v2beta2.UriOverride.Scheme|null|undefined} scheme
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.scheme = null;
    
                        /**
                         * UriOverride host.
                         * @member {string|null|undefined} host
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.host = null;
    
                        /**
                         * UriOverride port.
                         * @member {number|Long|null|undefined} port
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.port = null;
    
                        /**
                         * UriOverride pathOverride.
                         * @member {google.cloud.tasks.v2beta2.IPathOverride|null|undefined} pathOverride
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.pathOverride = null;
    
                        /**
                         * UriOverride queryOverride.
                         * @member {google.cloud.tasks.v2beta2.IQueryOverride|null|undefined} queryOverride
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.queryOverride = null;
    
                        /**
                         * UriOverride uriOverrideEnforceMode.
                         * @member {google.cloud.tasks.v2beta2.UriOverride.UriOverrideEnforceMode} uriOverrideEnforceMode
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.uriOverrideEnforceMode = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * UriOverride _scheme.
                         * @member {"scheme"|undefined} _scheme
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        Object.defineProperty(UriOverride.prototype, "_scheme", {
                            get: $util.oneOfGetter($oneOfFields = ["scheme"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * UriOverride _host.
                         * @member {"host"|undefined} _host
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        Object.defineProperty(UriOverride.prototype, "_host", {
                            get: $util.oneOfGetter($oneOfFields = ["host"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * UriOverride _port.
                         * @member {"port"|undefined} _port
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         */
                        Object.defineProperty(UriOverride.prototype, "_port", {
                            get: $util.oneOfGetter($oneOfFields = ["port"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new UriOverride instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUriOverride=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.UriOverride} UriOverride instance
                         */
                        UriOverride.create = function create(properties) {
                            return new UriOverride(properties);
                        };
    
                        /**
                         * Encodes the specified UriOverride message. Does not implicitly {@link google.cloud.tasks.v2beta2.UriOverride.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUriOverride} message UriOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UriOverride.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.scheme != null && Object.hasOwnProperty.call(message, "scheme"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.scheme);
                            if (message.host != null && Object.hasOwnProperty.call(message, "host"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.host);
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.port);
                            if (message.pathOverride != null && Object.hasOwnProperty.call(message, "pathOverride"))
                                $root.google.cloud.tasks.v2beta2.PathOverride.encode(message.pathOverride, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.queryOverride != null && Object.hasOwnProperty.call(message, "queryOverride"))
                                $root.google.cloud.tasks.v2beta2.QueryOverride.encode(message.queryOverride, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.uriOverrideEnforceMode != null && Object.hasOwnProperty.call(message, "uriOverrideEnforceMode"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.uriOverrideEnforceMode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UriOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.UriOverride.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IUriOverride} message UriOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UriOverride.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UriOverride message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.UriOverride} UriOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UriOverride.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.UriOverride();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.scheme = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.host = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.port = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.pathOverride = $root.google.cloud.tasks.v2beta2.PathOverride.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.queryOverride = $root.google.cloud.tasks.v2beta2.QueryOverride.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.uriOverrideEnforceMode = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UriOverride message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.UriOverride} UriOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UriOverride.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UriOverride message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UriOverride.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.scheme != null && message.hasOwnProperty("scheme")) {
                                properties._scheme = 1;
                                switch (message.scheme) {
                                default:
                                    return "scheme: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            }
                            if (message.host != null && message.hasOwnProperty("host")) {
                                properties._host = 1;
                                if (!$util.isString(message.host))
                                    return "host: string expected";
                            }
                            if (message.port != null && message.hasOwnProperty("port")) {
                                properties._port = 1;
                                if (!$util.isInteger(message.port) && !(message.port && $util.isInteger(message.port.low) && $util.isInteger(message.port.high)))
                                    return "port: integer|Long expected";
                            }
                            if (message.pathOverride != null && message.hasOwnProperty("pathOverride")) {
                                var error = $root.google.cloud.tasks.v2beta2.PathOverride.verify(message.pathOverride);
                                if (error)
                                    return "pathOverride." + error;
                            }
                            if (message.queryOverride != null && message.hasOwnProperty("queryOverride")) {
                                var error = $root.google.cloud.tasks.v2beta2.QueryOverride.verify(message.queryOverride);
                                if (error)
                                    return "queryOverride." + error;
                            }
                            if (message.uriOverrideEnforceMode != null && message.hasOwnProperty("uriOverrideEnforceMode"))
                                switch (message.uriOverrideEnforceMode) {
                                default:
                                    return "uriOverrideEnforceMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an UriOverride message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.UriOverride} UriOverride
                         */
                        UriOverride.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.UriOverride)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.UriOverride();
                            switch (object.scheme) {
                            default:
                                if (typeof object.scheme === "number") {
                                    message.scheme = object.scheme;
                                    break;
                                }
                                break;
                            case "SCHEME_UNSPECIFIED":
                            case 0:
                                message.scheme = 0;
                                break;
                            case "HTTP":
                            case 1:
                                message.scheme = 1;
                                break;
                            case "HTTPS":
                            case 2:
                                message.scheme = 2;
                                break;
                            }
                            if (object.host != null)
                                message.host = String(object.host);
                            if (object.port != null)
                                if ($util.Long)
                                    (message.port = $util.Long.fromValue(object.port)).unsigned = false;
                                else if (typeof object.port === "string")
                                    message.port = parseInt(object.port, 10);
                                else if (typeof object.port === "number")
                                    message.port = object.port;
                                else if (typeof object.port === "object")
                                    message.port = new $util.LongBits(object.port.low >>> 0, object.port.high >>> 0).toNumber();
                            if (object.pathOverride != null) {
                                if (typeof object.pathOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.UriOverride.pathOverride: object expected");
                                message.pathOverride = $root.google.cloud.tasks.v2beta2.PathOverride.fromObject(object.pathOverride);
                            }
                            if (object.queryOverride != null) {
                                if (typeof object.queryOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.UriOverride.queryOverride: object expected");
                                message.queryOverride = $root.google.cloud.tasks.v2beta2.QueryOverride.fromObject(object.queryOverride);
                            }
                            switch (object.uriOverrideEnforceMode) {
                            default:
                                if (typeof object.uriOverrideEnforceMode === "number") {
                                    message.uriOverrideEnforceMode = object.uriOverrideEnforceMode;
                                    break;
                                }
                                break;
                            case "URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED":
                            case 0:
                                message.uriOverrideEnforceMode = 0;
                                break;
                            case "IF_NOT_EXISTS":
                            case 1:
                                message.uriOverrideEnforceMode = 1;
                                break;
                            case "ALWAYS":
                            case 2:
                                message.uriOverrideEnforceMode = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UriOverride message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta2.UriOverride} message UriOverride
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UriOverride.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.pathOverride = null;
                                object.queryOverride = null;
                                object.uriOverrideEnforceMode = options.enums === String ? "URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED" : 0;
                            }
                            if (message.scheme != null && message.hasOwnProperty("scheme")) {
                                object.scheme = options.enums === String ? $root.google.cloud.tasks.v2beta2.UriOverride.Scheme[message.scheme] === undefined ? message.scheme : $root.google.cloud.tasks.v2beta2.UriOverride.Scheme[message.scheme] : message.scheme;
                                if (options.oneofs)
                                    object._scheme = "scheme";
                            }
                            if (message.host != null && message.hasOwnProperty("host")) {
                                object.host = message.host;
                                if (options.oneofs)
                                    object._host = "host";
                            }
                            if (message.port != null && message.hasOwnProperty("port")) {
                                if (typeof message.port === "number")
                                    object.port = options.longs === String ? String(message.port) : message.port;
                                else
                                    object.port = options.longs === String ? $util.Long.prototype.toString.call(message.port) : options.longs === Number ? new $util.LongBits(message.port.low >>> 0, message.port.high >>> 0).toNumber() : message.port;
                                if (options.oneofs)
                                    object._port = "port";
                            }
                            if (message.pathOverride != null && message.hasOwnProperty("pathOverride"))
                                object.pathOverride = $root.google.cloud.tasks.v2beta2.PathOverride.toObject(message.pathOverride, options);
                            if (message.queryOverride != null && message.hasOwnProperty("queryOverride"))
                                object.queryOverride = $root.google.cloud.tasks.v2beta2.QueryOverride.toObject(message.queryOverride, options);
                            if (message.uriOverrideEnforceMode != null && message.hasOwnProperty("uriOverrideEnforceMode"))
                                object.uriOverrideEnforceMode = options.enums === String ? $root.google.cloud.tasks.v2beta2.UriOverride.UriOverrideEnforceMode[message.uriOverrideEnforceMode] === undefined ? message.uriOverrideEnforceMode : $root.google.cloud.tasks.v2beta2.UriOverride.UriOverrideEnforceMode[message.uriOverrideEnforceMode] : message.uriOverrideEnforceMode;
                            return object;
                        };
    
                        /**
                         * Converts this UriOverride to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UriOverride.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UriOverride
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.UriOverride
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UriOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.UriOverride";
                        };
    
                        /**
                         * Scheme enum.
                         * @name google.cloud.tasks.v2beta2.UriOverride.Scheme
                         * @enum {number}
                         * @property {number} SCHEME_UNSPECIFIED=0 SCHEME_UNSPECIFIED value
                         * @property {number} HTTP=1 HTTP value
                         * @property {number} HTTPS=2 HTTPS value
                         */
                        UriOverride.Scheme = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SCHEME_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "HTTP"] = 1;
                            values[valuesById[2] = "HTTPS"] = 2;
                            return values;
                        })();
    
                        /**
                         * UriOverrideEnforceMode enum.
                         * @name google.cloud.tasks.v2beta2.UriOverride.UriOverrideEnforceMode
                         * @enum {number}
                         * @property {number} URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED=0 URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED value
                         * @property {number} IF_NOT_EXISTS=1 IF_NOT_EXISTS value
                         * @property {number} ALWAYS=2 ALWAYS value
                         */
                        UriOverride.UriOverrideEnforceMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "IF_NOT_EXISTS"] = 1;
                            values[valuesById[2] = "ALWAYS"] = 2;
                            return values;
                        })();
    
                        return UriOverride;
                    })();
    
                    v2beta2.HttpTarget = (function() {
    
                        /**
                         * Properties of a HttpTarget.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IHttpTarget
                         * @property {google.cloud.tasks.v2beta2.IUriOverride|null} [uriOverride] HttpTarget uriOverride
                         * @property {google.cloud.tasks.v2beta2.HttpMethod|null} [httpMethod] HttpTarget httpMethod
                         * @property {Array.<google.cloud.tasks.v2beta2.HttpTarget.IHeaderOverride>|null} [headerOverrides] HttpTarget headerOverrides
                         * @property {google.cloud.tasks.v2beta2.IOAuthToken|null} [oauthToken] HttpTarget oauthToken
                         * @property {google.cloud.tasks.v2beta2.IOidcToken|null} [oidcToken] HttpTarget oidcToken
                         */
    
                        /**
                         * Constructs a new HttpTarget.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a HttpTarget.
                         * @implements IHttpTarget
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IHttpTarget=} [properties] Properties to set
                         */
                        function HttpTarget(properties) {
                            this.headerOverrides = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HttpTarget uriOverride.
                         * @member {google.cloud.tasks.v2beta2.IUriOverride|null|undefined} uriOverride
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.uriOverride = null;
    
                        /**
                         * HttpTarget httpMethod.
                         * @member {google.cloud.tasks.v2beta2.HttpMethod} httpMethod
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.httpMethod = 0;
    
                        /**
                         * HttpTarget headerOverrides.
                         * @member {Array.<google.cloud.tasks.v2beta2.HttpTarget.IHeaderOverride>} headerOverrides
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.headerOverrides = $util.emptyArray;
    
                        /**
                         * HttpTarget oauthToken.
                         * @member {google.cloud.tasks.v2beta2.IOAuthToken|null|undefined} oauthToken
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.oauthToken = null;
    
                        /**
                         * HttpTarget oidcToken.
                         * @member {google.cloud.tasks.v2beta2.IOidcToken|null|undefined} oidcToken
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         */
                        HttpTarget.prototype.oidcToken = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * HttpTarget authorizationHeader.
                         * @member {"oauthToken"|"oidcToken"|undefined} authorizationHeader
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         */
                        Object.defineProperty(HttpTarget.prototype, "authorizationHeader", {
                            get: $util.oneOfGetter($oneOfFields = ["oauthToken", "oidcToken"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new HttpTarget instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IHttpTarget=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.HttpTarget} HttpTarget instance
                         */
                        HttpTarget.create = function create(properties) {
                            return new HttpTarget(properties);
                        };
    
                        /**
                         * Encodes the specified HttpTarget message. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpTarget.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IHttpTarget} message HttpTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpTarget.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uriOverride != null && Object.hasOwnProperty.call(message, "uriOverride"))
                                $root.google.cloud.tasks.v2beta2.UriOverride.encode(message.uriOverride, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.httpMethod != null && Object.hasOwnProperty.call(message, "httpMethod"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.httpMethod);
                            if (message.headerOverrides != null && message.headerOverrides.length)
                                for (var i = 0; i < message.headerOverrides.length; ++i)
                                    $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.encode(message.headerOverrides[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.oauthToken != null && Object.hasOwnProperty.call(message, "oauthToken"))
                                $root.google.cloud.tasks.v2beta2.OAuthToken.encode(message.oauthToken, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.oidcToken != null && Object.hasOwnProperty.call(message, "oidcToken"))
                                $root.google.cloud.tasks.v2beta2.OidcToken.encode(message.oidcToken, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HttpTarget message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpTarget.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IHttpTarget} message HttpTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpTarget.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HttpTarget message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.HttpTarget} HttpTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpTarget.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.HttpTarget();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uriOverride = $root.google.cloud.tasks.v2beta2.UriOverride.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.httpMethod = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.headerOverrides && message.headerOverrides.length))
                                            message.headerOverrides = [];
                                        message.headerOverrides.push($root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        message.oauthToken = $root.google.cloud.tasks.v2beta2.OAuthToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.oidcToken = $root.google.cloud.tasks.v2beta2.OidcToken.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HttpTarget message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.HttpTarget} HttpTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpTarget.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HttpTarget message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HttpTarget.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.uriOverride != null && message.hasOwnProperty("uriOverride")) {
                                var error = $root.google.cloud.tasks.v2beta2.UriOverride.verify(message.uriOverride);
                                if (error)
                                    return "uriOverride." + error;
                            }
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                switch (message.httpMethod) {
                                default:
                                    return "httpMethod: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.headerOverrides != null && message.hasOwnProperty("headerOverrides")) {
                                if (!Array.isArray(message.headerOverrides))
                                    return "headerOverrides: array expected";
                                for (var i = 0; i < message.headerOverrides.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.verify(message.headerOverrides[i]);
                                    if (error)
                                        return "headerOverrides." + error;
                                }
                            }
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.OAuthToken.verify(message.oauthToken);
                                    if (error)
                                        return "oauthToken." + error;
                                }
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                if (properties.authorizationHeader === 1)
                                    return "authorizationHeader: multiple values";
                                properties.authorizationHeader = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.OidcToken.verify(message.oidcToken);
                                    if (error)
                                        return "oidcToken." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HttpTarget message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.HttpTarget} HttpTarget
                         */
                        HttpTarget.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.HttpTarget)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.HttpTarget();
                            if (object.uriOverride != null) {
                                if (typeof object.uriOverride !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpTarget.uriOverride: object expected");
                                message.uriOverride = $root.google.cloud.tasks.v2beta2.UriOverride.fromObject(object.uriOverride);
                            }
                            switch (object.httpMethod) {
                            default:
                                if (typeof object.httpMethod === "number") {
                                    message.httpMethod = object.httpMethod;
                                    break;
                                }
                                break;
                            case "HTTP_METHOD_UNSPECIFIED":
                            case 0:
                                message.httpMethod = 0;
                                break;
                            case "POST":
                            case 1:
                                message.httpMethod = 1;
                                break;
                            case "GET":
                            case 2:
                                message.httpMethod = 2;
                                break;
                            case "HEAD":
                            case 3:
                                message.httpMethod = 3;
                                break;
                            case "PUT":
                            case 4:
                                message.httpMethod = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.httpMethod = 5;
                                break;
                            case "PATCH":
                            case 6:
                                message.httpMethod = 6;
                                break;
                            case "OPTIONS":
                            case 7:
                                message.httpMethod = 7;
                                break;
                            }
                            if (object.headerOverrides) {
                                if (!Array.isArray(object.headerOverrides))
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpTarget.headerOverrides: array expected");
                                message.headerOverrides = [];
                                for (var i = 0; i < object.headerOverrides.length; ++i) {
                                    if (typeof object.headerOverrides[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta2.HttpTarget.headerOverrides: object expected");
                                    message.headerOverrides[i] = $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.fromObject(object.headerOverrides[i]);
                                }
                            }
                            if (object.oauthToken != null) {
                                if (typeof object.oauthToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpTarget.oauthToken: object expected");
                                message.oauthToken = $root.google.cloud.tasks.v2beta2.OAuthToken.fromObject(object.oauthToken);
                            }
                            if (object.oidcToken != null) {
                                if (typeof object.oidcToken !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.HttpTarget.oidcToken: object expected");
                                message.oidcToken = $root.google.cloud.tasks.v2beta2.OidcToken.fromObject(object.oidcToken);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HttpTarget message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {google.cloud.tasks.v2beta2.HttpTarget} message HttpTarget
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HttpTarget.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.headerOverrides = [];
                            if (options.defaults) {
                                object.uriOverride = null;
                                object.httpMethod = options.enums === String ? "HTTP_METHOD_UNSPECIFIED" : 0;
                            }
                            if (message.uriOverride != null && message.hasOwnProperty("uriOverride"))
                                object.uriOverride = $root.google.cloud.tasks.v2beta2.UriOverride.toObject(message.uriOverride, options);
                            if (message.httpMethod != null && message.hasOwnProperty("httpMethod"))
                                object.httpMethod = options.enums === String ? $root.google.cloud.tasks.v2beta2.HttpMethod[message.httpMethod] === undefined ? message.httpMethod : $root.google.cloud.tasks.v2beta2.HttpMethod[message.httpMethod] : message.httpMethod;
                            if (message.headerOverrides && message.headerOverrides.length) {
                                object.headerOverrides = [];
                                for (var j = 0; j < message.headerOverrides.length; ++j)
                                    object.headerOverrides[j] = $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.toObject(message.headerOverrides[j], options);
                            }
                            if (message.oauthToken != null && message.hasOwnProperty("oauthToken")) {
                                object.oauthToken = $root.google.cloud.tasks.v2beta2.OAuthToken.toObject(message.oauthToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oauthToken";
                            }
                            if (message.oidcToken != null && message.hasOwnProperty("oidcToken")) {
                                object.oidcToken = $root.google.cloud.tasks.v2beta2.OidcToken.toObject(message.oidcToken, options);
                                if (options.oneofs)
                                    object.authorizationHeader = "oidcToken";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HttpTarget to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HttpTarget.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HttpTarget
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.HttpTarget
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HttpTarget.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.HttpTarget";
                        };
    
                        HttpTarget.Header = (function() {
    
                            /**
                             * Properties of a Header.
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget
                             * @interface IHeader
                             * @property {string|null} [key] Header key
                             * @property {string|null} [value] Header value
                             */
    
                            /**
                             * Constructs a new Header.
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget
                             * @classdesc Represents a Header.
                             * @implements IHeader
                             * @constructor
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeader=} [properties] Properties to set
                             */
                            function Header(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Header key.
                             * @member {string} key
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @instance
                             */
                            Header.prototype.key = "";
    
                            /**
                             * Header value.
                             * @member {string} value
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @instance
                             */
                            Header.prototype.value = "";
    
                            /**
                             * Creates a new Header instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeader=} [properties] Properties to set
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.Header} Header instance
                             */
                            Header.create = function create(properties) {
                                return new Header(properties);
                            };
    
                            /**
                             * Encodes the specified Header message. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpTarget.Header.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeader} message Header message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Header.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Header message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpTarget.Header.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeader} message Header message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Header.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Header message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.Header} Header
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Header.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.HttpTarget.Header();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.key = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.value = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Header message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.Header} Header
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Header.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Header message.
                             * @function verify
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Header.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.key != null && message.hasOwnProperty("key"))
                                    if (!$util.isString(message.key))
                                        return "key: string expected";
                                if (message.value != null && message.hasOwnProperty("value"))
                                    if (!$util.isString(message.value))
                                        return "value: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Header message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.Header} Header
                             */
                            Header.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.tasks.v2beta2.HttpTarget.Header)
                                    return object;
                                var message = new $root.google.cloud.tasks.v2beta2.HttpTarget.Header();
                                if (object.key != null)
                                    message.key = String(object.key);
                                if (object.value != null)
                                    message.value = String(object.value);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Header message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.Header} message Header
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Header.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.key = "";
                                    object.value = "";
                                }
                                if (message.key != null && message.hasOwnProperty("key"))
                                    object.key = message.key;
                                if (message.value != null && message.hasOwnProperty("value"))
                                    object.value = message.value;
                                return object;
                            };
    
                            /**
                             * Converts this Header to JSON.
                             * @function toJSON
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Header.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Header
                             * @function getTypeUrl
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.Header
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Header.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.tasks.v2beta2.HttpTarget.Header";
                            };
    
                            return Header;
                        })();
    
                        HttpTarget.HeaderOverride = (function() {
    
                            /**
                             * Properties of a HeaderOverride.
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget
                             * @interface IHeaderOverride
                             * @property {google.cloud.tasks.v2beta2.HttpTarget.IHeader|null} [header] HeaderOverride header
                             */
    
                            /**
                             * Constructs a new HeaderOverride.
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget
                             * @classdesc Represents a HeaderOverride.
                             * @implements IHeaderOverride
                             * @constructor
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeaderOverride=} [properties] Properties to set
                             */
                            function HeaderOverride(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HeaderOverride header.
                             * @member {google.cloud.tasks.v2beta2.HttpTarget.IHeader|null|undefined} header
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @instance
                             */
                            HeaderOverride.prototype.header = null;
    
                            /**
                             * Creates a new HeaderOverride instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeaderOverride=} [properties] Properties to set
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride} HeaderOverride instance
                             */
                            HeaderOverride.create = function create(properties) {
                                return new HeaderOverride(properties);
                            };
    
                            /**
                             * Encodes the specified HeaderOverride message. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeaderOverride} message HeaderOverride message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HeaderOverride.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.header != null && Object.hasOwnProperty.call(message, "header"))
                                    $root.google.cloud.tasks.v2beta2.HttpTarget.Header.encode(message.header, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HeaderOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.IHeaderOverride} message HeaderOverride message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HeaderOverride.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HeaderOverride message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride} HeaderOverride
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HeaderOverride.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.header = $root.google.cloud.tasks.v2beta2.HttpTarget.Header.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HeaderOverride message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride} HeaderOverride
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HeaderOverride.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HeaderOverride message.
                             * @function verify
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HeaderOverride.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.header != null && message.hasOwnProperty("header")) {
                                    var error = $root.google.cloud.tasks.v2beta2.HttpTarget.Header.verify(message.header);
                                    if (error)
                                        return "header." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a HeaderOverride message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride} HeaderOverride
                             */
                            HeaderOverride.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride)
                                    return object;
                                var message = new $root.google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride();
                                if (object.header != null) {
                                    if (typeof object.header !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride.header: object expected");
                                    message.header = $root.google.cloud.tasks.v2beta2.HttpTarget.Header.fromObject(object.header);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HeaderOverride message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride} message HeaderOverride
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HeaderOverride.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.header = null;
                                if (message.header != null && message.hasOwnProperty("header"))
                                    object.header = $root.google.cloud.tasks.v2beta2.HttpTarget.Header.toObject(message.header, options);
                                return object;
                            };
    
                            /**
                             * Converts this HeaderOverride to JSON.
                             * @function toJSON
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HeaderOverride.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for HeaderOverride
                             * @function getTypeUrl
                             * @memberof google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            HeaderOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.tasks.v2beta2.HttpTarget.HeaderOverride";
                            };
    
                            return HeaderOverride;
                        })();
    
                        return HttpTarget;
                    })();
    
                    v2beta2.OAuthToken = (function() {
    
                        /**
                         * Properties of a OAuthToken.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IOAuthToken
                         * @property {string|null} [serviceAccountEmail] OAuthToken serviceAccountEmail
                         * @property {string|null} [scope] OAuthToken scope
                         */
    
                        /**
                         * Constructs a new OAuthToken.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a OAuthToken.
                         * @implements IOAuthToken
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IOAuthToken=} [properties] Properties to set
                         */
                        function OAuthToken(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OAuthToken serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @instance
                         */
                        OAuthToken.prototype.serviceAccountEmail = "";
    
                        /**
                         * OAuthToken scope.
                         * @member {string} scope
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @instance
                         */
                        OAuthToken.prototype.scope = "";
    
                        /**
                         * Creates a new OAuthToken instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IOAuthToken=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.OAuthToken} OAuthToken instance
                         */
                        OAuthToken.create = function create(properties) {
                            return new OAuthToken(properties);
                        };
    
                        /**
                         * Encodes the specified OAuthToken message. Does not implicitly {@link google.cloud.tasks.v2beta2.OAuthToken.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IOAuthToken} message OAuthToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OAuthToken.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceAccountEmail);
                            if (message.scope != null && Object.hasOwnProperty.call(message, "scope"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.scope);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OAuthToken message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.OAuthToken.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IOAuthToken} message OAuthToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OAuthToken.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a OAuthToken message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.OAuthToken} OAuthToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OAuthToken.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.OAuthToken();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.scope = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a OAuthToken message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.OAuthToken} OAuthToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OAuthToken.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a OAuthToken message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OAuthToken.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                if (!$util.isString(message.scope))
                                    return "scope: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a OAuthToken message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.OAuthToken} OAuthToken
                         */
                        OAuthToken.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.OAuthToken)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.OAuthToken();
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.scope != null)
                                message.scope = String(object.scope);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a OAuthToken message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.OAuthToken} message OAuthToken
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OAuthToken.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.serviceAccountEmail = "";
                                object.scope = "";
                            }
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.scope != null && message.hasOwnProperty("scope"))
                                object.scope = message.scope;
                            return object;
                        };
    
                        /**
                         * Converts this OAuthToken to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OAuthToken.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OAuthToken
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.OAuthToken
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OAuthToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.OAuthToken";
                        };
    
                        return OAuthToken;
                    })();
    
                    v2beta2.OidcToken = (function() {
    
                        /**
                         * Properties of an OidcToken.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IOidcToken
                         * @property {string|null} [serviceAccountEmail] OidcToken serviceAccountEmail
                         * @property {string|null} [audience] OidcToken audience
                         */
    
                        /**
                         * Constructs a new OidcToken.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an OidcToken.
                         * @implements IOidcToken
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IOidcToken=} [properties] Properties to set
                         */
                        function OidcToken(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OidcToken serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @instance
                         */
                        OidcToken.prototype.serviceAccountEmail = "";
    
                        /**
                         * OidcToken audience.
                         * @member {string} audience
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @instance
                         */
                        OidcToken.prototype.audience = "";
    
                        /**
                         * Creates a new OidcToken instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IOidcToken=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.OidcToken} OidcToken instance
                         */
                        OidcToken.create = function create(properties) {
                            return new OidcToken(properties);
                        };
    
                        /**
                         * Encodes the specified OidcToken message. Does not implicitly {@link google.cloud.tasks.v2beta2.OidcToken.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IOidcToken} message OidcToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OidcToken.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceAccountEmail);
                            if (message.audience != null && Object.hasOwnProperty.call(message, "audience"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.audience);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OidcToken message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.OidcToken.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IOidcToken} message OidcToken message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OidcToken.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OidcToken message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.OidcToken} OidcToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OidcToken.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.OidcToken();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.audience = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OidcToken message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.OidcToken} OidcToken
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OidcToken.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OidcToken message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OidcToken.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.audience != null && message.hasOwnProperty("audience"))
                                if (!$util.isString(message.audience))
                                    return "audience: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OidcToken message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.OidcToken} OidcToken
                         */
                        OidcToken.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.OidcToken)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.OidcToken();
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.audience != null)
                                message.audience = String(object.audience);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OidcToken message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {google.cloud.tasks.v2beta2.OidcToken} message OidcToken
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OidcToken.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.serviceAccountEmail = "";
                                object.audience = "";
                            }
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.audience != null && message.hasOwnProperty("audience"))
                                object.audience = message.audience;
                            return object;
                        };
    
                        /**
                         * Converts this OidcToken to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OidcToken.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OidcToken
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.OidcToken
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OidcToken.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.OidcToken";
                        };
    
                        return OidcToken;
                    })();
    
                    /**
                     * HttpMethod enum.
                     * @name google.cloud.tasks.v2beta2.HttpMethod
                     * @enum {number}
                     * @property {number} HTTP_METHOD_UNSPECIFIED=0 HTTP_METHOD_UNSPECIFIED value
                     * @property {number} POST=1 POST value
                     * @property {number} GET=2 GET value
                     * @property {number} HEAD=3 HEAD value
                     * @property {number} PUT=4 PUT value
                     * @property {number} DELETE=5 DELETE value
                     * @property {number} PATCH=6 PATCH value
                     * @property {number} OPTIONS=7 OPTIONS value
                     */
                    v2beta2.HttpMethod = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "HTTP_METHOD_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "POST"] = 1;
                        values[valuesById[2] = "GET"] = 2;
                        values[valuesById[3] = "HEAD"] = 3;
                        values[valuesById[4] = "PUT"] = 4;
                        values[valuesById[5] = "DELETE"] = 5;
                        values[valuesById[6] = "PATCH"] = 6;
                        values[valuesById[7] = "OPTIONS"] = 7;
                        return values;
                    })();
    
                    v2beta2.Task = (function() {
    
                        /**
                         * Properties of a Task.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ITask
                         * @property {string|null} [name] Task name
                         * @property {google.cloud.tasks.v2beta2.IAppEngineHttpRequest|null} [appEngineHttpRequest] Task appEngineHttpRequest
                         * @property {google.cloud.tasks.v2beta2.IPullMessage|null} [pullMessage] Task pullMessage
                         * @property {google.cloud.tasks.v2beta2.IHttpRequest|null} [httpRequest] Task httpRequest
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] Task scheduleTime
                         * @property {google.protobuf.ITimestamp|null} [createTime] Task createTime
                         * @property {google.cloud.tasks.v2beta2.ITaskStatus|null} [status] Task status
                         * @property {google.cloud.tasks.v2beta2.Task.View|null} [view] Task view
                         */
    
                        /**
                         * Constructs a new Task.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a Task.
                         * @implements ITask
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ITask=} [properties] Properties to set
                         */
                        function Task(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Task name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.name = "";
    
                        /**
                         * Task appEngineHttpRequest.
                         * @member {google.cloud.tasks.v2beta2.IAppEngineHttpRequest|null|undefined} appEngineHttpRequest
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.appEngineHttpRequest = null;
    
                        /**
                         * Task pullMessage.
                         * @member {google.cloud.tasks.v2beta2.IPullMessage|null|undefined} pullMessage
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.pullMessage = null;
    
                        /**
                         * Task httpRequest.
                         * @member {google.cloud.tasks.v2beta2.IHttpRequest|null|undefined} httpRequest
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.httpRequest = null;
    
                        /**
                         * Task scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.scheduleTime = null;
    
                        /**
                         * Task createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.createTime = null;
    
                        /**
                         * Task status.
                         * @member {google.cloud.tasks.v2beta2.ITaskStatus|null|undefined} status
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.status = null;
    
                        /**
                         * Task view.
                         * @member {google.cloud.tasks.v2beta2.Task.View} view
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Task.prototype.view = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Task payloadType.
                         * @member {"appEngineHttpRequest"|"pullMessage"|"httpRequest"|undefined} payloadType
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         */
                        Object.defineProperty(Task.prototype, "payloadType", {
                            get: $util.oneOfGetter($oneOfFields = ["appEngineHttpRequest", "pullMessage", "httpRequest"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Task instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ITask=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.Task} Task instance
                         */
                        Task.create = function create(properties) {
                            return new Task(properties);
                        };
    
                        /**
                         * Encodes the specified Task message. Does not implicitly {@link google.cloud.tasks.v2beta2.Task.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ITask} message Task message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Task.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.appEngineHttpRequest != null && Object.hasOwnProperty.call(message, "appEngineHttpRequest"))
                                $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest.encode(message.appEngineHttpRequest, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.pullMessage != null && Object.hasOwnProperty.call(message, "pullMessage"))
                                $root.google.cloud.tasks.v2beta2.PullMessage.encode(message.pullMessage, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                $root.google.cloud.tasks.v2beta2.TaskStatus.encode(message.status, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.view != null && Object.hasOwnProperty.call(message, "view"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.view);
                            if (message.httpRequest != null && Object.hasOwnProperty.call(message, "httpRequest"))
                                $root.google.cloud.tasks.v2beta2.HttpRequest.encode(message.httpRequest, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Task message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.Task.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ITask} message Task message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Task.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Task message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.Task} Task
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Task.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.Task();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.appEngineHttpRequest = $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.pullMessage = $root.google.cloud.tasks.v2beta2.PullMessage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.httpRequest = $root.google.cloud.tasks.v2beta2.HttpRequest.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.status = $root.google.cloud.tasks.v2beta2.TaskStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.view = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Task message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.Task} Task
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Task.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Task message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Task.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.appEngineHttpRequest != null && message.hasOwnProperty("appEngineHttpRequest")) {
                                properties.payloadType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest.verify(message.appEngineHttpRequest);
                                    if (error)
                                        return "appEngineHttpRequest." + error;
                                }
                            }
                            if (message.pullMessage != null && message.hasOwnProperty("pullMessage")) {
                                if (properties.payloadType === 1)
                                    return "payloadType: multiple values";
                                properties.payloadType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.PullMessage.verify(message.pullMessage);
                                    if (error)
                                        return "pullMessage." + error;
                                }
                            }
                            if (message.httpRequest != null && message.hasOwnProperty("httpRequest")) {
                                if (properties.payloadType === 1)
                                    return "payloadType: multiple values";
                                properties.payloadType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta2.HttpRequest.verify(message.httpRequest);
                                    if (error)
                                        return "httpRequest." + error;
                                }
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.status != null && message.hasOwnProperty("status")) {
                                var error = $root.google.cloud.tasks.v2beta2.TaskStatus.verify(message.status);
                                if (error)
                                    return "status." + error;
                            }
                            if (message.view != null && message.hasOwnProperty("view"))
                                switch (message.view) {
                                default:
                                    return "view: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a Task message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.Task} Task
                         */
                        Task.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.Task)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.Task();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.appEngineHttpRequest != null) {
                                if (typeof object.appEngineHttpRequest !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Task.appEngineHttpRequest: object expected");
                                message.appEngineHttpRequest = $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest.fromObject(object.appEngineHttpRequest);
                            }
                            if (object.pullMessage != null) {
                                if (typeof object.pullMessage !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Task.pullMessage: object expected");
                                message.pullMessage = $root.google.cloud.tasks.v2beta2.PullMessage.fromObject(object.pullMessage);
                            }
                            if (object.httpRequest != null) {
                                if (typeof object.httpRequest !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Task.httpRequest: object expected");
                                message.httpRequest = $root.google.cloud.tasks.v2beta2.HttpRequest.fromObject(object.httpRequest);
                            }
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Task.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Task.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.status != null) {
                                if (typeof object.status !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.Task.status: object expected");
                                message.status = $root.google.cloud.tasks.v2beta2.TaskStatus.fromObject(object.status);
                            }
                            switch (object.view) {
                            default:
                                if (typeof object.view === "number") {
                                    message.view = object.view;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.view = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.view = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.view = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Task message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {google.cloud.tasks.v2beta2.Task} message Task
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Task.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.scheduleTime = null;
                                object.createTime = null;
                                object.status = null;
                                object.view = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.appEngineHttpRequest != null && message.hasOwnProperty("appEngineHttpRequest")) {
                                object.appEngineHttpRequest = $root.google.cloud.tasks.v2beta2.AppEngineHttpRequest.toObject(message.appEngineHttpRequest, options);
                                if (options.oneofs)
                                    object.payloadType = "appEngineHttpRequest";
                            }
                            if (message.pullMessage != null && message.hasOwnProperty("pullMessage")) {
                                object.pullMessage = $root.google.cloud.tasks.v2beta2.PullMessage.toObject(message.pullMessage, options);
                                if (options.oneofs)
                                    object.payloadType = "pullMessage";
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = $root.google.cloud.tasks.v2beta2.TaskStatus.toObject(message.status, options);
                            if (message.view != null && message.hasOwnProperty("view"))
                                object.view = options.enums === String ? $root.google.cloud.tasks.v2beta2.Task.View[message.view] === undefined ? message.view : $root.google.cloud.tasks.v2beta2.Task.View[message.view] : message.view;
                            if (message.httpRequest != null && message.hasOwnProperty("httpRequest")) {
                                object.httpRequest = $root.google.cloud.tasks.v2beta2.HttpRequest.toObject(message.httpRequest, options);
                                if (options.oneofs)
                                    object.payloadType = "httpRequest";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Task to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Task.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Task
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.Task
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Task.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.Task";
                        };
    
                        /**
                         * View enum.
                         * @name google.cloud.tasks.v2beta2.Task.View
                         * @enum {number}
                         * @property {number} VIEW_UNSPECIFIED=0 VIEW_UNSPECIFIED value
                         * @property {number} BASIC=1 BASIC value
                         * @property {number} FULL=2 FULL value
                         */
                        Task.View = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "VIEW_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BASIC"] = 1;
                            values[valuesById[2] = "FULL"] = 2;
                            return values;
                        })();
    
                        return Task;
                    })();
    
                    v2beta2.TaskStatus = (function() {
    
                        /**
                         * Properties of a TaskStatus.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface ITaskStatus
                         * @property {number|null} [attemptDispatchCount] TaskStatus attemptDispatchCount
                         * @property {number|null} [attemptResponseCount] TaskStatus attemptResponseCount
                         * @property {google.cloud.tasks.v2beta2.IAttemptStatus|null} [firstAttemptStatus] TaskStatus firstAttemptStatus
                         * @property {google.cloud.tasks.v2beta2.IAttemptStatus|null} [lastAttemptStatus] TaskStatus lastAttemptStatus
                         */
    
                        /**
                         * Constructs a new TaskStatus.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents a TaskStatus.
                         * @implements ITaskStatus
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.ITaskStatus=} [properties] Properties to set
                         */
                        function TaskStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TaskStatus attemptDispatchCount.
                         * @member {number} attemptDispatchCount
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @instance
                         */
                        TaskStatus.prototype.attemptDispatchCount = 0;
    
                        /**
                         * TaskStatus attemptResponseCount.
                         * @member {number} attemptResponseCount
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @instance
                         */
                        TaskStatus.prototype.attemptResponseCount = 0;
    
                        /**
                         * TaskStatus firstAttemptStatus.
                         * @member {google.cloud.tasks.v2beta2.IAttemptStatus|null|undefined} firstAttemptStatus
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @instance
                         */
                        TaskStatus.prototype.firstAttemptStatus = null;
    
                        /**
                         * TaskStatus lastAttemptStatus.
                         * @member {google.cloud.tasks.v2beta2.IAttemptStatus|null|undefined} lastAttemptStatus
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @instance
                         */
                        TaskStatus.prototype.lastAttemptStatus = null;
    
                        /**
                         * Creates a new TaskStatus instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ITaskStatus=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.TaskStatus} TaskStatus instance
                         */
                        TaskStatus.create = function create(properties) {
                            return new TaskStatus(properties);
                        };
    
                        /**
                         * Encodes the specified TaskStatus message. Does not implicitly {@link google.cloud.tasks.v2beta2.TaskStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ITaskStatus} message TaskStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TaskStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.attemptDispatchCount != null && Object.hasOwnProperty.call(message, "attemptDispatchCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.attemptDispatchCount);
                            if (message.attemptResponseCount != null && Object.hasOwnProperty.call(message, "attemptResponseCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.attemptResponseCount);
                            if (message.firstAttemptStatus != null && Object.hasOwnProperty.call(message, "firstAttemptStatus"))
                                $root.google.cloud.tasks.v2beta2.AttemptStatus.encode(message.firstAttemptStatus, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.lastAttemptStatus != null && Object.hasOwnProperty.call(message, "lastAttemptStatus"))
                                $root.google.cloud.tasks.v2beta2.AttemptStatus.encode(message.lastAttemptStatus, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TaskStatus message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.TaskStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.ITaskStatus} message TaskStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TaskStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TaskStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.TaskStatus} TaskStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TaskStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.TaskStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.attemptDispatchCount = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.attemptResponseCount = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.firstAttemptStatus = $root.google.cloud.tasks.v2beta2.AttemptStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.lastAttemptStatus = $root.google.cloud.tasks.v2beta2.AttemptStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TaskStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.TaskStatus} TaskStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TaskStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TaskStatus message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TaskStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.attemptDispatchCount != null && message.hasOwnProperty("attemptDispatchCount"))
                                if (!$util.isInteger(message.attemptDispatchCount))
                                    return "attemptDispatchCount: integer expected";
                            if (message.attemptResponseCount != null && message.hasOwnProperty("attemptResponseCount"))
                                if (!$util.isInteger(message.attemptResponseCount))
                                    return "attemptResponseCount: integer expected";
                            if (message.firstAttemptStatus != null && message.hasOwnProperty("firstAttemptStatus")) {
                                var error = $root.google.cloud.tasks.v2beta2.AttemptStatus.verify(message.firstAttemptStatus);
                                if (error)
                                    return "firstAttemptStatus." + error;
                            }
                            if (message.lastAttemptStatus != null && message.hasOwnProperty("lastAttemptStatus")) {
                                var error = $root.google.cloud.tasks.v2beta2.AttemptStatus.verify(message.lastAttemptStatus);
                                if (error)
                                    return "lastAttemptStatus." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TaskStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.TaskStatus} TaskStatus
                         */
                        TaskStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.TaskStatus)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.TaskStatus();
                            if (object.attemptDispatchCount != null)
                                message.attemptDispatchCount = object.attemptDispatchCount | 0;
                            if (object.attemptResponseCount != null)
                                message.attemptResponseCount = object.attemptResponseCount | 0;
                            if (object.firstAttemptStatus != null) {
                                if (typeof object.firstAttemptStatus !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.TaskStatus.firstAttemptStatus: object expected");
                                message.firstAttemptStatus = $root.google.cloud.tasks.v2beta2.AttemptStatus.fromObject(object.firstAttemptStatus);
                            }
                            if (object.lastAttemptStatus != null) {
                                if (typeof object.lastAttemptStatus !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.TaskStatus.lastAttemptStatus: object expected");
                                message.lastAttemptStatus = $root.google.cloud.tasks.v2beta2.AttemptStatus.fromObject(object.lastAttemptStatus);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TaskStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.TaskStatus} message TaskStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TaskStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.attemptDispatchCount = 0;
                                object.attemptResponseCount = 0;
                                object.firstAttemptStatus = null;
                                object.lastAttemptStatus = null;
                            }
                            if (message.attemptDispatchCount != null && message.hasOwnProperty("attemptDispatchCount"))
                                object.attemptDispatchCount = message.attemptDispatchCount;
                            if (message.attemptResponseCount != null && message.hasOwnProperty("attemptResponseCount"))
                                object.attemptResponseCount = message.attemptResponseCount;
                            if (message.firstAttemptStatus != null && message.hasOwnProperty("firstAttemptStatus"))
                                object.firstAttemptStatus = $root.google.cloud.tasks.v2beta2.AttemptStatus.toObject(message.firstAttemptStatus, options);
                            if (message.lastAttemptStatus != null && message.hasOwnProperty("lastAttemptStatus"))
                                object.lastAttemptStatus = $root.google.cloud.tasks.v2beta2.AttemptStatus.toObject(message.lastAttemptStatus, options);
                            return object;
                        };
    
                        /**
                         * Converts this TaskStatus to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TaskStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TaskStatus
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.TaskStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TaskStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.TaskStatus";
                        };
    
                        return TaskStatus;
                    })();
    
                    v2beta2.AttemptStatus = (function() {
    
                        /**
                         * Properties of an AttemptStatus.
                         * @memberof google.cloud.tasks.v2beta2
                         * @interface IAttemptStatus
                         * @property {google.protobuf.ITimestamp|null} [scheduleTime] AttemptStatus scheduleTime
                         * @property {google.protobuf.ITimestamp|null} [dispatchTime] AttemptStatus dispatchTime
                         * @property {google.protobuf.ITimestamp|null} [responseTime] AttemptStatus responseTime
                         * @property {google.rpc.IStatus|null} [responseStatus] AttemptStatus responseStatus
                         */
    
                        /**
                         * Constructs a new AttemptStatus.
                         * @memberof google.cloud.tasks.v2beta2
                         * @classdesc Represents an AttemptStatus.
                         * @implements IAttemptStatus
                         * @constructor
                         * @param {google.cloud.tasks.v2beta2.IAttemptStatus=} [properties] Properties to set
                         */
                        function AttemptStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AttemptStatus scheduleTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @instance
                         */
                        AttemptStatus.prototype.scheduleTime = null;
    
                        /**
                         * AttemptStatus dispatchTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} dispatchTime
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @instance
                         */
                        AttemptStatus.prototype.dispatchTime = null;
    
                        /**
                         * AttemptStatus responseTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} responseTime
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @instance
                         */
                        AttemptStatus.prototype.responseTime = null;
    
                        /**
                         * AttemptStatus responseStatus.
                         * @member {google.rpc.IStatus|null|undefined} responseStatus
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @instance
                         */
                        AttemptStatus.prototype.responseStatus = null;
    
                        /**
                         * Creates a new AttemptStatus instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAttemptStatus=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta2.AttemptStatus} AttemptStatus instance
                         */
                        AttemptStatus.create = function create(properties) {
                            return new AttemptStatus(properties);
                        };
    
                        /**
                         * Encodes the specified AttemptStatus message. Does not implicitly {@link google.cloud.tasks.v2beta2.AttemptStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAttemptStatus} message AttemptStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AttemptStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.dispatchTime != null && Object.hasOwnProperty.call(message, "dispatchTime"))
                                $root.google.protobuf.Timestamp.encode(message.dispatchTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseTime != null && Object.hasOwnProperty.call(message, "responseTime"))
                                $root.google.protobuf.Timestamp.encode(message.responseTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.responseStatus != null && Object.hasOwnProperty.call(message, "responseStatus"))
                                $root.google.rpc.Status.encode(message.responseStatus, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AttemptStatus message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta2.AttemptStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.IAttemptStatus} message AttemptStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AttemptStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AttemptStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta2.AttemptStatus} AttemptStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AttemptStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta2.AttemptStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.dispatchTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.responseStatus = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AttemptStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta2.AttemptStatus} AttemptStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AttemptStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AttemptStatus message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AttemptStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                if (error)
                                    return "scheduleTime." + error;
                            }
                            if (message.dispatchTime != null && message.hasOwnProperty("dispatchTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.dispatchTime);
                                if (error)
                                    return "dispatchTime." + error;
                            }
                            if (message.responseTime != null && message.hasOwnProperty("responseTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.responseTime);
                                if (error)
                                    return "responseTime." + error;
                            }
                            if (message.responseStatus != null && message.hasOwnProperty("responseStatus")) {
                                var error = $root.google.rpc.Status.verify(message.responseStatus);
                                if (error)
                                    return "responseStatus." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AttemptStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta2.AttemptStatus} AttemptStatus
                         */
                        AttemptStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta2.AttemptStatus)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta2.AttemptStatus();
                            if (object.scheduleTime != null) {
                                if (typeof object.scheduleTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AttemptStatus.scheduleTime: object expected");
                                message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                            }
                            if (object.dispatchTime != null) {
                                if (typeof object.dispatchTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AttemptStatus.dispatchTime: object expected");
                                message.dispatchTime = $root.google.protobuf.Timestamp.fromObject(object.dispatchTime);
                            }
                            if (object.responseTime != null) {
                                if (typeof object.responseTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AttemptStatus.responseTime: object expected");
                                message.responseTime = $root.google.protobuf.Timestamp.fromObject(object.responseTime);
                            }
                            if (object.responseStatus != null) {
                                if (typeof object.responseStatus !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta2.AttemptStatus.responseStatus: object expected");
                                message.responseStatus = $root.google.rpc.Status.fromObject(object.responseStatus);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AttemptStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {google.cloud.tasks.v2beta2.AttemptStatus} message AttemptStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AttemptStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.scheduleTime = null;
                                object.dispatchTime = null;
                                object.responseTime = null;
                                object.responseStatus = null;
                            }
                            if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                            if (message.dispatchTime != null && message.hasOwnProperty("dispatchTime"))
                                object.dispatchTime = $root.google.protobuf.Timestamp.toObject(message.dispatchTime, options);
                            if (message.responseTime != null && message.hasOwnProperty("responseTime"))
                                object.responseTime = $root.google.protobuf.Timestamp.toObject(message.responseTime, options);
                            if (message.responseStatus != null && message.hasOwnProperty("responseStatus"))
                                object.responseStatus = $root.google.rpc.Status.toObject(message.responseStatus, options);
                            return object;
                        };
    
                        /**
                         * Converts this AttemptStatus to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AttemptStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AttemptStatus
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta2.AttemptStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AttemptStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta2.AttemptStatus";
                        };
    
                        return AttemptStatus;
                    })();
    
                    return v2beta2;
                })();
    
                tasks.v2beta3 = (function() {
    
                    /**
                     * Namespace v2beta3.
                     * @memberof google.cloud.tasks
                     * @namespace
                     */
                    var v2beta3 = {};
    
                    v2beta3.CloudTasks = (function() {
    
                        /**
                         * Constructs a new CloudTasks service.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a CloudTasks
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CloudTasks(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CloudTasks.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CloudTasks;
    
                        /**
                         * Creates new CloudTasks service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CloudTasks} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CloudTasks.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|listQueues}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef ListQueuesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.ListQueuesResponse} [response] ListQueuesResponse
                         */
    
                        /**
                         * Calls ListQueues.
                         * @function listQueues
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IListQueuesRequest} request ListQueuesRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.ListQueuesCallback} callback Node-style callback called with the error, if any, and ListQueuesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.listQueues = function listQueues(request, callback) {
                            return this.rpcCall(listQueues, $root.google.cloud.tasks.v2beta3.ListQueuesRequest, $root.google.cloud.tasks.v2beta3.ListQueuesResponse, request, callback);
                        }, "name", { value: "ListQueues" });
    
                        /**
                         * Calls ListQueues.
                         * @function listQueues
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IListQueuesRequest} request ListQueuesRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.ListQueuesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|getQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef GetQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Queue} [response] Queue
                         */
    
                        /**
                         * Calls GetQueue.
                         * @function getQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IGetQueueRequest} request GetQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.GetQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getQueue = function getQueue(request, callback) {
                            return this.rpcCall(getQueue, $root.google.cloud.tasks.v2beta3.GetQueueRequest, $root.google.cloud.tasks.v2beta3.Queue, request, callback);
                        }, "name", { value: "GetQueue" });
    
                        /**
                         * Calls GetQueue.
                         * @function getQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IGetQueueRequest} request GetQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|createQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef CreateQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Queue} [response] Queue
                         */
    
                        /**
                         * Calls CreateQueue.
                         * @function createQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.ICreateQueueRequest} request CreateQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.CreateQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.createQueue = function createQueue(request, callback) {
                            return this.rpcCall(createQueue, $root.google.cloud.tasks.v2beta3.CreateQueueRequest, $root.google.cloud.tasks.v2beta3.Queue, request, callback);
                        }, "name", { value: "CreateQueue" });
    
                        /**
                         * Calls CreateQueue.
                         * @function createQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.ICreateQueueRequest} request CreateQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|updateQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef UpdateQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Queue} [response] Queue
                         */
    
                        /**
                         * Calls UpdateQueue.
                         * @function updateQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IUpdateQueueRequest} request UpdateQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.UpdateQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.updateQueue = function updateQueue(request, callback) {
                            return this.rpcCall(updateQueue, $root.google.cloud.tasks.v2beta3.UpdateQueueRequest, $root.google.cloud.tasks.v2beta3.Queue, request, callback);
                        }, "name", { value: "UpdateQueue" });
    
                        /**
                         * Calls UpdateQueue.
                         * @function updateQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IUpdateQueueRequest} request UpdateQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|deleteQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef DeleteQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteQueue.
                         * @function deleteQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IDeleteQueueRequest} request DeleteQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.DeleteQueueCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.deleteQueue = function deleteQueue(request, callback) {
                            return this.rpcCall(deleteQueue, $root.google.cloud.tasks.v2beta3.DeleteQueueRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteQueue" });
    
                        /**
                         * Calls DeleteQueue.
                         * @function deleteQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IDeleteQueueRequest} request DeleteQueueRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|purgeQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef PurgeQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Queue} [response] Queue
                         */
    
                        /**
                         * Calls PurgeQueue.
                         * @function purgeQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IPurgeQueueRequest} request PurgeQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.PurgeQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.purgeQueue = function purgeQueue(request, callback) {
                            return this.rpcCall(purgeQueue, $root.google.cloud.tasks.v2beta3.PurgeQueueRequest, $root.google.cloud.tasks.v2beta3.Queue, request, callback);
                        }, "name", { value: "PurgeQueue" });
    
                        /**
                         * Calls PurgeQueue.
                         * @function purgeQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IPurgeQueueRequest} request PurgeQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|pauseQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef PauseQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Queue} [response] Queue
                         */
    
                        /**
                         * Calls PauseQueue.
                         * @function pauseQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IPauseQueueRequest} request PauseQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.PauseQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.pauseQueue = function pauseQueue(request, callback) {
                            return this.rpcCall(pauseQueue, $root.google.cloud.tasks.v2beta3.PauseQueueRequest, $root.google.cloud.tasks.v2beta3.Queue, request, callback);
                        }, "name", { value: "PauseQueue" });
    
                        /**
                         * Calls PauseQueue.
                         * @function pauseQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IPauseQueueRequest} request PauseQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|resumeQueue}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef ResumeQueueCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Queue} [response] Queue
                         */
    
                        /**
                         * Calls ResumeQueue.
                         * @function resumeQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IResumeQueueRequest} request ResumeQueueRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.ResumeQueueCallback} callback Node-style callback called with the error, if any, and Queue
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.resumeQueue = function resumeQueue(request, callback) {
                            return this.rpcCall(resumeQueue, $root.google.cloud.tasks.v2beta3.ResumeQueueRequest, $root.google.cloud.tasks.v2beta3.Queue, request, callback);
                        }, "name", { value: "ResumeQueue" });
    
                        /**
                         * Calls ResumeQueue.
                         * @function resumeQueue
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IResumeQueueRequest} request ResumeQueueRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Queue>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|getIamPolicy}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef GetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                            return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "GetIamPolicy" });
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|setIamPolicy}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef SetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                            return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "SetIamPolicy" });
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|testIamPermissions}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef TestIamPermissionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                         */
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                            return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                        }, "name", { value: "TestIamPermissions" });
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|listTasks}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef ListTasksCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.ListTasksResponse} [response] ListTasksResponse
                         */
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IListTasksRequest} request ListTasksRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.ListTasksCallback} callback Node-style callback called with the error, if any, and ListTasksResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.listTasks = function listTasks(request, callback) {
                            return this.rpcCall(listTasks, $root.google.cloud.tasks.v2beta3.ListTasksRequest, $root.google.cloud.tasks.v2beta3.ListTasksResponse, request, callback);
                        }, "name", { value: "ListTasks" });
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IListTasksRequest} request ListTasksRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.ListTasksResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|getTask}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef GetTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Task} [response] Task
                         */
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.GetTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.getTask = function getTask(request, callback) {
                            return this.rpcCall(getTask, $root.google.cloud.tasks.v2beta3.GetTaskRequest, $root.google.cloud.tasks.v2beta3.Task, request, callback);
                        }, "name", { value: "GetTask" });
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|createTask}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef CreateTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Task} [response] Task
                         */
    
                        /**
                         * Calls CreateTask.
                         * @function createTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.ICreateTaskRequest} request CreateTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.CreateTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.createTask = function createTask(request, callback) {
                            return this.rpcCall(createTask, $root.google.cloud.tasks.v2beta3.CreateTaskRequest, $root.google.cloud.tasks.v2beta3.Task, request, callback);
                        }, "name", { value: "CreateTask" });
    
                        /**
                         * Calls CreateTask.
                         * @function createTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.ICreateTaskRequest} request CreateTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|deleteTask}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef DeleteTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteTask.
                         * @function deleteTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IDeleteTaskRequest} request DeleteTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.DeleteTaskCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.deleteTask = function deleteTask(request, callback) {
                            return this.rpcCall(deleteTask, $root.google.cloud.tasks.v2beta3.DeleteTaskRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteTask" });
    
                        /**
                         * Calls DeleteTask.
                         * @function deleteTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IDeleteTaskRequest} request DeleteTaskRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.tasks.v2beta3.CloudTasks|runTask}.
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @typedef RunTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.tasks.v2beta3.Task} [response] Task
                         */
    
                        /**
                         * Calls RunTask.
                         * @function runTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IRunTaskRequest} request RunTaskRequest message or plain object
                         * @param {google.cloud.tasks.v2beta3.CloudTasks.RunTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudTasks.prototype.runTask = function runTask(request, callback) {
                            return this.rpcCall(runTask, $root.google.cloud.tasks.v2beta3.RunTaskRequest, $root.google.cloud.tasks.v2beta3.Task, request, callback);
                        }, "name", { value: "RunTask" });
    
                        /**
                         * Calls RunTask.
                         * @function runTask
                         * @memberof google.cloud.tasks.v2beta3.CloudTasks
                         * @instance
                         * @param {google.cloud.tasks.v2beta3.IRunTaskRequest} request RunTaskRequest message or plain object
                         * @returns {Promise<google.cloud.tasks.v2beta3.Task>} Promise
                         * @variation 2
                         */
    
                        return CloudTasks;
                    })();
    
                    v2beta3.ListQueuesRequest = (function() {
    
                        /**
                         * Properties of a ListQueuesRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IListQueuesRequest
                         * @property {string|null} [parent] ListQueuesRequest parent
                         * @property {string|null} [filter] ListQueuesRequest filter
                         * @property {number|null} [pageSize] ListQueuesRequest pageSize
                         * @property {string|null} [pageToken] ListQueuesRequest pageToken
                         * @property {google.protobuf.IFieldMask|null} [readMask] ListQueuesRequest readMask
                         */
    
                        /**
                         * Constructs a new ListQueuesRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a ListQueuesRequest.
                         * @implements IListQueuesRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IListQueuesRequest=} [properties] Properties to set
                         */
                        function ListQueuesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListQueuesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.parent = "";
    
                        /**
                         * ListQueuesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.filter = "";
    
                        /**
                         * ListQueuesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListQueuesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.pageToken = "";
    
                        /**
                         * ListQueuesRequest readMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} readMask
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @instance
                         */
                        ListQueuesRequest.prototype.readMask = null;
    
                        /**
                         * Creates a new ListQueuesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListQueuesRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesRequest} ListQueuesRequest instance
                         */
                        ListQueuesRequest.create = function create(properties) {
                            return new ListQueuesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListQueuesRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.ListQueuesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListQueuesRequest} message ListQueuesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            if (message.readMask != null && Object.hasOwnProperty.call(message, "readMask"))
                                $root.google.protobuf.FieldMask.encode(message.readMask, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListQueuesRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.ListQueuesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListQueuesRequest} message ListQueuesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListQueuesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesRequest} ListQueuesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.ListQueuesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.readMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListQueuesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesRequest} ListQueuesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListQueuesRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListQueuesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.readMask != null && message.hasOwnProperty("readMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.readMask);
                                if (error)
                                    return "readMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListQueuesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesRequest} ListQueuesRequest
                         */
                        ListQueuesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.ListQueuesRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.ListQueuesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.readMask != null) {
                                if (typeof object.readMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.ListQueuesRequest.readMask: object expected");
                                message.readMask = $root.google.protobuf.FieldMask.fromObject(object.readMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListQueuesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ListQueuesRequest} message ListQueuesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListQueuesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.readMask = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.readMask != null && message.hasOwnProperty("readMask"))
                                object.readMask = $root.google.protobuf.FieldMask.toObject(message.readMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this ListQueuesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListQueuesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListQueuesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListQueuesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.ListQueuesRequest";
                        };
    
                        return ListQueuesRequest;
                    })();
    
                    v2beta3.ListQueuesResponse = (function() {
    
                        /**
                         * Properties of a ListQueuesResponse.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IListQueuesResponse
                         * @property {Array.<google.cloud.tasks.v2beta3.IQueue>|null} [queues] ListQueuesResponse queues
                         * @property {string|null} [nextPageToken] ListQueuesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListQueuesResponse.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a ListQueuesResponse.
                         * @implements IListQueuesResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IListQueuesResponse=} [properties] Properties to set
                         */
                        function ListQueuesResponse(properties) {
                            this.queues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListQueuesResponse queues.
                         * @member {Array.<google.cloud.tasks.v2beta3.IQueue>} queues
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @instance
                         */
                        ListQueuesResponse.prototype.queues = $util.emptyArray;
    
                        /**
                         * ListQueuesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @instance
                         */
                        ListQueuesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListQueuesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListQueuesResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesResponse} ListQueuesResponse instance
                         */
                        ListQueuesResponse.create = function create(properties) {
                            return new ListQueuesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListQueuesResponse message. Does not implicitly {@link google.cloud.tasks.v2beta3.ListQueuesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListQueuesResponse} message ListQueuesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queues != null && message.queues.length)
                                for (var i = 0; i < message.queues.length; ++i)
                                    $root.google.cloud.tasks.v2beta3.Queue.encode(message.queues[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListQueuesResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.ListQueuesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListQueuesResponse} message ListQueuesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListQueuesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListQueuesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesResponse} ListQueuesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.ListQueuesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.queues && message.queues.length))
                                            message.queues = [];
                                        message.queues.push($root.google.cloud.tasks.v2beta3.Queue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListQueuesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesResponse} ListQueuesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListQueuesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListQueuesResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListQueuesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queues != null && message.hasOwnProperty("queues")) {
                                if (!Array.isArray(message.queues))
                                    return "queues: array expected";
                                for (var i = 0; i < message.queues.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta3.Queue.verify(message.queues[i]);
                                    if (error)
                                        return "queues." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListQueuesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.ListQueuesResponse} ListQueuesResponse
                         */
                        ListQueuesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.ListQueuesResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.ListQueuesResponse();
                            if (object.queues) {
                                if (!Array.isArray(object.queues))
                                    throw TypeError(".google.cloud.tasks.v2beta3.ListQueuesResponse.queues: array expected");
                                message.queues = [];
                                for (var i = 0; i < object.queues.length; ++i) {
                                    if (typeof object.queues[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta3.ListQueuesResponse.queues: object expected");
                                    message.queues[i] = $root.google.cloud.tasks.v2beta3.Queue.fromObject(object.queues[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListQueuesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ListQueuesResponse} message ListQueuesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListQueuesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.queues = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.queues && message.queues.length) {
                                object.queues = [];
                                for (var j = 0; j < message.queues.length; ++j)
                                    object.queues[j] = $root.google.cloud.tasks.v2beta3.Queue.toObject(message.queues[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListQueuesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListQueuesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListQueuesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.ListQueuesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListQueuesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.ListQueuesResponse";
                        };
    
                        return ListQueuesResponse;
                    })();
    
                    v2beta3.GetQueueRequest = (function() {
    
                        /**
                         * Properties of a GetQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IGetQueueRequest
                         * @property {string|null} [name] GetQueueRequest name
                         * @property {google.protobuf.IFieldMask|null} [readMask] GetQueueRequest readMask
                         */
    
                        /**
                         * Constructs a new GetQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a GetQueueRequest.
                         * @implements IGetQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IGetQueueRequest=} [properties] Properties to set
                         */
                        function GetQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @instance
                         */
                        GetQueueRequest.prototype.name = "";
    
                        /**
                         * GetQueueRequest readMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} readMask
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @instance
                         */
                        GetQueueRequest.prototype.readMask = null;
    
                        /**
                         * Creates a new GetQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IGetQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.GetQueueRequest} GetQueueRequest instance
                         */
                        GetQueueRequest.create = function create(properties) {
                            return new GetQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.GetQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IGetQueueRequest} message GetQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.readMask != null && Object.hasOwnProperty.call(message, "readMask"))
                                $root.google.protobuf.FieldMask.encode(message.readMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.GetQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IGetQueueRequest} message GetQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.GetQueueRequest} GetQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.GetQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.readMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.GetQueueRequest} GetQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.readMask != null && message.hasOwnProperty("readMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.readMask);
                                if (error)
                                    return "readMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GetQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.GetQueueRequest} GetQueueRequest
                         */
                        GetQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.GetQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.GetQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.readMask != null) {
                                if (typeof object.readMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.GetQueueRequest.readMask: object expected");
                                message.readMask = $root.google.protobuf.FieldMask.fromObject(object.readMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.GetQueueRequest} message GetQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.readMask = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.readMask != null && message.hasOwnProperty("readMask"))
                                object.readMask = $root.google.protobuf.FieldMask.toObject(message.readMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this GetQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.GetQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.GetQueueRequest";
                        };
    
                        return GetQueueRequest;
                    })();
    
                    v2beta3.CreateQueueRequest = (function() {
    
                        /**
                         * Properties of a CreateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface ICreateQueueRequest
                         * @property {string|null} [parent] CreateQueueRequest parent
                         * @property {google.cloud.tasks.v2beta3.IQueue|null} [queue] CreateQueueRequest queue
                         */
    
                        /**
                         * Constructs a new CreateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a CreateQueueRequest.
                         * @implements ICreateQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.ICreateQueueRequest=} [properties] Properties to set
                         */
                        function CreateQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateQueueRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @instance
                         */
                        CreateQueueRequest.prototype.parent = "";
    
                        /**
                         * CreateQueueRequest queue.
                         * @member {google.cloud.tasks.v2beta3.IQueue|null|undefined} queue
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @instance
                         */
                        CreateQueueRequest.prototype.queue = null;
    
                        /**
                         * Creates a new CreateQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ICreateQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.CreateQueueRequest} CreateQueueRequest instance
                         */
                        CreateQueueRequest.create = function create(properties) {
                            return new CreateQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.CreateQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ICreateQueueRequest} message CreateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                $root.google.cloud.tasks.v2beta3.Queue.encode(message.queue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.CreateQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ICreateQueueRequest} message CreateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.CreateQueueRequest} CreateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.CreateQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.queue = $root.google.cloud.tasks.v2beta3.Queue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.CreateQueueRequest} CreateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.queue != null && message.hasOwnProperty("queue")) {
                                var error = $root.google.cloud.tasks.v2beta3.Queue.verify(message.queue);
                                if (error)
                                    return "queue." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.CreateQueueRequest} CreateQueueRequest
                         */
                        CreateQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.CreateQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.CreateQueueRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.queue != null) {
                                if (typeof object.queue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.CreateQueueRequest.queue: object expected");
                                message.queue = $root.google.cloud.tasks.v2beta3.Queue.fromObject(object.queue);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.CreateQueueRequest} message CreateQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.queue = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = $root.google.cloud.tasks.v2beta3.Queue.toObject(message.queue, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.CreateQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.CreateQueueRequest";
                        };
    
                        return CreateQueueRequest;
                    })();
    
                    v2beta3.UpdateQueueRequest = (function() {
    
                        /**
                         * Properties of an UpdateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IUpdateQueueRequest
                         * @property {google.cloud.tasks.v2beta3.IQueue|null} [queue] UpdateQueueRequest queue
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateQueueRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents an UpdateQueueRequest.
                         * @implements IUpdateQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IUpdateQueueRequest=} [properties] Properties to set
                         */
                        function UpdateQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateQueueRequest queue.
                         * @member {google.cloud.tasks.v2beta3.IQueue|null|undefined} queue
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @instance
                         */
                        UpdateQueueRequest.prototype.queue = null;
    
                        /**
                         * UpdateQueueRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @instance
                         */
                        UpdateQueueRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IUpdateQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.UpdateQueueRequest} UpdateQueueRequest instance
                         */
                        UpdateQueueRequest.create = function create(properties) {
                            return new UpdateQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.UpdateQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IUpdateQueueRequest} message UpdateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queue != null && Object.hasOwnProperty.call(message, "queue"))
                                $root.google.cloud.tasks.v2beta3.Queue.encode(message.queue, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.UpdateQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IUpdateQueueRequest} message UpdateQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.UpdateQueueRequest} UpdateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.UpdateQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queue = $root.google.cloud.tasks.v2beta3.Queue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.UpdateQueueRequest} UpdateQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queue != null && message.hasOwnProperty("queue")) {
                                var error = $root.google.cloud.tasks.v2beta3.Queue.verify(message.queue);
                                if (error)
                                    return "queue." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.UpdateQueueRequest} UpdateQueueRequest
                         */
                        UpdateQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.UpdateQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.UpdateQueueRequest();
                            if (object.queue != null) {
                                if (typeof object.queue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.UpdateQueueRequest.queue: object expected");
                                message.queue = $root.google.cloud.tasks.v2beta3.Queue.fromObject(object.queue);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.UpdateQueueRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.UpdateQueueRequest} message UpdateQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.queue = null;
                                object.updateMask = null;
                            }
                            if (message.queue != null && message.hasOwnProperty("queue"))
                                object.queue = $root.google.cloud.tasks.v2beta3.Queue.toObject(message.queue, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.UpdateQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.UpdateQueueRequest";
                        };
    
                        return UpdateQueueRequest;
                    })();
    
                    v2beta3.DeleteQueueRequest = (function() {
    
                        /**
                         * Properties of a DeleteQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IDeleteQueueRequest
                         * @property {string|null} [name] DeleteQueueRequest name
                         */
    
                        /**
                         * Constructs a new DeleteQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a DeleteQueueRequest.
                         * @implements IDeleteQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IDeleteQueueRequest=} [properties] Properties to set
                         */
                        function DeleteQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @instance
                         */
                        DeleteQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IDeleteQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.DeleteQueueRequest} DeleteQueueRequest instance
                         */
                        DeleteQueueRequest.create = function create(properties) {
                            return new DeleteQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.DeleteQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IDeleteQueueRequest} message DeleteQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.DeleteQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IDeleteQueueRequest} message DeleteQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.DeleteQueueRequest} DeleteQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.DeleteQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.DeleteQueueRequest} DeleteQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.DeleteQueueRequest} DeleteQueueRequest
                         */
                        DeleteQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.DeleteQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.DeleteQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.DeleteQueueRequest} message DeleteQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.DeleteQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.DeleteQueueRequest";
                        };
    
                        return DeleteQueueRequest;
                    })();
    
                    v2beta3.PurgeQueueRequest = (function() {
    
                        /**
                         * Properties of a PurgeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IPurgeQueueRequest
                         * @property {string|null} [name] PurgeQueueRequest name
                         */
    
                        /**
                         * Constructs a new PurgeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a PurgeQueueRequest.
                         * @implements IPurgeQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IPurgeQueueRequest=} [properties] Properties to set
                         */
                        function PurgeQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PurgeQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @instance
                         */
                        PurgeQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new PurgeQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPurgeQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.PurgeQueueRequest} PurgeQueueRequest instance
                         */
                        PurgeQueueRequest.create = function create(properties) {
                            return new PurgeQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PurgeQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.PurgeQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPurgeQueueRequest} message PurgeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PurgeQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.PurgeQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPurgeQueueRequest} message PurgeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PurgeQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PurgeQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.PurgeQueueRequest} PurgeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.PurgeQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PurgeQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.PurgeQueueRequest} PurgeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PurgeQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PurgeQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PurgeQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PurgeQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.PurgeQueueRequest} PurgeQueueRequest
                         */
                        PurgeQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.PurgeQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.PurgeQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PurgeQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.PurgeQueueRequest} message PurgeQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PurgeQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this PurgeQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PurgeQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PurgeQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.PurgeQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PurgeQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.PurgeQueueRequest";
                        };
    
                        return PurgeQueueRequest;
                    })();
    
                    v2beta3.PauseQueueRequest = (function() {
    
                        /**
                         * Properties of a PauseQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IPauseQueueRequest
                         * @property {string|null} [name] PauseQueueRequest name
                         */
    
                        /**
                         * Constructs a new PauseQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a PauseQueueRequest.
                         * @implements IPauseQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IPauseQueueRequest=} [properties] Properties to set
                         */
                        function PauseQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PauseQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @instance
                         */
                        PauseQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new PauseQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPauseQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.PauseQueueRequest} PauseQueueRequest instance
                         */
                        PauseQueueRequest.create = function create(properties) {
                            return new PauseQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified PauseQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.PauseQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPauseQueueRequest} message PauseQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PauseQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PauseQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.PauseQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPauseQueueRequest} message PauseQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PauseQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PauseQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.PauseQueueRequest} PauseQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PauseQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.PauseQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PauseQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.PauseQueueRequest} PauseQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PauseQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PauseQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PauseQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PauseQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.PauseQueueRequest} PauseQueueRequest
                         */
                        PauseQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.PauseQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.PauseQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PauseQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.PauseQueueRequest} message PauseQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PauseQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this PauseQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PauseQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PauseQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.PauseQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PauseQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.PauseQueueRequest";
                        };
    
                        return PauseQueueRequest;
                    })();
    
                    v2beta3.ResumeQueueRequest = (function() {
    
                        /**
                         * Properties of a ResumeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IResumeQueueRequest
                         * @property {string|null} [name] ResumeQueueRequest name
                         */
    
                        /**
                         * Constructs a new ResumeQueueRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a ResumeQueueRequest.
                         * @implements IResumeQueueRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IResumeQueueRequest=} [properties] Properties to set
                         */
                        function ResumeQueueRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResumeQueueRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @instance
                         */
                        ResumeQueueRequest.prototype.name = "";
    
                        /**
                         * Creates a new ResumeQueueRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IResumeQueueRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.ResumeQueueRequest} ResumeQueueRequest instance
                         */
                        ResumeQueueRequest.create = function create(properties) {
                            return new ResumeQueueRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResumeQueueRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.ResumeQueueRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IResumeQueueRequest} message ResumeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResumeQueueRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResumeQueueRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.ResumeQueueRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IResumeQueueRequest} message ResumeQueueRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResumeQueueRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResumeQueueRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.ResumeQueueRequest} ResumeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResumeQueueRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.ResumeQueueRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResumeQueueRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.ResumeQueueRequest} ResumeQueueRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResumeQueueRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResumeQueueRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResumeQueueRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResumeQueueRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.ResumeQueueRequest} ResumeQueueRequest
                         */
                        ResumeQueueRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.ResumeQueueRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.ResumeQueueRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResumeQueueRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ResumeQueueRequest} message ResumeQueueRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResumeQueueRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ResumeQueueRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResumeQueueRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResumeQueueRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.ResumeQueueRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResumeQueueRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.ResumeQueueRequest";
                        };
    
                        return ResumeQueueRequest;
                    })();
    
                    v2beta3.ListTasksRequest = (function() {
    
                        /**
                         * Properties of a ListTasksRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IListTasksRequest
                         * @property {string|null} [parent] ListTasksRequest parent
                         * @property {google.cloud.tasks.v2beta3.Task.View|null} [responseView] ListTasksRequest responseView
                         * @property {number|null} [pageSize] ListTasksRequest pageSize
                         * @property {string|null} [pageToken] ListTasksRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListTasksRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a ListTasksRequest.
                         * @implements IListTasksRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IListTasksRequest=} [properties] Properties to set
                         */
                        function ListTasksRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.parent = "";
    
                        /**
                         * ListTasksRequest responseView.
                         * @member {google.cloud.tasks.v2beta3.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.responseView = 0;
    
                        /**
                         * ListTasksRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageSize = 0;
    
                        /**
                         * ListTasksRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListTasksRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListTasksRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.ListTasksRequest} ListTasksRequest instance
                         */
                        ListTasksRequest.create = function create(properties) {
                            return new ListTasksRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.ListTasksRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.ListTasksRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.ListTasksRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.ListTasksRequest} ListTasksRequest
                         */
                        ListTasksRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.ListTasksRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.ListTasksRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ListTasksRequest} message ListTasksRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] : message.responseView;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.ListTasksRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.ListTasksRequest";
                        };
    
                        return ListTasksRequest;
                    })();
    
                    v2beta3.ListTasksResponse = (function() {
    
                        /**
                         * Properties of a ListTasksResponse.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IListTasksResponse
                         * @property {Array.<google.cloud.tasks.v2beta3.ITask>|null} [tasks] ListTasksResponse tasks
                         * @property {string|null} [nextPageToken] ListTasksResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListTasksResponse.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a ListTasksResponse.
                         * @implements IListTasksResponse
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IListTasksResponse=} [properties] Properties to set
                         */
                        function ListTasksResponse(properties) {
                            this.tasks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksResponse tasks.
                         * @member {Array.<google.cloud.tasks.v2beta3.ITask>} tasks
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.tasks = $util.emptyArray;
    
                        /**
                         * ListTasksResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListTasksResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListTasksResponse=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.ListTasksResponse} ListTasksResponse instance
                         */
                        ListTasksResponse.create = function create(properties) {
                            return new ListTasksResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message. Does not implicitly {@link google.cloud.tasks.v2beta3.ListTasksResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasks != null && message.tasks.length)
                                for (var i = 0; i < message.tasks.length; ++i)
                                    $root.google.cloud.tasks.v2beta3.Task.encode(message.tasks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.ListTasksResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.ListTasksResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.tasks && message.tasks.length))
                                            message.tasks = [];
                                        message.tasks.push($root.google.cloud.tasks.v2beta3.Task.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksResponse message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasks != null && message.hasOwnProperty("tasks")) {
                                if (!Array.isArray(message.tasks))
                                    return "tasks: array expected";
                                for (var i = 0; i < message.tasks.length; ++i) {
                                    var error = $root.google.cloud.tasks.v2beta3.Task.verify(message.tasks[i]);
                                    if (error)
                                        return "tasks." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.ListTasksResponse} ListTasksResponse
                         */
                        ListTasksResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.ListTasksResponse)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.ListTasksResponse();
                            if (object.tasks) {
                                if (!Array.isArray(object.tasks))
                                    throw TypeError(".google.cloud.tasks.v2beta3.ListTasksResponse.tasks: array expected");
                                message.tasks = [];
                                for (var i = 0; i < object.tasks.length; ++i) {
                                    if (typeof object.tasks[i] !== "object")
                                        throw TypeError(".google.cloud.tasks.v2beta3.ListTasksResponse.tasks: object expected");
                                    message.tasks[i] = $root.google.cloud.tasks.v2beta3.Task.fromObject(object.tasks[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ListTasksResponse} message ListTasksResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tasks = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.tasks && message.tasks.length) {
                                object.tasks = [];
                                for (var j = 0; j < message.tasks.length; ++j)
                                    object.tasks[j] = $root.google.cloud.tasks.v2beta3.Task.toObject(message.tasks[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.ListTasksResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.ListTasksResponse";
                        };
    
                        return ListTasksResponse;
                    })();
    
                    v2beta3.GetTaskRequest = (function() {
    
                        /**
                         * Properties of a GetTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IGetTaskRequest
                         * @property {string|null} [name] GetTaskRequest name
                         * @property {google.cloud.tasks.v2beta3.Task.View|null} [responseView] GetTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new GetTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a GetTaskRequest.
                         * @implements IGetTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IGetTaskRequest=} [properties] Properties to set
                         */
                        function GetTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.name = "";
    
                        /**
                         * GetTaskRequest responseView.
                         * @member {google.cloud.tasks.v2beta3.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new GetTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IGetTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.GetTaskRequest} GetTaskRequest instance
                         */
                        GetTaskRequest.create = function create(properties) {
                            return new GetTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.GetTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.GetTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.GetTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a GetTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.GetTaskRequest} GetTaskRequest
                         */
                        GetTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.GetTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.GetTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.GetTaskRequest} message GetTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this GetTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.GetTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.GetTaskRequest";
                        };
    
                        return GetTaskRequest;
                    })();
    
                    v2beta3.CreateTaskRequest = (function() {
    
                        /**
                         * Properties of a CreateTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface ICreateTaskRequest
                         * @property {string|null} [parent] CreateTaskRequest parent
                         * @property {google.cloud.tasks.v2beta3.ITask|null} [task] CreateTaskRequest task
                         * @property {google.cloud.tasks.v2beta3.Task.View|null} [responseView] CreateTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new CreateTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a CreateTaskRequest.
                         * @implements ICreateTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.ICreateTaskRequest=} [properties] Properties to set
                         */
                        function CreateTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateTaskRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.parent = "";
    
                        /**
                         * CreateTaskRequest task.
                         * @member {google.cloud.tasks.v2beta3.ITask|null|undefined} task
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.task = null;
    
                        /**
                         * CreateTaskRequest responseView.
                         * @member {google.cloud.tasks.v2beta3.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @instance
                         */
                        CreateTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new CreateTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ICreateTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.CreateTaskRequest} CreateTaskRequest instance
                         */
                        CreateTaskRequest.create = function create(properties) {
                            return new CreateTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.CreateTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ICreateTaskRequest} message CreateTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.task != null && Object.hasOwnProperty.call(message, "task"))
                                $root.google.cloud.tasks.v2beta3.Task.encode(message.task, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.CreateTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.ICreateTaskRequest} message CreateTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.CreateTaskRequest} CreateTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.CreateTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.task = $root.google.cloud.tasks.v2beta3.Task.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.CreateTaskRequest} CreateTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.task != null && message.hasOwnProperty("task")) {
                                var error = $root.google.cloud.tasks.v2beta3.Task.verify(message.task);
                                if (error)
                                    return "task." + error;
                            }
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CreateTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.CreateTaskRequest} CreateTaskRequest
                         */
                        CreateTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.CreateTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.CreateTaskRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.task != null) {
                                if (typeof object.task !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.CreateTaskRequest.task: object expected");
                                message.task = $root.google.cloud.tasks.v2beta3.Task.fromObject(object.task);
                            }
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.CreateTaskRequest} message CreateTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.task = null;
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.task != null && message.hasOwnProperty("task"))
                                object.task = $root.google.cloud.tasks.v2beta3.Task.toObject(message.task, options);
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this CreateTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.CreateTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.CreateTaskRequest";
                        };
    
                        return CreateTaskRequest;
                    })();
    
                    v2beta3.DeleteTaskRequest = (function() {
    
                        /**
                         * Properties of a DeleteTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IDeleteTaskRequest
                         * @property {string|null} [name] DeleteTaskRequest name
                         */
    
                        /**
                         * Constructs a new DeleteTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a DeleteTaskRequest.
                         * @implements IDeleteTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IDeleteTaskRequest=} [properties] Properties to set
                         */
                        function DeleteTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @instance
                         */
                        DeleteTaskRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IDeleteTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.DeleteTaskRequest} DeleteTaskRequest instance
                         */
                        DeleteTaskRequest.create = function create(properties) {
                            return new DeleteTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.DeleteTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IDeleteTaskRequest} message DeleteTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.DeleteTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IDeleteTaskRequest} message DeleteTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.DeleteTaskRequest} DeleteTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.DeleteTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.DeleteTaskRequest} DeleteTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.DeleteTaskRequest} DeleteTaskRequest
                         */
                        DeleteTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.DeleteTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.DeleteTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.DeleteTaskRequest} message DeleteTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.DeleteTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.DeleteTaskRequest";
                        };
    
                        return DeleteTaskRequest;
                    })();
    
                    v2beta3.RunTaskRequest = (function() {
    
                        /**
                         * Properties of a RunTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IRunTaskRequest
                         * @property {string|null} [name] RunTaskRequest name
                         * @property {google.cloud.tasks.v2beta3.Task.View|null} [responseView] RunTaskRequest responseView
                         */
    
                        /**
                         * Constructs a new RunTaskRequest.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a RunTaskRequest.
                         * @implements IRunTaskRequest
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IRunTaskRequest=} [properties] Properties to set
                         */
                        function RunTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @instance
                         */
                        RunTaskRequest.prototype.name = "";
    
                        /**
                         * RunTaskRequest responseView.
                         * @member {google.cloud.tasks.v2beta3.Task.View} responseView
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @instance
                         */
                        RunTaskRequest.prototype.responseView = 0;
    
                        /**
                         * Creates a new RunTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRunTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.RunTaskRequest} RunTaskRequest instance
                         */
                        RunTaskRequest.create = function create(properties) {
                            return new RunTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunTaskRequest message. Does not implicitly {@link google.cloud.tasks.v2beta3.RunTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRunTaskRequest} message RunTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.responseView != null && Object.hasOwnProperty.call(message, "responseView"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseView);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunTaskRequest message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.RunTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRunTaskRequest} message RunTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.RunTaskRequest} RunTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.RunTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.responseView = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.RunTaskRequest} RunTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                switch (message.responseView) {
                                default:
                                    return "responseView: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a RunTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.RunTaskRequest} RunTaskRequest
                         */
                        RunTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.RunTaskRequest)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.RunTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.responseView) {
                            default:
                                if (typeof object.responseView === "number") {
                                    message.responseView = object.responseView;
                                    break;
                                }
                                break;
                            case "VIEW_UNSPECIFIED":
                            case 0:
                                message.responseView = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.responseView = 1;
                                break;
                            case "FULL":
                            case 2:
                                message.responseView = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {google.cloud.tasks.v2beta3.RunTaskRequest} message RunTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.responseView = options.enums === String ? "VIEW_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.responseView != null && message.hasOwnProperty("responseView"))
                                object.responseView = options.enums === String ? $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] === undefined ? message.responseView : $root.google.cloud.tasks.v2beta3.Task.View[message.responseView] : message.responseView;
                            return object;
                        };
    
                        /**
                         * Converts this RunTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.RunTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.RunTaskRequest";
                        };
    
                        return RunTaskRequest;
                    })();
    
                    v2beta3.Queue = (function() {
    
                        /**
                         * Properties of a Queue.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IQueue
                         * @property {string|null} [name] Queue name
                         * @property {google.cloud.tasks.v2beta3.IAppEngineHttpQueue|null} [appEngineHttpQueue] Queue appEngineHttpQueue
                         * @property {google.cloud.tasks.v2beta3.IHttpTarget|null} [httpTarget] Queue httpTarget
                         * @property {google.cloud.tasks.v2beta3.IRateLimits|null} [rateLimits] Queue rateLimits
                         * @property {google.cloud.tasks.v2beta3.IRetryConfig|null} [retryConfig] Queue retryConfig
                         * @property {google.cloud.tasks.v2beta3.Queue.State|null} [state] Queue state
                         * @property {google.protobuf.ITimestamp|null} [purgeTime] Queue purgeTime
                         * @property {google.protobuf.IDuration|null} [taskTtl] Queue taskTtl
                         * @property {google.protobuf.IDuration|null} [tombstoneTtl] Queue tombstoneTtl
                         * @property {google.cloud.tasks.v2beta3.IStackdriverLoggingConfig|null} [stackdriverLoggingConfig] Queue stackdriverLoggingConfig
                         * @property {google.cloud.tasks.v2beta3.Queue.Type|null} [type] Queue type
                         * @property {google.cloud.tasks.v2beta3.IQueueStats|null} [stats] Queue stats
                         */
    
                        /**
                         * Constructs a new Queue.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a Queue.
                         * @implements IQueue
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IQueue=} [properties] Properties to set
                         */
                        function Queue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Queue name.
                         * @member {string} name
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.name = "";
    
                        /**
                         * Queue appEngineHttpQueue.
                         * @member {google.cloud.tasks.v2beta3.IAppEngineHttpQueue|null|undefined} appEngineHttpQueue
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.appEngineHttpQueue = null;
    
                        /**
                         * Queue httpTarget.
                         * @member {google.cloud.tasks.v2beta3.IHttpTarget|null|undefined} httpTarget
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.httpTarget = null;
    
                        /**
                         * Queue rateLimits.
                         * @member {google.cloud.tasks.v2beta3.IRateLimits|null|undefined} rateLimits
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.rateLimits = null;
    
                        /**
                         * Queue retryConfig.
                         * @member {google.cloud.tasks.v2beta3.IRetryConfig|null|undefined} retryConfig
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.retryConfig = null;
    
                        /**
                         * Queue state.
                         * @member {google.cloud.tasks.v2beta3.Queue.State} state
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.state = 0;
    
                        /**
                         * Queue purgeTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} purgeTime
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.purgeTime = null;
    
                        /**
                         * Queue taskTtl.
                         * @member {google.protobuf.IDuration|null|undefined} taskTtl
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.taskTtl = null;
    
                        /**
                         * Queue tombstoneTtl.
                         * @member {google.protobuf.IDuration|null|undefined} tombstoneTtl
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.tombstoneTtl = null;
    
                        /**
                         * Queue stackdriverLoggingConfig.
                         * @member {google.cloud.tasks.v2beta3.IStackdriverLoggingConfig|null|undefined} stackdriverLoggingConfig
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.stackdriverLoggingConfig = null;
    
                        /**
                         * Queue type.
                         * @member {google.cloud.tasks.v2beta3.Queue.Type} type
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.type = 0;
    
                        /**
                         * Queue stats.
                         * @member {google.cloud.tasks.v2beta3.IQueueStats|null|undefined} stats
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Queue.prototype.stats = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Queue queueType.
                         * @member {"appEngineHttpQueue"|undefined} queueType
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         */
                        Object.defineProperty(Queue.prototype, "queueType", {
                            get: $util.oneOfGetter($oneOfFields = ["appEngineHttpQueue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Queue instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueue=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.Queue} Queue instance
                         */
                        Queue.create = function create(properties) {
                            return new Queue(properties);
                        };
    
                        /**
                         * Encodes the specified Queue message. Does not implicitly {@link google.cloud.tasks.v2beta3.Queue.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueue} message Queue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Queue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.appEngineHttpQueue != null && Object.hasOwnProperty.call(message, "appEngineHttpQueue"))
                                $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue.encode(message.appEngineHttpQueue, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.rateLimits != null && Object.hasOwnProperty.call(message, "rateLimits"))
                                $root.google.cloud.tasks.v2beta3.RateLimits.encode(message.rateLimits, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.retryConfig != null && Object.hasOwnProperty.call(message, "retryConfig"))
                                $root.google.cloud.tasks.v2beta3.RetryConfig.encode(message.retryConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                            if (message.purgeTime != null && Object.hasOwnProperty.call(message, "purgeTime"))
                                $root.google.protobuf.Timestamp.encode(message.purgeTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.taskTtl != null && Object.hasOwnProperty.call(message, "taskTtl"))
                                $root.google.protobuf.Duration.encode(message.taskTtl, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.tombstoneTtl != null && Object.hasOwnProperty.call(message, "tombstoneTtl"))
                                $root.google.protobuf.Duration.encode(message.tombstoneTtl, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.stackdriverLoggingConfig != null && Object.hasOwnProperty.call(message, "stackdriverLoggingConfig"))
                                $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig.encode(message.stackdriverLoggingConfig, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.type);
                            if (message.stats != null && Object.hasOwnProperty.call(message, "stats"))
                                $root.google.cloud.tasks.v2beta3.QueueStats.encode(message.stats, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.httpTarget != null && Object.hasOwnProperty.call(message, "httpTarget"))
                                $root.google.cloud.tasks.v2beta3.HttpTarget.encode(message.httpTarget, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Queue message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.Queue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueue} message Queue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Queue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Queue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.Queue} Queue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Queue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.Queue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.appEngineHttpQueue = $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.httpTarget = $root.google.cloud.tasks.v2beta3.HttpTarget.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.rateLimits = $root.google.cloud.tasks.v2beta3.RateLimits.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.retryConfig = $root.google.cloud.tasks.v2beta3.RetryConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.purgeTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.taskTtl = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.tombstoneTtl = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.stackdriverLoggingConfig = $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        message.stats = $root.google.cloud.tasks.v2beta3.QueueStats.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Queue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.Queue} Queue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Queue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Queue message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Queue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.appEngineHttpQueue != null && message.hasOwnProperty("appEngineHttpQueue")) {
                                properties.queueType = 1;
                                {
                                    var error = $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue.verify(message.appEngineHttpQueue);
                                    if (error)
                                        return "appEngineHttpQueue." + error;
                                }
                            }
                            if (message.httpTarget != null && message.hasOwnProperty("httpTarget")) {
                                var error = $root.google.cloud.tasks.v2beta3.HttpTarget.verify(message.httpTarget);
                                if (error)
                                    return "httpTarget." + error;
                            }
                            if (message.rateLimits != null && message.hasOwnProperty("rateLimits")) {
                                var error = $root.google.cloud.tasks.v2beta3.RateLimits.verify(message.rateLimits);
                                if (error)
                                    return "rateLimits." + error;
                            }
                            if (message.retryConfig != null && message.hasOwnProperty("retryConfig")) {
                                var error = $root.google.cloud.tasks.v2beta3.RetryConfig.verify(message.retryConfig);
                                if (error)
                                    return "retryConfig." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.purgeTime != null && message.hasOwnProperty("purgeTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.purgeTime);
                                if (error)
                                    return "purgeTime." + error;
                            }
                            if (message.taskTtl != null && message.hasOwnProperty("taskTtl")) {
                                var error = $root.google.protobuf.Duration.verify(message.taskTtl);
                                if (error)
                                    return "taskTtl." + error;
                            }
                            if (message.tombstoneTtl != null && message.hasOwnProperty("tombstoneTtl")) {
                                var error = $root.google.protobuf.Duration.verify(message.tombstoneTtl);
                                if (error)
                                    return "tombstoneTtl." + error;
                            }
                            if (message.stackdriverLoggingConfig != null && message.hasOwnProperty("stackdriverLoggingConfig")) {
                                var error = $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig.verify(message.stackdriverLoggingConfig);
                                if (error)
                                    return "stackdriverLoggingConfig." + error;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.stats != null && message.hasOwnProperty("stats")) {
                                var error = $root.google.cloud.tasks.v2beta3.QueueStats.verify(message.stats);
                                if (error)
                                    return "stats." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Queue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.Queue} Queue
                         */
                        Queue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.Queue)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.Queue();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.appEngineHttpQueue != null) {
                                if (typeof object.appEngineHttpQueue !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.appEngineHttpQueue: object expected");
                                message.appEngineHttpQueue = $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue.fromObject(object.appEngineHttpQueue);
                            }
                            if (object.httpTarget != null) {
                                if (typeof object.httpTarget !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.httpTarget: object expected");
                                message.httpTarget = $root.google.cloud.tasks.v2beta3.HttpTarget.fromObject(object.httpTarget);
                            }
                            if (object.rateLimits != null) {
                                if (typeof object.rateLimits !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.rateLimits: object expected");
                                message.rateLimits = $root.google.cloud.tasks.v2beta3.RateLimits.fromObject(object.rateLimits);
                            }
                            if (object.retryConfig != null) {
                                if (typeof object.retryConfig !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.retryConfig: object expected");
                                message.retryConfig = $root.google.cloud.tasks.v2beta3.RetryConfig.fromObject(object.retryConfig);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "PAUSED":
                            case 2:
                                message.state = 2;
                                break;
                            case "DISABLED":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.purgeTime != null) {
                                if (typeof object.purgeTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.purgeTime: object expected");
                                message.purgeTime = $root.google.protobuf.Timestamp.fromObject(object.purgeTime);
                            }
                            if (object.taskTtl != null) {
                                if (typeof object.taskTtl !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.taskTtl: object expected");
                                message.taskTtl = $root.google.protobuf.Duration.fromObject(object.taskTtl);
                            }
                            if (object.tombstoneTtl != null) {
                                if (typeof object.tombstoneTtl !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.tombstoneTtl: object expected");
                                message.tombstoneTtl = $root.google.protobuf.Duration.fromObject(object.tombstoneTtl);
                            }
                            if (object.stackdriverLoggingConfig != null) {
                                if (typeof object.stackdriverLoggingConfig !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.stackdriverLoggingConfig: object expected");
                                message.stackdriverLoggingConfig = $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig.fromObject(object.stackdriverLoggingConfig);
                            }
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "PULL":
                            case 1:
                                message.type = 1;
                                break;
                            case "PUSH":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.stats != null) {
                                if (typeof object.stats !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.Queue.stats: object expected");
                                message.stats = $root.google.cloud.tasks.v2beta3.QueueStats.fromObject(object.stats);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Queue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {google.cloud.tasks.v2beta3.Queue} message Queue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Queue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.rateLimits = null;
                                object.retryConfig = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.purgeTime = null;
                                object.taskTtl = null;
                                object.tombstoneTtl = null;
                                object.stackdriverLoggingConfig = null;
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                object.stats = null;
                                object.httpTarget = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.appEngineHttpQueue != null && message.hasOwnProperty("appEngineHttpQueue")) {
                                object.appEngineHttpQueue = $root.google.cloud.tasks.v2beta3.AppEngineHttpQueue.toObject(message.appEngineHttpQueue, options);
                                if (options.oneofs)
                                    object.queueType = "appEngineHttpQueue";
                            }
                            if (message.rateLimits != null && message.hasOwnProperty("rateLimits"))
                                object.rateLimits = $root.google.cloud.tasks.v2beta3.RateLimits.toObject(message.rateLimits, options);
                            if (message.retryConfig != null && message.hasOwnProperty("retryConfig"))
                                object.retryConfig = $root.google.cloud.tasks.v2beta3.RetryConfig.toObject(message.retryConfig, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.tasks.v2beta3.Queue.State[message.state] === undefined ? message.state : $root.google.cloud.tasks.v2beta3.Queue.State[message.state] : message.state;
                            if (message.purgeTime != null && message.hasOwnProperty("purgeTime"))
                                object.purgeTime = $root.google.protobuf.Timestamp.toObject(message.purgeTime, options);
                            if (message.taskTtl != null && message.hasOwnProperty("taskTtl"))
                                object.taskTtl = $root.google.protobuf.Duration.toObject(message.taskTtl, options);
                            if (message.tombstoneTtl != null && message.hasOwnProperty("tombstoneTtl"))
                                object.tombstoneTtl = $root.google.protobuf.Duration.toObject(message.tombstoneTtl, options);
                            if (message.stackdriverLoggingConfig != null && message.hasOwnProperty("stackdriverLoggingConfig"))
                                object.stackdriverLoggingConfig = $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig.toObject(message.stackdriverLoggingConfig, options);
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.tasks.v2beta3.Queue.Type[message.type] === undefined ? message.type : $root.google.cloud.tasks.v2beta3.Queue.Type[message.type] : message.type;
                            if (message.stats != null && message.hasOwnProperty("stats"))
                                object.stats = $root.google.cloud.tasks.v2beta3.QueueStats.toObject(message.stats, options);
                            if (message.httpTarget != null && message.hasOwnProperty("httpTarget"))
                                object.httpTarget = $root.google.cloud.tasks.v2beta3.HttpTarget.toObject(message.httpTarget, options);
                            return object;
                        };
    
                        /**
                         * Converts this Queue to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Queue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Queue
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.Queue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Queue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.Queue";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.tasks.v2beta3.Queue.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} PAUSED=2 PAUSED value
                         * @property {number} DISABLED=3 DISABLED value
                         */
                        Queue.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "PAUSED"] = 2;
                            values[valuesById[3] = "DISABLED"] = 3;
                            return values;
                        })();
    
                        /**
                         * Type enum.
                         * @name google.cloud.tasks.v2beta3.Queue.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} PULL=1 PULL value
                         * @property {number} PUSH=2 PUSH value
                         */
                        Queue.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PULL"] = 1;
                            values[valuesById[2] = "PUSH"] = 2;
                            return values;
                        })();
    
                        return Queue;
                    })();
    
                    v2beta3.RateLimits = (function() {
    
                        /**
                         * Properties of a RateLimits.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IRateLimits
                         * @property {number|null} [maxDispatchesPerSecond] RateLimits maxDispatchesPerSecond
                         * @property {number|null} [maxBurstSize] RateLimits maxBurstSize
                         * @property {number|null} [maxConcurrentDispatches] RateLimits maxConcurrentDispatches
                         */
    
                        /**
                         * Constructs a new RateLimits.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a RateLimits.
                         * @implements IRateLimits
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IRateLimits=} [properties] Properties to set
                         */
                        function RateLimits(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RateLimits maxDispatchesPerSecond.
                         * @member {number} maxDispatchesPerSecond
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxDispatchesPerSecond = 0;
    
                        /**
                         * RateLimits maxBurstSize.
                         * @member {number} maxBurstSize
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxBurstSize = 0;
    
                        /**
                         * RateLimits maxConcurrentDispatches.
                         * @member {number} maxConcurrentDispatches
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @instance
                         */
                        RateLimits.prototype.maxConcurrentDispatches = 0;
    
                        /**
                         * Creates a new RateLimits instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRateLimits=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.RateLimits} RateLimits instance
                         */
                        RateLimits.create = function create(properties) {
                            return new RateLimits(properties);
                        };
    
                        /**
                         * Encodes the specified RateLimits message. Does not implicitly {@link google.cloud.tasks.v2beta3.RateLimits.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRateLimits} message RateLimits message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RateLimits.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxDispatchesPerSecond != null && Object.hasOwnProperty.call(message, "maxDispatchesPerSecond"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.maxDispatchesPerSecond);
                            if (message.maxBurstSize != null && Object.hasOwnProperty.call(message, "maxBurstSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxBurstSize);
                            if (message.maxConcurrentDispatches != null && Object.hasOwnProperty.call(message, "maxConcurrentDispatches"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxConcurrentDispatches);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RateLimits message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.RateLimits.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRateLimits} message RateLimits message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RateLimits.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RateLimits message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.RateLimits} RateLimits
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RateLimits.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.RateLimits();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxDispatchesPerSecond = reader.double();
                                        break;
                                    }
                                case 2: {
                                        message.maxBurstSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.maxConcurrentDispatches = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RateLimits message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.RateLimits} RateLimits
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RateLimits.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RateLimits message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RateLimits.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.maxDispatchesPerSecond != null && message.hasOwnProperty("maxDispatchesPerSecond"))
                                if (typeof message.maxDispatchesPerSecond !== "number")
                                    return "maxDispatchesPerSecond: number expected";
                            if (message.maxBurstSize != null && message.hasOwnProperty("maxBurstSize"))
                                if (!$util.isInteger(message.maxBurstSize))
                                    return "maxBurstSize: integer expected";
                            if (message.maxConcurrentDispatches != null && message.hasOwnProperty("maxConcurrentDispatches"))
                                if (!$util.isInteger(message.maxConcurrentDispatches))
                                    return "maxConcurrentDispatches: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RateLimits message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.RateLimits} RateLimits
                         */
                        RateLimits.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.RateLimits)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.RateLimits();
                            if (object.maxDispatchesPerSecond != null)
                                message.maxDispatchesPerSecond = Number(object.maxDispatchesPerSecond);
                            if (object.maxBurstSize != null)
                                message.maxBurstSize = object.maxBurstSize | 0;
                            if (object.maxConcurrentDispatches != null)
                                message.maxConcurrentDispatches = object.maxConcurrentDispatches | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RateLimits message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {google.cloud.tasks.v2beta3.RateLimits} message RateLimits
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RateLimits.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxDispatchesPerSecond = 0;
                                object.maxBurstSize = 0;
                                object.maxConcurrentDispatches = 0;
                            }
                            if (message.maxDispatchesPerSecond != null && message.hasOwnProperty("maxDispatchesPerSecond"))
                                object.maxDispatchesPerSecond = options.json && !isFinite(message.maxDispatchesPerSecond) ? String(message.maxDispatchesPerSecond) : message.maxDispatchesPerSecond;
                            if (message.maxBurstSize != null && message.hasOwnProperty("maxBurstSize"))
                                object.maxBurstSize = message.maxBurstSize;
                            if (message.maxConcurrentDispatches != null && message.hasOwnProperty("maxConcurrentDispatches"))
                                object.maxConcurrentDispatches = message.maxConcurrentDispatches;
                            return object;
                        };
    
                        /**
                         * Converts this RateLimits to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RateLimits.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RateLimits
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.RateLimits
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RateLimits.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.RateLimits";
                        };
    
                        return RateLimits;
                    })();
    
                    v2beta3.RetryConfig = (function() {
    
                        /**
                         * Properties of a RetryConfig.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IRetryConfig
                         * @property {number|null} [maxAttempts] RetryConfig maxAttempts
                         * @property {google.protobuf.IDuration|null} [maxRetryDuration] RetryConfig maxRetryDuration
                         * @property {google.protobuf.IDuration|null} [minBackoff] RetryConfig minBackoff
                         * @property {google.protobuf.IDuration|null} [maxBackoff] RetryConfig maxBackoff
                         * @property {number|null} [maxDoublings] RetryConfig maxDoublings
                         */
    
                        /**
                         * Constructs a new RetryConfig.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a RetryConfig.
                         * @implements IRetryConfig
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IRetryConfig=} [properties] Properties to set
                         */
                        function RetryConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetryConfig maxAttempts.
                         * @member {number} maxAttempts
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxAttempts = 0;
    
                        /**
                         * RetryConfig maxRetryDuration.
                         * @member {google.protobuf.IDuration|null|undefined} maxRetryDuration
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxRetryDuration = null;
    
                        /**
                         * RetryConfig minBackoff.
                         * @member {google.protobuf.IDuration|null|undefined} minBackoff
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.minBackoff = null;
    
                        /**
                         * RetryConfig maxBackoff.
                         * @member {google.protobuf.IDuration|null|undefined} maxBackoff
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxBackoff = null;
    
                        /**
                         * RetryConfig maxDoublings.
                         * @member {number} maxDoublings
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @instance
                         */
                        RetryConfig.prototype.maxDoublings = 0;
    
                        /**
                         * Creates a new RetryConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRetryConfig=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.RetryConfig} RetryConfig instance
                         */
                        RetryConfig.create = function create(properties) {
                            return new RetryConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RetryConfig message. Does not implicitly {@link google.cloud.tasks.v2beta3.RetryConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRetryConfig} message RetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxAttempts != null && Object.hasOwnProperty.call(message, "maxAttempts"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maxAttempts);
                            if (message.maxRetryDuration != null && Object.hasOwnProperty.call(message, "maxRetryDuration"))
                                $root.google.protobuf.Duration.encode(message.maxRetryDuration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.minBackoff != null && Object.hasOwnProperty.call(message, "minBackoff"))
                                $root.google.protobuf.Duration.encode(message.minBackoff, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.maxBackoff != null && Object.hasOwnProperty.call(message, "maxBackoff"))
                                $root.google.protobuf.Duration.encode(message.maxBackoff, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.maxDoublings != null && Object.hasOwnProperty.call(message, "maxDoublings"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.maxDoublings);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetryConfig message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.RetryConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IRetryConfig} message RetryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetryConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.RetryConfig} RetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.RetryConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxAttempts = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.maxRetryDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.minBackoff = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.maxBackoff = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.maxDoublings = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetryConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.RetryConfig} RetryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetryConfig message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetryConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.maxAttempts != null && message.hasOwnProperty("maxAttempts"))
                                if (!$util.isInteger(message.maxAttempts))
                                    return "maxAttempts: integer expected";
                            if (message.maxRetryDuration != null && message.hasOwnProperty("maxRetryDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxRetryDuration);
                                if (error)
                                    return "maxRetryDuration." + error;
                            }
                            if (message.minBackoff != null && message.hasOwnProperty("minBackoff")) {
                                var error = $root.google.protobuf.Duration.verify(message.minBackoff);
                                if (error)
                                    return "minBackoff." + error;
                            }
                            if (message.maxBackoff != null && message.hasOwnProperty("maxBackoff")) {
                                var error = $root.google.protobuf.Duration.verify(message.maxBackoff);
                                if (error)
                                    return "maxBackoff." + error;
                            }
                            if (message.maxDoublings != null && message.hasOwnProperty("maxDoublings"))
                                if (!$util.isInteger(message.maxDoublings))
                                    return "maxDoublings: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetryConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.RetryConfig} RetryConfig
                         */
                        RetryConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.RetryConfig)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.RetryConfig();
                            if (object.maxAttempts != null)
                                message.maxAttempts = object.maxAttempts | 0;
                            if (object.maxRetryDuration != null) {
                                if (typeof object.maxRetryDuration !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.RetryConfig.maxRetryDuration: object expected");
                                message.maxRetryDuration = $root.google.protobuf.Duration.fromObject(object.maxRetryDuration);
                            }
                            if (object.minBackoff != null) {
                                if (typeof object.minBackoff !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.RetryConfig.minBackoff: object expected");
                                message.minBackoff = $root.google.protobuf.Duration.fromObject(object.minBackoff);
                            }
                            if (object.maxBackoff != null) {
                                if (typeof object.maxBackoff !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.RetryConfig.maxBackoff: object expected");
                                message.maxBackoff = $root.google.protobuf.Duration.fromObject(object.maxBackoff);
                            }
                            if (object.maxDoublings != null)
                                message.maxDoublings = object.maxDoublings | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetryConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.RetryConfig} message RetryConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetryConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxAttempts = 0;
                                object.maxRetryDuration = null;
                                object.minBackoff = null;
                                object.maxBackoff = null;
                                object.maxDoublings = 0;
                            }
                            if (message.maxAttempts != null && message.hasOwnProperty("maxAttempts"))
                                object.maxAttempts = message.maxAttempts;
                            if (message.maxRetryDuration != null && message.hasOwnProperty("maxRetryDuration"))
                                object.maxRetryDuration = $root.google.protobuf.Duration.toObject(message.maxRetryDuration, options);
                            if (message.minBackoff != null && message.hasOwnProperty("minBackoff"))
                                object.minBackoff = $root.google.protobuf.Duration.toObject(message.minBackoff, options);
                            if (message.maxBackoff != null && message.hasOwnProperty("maxBackoff"))
                                object.maxBackoff = $root.google.protobuf.Duration.toObject(message.maxBackoff, options);
                            if (message.maxDoublings != null && message.hasOwnProperty("maxDoublings"))
                                object.maxDoublings = message.maxDoublings;
                            return object;
                        };
    
                        /**
                         * Converts this RetryConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetryConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetryConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.RetryConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetryConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.RetryConfig";
                        };
    
                        return RetryConfig;
                    })();
    
                    v2beta3.StackdriverLoggingConfig = (function() {
    
                        /**
                         * Properties of a StackdriverLoggingConfig.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IStackdriverLoggingConfig
                         * @property {number|null} [samplingRatio] StackdriverLoggingConfig samplingRatio
                         */
    
                        /**
                         * Constructs a new StackdriverLoggingConfig.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a StackdriverLoggingConfig.
                         * @implements IStackdriverLoggingConfig
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IStackdriverLoggingConfig=} [properties] Properties to set
                         */
                        function StackdriverLoggingConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StackdriverLoggingConfig samplingRatio.
                         * @member {number} samplingRatio
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @instance
                         */
                        StackdriverLoggingConfig.prototype.samplingRatio = 0;
    
                        /**
                         * Creates a new StackdriverLoggingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IStackdriverLoggingConfig=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.StackdriverLoggingConfig} StackdriverLoggingConfig instance
                         */
                        StackdriverLoggingConfig.create = function create(properties) {
                            return new StackdriverLoggingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified StackdriverLoggingConfig message. Does not implicitly {@link google.cloud.tasks.v2beta3.StackdriverLoggingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IStackdriverLoggingConfig} message StackdriverLoggingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StackdriverLoggingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.samplingRatio != null && Object.hasOwnProperty.call(message, "samplingRatio"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.samplingRatio);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StackdriverLoggingConfig message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.StackdriverLoggingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IStackdriverLoggingConfig} message StackdriverLoggingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StackdriverLoggingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StackdriverLoggingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.StackdriverLoggingConfig} StackdriverLoggingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StackdriverLoggingConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.samplingRatio = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StackdriverLoggingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.StackdriverLoggingConfig} StackdriverLoggingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StackdriverLoggingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StackdriverLoggingConfig message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StackdriverLoggingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.samplingRatio != null && message.hasOwnProperty("samplingRatio"))
                                if (typeof message.samplingRatio !== "number")
                                    return "samplingRatio: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a StackdriverLoggingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.StackdriverLoggingConfig} StackdriverLoggingConfig
                         */
                        StackdriverLoggingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.StackdriverLoggingConfig();
                            if (object.samplingRatio != null)
                                message.samplingRatio = Number(object.samplingRatio);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StackdriverLoggingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {google.cloud.tasks.v2beta3.StackdriverLoggingConfig} message StackdriverLoggingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StackdriverLoggingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.samplingRatio = 0;
                            if (message.samplingRatio != null && message.hasOwnProperty("samplingRatio"))
                                object.samplingRatio = options.json && !isFinite(message.samplingRatio) ? String(message.samplingRatio) : message.samplingRatio;
                            return object;
                        };
    
                        /**
                         * Converts this StackdriverLoggingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StackdriverLoggingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StackdriverLoggingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.StackdriverLoggingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StackdriverLoggingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.StackdriverLoggingConfig";
                        };
    
                        return StackdriverLoggingConfig;
                    })();
    
                    v2beta3.QueueStats = (function() {
    
                        /**
                         * Properties of a QueueStats.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IQueueStats
                         * @property {number|Long|null} [tasksCount] QueueStats tasksCount
                         * @property {google.protobuf.ITimestamp|null} [oldestEstimatedArrivalTime] QueueStats oldestEstimatedArrivalTime
                         * @property {number|Long|null} [executedLastMinuteCount] QueueStats executedLastMinuteCount
                         * @property {number|Long|null} [concurrentDispatchesCount] QueueStats concurrentDispatchesCount
                         * @property {number|null} [effectiveExecutionRate] QueueStats effectiveExecutionRate
                         */
    
                        /**
                         * Constructs a new QueueStats.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a QueueStats.
                         * @implements IQueueStats
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IQueueStats=} [properties] Properties to set
                         */
                        function QueueStats(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueueStats tasksCount.
                         * @member {number|Long} tasksCount
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.tasksCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * QueueStats oldestEstimatedArrivalTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} oldestEstimatedArrivalTime
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.oldestEstimatedArrivalTime = null;
    
                        /**
                         * QueueStats executedLastMinuteCount.
                         * @member {number|Long} executedLastMinuteCount
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.executedLastMinuteCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * QueueStats concurrentDispatchesCount.
                         * @member {number|Long} concurrentDispatchesCount
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.concurrentDispatchesCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * QueueStats effectiveExecutionRate.
                         * @member {number} effectiveExecutionRate
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @instance
                         */
                        QueueStats.prototype.effectiveExecutionRate = 0;
    
                        /**
                         * Creates a new QueueStats instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueueStats=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.QueueStats} QueueStats instance
                         */
                        QueueStats.create = function create(properties) {
                            return new QueueStats(properties);
                        };
    
                        /**
                         * Encodes the specified QueueStats message. Does not implicitly {@link google.cloud.tasks.v2beta3.QueueStats.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueueStats} message QueueStats message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueueStats.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasksCount != null && Object.hasOwnProperty.call(message, "tasksCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.tasksCount);
                            if (message.oldestEstimatedArrivalTime != null && Object.hasOwnProperty.call(message, "oldestEstimatedArrivalTime"))
                                $root.google.protobuf.Timestamp.encode(message.oldestEstimatedArrivalTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.executedLastMinuteCount != null && Object.hasOwnProperty.call(message, "executedLastMinuteCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.executedLastMinuteCount);
                            if (message.concurrentDispatchesCount != null && Object.hasOwnProperty.call(message, "concurrentDispatchesCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.concurrentDispatchesCount);
                            if (message.effectiveExecutionRate != null && Object.hasOwnProperty.call(message, "effectiveExecutionRate"))
                                writer.uint32(/* id 5, wireType 1 =*/41).double(message.effectiveExecutionRate);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueueStats message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.QueueStats.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueueStats} message QueueStats message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueueStats.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueueStats message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.QueueStats} QueueStats
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueueStats.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.QueueStats();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.tasksCount = reader.int64();
                                        break;
                                    }
                                case 2: {
                                        message.oldestEstimatedArrivalTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.executedLastMinuteCount = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.concurrentDispatchesCount = reader.int64();
                                        break;
                                    }
                                case 5: {
                                        message.effectiveExecutionRate = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueueStats message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.QueueStats} QueueStats
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueueStats.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueueStats message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueueStats.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasksCount != null && message.hasOwnProperty("tasksCount"))
                                if (!$util.isInteger(message.tasksCount) && !(message.tasksCount && $util.isInteger(message.tasksCount.low) && $util.isInteger(message.tasksCount.high)))
                                    return "tasksCount: integer|Long expected";
                            if (message.oldestEstimatedArrivalTime != null && message.hasOwnProperty("oldestEstimatedArrivalTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.oldestEstimatedArrivalTime);
                                if (error)
                                    return "oldestEstimatedArrivalTime." + error;
                            }
                            if (message.executedLastMinuteCount != null && message.hasOwnProperty("executedLastMinuteCount"))
                                if (!$util.isInteger(message.executedLastMinuteCount) && !(message.executedLastMinuteCount && $util.isInteger(message.executedLastMinuteCount.low) && $util.isInteger(message.executedLastMinuteCount.high)))
                                    return "executedLastMinuteCount: integer|Long expected";
                            if (message.concurrentDispatchesCount != null && message.hasOwnProperty("concurrentDispatchesCount"))
                                if (!$util.isInteger(message.concurrentDispatchesCount) && !(message.concurrentDispatchesCount && $util.isInteger(message.concurrentDispatchesCount.low) && $util.isInteger(message.concurrentDispatchesCount.high)))
                                    return "concurrentDispatchesCount: integer|Long expected";
                            if (message.effectiveExecutionRate != null && message.hasOwnProperty("effectiveExecutionRate"))
                                if (typeof message.effectiveExecutionRate !== "number")
                                    return "effectiveExecutionRate: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a QueueStats message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.QueueStats} QueueStats
                         */
                        QueueStats.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.QueueStats)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.QueueStats();
                            if (object.tasksCount != null)
                                if ($util.Long)
                                    (message.tasksCount = $util.Long.fromValue(object.tasksCount)).unsigned = false;
                                else if (typeof object.tasksCount === "string")
                                    message.tasksCount = parseInt(object.tasksCount, 10);
                                else if (typeof object.tasksCount === "number")
                                    message.tasksCount = object.tasksCount;
                                else if (typeof object.tasksCount === "object")
                                    message.tasksCount = new $util.LongBits(object.tasksCount.low >>> 0, object.tasksCount.high >>> 0).toNumber();
                            if (object.oldestEstimatedArrivalTime != null) {
                                if (typeof object.oldestEstimatedArrivalTime !== "object")
                                    throw TypeError(".google.cloud.tasks.v2beta3.QueueStats.oldestEstimatedArrivalTime: object expected");
                                message.oldestEstimatedArrivalTime = $root.google.protobuf.Timestamp.fromObject(object.oldestEstimatedArrivalTime);
                            }
                            if (object.executedLastMinuteCount != null)
                                if ($util.Long)
                                    (message.executedLastMinuteCount = $util.Long.fromValue(object.executedLastMinuteCount)).unsigned = false;
                                else if (typeof object.executedLastMinuteCount === "string")
                                    message.executedLastMinuteCount = parseInt(object.executedLastMinuteCount, 10);
                                else if (typeof object.executedLastMinuteCount === "number")
                                    message.executedLastMinuteCount = object.executedLastMinuteCount;
                                else if (typeof object.executedLastMinuteCount === "object")
                                    message.executedLastMinuteCount = new $util.LongBits(object.executedLastMinuteCount.low >>> 0, object.executedLastMinuteCount.high >>> 0).toNumber();
                            if (object.concurrentDispatchesCount != null)
                                if ($util.Long)
                                    (message.concurrentDispatchesCount = $util.Long.fromValue(object.concurrentDispatchesCount)).unsigned = false;
                                else if (typeof object.concurrentDispatchesCount === "string")
                                    message.concurrentDispatchesCount = parseInt(object.concurrentDispatchesCount, 10);
                                else if (typeof object.concurrentDispatchesCount === "number")
                                    message.concurrentDispatchesCount = object.concurrentDispatchesCount;
                                else if (typeof object.concurrentDispatchesCount === "object")
                                    message.concurrentDispatchesCount = new $util.LongBits(object.concurrentDispatchesCount.low >>> 0, object.concurrentDispatchesCount.high >>> 0).toNumber();
                            if (object.effectiveExecutionRate != null)
                                message.effectiveExecutionRate = Number(object.effectiveExecutionRate);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueueStats message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {google.cloud.tasks.v2beta3.QueueStats} message QueueStats
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueueStats.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.tasksCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.tasksCount = options.longs === String ? "0" : 0;
                                object.oldestEstimatedArrivalTime = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.executedLastMinuteCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.executedLastMinuteCount = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.concurrentDispatchesCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.concurrentDispatchesCount = options.longs === String ? "0" : 0;
                                object.effectiveExecutionRate = 0;
                            }
                            if (message.tasksCount != null && message.hasOwnProperty("tasksCount"))
                                if (typeof message.tasksCount === "number")
                                    object.tasksCount = options.longs === String ? String(message.tasksCount) : message.tasksCount;
                                else
                                    object.tasksCount = options.longs === String ? $util.Long.prototype.toString.call(message.tasksCount) : options.longs === Number ? new $util.LongBits(message.tasksCount.low >>> 0, message.tasksCount.high >>> 0).toNumber() : message.tasksCount;
                            if (message.oldestEstimatedArrivalTime != null && message.hasOwnProperty("oldestEstimatedArrivalTime"))
                                object.oldestEstimatedArrivalTime = $root.google.protobuf.Timestamp.toObject(message.oldestEstimatedArrivalTime, options);
                            if (message.executedLastMinuteCount != null && message.hasOwnProperty("executedLastMinuteCount"))
                                if (typeof message.executedLastMinuteCount === "number")
                                    object.executedLastMinuteCount = options.longs === String ? String(message.executedLastMinuteCount) : message.executedLastMinuteCount;
                                else
                                    object.executedLastMinuteCount = options.longs === String ? $util.Long.prototype.toString.call(message.executedLastMinuteCount) : options.longs === Number ? new $util.LongBits(message.executedLastMinuteCount.low >>> 0, message.executedLastMinuteCount.high >>> 0).toNumber() : message.executedLastMinuteCount;
                            if (message.concurrentDispatchesCount != null && message.hasOwnProperty("concurrentDispatchesCount"))
                                if (typeof message.concurrentDispatchesCount === "number")
                                    object.concurrentDispatchesCount = options.longs === String ? String(message.concurrentDispatchesCount) : message.concurrentDispatchesCount;
                                else
                                    object.concurrentDispatchesCount = options.longs === String ? $util.Long.prototype.toString.call(message.concurrentDispatchesCount) : options.longs === Number ? new $util.LongBits(message.concurrentDispatchesCount.low >>> 0, message.concurrentDispatchesCount.high >>> 0).toNumber() : message.concurrentDispatchesCount;
                            if (message.effectiveExecutionRate != null && message.hasOwnProperty("effectiveExecutionRate"))
                                object.effectiveExecutionRate = options.json && !isFinite(message.effectiveExecutionRate) ? String(message.effectiveExecutionRate) : message.effectiveExecutionRate;
                            return object;
                        };
    
                        /**
                         * Converts this QueueStats to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueueStats.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueueStats
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.QueueStats
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueueStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.QueueStats";
                        };
    
                        return QueueStats;
                    })();
    
                    v2beta3.PullMessage = (function() {
    
                        /**
                         * Properties of a PullMessage.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IPullMessage
                         * @property {Uint8Array|null} [payload] PullMessage payload
                         * @property {string|null} [tag] PullMessage tag
                         */
    
                        /**
                         * Constructs a new PullMessage.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a PullMessage.
                         * @implements IPullMessage
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IPullMessage=} [properties] Properties to set
                         */
                        function PullMessage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PullMessage payload.
                         * @member {Uint8Array} payload
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @instance
                         */
                        PullMessage.prototype.payload = $util.newBuffer([]);
    
                        /**
                         * PullMessage tag.
                         * @member {string} tag
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @instance
                         */
                        PullMessage.prototype.tag = "";
    
                        /**
                         * Creates a new PullMessage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPullMessage=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.PullMessage} PullMessage instance
                         */
                        PullMessage.create = function create(properties) {
                            return new PullMessage(properties);
                        };
    
                        /**
                         * Encodes the specified PullMessage message. Does not implicitly {@link google.cloud.tasks.v2beta3.PullMessage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPullMessage} message PullMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullMessage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.payload != null && Object.hasOwnProperty.call(message, "payload"))
                                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.payload);
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PullMessage message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.PullMessage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPullMessage} message PullMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PullMessage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PullMessage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.PullMessage} PullMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullMessage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.PullMessage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.payload = reader.bytes();
                                        break;
                                    }
                                case 2: {
                                        message.tag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PullMessage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.PullMessage} PullMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PullMessage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PullMessage message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PullMessage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.payload != null && message.hasOwnProperty("payload"))
                                if (!(message.payload && typeof message.payload.length === "number" || $util.isString(message.payload)))
                                    return "payload: buffer expected";
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                if (!$util.isString(message.tag))
                                    return "tag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PullMessage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.PullMessage} PullMessage
                         */
                        PullMessage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.PullMessage)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.PullMessage();
                            if (object.payload != null)
                                if (typeof object.payload === "string")
                                    $util.base64.decode(object.payload, message.payload = $util.newBuffer($util.base64.length(object.payload)), 0);
                                else if (object.payload.length >= 0)
                                    message.payload = object.payload;
                            if (object.tag != null)
                                message.tag = String(object.tag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PullMessage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {google.cloud.tasks.v2beta3.PullMessage} message PullMessage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PullMessage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if (options.bytes === String)
                                    object.payload = "";
                                else {
                                    object.payload = [];
                                    if (options.bytes !== Array)
                                        object.payload = $util.newBuffer(object.payload);
                                }
                                object.tag = "";
                            }
                            if (message.payload != null && message.hasOwnProperty("payload"))
                                object.payload = options.bytes === String ? $util.base64.encode(message.payload, 0, message.payload.length) : options.bytes === Array ? Array.prototype.slice.call(message.payload) : message.payload;
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = message.tag;
                            return object;
                        };
    
                        /**
                         * Converts this PullMessage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PullMessage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PullMessage
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.PullMessage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PullMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.PullMessage";
                        };
    
                        return PullMessage;
                    })();
    
                    v2beta3.PathOverride = (function() {
    
                        /**
                         * Properties of a PathOverride.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IPathOverride
                         * @property {string|null} [path] PathOverride path
                         */
    
                        /**
                         * Constructs a new PathOverride.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a PathOverride.
                         * @implements IPathOverride
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IPathOverride=} [properties] Properties to set
                         */
                        function PathOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PathOverride path.
                         * @member {string} path
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @instance
                         */
                        PathOverride.prototype.path = "";
    
                        /**
                         * Creates a new PathOverride instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPathOverride=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.PathOverride} PathOverride instance
                         */
                        PathOverride.create = function create(properties) {
                            return new PathOverride(properties);
                        };
    
                        /**
                         * Encodes the specified PathOverride message. Does not implicitly {@link google.cloud.tasks.v2beta3.PathOverride.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPathOverride} message PathOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PathOverride.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PathOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.PathOverride.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IPathOverride} message PathOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PathOverride.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PathOverride message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.PathOverride} PathOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PathOverride.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.PathOverride();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.path = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PathOverride message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.PathOverride} PathOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PathOverride.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PathOverride message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PathOverride.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.path != null && message.hasOwnProperty("path"))
                                if (!$util.isString(message.path))
                                    return "path: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PathOverride message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.PathOverride} PathOverride
                         */
                        PathOverride.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.PathOverride)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.PathOverride();
                            if (object.path != null)
                                message.path = String(object.path);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PathOverride message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.PathOverride} message PathOverride
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PathOverride.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.path = "";
                            if (message.path != null && message.hasOwnProperty("path"))
                                object.path = message.path;
                            return object;
                        };
    
                        /**
                         * Converts this PathOverride to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PathOverride.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PathOverride
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.PathOverride
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PathOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.PathOverride";
                        };
    
                        return PathOverride;
                    })();
    
                    v2beta3.QueryOverride = (function() {
    
                        /**
                         * Properties of a QueryOverride.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IQueryOverride
                         * @property {string|null} [queryParams] QueryOverride queryParams
                         */
    
                        /**
                         * Constructs a new QueryOverride.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents a QueryOverride.
                         * @implements IQueryOverride
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IQueryOverride=} [properties] Properties to set
                         */
                        function QueryOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueryOverride queryParams.
                         * @member {string} queryParams
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @instance
                         */
                        QueryOverride.prototype.queryParams = "";
    
                        /**
                         * Creates a new QueryOverride instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueryOverride=} [properties] Properties to set
                         * @returns {google.cloud.tasks.v2beta3.QueryOverride} QueryOverride instance
                         */
                        QueryOverride.create = function create(properties) {
                            return new QueryOverride(properties);
                        };
    
                        /**
                         * Encodes the specified QueryOverride message. Does not implicitly {@link google.cloud.tasks.v2beta3.QueryOverride.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueryOverride} message QueryOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryOverride.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queryParams != null && Object.hasOwnProperty.call(message, "queryParams"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.queryParams);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueryOverride message, length delimited. Does not implicitly {@link google.cloud.tasks.v2beta3.QueryOverride.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.IQueryOverride} message QueryOverride message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryOverride.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueryOverride message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.tasks.v2beta3.QueryOverride} QueryOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryOverride.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.tasks.v2beta3.QueryOverride();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queryParams = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueryOverride message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.tasks.v2beta3.QueryOverride} QueryOverride
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryOverride.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueryOverride message.
                         * @function verify
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueryOverride.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queryParams != null && message.hasOwnProperty("queryParams"))
                                if (!$util.isString(message.queryParams))
                                    return "queryParams: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a QueryOverride message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.tasks.v2beta3.QueryOverride} QueryOverride
                         */
                        QueryOverride.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.tasks.v2beta3.QueryOverride)
                                return object;
                            var message = new $root.google.cloud.tasks.v2beta3.QueryOverride();
                            if (object.queryParams != null)
                                message.queryParams = String(object.queryParams);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueryOverride message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {google.cloud.tasks.v2beta3.QueryOverride} message QueryOverride
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueryOverride.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.queryParams = "";
                            if (message.queryParams != null && message.hasOwnProperty("queryParams"))
                                object.queryParams = message.queryParams;
                            return object;
                        };
    
                        /**
                         * Converts this QueryOverride to JSON.
                         * @function toJSON
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueryOverride.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueryOverride
                         * @function getTypeUrl
                         * @memberof google.cloud.tasks.v2beta3.QueryOverride
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueryOverride.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.tasks.v2beta3.QueryOverride";
                        };
    
                        return QueryOverride;
                    })();
    
                    v2beta3.UriOverride = (function() {
    
                        /**
                         * Properties of an UriOverride.
                         * @memberof google.cloud.tasks.v2beta3
                         * @interface IUriOverride
                         * @property {google.cloud.tasks.v2beta3.UriOverride.Scheme|null} [scheme] UriOverride scheme
                         * @property {string|null} [host] UriOverride host
                         * @property {number|Long|null} [port] UriOverride port
                         * @property {google.cloud.tasks.v2beta3.IPathOverride|null} [pathOverride] UriOverride pathOverride
                         * @property {google.cloud.tasks.v2beta3.IQueryOverride|null} [queryOverride] UriOverride queryOverride
                         * @property {google.cloud.tasks.v2beta3.UriOverride.UriOverrideEnforceMode|null} [uriOverrideEnforceMode] UriOverride uriOverrideEnforceMode
                         */
    
                        /**
                         * Constructs a new UriOverride.
                         * @memberof google.cloud.tasks.v2beta3
                         * @classdesc Represents an UriOverride.
                         * @implements IUriOverride
                         * @constructor
                         * @param {google.cloud.tasks.v2beta3.IUriOverride=} [properties] Properties to set
                         */
                        function UriOverride(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UriOverride scheme.
                         * @member {google.cloud.tasks.v2beta3.UriOverride.Scheme|null|undefined} scheme
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.scheme = null;
    
                        /**
                         * UriOverride host.
                         * @member {string|null|undefined} host
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.host = null;
    
                        /**
                         * UriOverride port.
                         * @member {number|Long|null|undefined} port
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.port = null;
    
                        /**
                         * UriOverride pathOverride.
                         * @member {google.cloud.tasks.v2beta3.IPathOverride|null|undefined} pathOverride
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.pathOverride = null;
    
                        /**
                         * UriOverride queryOverride.
                         * @member {google.cloud.tasks.v2beta3.IQueryOverride|null|undefined} queryOverride
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.queryOverride = null;
    
                        /**
                         * UriOverride uriOverrideEnforceMode.
                         * @member {google.cloud.tasks.v2beta3.UriOverride.UriOverrideEnforceMode} uriOverrideEnforceMode
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
                         */
                        UriOverride.prototype.uriOverrideEnforceMode = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * UriOverride _scheme.
                         * @member {"scheme"|undefined} _scheme
                         * @memberof google.cloud.tasks.v2beta3.UriOverride
                         * @instance
              