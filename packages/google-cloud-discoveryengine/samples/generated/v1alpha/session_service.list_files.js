// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent) {
  // [START discoveryengine_v1alpha_generated_SessionService_ListFiles_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The resource name of the Session.
   *  Format:
   *  `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/sessions/{session}`
   *  Name of the session resource to which the file belong.
   */
  // const parent = 'abc123'
  /**
   *  Optional. The filter syntax consists of an expression language for
   *  constructing a predicate from one or more fields of the files being
   *  filtered. Filter expression is case-sensitive. Currently supported field
   *  names are:
   *  * upload_time
   *  * last_add_time
   *  * last_use_time
   *  * file_name
   *  * mime_type
   *  Some examples of filters would be:
   *  * "file_name = 'file_1'"
   *  * "file_name = 'file_1' AND mime_type = 'text/plain'"
   *  * "last_use_time > '2025-06-14T12:00:00Z'"
   *  For a full description of the filter format, please
   *  see https://google.aip.dev/160.
   */
  // const filter = 'abc123'
  /**
   *  Optional. The maximum number of files to return. The service may return
   *  fewer than this value. If unspecified, at most 100 files will be returned.
   *  The maximum value is 1000; values above 1000 will be coerced to 1000.
   *  If user specifies a value less than or equal to 0 - the request will be
   *  rejected with an INVALID_ARGUMENT error.
   */
  // const pageSize = 1234
  /**
   *  Optional. A page token received from a previous `ListFiles` call.
   *  Provide this to retrieve the subsequent page.
   *  When paginating, all other parameters provided to `ListFiles`
   *  must match the call that provided the page token (except `page_size`, which
   *  may differ).
   */
  // const pageToken = 'abc123'

  // Imports the Discoveryengine library
  const {SessionServiceClient} = require('@google-cloud/discoveryengine').v1alpha;

  // Instantiates a client
  const discoveryengineClient = new SessionServiceClient();

  async function callListFiles() {
    // Construct request
    const request = {
      parent,
    };

    // Run request
    const iterable = discoveryengineClient.listFilesAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListFiles();
  // [END discoveryengine_v1alpha_generated_SessionService_ListFiles_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
