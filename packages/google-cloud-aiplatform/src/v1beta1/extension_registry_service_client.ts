// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  GrpcClientOptions,
  LROperation,
  PaginationCallback,
  GaxCall,
  IamClient,
  IamProtos,
  LocationsClient,
  LocationProtos,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');

/**
 * Client JSON configuration object, loaded from
 * `src/v1beta1/extension_registry_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './extension_registry_service_client_config.json';
const version = require('../../../package.json').version;

/**
 *  A service for managing Vertex AI's Extension registry.
 * @class
 * @memberof v1beta1
 */
export class ExtensionRegistryServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  private _universeDomain: string;
  private _servicePath: string;
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  iamClient: IamClient;
  locationsClient: LocationsClient;
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  extensionRegistryServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of ExtensionRegistryServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new ExtensionRegistryServiceClient({fallback: true}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this
      .constructor as typeof ExtensionRegistryServiceClient;
    if (
      opts?.universe_domain &&
      opts?.universeDomain &&
      opts?.universe_domain !== opts?.universeDomain
    ) {
      throw new Error(
        'Please set either universe_domain or universeDomain, but not both.'
      );
    }
    const universeDomainEnvVar =
      typeof process === 'object' && typeof process.env === 'object'
        ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']
        : undefined;
    this._universeDomain =
      opts?.universeDomain ??
      opts?.universe_domain ??
      universeDomainEnvVar ??
      'googleapis.com';
    this._servicePath = 'aiplatform.' + this._universeDomain;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || this._servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== this._servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = this._servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === this._servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }
    this.iamClient = new this._gaxModule.IamClient(this._gaxGrpc, opts);

    this.locationsClient = new this._gaxModule.LocationsClient(
      this._gaxGrpc,
      opts
    );

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process === 'object' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      annotationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}/annotations/{annotation}'
      ),
      annotationSpecPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/datasets/{dataset}/annotationSpecs/{annotation_spec}'
      ),
      artifactPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}'
      ),
      batchPredictionJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}'
      ),
      cachedContentPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/cachedContents/{cached_content}'
      ),
      contextPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/metadataStores/{metadata_store}/contexts/{context}'
      ),
      customJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/customJobs/{custom_job}'
      ),
      dataItemPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}'
      ),
      dataLabelingJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}'
      ),
      datasetPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/datasets/{dataset}'
      ),
      datasetVersionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}'
      ),
      deploymentResourcePoolPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}'
      ),
      entityTypePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}'
      ),
      executionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/metadataStores/{metadata_store}/executions/{execution}'
      ),
      extensionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/extensions/{extension}'
      ),
      featureGroupPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/featureGroups/{feature_group}'
      ),
      featureOnlineStorePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}'
      ),
      featureViewPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}'
      ),
      featureViewSyncPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/feature_view_sync'
      ),
      featurestorePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/featurestores/{featurestore}'
      ),
      hyperparameterTuningJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}'
      ),
      indexPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/indexes/{index}'
      ),
      indexEndpointPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}'
      ),
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
      metadataSchemaPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/metadataStores/{metadata_store}/metadataSchemas/{metadata_schema}'
      ),
      metadataStorePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/metadataStores/{metadata_store}'
      ),
      modelPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/models/{model}'
      ),
      modelDeploymentMonitoringJobPathTemplate:
        new this._gaxModule.PathTemplate(
          'projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}'
        ),
      modelEvaluationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}'
      ),
      modelEvaluationSlicePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}'
      ),
      modelMonitorPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/modelMonitors/{model_monitor}'
      ),
      modelMonitoringJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/modelMonitors/{model_monitor}/modelMonitoringJobs/{model_monitoring_job}'
      ),
      nasJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/nasJobs/{nas_job}'
      ),
      nasTrialDetailPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/nasJobs/{nas_job}/nasTrialDetails/{nas_trial_detail}'
      ),
      notebookExecutionJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/notebookExecutionJobs/{notebook_execution_job}'
      ),
      notebookRuntimePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/notebookRuntimes/{notebook_runtime}'
      ),
      notebookRuntimeTemplatePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}'
      ),
      persistentResourcePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/persistentResources/{persistent_resource}'
      ),
      pipelineJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}'
      ),
      projectLocationEndpointPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/endpoints/{endpoint}'
      ),
      projectLocationFeatureGroupFeaturePathTemplate:
        new this._gaxModule.PathTemplate(
          'projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}'
        ),
      projectLocationFeaturestoreEntityTypeFeaturePathTemplate:
        new this._gaxModule.PathTemplate(
          'projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}'
        ),
      projectLocationPublisherModelPathTemplate:
        new this._gaxModule.PathTemplate(
          'projects/{project}/locations/{location}/publishers/{publisher}/models/{model}'
        ),
      publisherModelPathTemplate: new this._gaxModule.PathTemplate(
        'publishers/{publisher}/models/{model}'
      ),
      ragCorpusPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/ragCorpora/{rag_corpus}'
      ),
      ragFilePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/ragCorpora/{rag_corpus}/ragFiles/{rag_file}'
      ),
      reasoningEnginePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}'
      ),
      savedQueryPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}'
      ),
      schedulePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/schedules/{schedule}'
      ),
      specialistPoolPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/specialistPools/{specialist_pool}'
      ),
      studyPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/studies/{study}'
      ),
      tensorboardPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tensorboards/{tensorboard}'
      ),
      tensorboardExperimentPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}'
      ),
      tensorboardRunPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}'
      ),
      tensorboardTimeSeriesPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}'
      ),
      trainingPipelinePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}'
      ),
      trialPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/studies/{study}/trials/{trial}'
      ),
      tuningJobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tuningJobs/{tuning_job}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listExtensions: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'extensions'
      ),
    };

    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);
    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const lroOptions: GrpcClientOptions = {
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,
    };
    if (opts.fallback) {
      lroOptions.protoJson = protoFilesRoot;
      lroOptions.httpRules = [
        {
          selector: 'google.cloud.location.Locations.GetLocation',
          get: '/ui/{name=projects/*/locations/*}',
          additional_bindings: [
            {get: '/v1beta1/{name=projects/*/locations/*}'},
          ],
        },
        {
          selector: 'google.cloud.location.Locations.ListLocations',
          get: '/ui/{name=projects/*}/locations',
          additional_bindings: [{get: '/v1beta1/{name=projects/*}/locations'}],
        },
        {
          selector: 'google.iam.v1.IAMPolicy.GetIamPolicy',
          post: '/v1beta1/{resource=projects/*/locations/*/featurestores/*}:getIamPolicy',
          body: '*',
          additional_bindings: [
            {
              post: '/v1beta1/{resource=projects/*/locations/*/featurestores/*/entityTypes/*}:getIamPolicy',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/models/*}:getIamPolicy',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/endpoints/*}:getIamPolicy',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/notebookRuntimeTemplates/*}:getIamPolicy',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/publishers/*/models/*}:getIamPolicy',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/featureOnlineStores/*}:getIamPolicy',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:getIamPolicy',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featurestores/*}:getIamPolicy',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featurestores/*/entityTypes/*}:getIamPolicy',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/models/*}:getIamPolicy',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/endpoints/*}:getIamPolicy',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/notebookRuntimeTemplates/*}:getIamPolicy',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/publishers/*/models/*}:getIamPolicy',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featureOnlineStores/*}:getIamPolicy',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:getIamPolicy',
            },
          ],
        },
        {
          selector: 'google.iam.v1.IAMPolicy.SetIamPolicy',
          post: '/v1beta1/{resource=projects/*/locations/*/featurestores/*}:setIamPolicy',
          body: '*',
          additional_bindings: [
            {
              post: '/v1beta1/{resource=projects/*/locations/*/featurestores/*/entityTypes/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/models/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/endpoints/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/notebookRuntimeTemplates/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/featureOnlineStores/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featurestores/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featurestores/*/entityTypes/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/models/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/endpoints/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/notebookRuntimeTemplates/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featureOnlineStores/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:setIamPolicy',
              body: '*',
            },
          ],
        },
        {
          selector: 'google.iam.v1.IAMPolicy.TestIamPermissions',
          post: '/v1beta1/{resource=projects/*/locations/*/featurestores/*}:testIamPermissions',
          body: '*',
          additional_bindings: [
            {
              post: '/v1beta1/{resource=projects/*/locations/*/featurestores/*/entityTypes/*}:testIamPermissions',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/models/*}:testIamPermissions',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/endpoints/*}:testIamPermissions',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/notebookRuntimeTemplates/*}:testIamPermissions',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/featureOnlineStores/*}:testIamPermissions',
            },
            {
              post: '/v1beta1/{resource=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:testIamPermissions',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featurestores/*}:testIamPermissions',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featurestores/*/entityTypes/*}:testIamPermissions',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/models/*}:testIamPermissions',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/endpoints/*}:testIamPermissions',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/notebookRuntimeTemplates/*}:testIamPermissions',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featureOnlineStores/*}:testIamPermissions',
            },
            {
              post: '/ui/{resource=projects/*/locations/*/featureOnlineStores/*/featureViews/*}:testIamPermissions',
            },
          ],
        },
        {
          selector: 'google.longrunning.Operations.CancelOperation',
          post: '/ui/{name=projects/*/locations/*/operations/*}:cancel',
          additional_bindings: [
            {
              post: '/ui/{name=projects/*/locations/*/agents/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/apps/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/edgeDevices/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/endpoints/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/extensionControllers/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/extensions/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featurestores/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/customJobs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tuningJobs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/indexes/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/indexEndpoints/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/metadataStores/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/metadataStores/*/artifacts/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/metadataStores/*/contexts/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/metadataStores/*/executions/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/modelMonitors/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/migratableResources/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/models/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/notebookExecutionJobs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/notebookRuntimes/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/notebookRuntimeTemplates/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/persistentResources/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/studies/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/studies/*/trials/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/trainingPipelines/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/pipelineJobs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/schedules/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/specialistPools/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}:cancel',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/agents/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/apps/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/edgeDevices/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/endpoints/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/exampleStores/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/extensionControllers/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/extensions/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featurestores/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/customJobs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/indexes/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/indexEndpoints/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/artifacts/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/contexts/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/executions/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/modelMonitors/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/migratableResources/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/models/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/notebookExecutionJobs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/notebookRuntimes/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/notebookRuntimeTemplates/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/persistentResources/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/ragCorpora/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/ragCorpora/*/ragFiles/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/studies/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/studies/*/trials/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/trainingPipelines/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/pipelineJobs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/reasoningEngines/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/schedules/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/specialistPools/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}:cancel',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}:cancel',
            },
          ],
        },
        {
          selector: 'google.longrunning.Operations.DeleteOperation',
          delete: '/ui/{name=projects/*/locations/*/operations/*}',
          additional_bindings: [
            {delete: '/ui/{name=projects/*/locations/*/agents/*/operations/*}'},
            {delete: '/ui/{name=projects/*/locations/*/apps/*/operations/*}'},
            {
              delete:
                '/ui/{name=projects/*/locations/*/datasets/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/edgeDevices/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/endpoints/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/extensionControllers/*}/operations',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/extensions/*}/operations',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/featurestores/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/customJobs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/indexes/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/indexEndpoints/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/metadataStores/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/metadataStores/*/artifacts/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/metadataStores/*/contexts/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/metadataStores/*/executions/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/modelMonitors/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/migratableResources/*/operations/*}',
            },
            {delete: '/ui/{name=projects/*/locations/*/models/*/operations/*}'},
            {
              delete:
                '/ui/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/notebookExecutionJobs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/notebookRuntimes/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/notebookRuntimeTemplates/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/persistentResources/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/studies/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/studies/*/trials/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/trainingPipelines/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/pipelineJobs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/schedules/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/specialistPools/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/tensorboards/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/featureOnlineStores/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/featureGroups/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/featureGroups/*/features/*/operations/*}',
            },
            {
              delete:
                '/ui/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*/operations/*}',
            },
            {delete: '/v1beta1/{name=projects/*/locations/*/operations/*}'},
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/agents/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/apps/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/datasets/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/edgeDevices/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/endpoints/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/featurestores/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/customJobs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/evaluationTasks/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/exampleStores/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/extensionControllers/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/extensions/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/indexes/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/indexEndpoints/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/metadataStores/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/metadataStores/*/artifacts/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/metadataStores/*/contexts/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/metadataStores/*/executions/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/modelMonitors/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/migratableResources/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/models/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/notebookExecutionJobs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/notebookRuntimes/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/notebookRuntimeTemplates/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/persistentResources/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/ragCorpora/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/ragCorpora/*/ragFiles/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/reasoningEngines/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/solvers/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/studies/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/studies/*/trials/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/trainingPipelines/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/pipelineJobs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/schedules/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/specialistPools/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/tensorboards/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/featureGroups/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/featureGroups/*/features/*/operations/*}',
            },
            {
              delete:
                '/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*/operations/*}',
            },
          ],
        },
        {
          selector: 'google.longrunning.Operations.GetOperation',
          get: '/ui/{name=projects/*/locations/*/operations/*}',
          additional_bindings: [
            {get: '/ui/{name=projects/*/locations/*/agents/*/operations/*}'},
            {get: '/ui/{name=projects/*/locations/*/apps/*/operations/*}'},
            {get: '/ui/{name=projects/*/locations/*/datasets/*/operations/*}'},
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/edgeDeploymentJobs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/edgeDevices/*/operations/*}',
            },
            {get: '/ui/{name=projects/*/locations/*/endpoints/*/operations/*}'},
            {
              get: '/ui/{name=projects/*/locations/*/extensionControllers/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/extensions/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featurestores/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/customJobs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tuningJobs/*/operations/*}',
            },
            {get: '/ui/{name=projects/*/locations/*/indexes/*/operations/*}'},
            {
              get: '/ui/{name=projects/*/locations/*/indexEndpoints/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/metadataStores/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/metadataStores/*/artifacts/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/metadataStores/*/contexts/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/metadataStores/*/executions/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/modelMonitors/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/migratableResources/*/operations/*}',
            },
            {get: '/ui/{name=projects/*/locations/*/models/*/operations/*}'},
            {
              get: '/ui/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/notebookExecutionJobs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/notebookRuntimes/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/notebookRuntimeTemplates/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/persistentResources/*/operations/*}',
            },
            {get: '/ui/{name=projects/*/locations/*/studies/*/operations/*}'},
            {
              get: '/ui/{name=projects/*/locations/*/studies/*/trials/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/trainingPipelines/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/pipelineJobs/*/operations/*}',
            },
            {get: '/ui/{name=projects/*/locations/*/schedules/*/operations/*}'},
            {
              get: '/ui/{name=projects/*/locations/*/specialistPools/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featureOnlineStores/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featureGroups/*/operations/*}',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featureGroups/*/features/*/operations/*}',
            },
            {get: '/v1beta1/{name=projects/*/locations/*/operations/*}'},
            {
              get: '/v1beta1/{name=projects/*/locations/*/agents/*/operations/*}',
            },
            {get: '/v1beta1/{name=projects/*/locations/*/apps/*/operations/*}'},
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/edgeDevices/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/endpoints/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/evaluationTasks/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/exampleStores/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/extensionControllers/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/extensions/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featurestores/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/customJobs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/indexes/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/indexEndpoints/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/artifacts/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/contexts/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/executions/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/modelMonitors/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/migratableResources/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/models/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/notebookExecutionJobs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/notebookRuntimes/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/notebookRuntimeTemplates/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/persistentResources/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/ragCorpora/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/ragCorpora/*/ragFiles/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/reasoningEngines/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/solvers/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/studies/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/studies/*/trials/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/trainingPipelines/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/pipelineJobs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/schedules/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/specialistPools/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featureGroups/*/operations/*}',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featureGroups/*/features/*/operations/*}',
            },
          ],
        },
        {
          selector: 'google.longrunning.Operations.ListOperations',
          get: '/ui/{name=projects/*/locations/*}/operations',
          additional_bindings: [
            {get: '/ui/{name=projects/*/locations/*/agents/*}/operations'},
            {get: '/ui/{name=projects/*/locations/*/apps/*}/operations'},
            {get: '/ui/{name=projects/*/locations/*/datasets/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/savedQueries/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/annotationSpecs/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/deploymentResourcePools/*}/operations',
            },
            {get: '/ui/{name=projects/*/locations/*/edgeDevices/*}/operations'},
            {get: '/ui/{name=projects/*/locations/*/endpoints/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/extensionControllers/*}/operations',
            },
            {get: '/ui/{name=projects/*/locations/*/extensions/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/featurestores/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}/operations',
            },
            {get: '/ui/{name=projects/*/locations/*/customJobs/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/dataLabelingJobs/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/hyperparameterTuningJobs/*}/operations',
            },
            {get: '/ui/{name=projects/*/locations/*/tuningJobs/*}/operations'},
            {get: '/ui/{name=projects/*/locations/*/indexes/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/indexEndpoints/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/metadataStores/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/metadataStores/*/artifacts/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/metadataStores/*/contexts/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/metadataStores/*/executions/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/modelMonitors/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/migratableResources/*}/operations',
            },
            {get: '/ui/{name=projects/*/locations/*/models/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/models/*/evaluations/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/notebookExecutionJobs/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/notebookRuntimes/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/notebookRuntimeTemplates/*}/operations',
            },
            {get: '/ui/{name=projects/*/locations/*/studies/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/studies/*/trials/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/trainingPipelines/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/persistentResources/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/pipelineJobs/*}/operations',
            },
            {get: '/ui/{name=projects/*/locations/*/schedules/*}/operations'},
            {
              get: '/ui/{name=projects/*/locations/*/specialistPools/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}/operations',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featureOnlineStores/*/operations/*}:wait',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*/operations/*}:wait',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featureGroups/*/operations/*}:wait',
            },
            {
              get: '/ui/{name=projects/*/locations/*/featureGroups/*/features/*/operations/*}:wait',
            },
            {get: '/v1beta1/{name=projects/*/locations/*}/operations'},
            {get: '/v1beta1/{name=projects/*/locations/*/agents/*}/operations'},
            {get: '/v1beta1/{name=projects/*/locations/*/apps/*}/operations'},
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/savedQueries/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/edgeDevices/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/endpoints/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/evaluationTasks/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/exampleStores/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/extensionControllers/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/extensions/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featurestores/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/customJobs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/indexes/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/indexEndpoints/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/metadataStores/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/artifacts/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/contexts/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/executions/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/modelMonitors/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/migratableResources/*}/operations',
            },
            {get: '/v1beta1/{name=projects/*/locations/*/models/*}/operations'},
            {
              get: '/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/notebookExecutionJobs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/notebookRuntimes/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/notebookRuntimeTemplates/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/persistentResources/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/ragCorpora/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/ragCorpora/*/ragFiles/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/reasoningEngines/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/solvers/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/studies/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/studies/*/trials/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/trainingPipelines/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/pipelineJobs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/schedules/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/specialistPools/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featureGroups/*}/operations',
            },
            {
              get: '/v1beta1/{name=projects/*/locations/*/featureGroups/*/features/*}/operations',
            },
          ],
        },
        {
          selector: 'google.longrunning.Operations.WaitOperation',
          post: '/ui/{name=projects/*/locations/*/operations/*}:wait',
          additional_bindings: [
            {
              post: '/ui/{name=projects/*/locations/*/agents/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/apps/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/edgeDevices/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/endpoints/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/extensionControllers/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/extensions/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featurestores/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/customJobs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tuningJobs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/indexes/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/indexEndpoints/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/metadataStores/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/metadataStores/*/artifacts/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/metadataStores/*/contexts/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/metadataStores/*/executions/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/modelMonitors/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/migratableResources/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/models/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/notebookExecutionJobs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/notebookRuntimes/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/notebookRuntimeTemplates/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/studies/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/studies/*/trials/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/trainingPipelines/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/persistentResources/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/pipelineJobs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/schedules/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/specialistPools/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featureOnlineStores/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featureGroups/*/operations/*}:wait',
            },
            {
              post: '/ui/{name=projects/*/locations/*/featureGroups/*/features/*/operations/*}:wait',
            },
            {post: '/v1beta1/{name=projects/*/locations/*/operations/*}:wait'},
            {
              post: '/v1beta1/{name=projects/*/locations/*/agents/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/apps/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/savedQueries/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/annotationSpecs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/datasets/*/dataItems/*/annotations/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/deploymentResourcePools/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/edgeDevices/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/endpoints/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/evaluationTasks/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/exampleStores/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/extensionControllers/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/extensions/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featurestores/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featurestores/*/entityTypes/*/features/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/customJobs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/dataLabelingJobs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/hyperparameterTuningJobs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/indexes/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/indexEndpoints/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/artifacts/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/contexts/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/metadataStores/*/executions/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/modelDeploymentMonitoringJobs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/modelMonitors/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/migratableResources/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/models/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/models/*/evaluations/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/notebookExecutionJobs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/notebookRuntimes/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/notebookRuntimeTemplates/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/persistentResources/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/ragCorpora/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/ragCorpora/*/ragFiles/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/reasoningEngines/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/studies/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/studies/*/trials/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/trainingPipelines/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/pipelineJobs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/schedules/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/specialistPools/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/tensorboards/*/experiments/*/runs/*/timeSeries/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featureOnlineStores/*/featureViews/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featureGroups/*/operations/*}:wait',
            },
            {
              post: '/v1beta1/{name=projects/*/locations/*/featureGroups/*/features/*/operations/*}:wait',
            },
          ],
        },
      ];
    }
    this.operationsClient = this._gaxModule
      .lro(lroOptions)
      .operationsClient(opts);
    const importExtensionResponse = protoFilesRoot.lookup(
      '.google.cloud.aiplatform.v1beta1.Extension'
    ) as gax.protobuf.Type;
    const importExtensionMetadata = protoFilesRoot.lookup(
      '.google.cloud.aiplatform.v1beta1.ImportExtensionOperationMetadata'
    ) as gax.protobuf.Type;
    const deleteExtensionResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteExtensionMetadata = protoFilesRoot.lookup(
      '.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata'
    ) as gax.protobuf.Type;

    this.descriptors.longrunning = {
      importExtension: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        importExtensionResponse.decode.bind(importExtensionResponse),
        importExtensionMetadata.decode.bind(importExtensionMetadata)
      ),
      deleteExtension: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteExtensionResponse.decode.bind(deleteExtensionResponse),
        deleteExtensionMetadata.decode.bind(deleteExtensionMetadata)
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.aiplatform.v1beta1.ExtensionRegistryService',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.extensionRegistryServiceStub) {
      return this.extensionRegistryServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.aiplatform.v1beta1.ExtensionRegistryService.
    this.extensionRegistryServiceStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.aiplatform.v1beta1.ExtensionRegistryService'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.aiplatform.v1beta1
            .ExtensionRegistryService,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const extensionRegistryServiceStubMethods = [
      'importExtension',
      'getExtension',
      'listExtensions',
      'updateExtension',
      'deleteExtension',
    ];
    for (const methodName of extensionRegistryServiceStubMethods) {
      const callPromise = this.extensionRegistryServiceStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor =
        this.descriptors.page[methodName] ||
        this.descriptors.longrunning[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.extensionRegistryServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    if (
      typeof process === 'object' &&
      typeof process.emitWarning === 'function'
    ) {
      process.emitWarning(
        'Static servicePath is deprecated, please use the instance method instead.',
        'DeprecationWarning'
      );
    }
    return 'aiplatform.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    if (
      typeof process === 'object' &&
      typeof process.emitWarning === 'function'
    ) {
      process.emitWarning(
        'Static apiEndpoint is deprecated, please use the instance method instead.',
        'DeprecationWarning'
      );
    }
    return 'aiplatform.googleapis.com';
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  get apiEndpoint() {
    return this._servicePath;
  }

  get universeDomain() {
    return this._universeDomain;
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Gets an Extension.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the Extension resource.
   *   Format:
   *   `projects/{project}/locations/{location}/extensions/{extension}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.aiplatform.v1beta1.Extension|Extension}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/extension_registry_service.get_extension.js</caption>
   * region_tag:aiplatform_v1beta1_generated_ExtensionRegistryService_GetExtension_async
   */
  getExtension(
    request?: protos.google.cloud.aiplatform.v1beta1.IGetExtensionRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IExtension,
      protos.google.cloud.aiplatform.v1beta1.IGetExtensionRequest | undefined,
      {} | undefined,
    ]
  >;
  getExtension(
    request: protos.google.cloud.aiplatform.v1beta1.IGetExtensionRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IExtension,
      | protos.google.cloud.aiplatform.v1beta1.IGetExtensionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getExtension(
    request: protos.google.cloud.aiplatform.v1beta1.IGetExtensionRequest,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IExtension,
      | protos.google.cloud.aiplatform.v1beta1.IGetExtensionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getExtension(
    request?: protos.google.cloud.aiplatform.v1beta1.IGetExtensionRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.aiplatform.v1beta1.IExtension,
          | protos.google.cloud.aiplatform.v1beta1.IGetExtensionRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.aiplatform.v1beta1.IExtension,
      | protos.google.cloud.aiplatform.v1beta1.IGetExtensionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IExtension,
      protos.google.cloud.aiplatform.v1beta1.IGetExtensionRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getExtension(request, options, callback);
  }
  /**
   * Updates an Extension.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.aiplatform.v1beta1.Extension} request.extension
   *   Required. The Extension which replaces the resource on the server.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Mask specifying which fields to update.
   *   Supported fields:
   *
   *      * `display_name`
   *      * `description`
   *      * `runtime_config`
   *      * `tool_use_examples`
   *      * `manifest.description`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.aiplatform.v1beta1.Extension|Extension}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/extension_registry_service.update_extension.js</caption>
   * region_tag:aiplatform_v1beta1_generated_ExtensionRegistryService_UpdateExtension_async
   */
  updateExtension(
    request?: protos.google.cloud.aiplatform.v1beta1.IUpdateExtensionRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IExtension,
      (
        | protos.google.cloud.aiplatform.v1beta1.IUpdateExtensionRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  updateExtension(
    request: protos.google.cloud.aiplatform.v1beta1.IUpdateExtensionRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IExtension,
      | protos.google.cloud.aiplatform.v1beta1.IUpdateExtensionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateExtension(
    request: protos.google.cloud.aiplatform.v1beta1.IUpdateExtensionRequest,
    callback: Callback<
      protos.google.cloud.aiplatform.v1beta1.IExtension,
      | protos.google.cloud.aiplatform.v1beta1.IUpdateExtensionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateExtension(
    request?: protos.google.cloud.aiplatform.v1beta1.IUpdateExtensionRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.aiplatform.v1beta1.IExtension,
          | protos.google.cloud.aiplatform.v1beta1.IUpdateExtensionRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.aiplatform.v1beta1.IExtension,
      | protos.google.cloud.aiplatform.v1beta1.IUpdateExtensionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IExtension,
      (
        | protos.google.cloud.aiplatform.v1beta1.IUpdateExtensionRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'extension.name': request.extension!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateExtension(request, options, callback);
  }

  /**
   * Imports an Extension.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to import the Extension in.
   *   Format: `projects/{project}/locations/{location}`
   * @param {google.cloud.aiplatform.v1beta1.Extension} request.extension
   *   Required. The Extension to import.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/extension_registry_service.import_extension.js</caption>
   * region_tag:aiplatform_v1beta1_generated_ExtensionRegistryService_ImportExtension_async
   */
  importExtension(
    request?: protos.google.cloud.aiplatform.v1beta1.IImportExtensionRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.aiplatform.v1beta1.IExtension,
        protos.google.cloud.aiplatform.v1beta1.IImportExtensionOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  importExtension(
    request: protos.google.cloud.aiplatform.v1beta1.IImportExtensionRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.aiplatform.v1beta1.IExtension,
        protos.google.cloud.aiplatform.v1beta1.IImportExtensionOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  importExtension(
    request: protos.google.cloud.aiplatform.v1beta1.IImportExtensionRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.aiplatform.v1beta1.IExtension,
        protos.google.cloud.aiplatform.v1beta1.IImportExtensionOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  importExtension(
    request?: protos.google.cloud.aiplatform.v1beta1.IImportExtensionRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.aiplatform.v1beta1.IExtension,
            protos.google.cloud.aiplatform.v1beta1.IImportExtensionOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.aiplatform.v1beta1.IExtension,
        protos.google.cloud.aiplatform.v1beta1.IImportExtensionOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.aiplatform.v1beta1.IExtension,
        protos.google.cloud.aiplatform.v1beta1.IImportExtensionOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.importExtension(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `importExtension()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/extension_registry_service.import_extension.js</caption>
   * region_tag:aiplatform_v1beta1_generated_ExtensionRegistryService_ImportExtension_async
   */
  async checkImportExtensionProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.aiplatform.v1beta1.Extension,
      protos.google.cloud.aiplatform.v1beta1.ImportExtensionOperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.importExtension,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.aiplatform.v1beta1.Extension,
      protos.google.cloud.aiplatform.v1beta1.ImportExtensionOperationMetadata
    >;
  }
  /**
   * Deletes an Extension.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the Extension resource to be deleted.
   *   Format:
   *   `projects/{project}/locations/{location}/extensions/{extension}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/extension_registry_service.delete_extension.js</caption>
   * region_tag:aiplatform_v1beta1_generated_ExtensionRegistryService_DeleteExtension_async
   */
  deleteExtension(
    request?: protos.google.cloud.aiplatform.v1beta1.IDeleteExtensionRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteExtension(
    request: protos.google.cloud.aiplatform.v1beta1.IDeleteExtensionRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteExtension(
    request: protos.google.cloud.aiplatform.v1beta1.IDeleteExtensionRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteExtension(
    request?: protos.google.cloud.aiplatform.v1beta1.IDeleteExtensionRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.aiplatform.v1beta1.IDeleteOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteExtension(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `deleteExtension()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/extension_registry_service.delete_extension.js</caption>
   * region_tag:aiplatform_v1beta1_generated_ExtensionRegistryService_DeleteExtension_async
   */
  async checkDeleteExtensionProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteExtension,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.aiplatform.v1beta1.DeleteOperationMetadata
    >;
  }
  /**
   * Lists Extensions in a location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to list the Extensions from.
   *   Format: `projects/{project}/locations/{location}`
   * @param {string} [request.filter]
   *   Optional. The standard list filter.
   *   Supported fields:
   *      * `display_name`
   *      * `create_time`
   *      * `update_time`
   *
   *   More detail in [AIP-160](https://google.aip.dev/160).
   * @param {number} [request.pageSize]
   *   Optional. The standard list page size.
   * @param {string} [request.pageToken]
   *   Optional. The standard list page token.
   * @param {string} [request.orderBy]
   *   Optional. A comma-separated list of fields to order by, sorted in ascending
   *   order. Use "desc" after a field name for descending. Supported fields:
   *     * `display_name`
   *     * `create_time`
   *     * `update_time`
   *
   *   Example: `display_name, create_time desc`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.aiplatform.v1beta1.Extension|Extension}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listExtensionsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listExtensions(
    request?: protos.google.cloud.aiplatform.v1beta1.IListExtensionsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IExtension[],
      protos.google.cloud.aiplatform.v1beta1.IListExtensionsRequest | null,
      protos.google.cloud.aiplatform.v1beta1.IListExtensionsResponse,
    ]
  >;
  listExtensions(
    request: protos.google.cloud.aiplatform.v1beta1.IListExtensionsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListExtensionsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListExtensionsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IExtension
    >
  ): void;
  listExtensions(
    request: protos.google.cloud.aiplatform.v1beta1.IListExtensionsRequest,
    callback: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListExtensionsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListExtensionsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IExtension
    >
  ): void;
  listExtensions(
    request?: protos.google.cloud.aiplatform.v1beta1.IListExtensionsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.aiplatform.v1beta1.IListExtensionsRequest,
          | protos.google.cloud.aiplatform.v1beta1.IListExtensionsResponse
          | null
          | undefined,
          protos.google.cloud.aiplatform.v1beta1.IExtension
        >,
    callback?: PaginationCallback<
      protos.google.cloud.aiplatform.v1beta1.IListExtensionsRequest,
      | protos.google.cloud.aiplatform.v1beta1.IListExtensionsResponse
      | null
      | undefined,
      protos.google.cloud.aiplatform.v1beta1.IExtension
    >
  ): Promise<
    [
      protos.google.cloud.aiplatform.v1beta1.IExtension[],
      protos.google.cloud.aiplatform.v1beta1.IListExtensionsRequest | null,
      protos.google.cloud.aiplatform.v1beta1.IListExtensionsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listExtensions(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to list the Extensions from.
   *   Format: `projects/{project}/locations/{location}`
   * @param {string} [request.filter]
   *   Optional. The standard list filter.
   *   Supported fields:
   *      * `display_name`
   *      * `create_time`
   *      * `update_time`
   *
   *   More detail in [AIP-160](https://google.aip.dev/160).
   * @param {number} [request.pageSize]
   *   Optional. The standard list page size.
   * @param {string} [request.pageToken]
   *   Optional. The standard list page token.
   * @param {string} [request.orderBy]
   *   Optional. A comma-separated list of fields to order by, sorted in ascending
   *   order. Use "desc" after a field name for descending. Supported fields:
   *     * `display_name`
   *     * `create_time`
   *     * `update_time`
   *
   *   Example: `display_name, create_time desc`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.aiplatform.v1beta1.Extension|Extension} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listExtensionsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listExtensionsStream(
    request?: protos.google.cloud.aiplatform.v1beta1.IListExtensionsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listExtensions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listExtensions.createStream(
      this.innerApiCalls.listExtensions as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listExtensions`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the Location to list the Extensions from.
   *   Format: `projects/{project}/locations/{location}`
   * @param {string} [request.filter]
   *   Optional. The standard list filter.
   *   Supported fields:
   *      * `display_name`
   *      * `create_time`
   *      * `update_time`
   *
   *   More detail in [AIP-160](https://google.aip.dev/160).
   * @param {number} [request.pageSize]
   *   Optional. The standard list page size.
   * @param {string} [request.pageToken]
   *   Optional. The standard list page token.
   * @param {string} [request.orderBy]
   *   Optional. A comma-separated list of fields to order by, sorted in ascending
   *   order. Use "desc" after a field name for descending. Supported fields:
   *     * `display_name`
   *     * `create_time`
   *     * `update_time`
   *
   *   Example: `display_name, create_time desc`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.aiplatform.v1beta1.Extension|Extension}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/extension_registry_service.list_extensions.js</caption>
   * region_tag:aiplatform_v1beta1_generated_ExtensionRegistryService_ListExtensions_async
   */
  listExtensionsAsync(
    request?: protos.google.cloud.aiplatform.v1beta1.IListExtensionsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.aiplatform.v1beta1.IExtension> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listExtensions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listExtensions.asyncIterate(
      this.innerApiCalls['listExtensions'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.aiplatform.v1beta1.IExtension>;
  }
  /**
   * Gets the access control policy for a resource. Returns an empty policy
   * if the resource exists and does not have a policy set.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {Object} [request.options]
   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
   *   `GetIamPolicy`. This field is only used by Cloud IAM.
   *
   *   This object should have the same structure as {@link google.iam.v1.GetPolicyOptions | GetPolicyOptions}.
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing {@link google.iam.v1.Policy | Policy}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.iam.v1.Policy | Policy}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   *