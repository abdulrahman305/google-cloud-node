// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent, scope) {
  // [START aiplatform_v1beta1_generated_MemoryBankService_RetrieveMemories_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Parameters for semantic similarity search based retrieval.
   */
  // const similaritySearchParams = {}
  /**
   *  Parameters for simple (non-similarity search) retrieval.
   */
  // const simpleRetrievalParams = {}
  /**
   *  Required. The resource name of the ReasoningEngine to retrieve memories
   *  from. Format:
   *  `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`
   */
  // const parent = 'abc123'
  /**
   *  Required. The scope of the memories to retrieve. A memory must have
   *  exactly the same scope (`Memory.scope`) as the scope provided here to be
   *  retrieved (same keys and values). Order does not matter, but it is
   *  case-sensitive.
   */
  // const scope = [1,2,3,4]

  // Imports the Aiplatform library
  const {MemoryBankServiceClient} = require('@google-cloud/aiplatform').v1beta1;

  // Instantiates a client
  const aiplatformClient = new MemoryBankServiceClient();

  async function callRetrieveMemories() {
    // Construct request
    const request = {
      parent,
      scope,
    };

    // Run request
    const response = await aiplatformClient.retrieveMemories(request);
    console.log(response);
  }

  callRetrieveMemories();
  // [END aiplatform_v1beta1_generated_MemoryBankService_RetrieveMemories_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
