// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent, workerPool, workerPoolId) {
  // [START run_v2_generated_WorkerPools_CreateWorkerPool_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The location and project in which this worker pool should be
   *  created. Format: `projects/{project}/locations/{location}`, where
   *  `{project}` can be project id or number. Only lowercase characters, digits,
   *  and hyphens.
   */
  // const parent = 'abc123'
  /**
   *  Required. The WorkerPool instance to create.
   */
  // const workerPool = {}
  /**
   *  Required. The unique identifier for the WorkerPool. It must begin with
   *  letter, and cannot end with hyphen; must contain fewer than 50 characters.
   *  The name of the worker pool becomes
   *  `{parent}/workerPools/{worker_pool_id}`.
   */
  // const workerPoolId = 'abc123'
  /**
   *  Optional. Indicates that the request should be validated and default values
   *  populated, without persisting the request or creating any resources.
   */
  // const validateOnly = true

  // Imports the Run library
  const {WorkerPoolsClient} = require('@google-cloud/run').v2;

  // Instantiates a client
  const runClient = new WorkerPoolsClient();

  async function callCreateWorkerPool() {
    // Construct request
    const request = {
      parent,
      workerPool,
      workerPoolId,
    };

    // Run request
    const [operation] = await runClient.createWorkerPool(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  callCreateWorkerPool();
  // [END run_v2_generated_WorkerPools_CreateWorkerPool_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
